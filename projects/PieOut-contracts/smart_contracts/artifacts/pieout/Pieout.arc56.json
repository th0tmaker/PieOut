{
    "name": "Pieout",
    "structs": {
        "GameBoxVal": [
            {
                "name": "creator_stake_status",
                "type": "bool"
            },
            {
                "name": "staking_finalized",
                "type": "bool"
            },
            {
                "name": "prize_pool_claimed",
                "type": "bool"
            },
            {
                "name": "max_players",
                "type": "uint8"
            },
            {
                "name": "total_players",
                "type": "uint8"
            },
            {
                "name": "high_score",
                "type": "uint8"
            },
            {
                "name": "offset_box_p_",
                "type": "uint16"
            },
            {
                "name": "prize_pool",
                "type": "uint64"
            },
            {
                "name": "winner_address",
                "type": "address"
            }
        ]
    },
    "methods": [
        {
            "name": "calc_single_box_fee",
            "args": [
                {
                    "type": "uint8",
                    "name": "key_size"
                },
                {
                    "type": "uint16",
                    "name": "value_size"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": true,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "generate",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [
                    "NoOp"
                ],
                "call": []
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_gen_unix",
            "args": [],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": true,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "new_game",
            "args": [
                {
                    "type": "uint64",
                    "name": "max_players"
                },
                {
                    "type": "pay",
                    "name": "box_g_pay"
                },
                {
                    "type": "pay",
                    "name": "box_p_pay"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "join_game",
            "args": [
                {
                    "type": "uint64",
                    "name": "game_id"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "terminate",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "DeleteApplication"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 2,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {
                "game_id": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "Z2FtZV9pZA=="
                },
                "vrf_commit_id": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "dnJmX2NvbW1pdF9pZA=="
                }
            },
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {
                "box_game": {
                    "keyType": "uint64",
                    "valueType": "GameBoxVal",
                    "prefix": "Z18="
                },
                "box_players": {
                    "keyType": "uint64",
                    "valueType": "AVMBytes",
                    "prefix": "cF8="
                }
            }
        }
    },
    "bareActions": {
        "create": [],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        431
                    ],
                    "errorMessage": "Game lobby is full."
                },
                {
                    "pc": [
                        421
                    ],
                    "errorMessage": "No Game with such ID."
                },
                {
                    "pc": [
                        69
                    ],
                    "errorMessage": "OnCompletion is not DeleteApplication"
                },
                {
                    "pc": [
                        81,
                        97,
                        133,
                        149,
                        162
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        483
                    ],
                    "errorMessage": "Template variable 'DELETABLE' needs to be 'True' at deploy-time."
                },
                {
                    "pc": [
                        206,
                        480
                    ],
                    "errorMessage": "Transaction sender address must match application creator address."
                },
                {
                    "pc": [
                        153
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        72,
                        84,
                        100,
                        136,
                        165
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        410
                    ],
                    "errorMessage": "check self.box_game entry exists"
                },
                {
                    "pc": [
                        352,
                        363,
                        380
                    ],
                    "errorMessage": "check self.game_id exists"
                },
                {
                    "pc": [
                        308
                    ],
                    "errorMessage": "new_game(): Box g_ and p_ payment reciever address must match application address."
                },
                {
                    "pc": [
                        286
                    ],
                    "errorMessage": "new_game(): Box g_ and p_ payment sender address must match transaction sender address."
                },
                {
                    "pc": [
                        260
                    ],
                    "errorMessage": "new_game(): Insufficient amount. Box g_ pay amount is not enough to cover application MBR."
                },
                {
                    "pc": [
                        266
                    ],
                    "errorMessage": "new_game(): Insufficient amount. Box p_ pay amount is not enough to cover application MBR."
                },
                {
                    "pc": [
                        252
                    ],
                    "errorMessage": "new_game(): Max players limit (currently at 10) exceeded."
                },
                {
                    "pc": [
                        238,
                        317,
                        450,
                        467
                    ],
                    "errorMessage": "overflow"
                },
                {
                    "pc": [
                        114,
                        124
                    ],
                    "errorMessage": "transaction type is pay"
                }
            ],
            "pcOffsetMethod": "cblocks"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CiAGAQAgAgAAJgYHZ2FtZV9pZAEABBUffHUBCgJnXwJwXzEYQAADKCNnMRtBADGCBgQTfRCUBFviGfAETs4M/QQ00cI9BCbHEJEEX/FtpDYaAI4GAGEAVABEACAAEAACI0MxGYEFEkQxGESIAY8iQzEZFEQxGEQ2GgEXiAEvIkMxGRREMRhENhoBFzEWJQlJOBAiEkQxFiIJSTgQIhJEiABQIkMxGRREMRhEIQQWKkxQsCJDMRkURDEYFESIACwiQzEZFEQxGEQ2GgE2GgKIAAcWKkxQsCJDigIBi/4Xi/8XCIGQAwuBxBMIiTEAMgkSRImKAwAxADIKMQArgAIALoj/1SSL/QtJTgMWSZOBEA5EVwYCK0yI/7+L/YEKDkSL/jgITwIPRIv/OAgORIv+OAASQQB0i/84AIsAEkEAaiJEi/44B4sBEkEAWov/OAeLARJBAFAiRIv9FkmTgQgORFcHATIDKU8CUClQKVCAAgAAUIAIAAAAAAAAAABQTFAjKGVEFicETFBMvyMoZUQWJwVMUIsCr0sBvEi/IyhlRCIIKExniSNC/60jQv+TigEAMQCL/xYnBEsBUEm+REkiVSQLSwK9RQFESwGBBFlJTwIMRCcFTwRQSwFPBbskCBZJk4EQDkRXBgJcBEklVSIIFkmTgQgORFcHAVwCv4kxADIJEkQhBUSJ",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 4,
            "minor": 7,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {
        "GEN_UNIX": {
            "type": "AVMUint64"
        },
        "DELETABLE": {
            "type": "AVMUint64"
        }
    }
}