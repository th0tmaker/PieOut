{
  "version": 3,
  "sources": [
    "../../../.venv/Lib/site-packages/lib_pcg/pcg32.py",
    "../../pieout/contract.py",
    "../../pieout/subroutines.py"
  ],
  "mappings": "AC8BA;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AA2oBK;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAhEA;;AAAA;AAAA;AAAA;;AAAA;AA3kBL;;;AAAA;AA2kBK;;;AAAA;;AApDA;;AAAA;AAAA;AAAA;;AAAA;AAvhBL;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAuhBK;;;AAAA;;AA7CA;;AAAA;AAAA;AAAA;;AAAA;AA1eL;;;AAAA;AAAA;;;AA0eK;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AA9HA;;AAAA;AAAA;AAAA;;AAAA;AA5WL;;;AAAA;AA4WK;;;AAAA;;AA1BA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAtCA;;AAAA;AAAA;AAAA;;AAAA;AA5SL;;;AAAA;AA4SK;;;AAAA;;AAlBA;;AAAA;AAAA;AAAA;;AAAA;AA1RL;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA0RK;;;AAAA;;AAjEA;;AAAA;AAAA;AAAA;;AAAA;AAzNL;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAyNK;;;AAAA;;AAhEA;;AAAA;AAAA;AAAA;;AAAA;AAzJL;;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAyJK;;;AAAA;;AAfA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AA9CA;;AAAA;AAAA;AAAA;;AAAA;AA5FL;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA4FK;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAbA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAfA;;AAAA;AAAA;AAAA;;AAAA;AAhEL;;;AAAA;AAgEK;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AA5BA;;AAAA;AAAA;AAAA;;AAAA;AApCL;;;AAAA;AAoCK;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AALA;;AAAA;AAAA;AAAA;;AAAA;AAEU;;AAFV;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAfA;;AAAA;AAAA;AAAA;;AAAA;AAhBL;;;AAAA;;;AAgBK;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;ACVL;;;AAEI;;;;;;;;;;;;;AAAA;;;AAAA;;;AAAA;;AAQJ;;;;;;AAQI;;AAAqC;AAAf;AAGD;AAGL;AAAP;;AAAA;;AAAA;;;;;AAAb;;;AAEwD;;AAAA;AAAjB;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAA/B;;AAA6D;AAAzC;AAGjB;;AAAA;AAAX;;;AACiC;AAArB;;AAGZ;;AAAA;;;AAEgB;;AAAA;;AAAuB;;AAAvB;;;;;;;AAMZ;;AAAA;AAjBS;;AAA+B;AAA/B;AAAA;;;;;AAoGb;;;AAIQ;;AAAA;;;AAAuB;;AAAvB;AAAA;AAAA;;;AACG;;AAAA;;;AAA6B;;AAAA;;;AAA7B;AADH;;;AAIA;;AAAA;AAAA;AAAA;AAAA;;AAII;;AAA0B;;AAA1B;AADmB;AAAvB;;AAAA;AAAA;;;AAAA;;AAOI;AAAA;AAAA;AAAA;AAAA;;AAAA;AACA;;AAAA;;;AAHJ;AAAA;;;;;;AAAA;AAAA;AAAA;AAMO;;;AAAP;;AAAA;AAEO;AAAP;;AAAA;AD1IR;;;AAQY;;AAAA;AAAkB;;AAAA;AAAlB;AADO;;;AAAA;AAKJ;;;AAAA;AAAP;AAQR;;;AAIY;;AAAA;AADS;AAAA;;AAAA;AAAA;AAAA;AAQL;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AACA;;AAAA;;;AACA;;AAAA;;;AACA;;AAAA;;;AACA;;AAAA;;;AACA;;AAAA;;;AACA;;AAAA;;;AACA;;AAAA;;;AACA;;AAAA;;;AACA;;AAAA;;;AACA;;AAAA;;;AACA;;AAAA;;;AACA;;AAAA;;;AAfD;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAP;AAoBR;;;;;AAG6C;;AAAA;AAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAEL;;;;AAAA;AACS;AAAH;AAAP;;AAAA;;AAAA;AAAjB;;;AACY;;AAAA;;AAAgD;AAA5B;AAApB;AAAA;;AACwB;;AAArB;;;;;AAAf;;;AAEgB;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;;;;;AAJC;;AAA+B;AAA/B;AAAA;;;;;AAMT;;AAAA;;AAAA;AAQO;;AAAc;;AAAd;AAAP;AAGA;;AAAe;AAAf;AACA;;AAA2B;AAA3B;AACA;;AAAiB;AAAjB;AACA;;AAAmB;;AAAnB;;AAER;;;AASe;;AAAA;;AAAoB;;AAApB;AAAP;AACO;;AAAA;;AAAoB;;AAApB;AAAP;AAEI;;AAAA;;AAAsB;;AAAtB;AADJ;AAKI;;AAAA;;AAAmB;;AAAnB;AADJ;AAGO;;AAAA;;AAAmB;;AAAnB;AAAP;AAEI;;AAAA;;AAAqB;;AAArB;AADJ;AAIY;AAQA;;AAED;;;;;;;;AALQ;;;AADN;;;AADE;;;;;;;;;;;;;;;;;;;;;;;AADD;;;;;;;;AADJ;;;AADE;;;;AAAA;;;AAAA;;;AAeZ;AAAA;;AAAA;;AAEa;AACkB;;AAFF;AAA7B;AAAA;;AAAA;AAKO;;;AAAP;AAIO;;AAAqB;AAArB;AAAP;AAEO;;AACG;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;;AAAA;;AAAA;;AAAP;AAIA;AAEmB;;AACF;;;;;;;AAHjB;;;;AAAA;;;AAAA;;AAOR;;;AAWe;;AAAe;;AAAf;AAAP;AAEO;;AAAA;;AAAA;AAAoB;;AAApB;AAAP;AACO;;AAAA;;AAAoB;;AAApB;AAAP;AACO;;AAAA;;AAEoB;AAAA;;AAAA;AAAZ;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AADF;;;AADc;AAAA;;;AAApB;;AAAA;AAAP;AAKO;;AAAA;;AAAoB;;AAApB;AAAP;AACO;;AAAA;;AAAoB;;AAApB;AAAP;AACO;;AAAA;;AAAoB;;AAApB;AAAP;AAGI;;AAAA;;AAAsB;;AAAtB;AADJ;AAII;;AAAA;;AAAsB;;AAAtB;AADJ;AAII;;AAAA;;AAAsB;;AAAtB;AADJ;AAOgB;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAMU;;AAA0B;;AAA1B;AAAZ;AACC;;AAAA;AACkB;;AACI;;AACC;;AAXhB;AADc;;AAAA;AAGjB;;;AAHiB;AAId;AAJc;AAKb;AALa;AAMd;AANc;AAOhB;;AAPgB;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAhB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAApB;AAAA;;AAAA;AAAA;;AAAA;AAiBsC;;AAAA;AAAtC;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAM0B;AAAG;;AAA7B;AAGgB;AAAhB;AAAA;;AAAA;AAAA;;AAGR;;;AAQe;;AAAA;AAAW;AAAX;;AAAA;AAAA;AAAA;AAAA;;AAAP;AAEO;;AAAA;;AAAA;AAAoB;;;;AAApB;AAAP;AACO;;AAAA;;AAAoB;;AAApB;AAAP;AAEI;;AAAA;;AAAsB;;AAAtB;AADJ;AAKa;;AAAA;AAAA;AAQQ;AAAA;AAAA;AAHjB;;AAEqB;AAFrB;;AAIiB;AAJjB;;;AAAA;AADJ;AAUO;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAP;AACO;;AAAA;;;AAAwB;;AAAxB;AAAA;AAAP;AACO;;AAAA;;;AAA6B;;AAAA;;;AAA7B;AAAP;AAEI;;AAAA;;AAAA;AACqB;;AAAA;AAAA;AAAnB;AAAA;AADF;;AAAA;AADJ;AAOQ;AADR;;AACQ;AAEqD;;AAA7D;AAAA;;AAAA;AAG0E;AAAnC;AAAX;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAA5B;;AAII;AAAA;;AAAA;AAAoC;AAApC;AADyB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAA7B;;AAMI;AAAA;;AAAA;AAAA;;AAAA;AADoB;AAAxB;;AAKA;;;AAAA;;AAGA;;AAGR;;;AAIiC;;AAAlB;;AAAA;AAAA;AAAA;;AAAA;AAAP;AAEO;;AAAA;;AAAoB;;AAApB;AAAP;AACO;;AAAA;;AAAoB;;AAApB;AAAP;AAEI;;AAAA;;AAAsB;;AAAtB;AADJ;AAKA;;AAAqB;;AAArB;AACiB;;;;;;;;;;AADjB;;AAKR;;;AAMe;;AAAA;AAAW;AAAX;AAAA;AAAA;AAAA;AAAA;;AAAP;AACqB;;AAAd;;AAAA;AAAA;AAAA;;AAAP;AAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAkD;AAAlD;AADJ;AAQqB;AAAA;AAHjB;;AAEqB;AAFrB;;AAIiB;AAJjB;;;AAMG;AANH;AADJ;AAYiC;;AAAoB;;AAAR;AAAZ;AAAV;;;AAAnB;AAA2E;;AAA3E;AACE;;AADF;AAKW;;AAAA;AAIE;AADjB;;AAAqB;;AAArB;AAAA;AAAA;;AAQO;;AAAqB;AAArB;AAAP;AACqB;;AAAd;;AAAA;AAAA;AAAA;;AAAP;AASI;;AAAqB;;AAArB;AAAJ;;AAIa;;AACF;;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAHT;;;;AAUR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOe;;AAAA;AAAA;AAAA;;AAAW;AAAX;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAP;AACqB;;AAAd;;AAAA;AAAA;AAAA;;AAAP;AAMqB;AAAA;AAAA;AAAA;AAAA;AAHjB;;AAEqB;AAFrB;;AAIiB;AAJjB;;;AAMG;AANH;AADJ;AAWa;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAKN;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAgC;AAAhC;AAAP;AACO;;;AAAwB;;AAAxB;AAAA;AAAP;AAEO;AAAA;AAAA;;AAAP;AAEU;AAAV;;AACY;AAAZ;;AACG;AAAA;;AAAA;AAAA;AAAoB;;AAApB;AAAX;;;AAEgB;AAAA;AAAA;AAAA;AAAA;;;AACA;AAAA;AAAA;AAFiB;;AAAA;;AAAA;;AA4CD;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAEb;;AAAA;;AACF;;ACjYW;AAAA;;;AFtEjB;AAAe;;AAAf;AAAP;;;AAEoB;AAoIC;AAkHe;;AAAf;AAAA;;AAtPc;;AAuPd;AAAA;;AAlHD;AAAA;;AAiHgB;;AAAf;AAAA;;AAtPc;;AAuPd;AAAA;;AAxEX;;;;AAAA;;AA8FqB;;;;;;;;;;;AAAQ;AAAhB;AAAA;;AAQP;;AAAT;AAjFkB;;AAET;AAAZ;;AAES;AAAL;;;;AAAK;;AE7HF;;;AF6HE;AAAjB;;;AA8CyB;;AAAA;AAAe;;AAAf;AAAA;;AAfM;;AAgBN;AAAA;;AAAA;AASE;AAAS;;AAAT;AAAD;;AAAA;AAA0B;;AAA3B;AAqBL;;AAAT;AArB8C;AAAS;;AAAT;AAO7C;AAAA;AAMuB;AAAA;AAAQ;AAAhB;AAAA;;AANiD;;AAArB;AAAV;;AAAA;AAAA;AAczB;;AAAT;AAdA;AAAA;AAAA;;AA5DQ;;AAAA;AAAnB;;;AAEiC;;AATJ;;AASI;AEpIb;AFoIY;AAAR;AADM;;;AAAV;;AAAA;AAAA;AAAA;;AAJH;;AAAA;AAAA;AAAA;;;;;;;;;;;;AEzHL;AAAR;;AAGmB;;AAAA;AAAA;;AAAH;AAAZ;;AAAK;;AAAA;;AAAA;AAAb;;;AAEiC;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAzB;;AAAO;AAGI;;;AAAR;AAAX;;;AAIQ;;AAAS;AAAT;AAAA;;AATK;;AAAiC;AAAjC;AAAA;;;;;AAeL;;AAAA;AAEA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AALJ;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;;;AAAA;AAAA;AAAA;AAWI;;AAAA;;;AAA+C;;AAA/C;AAAA;;;AACW;;AAAA;;AAAA;AAAR;;AAAA;AADH;;;AAIA;;AAAA;AAA+B;;;AAA/B;;AACA;AAAiC;;;AAAjC;;AAEA;AAAgC;;;AAAhC;;AACA;AAAkC;;;AAAlC;;AAEA;;AAAA;;AACA;;AAAA;;AAAA;;ADqVA;AAAA;;AAAA;AAAA;AAA4B;AAA5B;AAAA;;AAAA;AAAA;AAGG;;AAAA;;AAAA;AAAA;AAAA;;AAAsC;AAAA;;AAAA;AAAA;AAAtC;AAAX;;;AAEY;;AAAA;;AAAA;AAWG;;AAAA;;;AAAc;;AAAW;AAAX;AAAd;;;AAEc;AAAA;AAAA;AAAA;AAAA;AAAA;AACI;AAAA;;;AACE;;ACvd/B;AAIiB;;;;;;;;;AAJjB;;;;AAAA;;;AAAA;AD2d2B;;AAAnB;;AAAA;;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAKmC;;AAAA;AAAA;AAAA;AAAmC;AAAnC;AAAX;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAA5B;;AAMA;;AAAA;AAAA;;ACxXA;;AAAA;;;AAAgD;;AAAhD;AAAA;;;AACW;;AAAA;;AAAA;AAAR;;AAAA;AADH;;;AAIA;;AAAA;AAA+B;;;AAA/B;;AACA;AAAiC;;;AAAjC;;AAEA;;AAAA;;AACA;;AAAA;;;;;;;;;;;AAGA;;AAAA;;;AAA+C;;AAA/C;AAAA;;;AACW;;AAAA;AAAA;;AAAA;AAAR;;AAAA;;;;AADH;;;AAIA;;AAAA;;AAAA;;AACA;;AAAA;;;;;;;AD2WR;;;;AAGe;;AAAqB;AAArB;AAAP;AACO;;AAAA;AAAA;AAAW;AAAX;AAAA;AAAA;AAAA;AAAA;;AAAP;AAGa;AAAA;AAKV;;AAAA;AAAA;AAAX;;;AAKiC;;AAAA;AAAA;AAAA;AAHjB;;AAEqB;AAFrB;;AAIiB;AAJjB;;;AAMG;AANH;AADJ;AAWe;;;AAAA;AACf;;AAAA;AAGC;;AAAwB;AAAxB;AAAb;AACmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAgC;AAAhC;AAAP;AACO;AAAA;;;AAAA;AAAA;;AAAuB;;AAAvB;AAAA;AAAP;AAEI;;;AAA8B;;AAA9B;AAAA;;;AACG;;AAAA;;;AAAkC;;AAAlC;AADH;;;AAEG;;AAAA;;;AAAmC;;AAAnC;AAFH;;;AAGG;;AAAA;;;AAAkC;;AAAlC;AAHH;;;;AADJ;ACrWmB;;AAAvB;AAAA;;AAAA;AAAA;;;AACG;;AAAA;AAAA;AADH;;;AAKuB;;AAAA;AAAA;AAAA;AAAnB;AAAA;AADwB;ADyW6B;ACzWzD;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAK4B;AAA5B;;AAKI;AAAA;;;AACA;;AAAA;;;AACA;;AAAA;;;AACA;;AAAA;;;AALJ;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;;;;AAAA;AAAA;AAAA;AAUI;;AAAA;;AAAA;AAAA;AAA+B;;AAA/B;AAA6C;;AAA7C;AAGA;;AAA+B;;AAA/B;AAA6C;;AAA7C;AAGA;;AAAA;;AAAA;AADJ;;AACI;AAIJ;;AAAA;;AAGS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAHT;;;AAOA;;AAAA;;AAGS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAHT;;;AAUS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAHT;;;AAWO;;;ADqTH;;AAAA;ACnTG;ADkTY;;;;;;;AAM3B;;;AAOe;;AAAqB;AAArB;AAAP;AACO;;AAAA;AAAW;AAAX;;AAAA;AAAA;AAAA;AAAA;;AAAP;AAEO;;AAAA;;AAAoB;;AAApB;AAAP;AAEI;;AAAA;;AAAsB;;AAAtB;AADJ;AAGO;;AAAA;;AAAoB;;AAApB;AAAP;AAGa;AAAA;AAAA;AAKN;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAgC;AAAhC;AAAP;AACO;AAAA;;;AAA8B;;AAA9B;AAAP;AACO;AAAA;;AAAA;AAAA;AAAP;AACO;AAAA;AAAA;AAAA;AAAP;AAIQ;AADR;;AACQ;AAEkB;AAAG;;AAA7B;AAEA;AAAA;AAAA;AAC4B;;;AAA5B;;AAC+B;AAA/B;;AACgC;AAAhC;;AAC+B;AAA/B;;AAC6B;;AAA7B;;AAEI;;AAA0B;;AAA1B;AADmB;AAAvB;;AAII;AAAA;;AAAA;AAA+B;;AAA/B;AADoB;AAAxB;;AAG8C;;AAA9C;;AAC+C;;AAA/C;;AAC8C;;AAA9C;;AAGA;;AAER;;;AAMe;;AAAqB;AAArB;AAAP;AACO;;AAAA;AAAA;AAAW;AAAX;AAAA;AAAA;;AAAA;AAAA;;AAAP;AAGa;AAAA;AAAA;AAAA;;AAAA;AAKN;AAAA;;;AAA8B;;AAA9B;AAAP;AAIG;AAAA;AAAA;AAAoC;AAApC;AAAX;;;AACY;;AAEqB;AACJ;AACA;AAJI;;;AAQQ;AAAtB;AAAP;AAIa;;AACF;;AAAA;;AAAA;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAHT;;;AAcJ;;AAAA;;AACI;AAAA;;AAAA;AAAJ;;AAK8C;;AAAA;AAAA;AAAnB;AAAA;AAAZ;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AADF;;;AADb;AAAY;;;AAOC;;AACF;;AAAA;;AAAA;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAHT;;;;AAdW;;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAA;AAAP;;;;AAyBG;;AAAc;;AAAd;AAAP;AACO;;AAAP;AAEI;AAAJ;;AAIa;;AACF;;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAHT;;;",
  "op_pc_offset": 2,
  "pc_events": {
    "0": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%0#2"
      ]
    },
    "2": {
      "op": "bz main_after_if_else@22",
      "stack_out": []
    },
    "5": {
      "op": "pushbytess 0x137d1094 0xb66d2f56 0x627a73af 0x7401ca83 0x5be219f0 0xa27df65d 0xb9949f70 0xda7b6785 0x71af966e 0x74c7e053 0x642beee8 0x62cd6e4a 0x1a789ed0 0x0c558d9a 0x102875e7 0x1898a02e 0x5ff16da4 // method \"calc_single_box_fee(uint8,uint16)uint64\", method \"read_gen_unix()uint64\", method \"read_game_state(uint64)(uint64,bool,uint8,uint8,uint8,uint8,uint8,uint16,uint64,uint64,address,address,address,address)\", method \"read_game_players(uint64)address[]\", method \"generate()void\", method \"mint_trophy(pay,pay)address\", method \"get_trophy()void\", method \"new_game(uint64,pay,pay,pay)void\", method \"join_game(uint64,pay)void\", method \"get_box_commit_rand(pay)void\", method \"commit_rand(uint64)void\", method \"del_box_commit_rand()void\", method \"play_game(uint64)void\", method \"check_game_event(uint64,uint8)bool\", method \"reset_game(uint64,pay)void\", method \"delete_game(uint64)void\", method \"terminate()void\"",
      "defined_out": [
        "Method(calc_single_box_fee(uint8,uint16)uint64)",
        "Method(check_game_event(uint64,uint8)bool)",
        "Method(commit_rand(uint64)void)",
        "Method(del_box_commit_rand()void)",
        "Method(delete_game(uint64)void)",
        "Method(generate()void)",
        "Method(get_box_commit_rand(pay)void)",
        "Method(get_trophy()void)",
        "Method(join_game(uint64,pay)void)",
        "Method(mint_trophy(pay,pay)address)",
        "Method(new_game(uint64,pay,pay,pay)void)",
        "Method(play_game(uint64)void)",
        "Method(read_game_players(uint64)address[])",
        "Method(read_game_state(uint64)(uint64,bool,uint8,uint8,uint8,uint8,uint8,uint16,uint64,uint64,address,address,address,address))",
        "Method(read_gen_unix()uint64)",
        "Method(reset_game(uint64,pay)void)",
        "Method(terminate()void)"
      ],
      "stack_out": [
        "Method(calc_single_box_fee(uint8,uint16)uint64)",
        "Method(read_gen_unix()uint64)",
        "Method(read_game_state(uint64)(uint64,bool,uint8,uint8,uint8,uint8,uint8,uint16,uint64,uint64,address,address,address,address))",
        "Method(read_game_players(uint64)address[])",
        "Method(generate()void)",
        "Method(mint_trophy(pay,pay)address)",
        "Method(get_trophy()void)",
        "Method(new_game(uint64,pay,pay,pay)void)",
        "Method(join_game(uint64,pay)void)",
        "Method(get_box_commit_rand(pay)void)",
        "Method(commit_rand(uint64)void)",
        "Method(del_box_commit_rand()void)",
        "Method(play_game(uint64)void)",
        "Method(check_game_event(uint64,uint8)bool)",
        "Method(reset_game(uint64,pay)void)",
        "Method(delete_game(uint64)void)",
        "Method(terminate()void)"
      ]
    },
    "92": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(calc_single_box_fee(uint8,uint16)uint64)",
        "Method(check_game_event(uint64,uint8)bool)",
        "Method(commit_rand(uint64)void)",
        "Method(del_box_commit_rand()void)",
        "Method(delete_game(uint64)void)",
        "Method(generate()void)",
        "Method(get_box_commit_rand(pay)void)",
        "Method(get_trophy()void)",
        "Method(join_game(uint64,pay)void)",
        "Method(mint_trophy(pay,pay)address)",
        "Method(new_game(uint64,pay,pay,pay)void)",
        "Method(play_game(uint64)void)",
        "Method(read_game_players(uint64)address[])",
        "Method(read_game_state(uint64)(uint64,bool,uint8,uint8,uint8,uint8,uint8,uint16,uint64,uint64,address,address,address,address))",
        "Method(read_gen_unix()uint64)",
        "Method(reset_game(uint64,pay)void)",
        "Method(terminate()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(calc_single_box_fee(uint8,uint16)uint64)",
        "Method(read_gen_unix()uint64)",
        "Method(read_game_state(uint64)(uint64,bool,uint8,uint8,uint8,uint8,uint8,uint16,uint64,uint64,address,address,address,address))",
        "Method(read_game_players(uint64)address[])",
        "Method(generate()void)",
        "Method(mint_trophy(pay,pay)address)",
        "Method(get_trophy()void)",
        "Method(new_game(uint64,pay,pay,pay)void)",
        "Method(join_game(uint64,pay)void)",
        "Method(get_box_commit_rand(pay)void)",
        "Method(commit_rand(uint64)void)",
        "Method(del_box_commit_rand()void)",
        "Method(play_game(uint64)void)",
        "Method(check_game_event(uint64,uint8)bool)",
        "Method(reset_game(uint64,pay)void)",
        "Method(delete_game(uint64)void)",
        "Method(terminate()void)",
        "tmp%2#0"
      ]
    },
    "95": {
      "op": "match main_calc_single_box_fee_route@5 main_read_gen_unix_route@6 main_read_game_state_route@7 main_read_game_players_route@8 main_generate_route@9 main_mint_trophy_route@10 main_get_trophy_route@11 main_new_game_route@12 main_join_game_route@13 main_get_box_commit_rand_route@14 main_commit_rand_route@15 main_del_box_commit_rand_route@16 main_play_game_route@17 main_check_game_event_route@18 main_reset_game_route@19 main_delete_game_route@20 main_terminate_route@21",
      "stack_out": []
    },
    "131": {
      "block": "main_after_if_else@22",
      "stack_in": [],
      "op": "intc_1 // 0",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "132": {
      "op": "return",
      "stack_out": []
    },
    "133": {
      "block": "main_terminate_route@21",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%94#0"
      ],
      "stack_out": [
        "tmp%94#0"
      ]
    },
    "135": {
      "op": "pushint 5 // DeleteApplication",
      "defined_out": [
        "DeleteApplication",
        "tmp%94#0"
      ],
      "stack_out": [
        "tmp%94#0",
        "DeleteApplication"
      ]
    },
    "137": {
      "op": "==",
      "defined_out": [
        "tmp%95#0"
      ],
      "stack_out": [
        "tmp%95#0"
      ]
    },
    "138": {
      "error": "OnCompletion is not DeleteApplication",
      "op": "assert // OnCompletion is not DeleteApplication",
      "stack_out": []
    },
    "139": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%96#0"
      ],
      "stack_out": [
        "tmp%96#0"
      ]
    },
    "141": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "142": {
      "callsub": "smart_contracts.pieout.contract.Pieout.terminate",
      "op": "callsub terminate"
    },
    "145": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "146": {
      "op": "return",
      "stack_out": []
    },
    "147": {
      "block": "main_delete_game_route@20",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%89#0"
      ],
      "stack_out": [
        "tmp%89#0"
      ]
    },
    "149": {
      "op": "!",
      "defined_out": [
        "tmp%90#0"
      ],
      "stack_out": [
        "tmp%90#0"
      ]
    },
    "150": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "151": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%91#0"
      ],
      "stack_out": [
        "tmp%91#0"
      ]
    },
    "153": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "154": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%8#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%8#0"
      ]
    },
    "157": {
      "op": "btoi",
      "defined_out": [
        "tmp%93#0"
      ],
      "stack_out": [
        "tmp%93#0"
      ]
    },
    "158": {
      "callsub": "smart_contracts.pieout.contract.Pieout.delete_game",
      "op": "callsub delete_game",
      "stack_out": []
    },
    "161": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "162": {
      "op": "return",
      "stack_out": []
    },
    "163": {
      "block": "main_reset_game_route@19",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%83#0"
      ],
      "stack_out": [
        "tmp%83#0"
      ]
    },
    "165": {
      "op": "!",
      "defined_out": [
        "tmp%84#0"
      ],
      "stack_out": [
        "tmp%84#0"
      ]
    },
    "166": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "167": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%85#0"
      ],
      "stack_out": [
        "tmp%85#0"
      ]
    },
    "169": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "170": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%7#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%7#0"
      ]
    },
    "173": {
      "op": "btoi",
      "defined_out": [
        "tmp%87#0"
      ],
      "stack_out": [
        "tmp%87#0"
      ]
    },
    "174": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%87#0",
        "tmp%88#0"
      ],
      "stack_out": [
        "tmp%87#0",
        "tmp%88#0"
      ]
    },
    "176": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "tmp%87#0",
        "tmp%88#0"
      ],
      "stack_out": [
        "tmp%87#0",
        "tmp%88#0",
        "1"
      ]
    },
    "177": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%7#0",
        "tmp%87#0"
      ],
      "stack_out": [
        "tmp%87#0",
        "gtxn_idx%7#0"
      ]
    },
    "178": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%7#0",
        "gtxn_idx%7#0 (copy)",
        "tmp%87#0"
      ],
      "stack_out": [
        "tmp%87#0",
        "gtxn_idx%7#0",
        "gtxn_idx%7#0 (copy)"
      ]
    },
    "179": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%7#0",
        "gtxn_type%7#0",
        "tmp%87#0"
      ],
      "stack_out": [
        "tmp%87#0",
        "gtxn_idx%7#0",
        "gtxn_type%7#0"
      ]
    },
    "181": {
      "op": "intc_0 // pay",
      "defined_out": [
        "gtxn_idx%7#0",
        "gtxn_type%7#0",
        "pay",
        "tmp%87#0"
      ],
      "stack_out": [
        "tmp%87#0",
        "gtxn_idx%7#0",
        "gtxn_type%7#0",
        "pay"
      ]
    },
    "182": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%7#0",
        "gtxn_type_matches%7#0",
        "tmp%87#0"
      ],
      "stack_out": [
        "tmp%87#0",
        "gtxn_idx%7#0",
        "gtxn_type_matches%7#0"
      ]
    },
    "183": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "tmp%87#0",
        "gtxn_idx%7#0"
      ]
    },
    "184": {
      "callsub": "smart_contracts.pieout.contract.Pieout.reset_game",
      "op": "callsub reset_game",
      "stack_out": []
    },
    "187": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "188": {
      "op": "return",
      "stack_out": []
    },
    "189": {
      "block": "main_check_game_event_route@18",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%76#0"
      ],
      "stack_out": [
        "tmp%76#0"
      ]
    },
    "191": {
      "op": "!",
      "defined_out": [
        "tmp%77#0"
      ],
      "stack_out": [
        "tmp%77#0"
      ]
    },
    "192": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "193": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%78#0"
      ],
      "stack_out": [
        "tmp%78#0"
      ]
    },
    "195": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "196": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%6#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%6#0"
      ]
    },
    "199": {
      "op": "btoi",
      "defined_out": [
        "tmp%80#0"
      ],
      "stack_out": [
        "tmp%80#0"
      ]
    },
    "200": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[1]%1#0",
        "tmp%80#0"
      ],
      "stack_out": [
        "tmp%80#0",
        "reinterpret_bytes[1]%1#0"
      ]
    },
    "203": {
      "callsub": "smart_contracts.pieout.contract.Pieout.check_game_event",
      "op": "callsub check_game_event",
      "defined_out": [
        "tmp%81#0"
      ],
      "stack_out": [
        "tmp%81#0"
      ]
    },
    "206": {
      "op": "bytec 5 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%81#0"
      ],
      "stack_out": [
        "tmp%81#0",
        "0x151f7c75"
      ]
    },
    "208": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%81#0"
      ]
    },
    "209": {
      "op": "concat",
      "defined_out": [
        "tmp%82#0"
      ],
      "stack_out": [
        "tmp%82#0"
      ]
    },
    "210": {
      "op": "log",
      "stack_out": []
    },
    "211": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "212": {
      "op": "return",
      "stack_out": []
    },
    "213": {
      "block": "main_play_game_route@17",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%71#0"
      ],
      "stack_out": [
        "tmp%71#0"
      ]
    },
    "215": {
      "op": "!",
      "defined_out": [
        "tmp%72#0"
      ],
      "stack_out": [
        "tmp%72#0"
      ]
    },
    "216": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "217": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%73#0"
      ],
      "stack_out": [
        "tmp%73#0"
      ]
    },
    "219": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "220": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%5#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%5#0"
      ]
    },
    "223": {
      "op": "btoi",
      "defined_out": [
        "tmp%75#0"
      ],
      "stack_out": [
        "tmp%75#0"
      ]
    },
    "224": {
      "callsub": "smart_contracts.pieout.contract.Pieout.play_game",
      "op": "callsub play_game",
      "stack_out": []
    },
    "227": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "228": {
      "op": "return",
      "stack_out": []
    },
    "229": {
      "block": "main_del_box_commit_rand_route@16",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%67#0"
      ],
      "stack_out": [
        "tmp%67#0"
      ]
    },
    "231": {
      "op": "!",
      "defined_out": [
        "tmp%68#0"
      ],
      "stack_out": [
        "tmp%68#0"
      ]
    },
    "232": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "233": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%69#0"
      ],
      "stack_out": [
        "tmp%69#0"
      ]
    },
    "235": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "236": {
      "callsub": "smart_contracts.pieout.contract.Pieout.del_box_commit_rand",
      "op": "callsub del_box_commit_rand"
    },
    "239": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "240": {
      "op": "return",
      "stack_out": []
    },
    "241": {
      "block": "main_commit_rand_route@15",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%62#0"
      ],
      "stack_out": [
        "tmp%62#0"
      ]
    },
    "243": {
      "op": "!",
      "defined_out": [
        "tmp%63#0"
      ],
      "stack_out": [
        "tmp%63#0"
      ]
    },
    "244": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "245": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%64#0"
      ],
      "stack_out": [
        "tmp%64#0"
      ]
    },
    "247": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "248": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%4#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%4#0"
      ]
    },
    "251": {
      "op": "btoi",
      "defined_out": [
        "tmp%66#0"
      ],
      "stack_out": [
        "tmp%66#0"
      ]
    },
    "252": {
      "callsub": "smart_contracts.pieout.contract.Pieout.commit_rand",
      "op": "callsub commit_rand",
      "stack_out": []
    },
    "255": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "256": {
      "op": "return",
      "stack_out": []
    },
    "257": {
      "block": "main_get_box_commit_rand_route@14",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%57#0"
      ],
      "stack_out": [
        "tmp%57#0"
      ]
    },
    "259": {
      "op": "!",
      "defined_out": [
        "tmp%58#0"
      ],
      "stack_out": [
        "tmp%58#0"
      ]
    },
    "260": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "261": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%59#0"
      ],
      "stack_out": [
        "tmp%59#0"
      ]
    },
    "263": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "264": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%61#0"
      ],
      "stack_out": [
        "tmp%61#0"
      ]
    },
    "266": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "tmp%61#0"
      ],
      "stack_out": [
        "tmp%61#0",
        "1"
      ]
    },
    "267": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%6#0"
      ],
      "stack_out": [
        "gtxn_idx%6#0"
      ]
    },
    "268": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%6#0",
        "gtxn_idx%6#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%6#0",
        "gtxn_idx%6#0 (copy)"
      ]
    },
    "269": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%6#0",
        "gtxn_type%6#0"
      ],
      "stack_out": [
        "gtxn_idx%6#0",
        "gtxn_type%6#0"
      ]
    },
    "271": {
      "op": "intc_0 // pay",
      "defined_out": [
        "gtxn_idx%6#0",
        "gtxn_type%6#0",
        "pay"
      ],
      "stack_out": [
        "gtxn_idx%6#0",
        "gtxn_type%6#0",
        "pay"
      ]
    },
    "272": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%6#0",
        "gtxn_type_matches%6#0"
      ],
      "stack_out": [
        "gtxn_idx%6#0",
        "gtxn_type_matches%6#0"
      ]
    },
    "273": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "gtxn_idx%6#0"
      ]
    },
    "274": {
      "callsub": "smart_contracts.pieout.contract.Pieout.get_box_commit_rand",
      "op": "callsub get_box_commit_rand",
      "stack_out": []
    },
    "277": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "278": {
      "op": "return",
      "stack_out": []
    },
    "279": {
      "block": "main_join_game_route@13",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%51#0"
      ],
      "stack_out": [
        "tmp%51#0"
      ]
    },
    "281": {
      "op": "!",
      "defined_out": [
        "tmp%52#0"
      ],
      "stack_out": [
        "tmp%52#0"
      ]
    },
    "282": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "283": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%53#0"
      ]
    },
    "285": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "286": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%3#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%3#0"
      ]
    },
    "289": {
      "op": "btoi",
      "defined_out": [
        "tmp%55#0"
      ],
      "stack_out": [
        "tmp%55#0"
      ]
    },
    "290": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%55#0",
        "tmp%56#0"
      ],
      "stack_out": [
        "tmp%55#0",
        "tmp%56#0"
      ]
    },
    "292": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "tmp%55#0",
        "tmp%56#0"
      ],
      "stack_out": [
        "tmp%55#0",
        "tmp%56#0",
        "1"
      ]
    },
    "293": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%5#0",
        "tmp%55#0"
      ],
      "stack_out": [
        "tmp%55#0",
        "gtxn_idx%5#0"
      ]
    },
    "294": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%5#0",
        "gtxn_idx%5#0 (copy)",
        "tmp%55#0"
      ],
      "stack_out": [
        "tmp%55#0",
        "gtxn_idx%5#0",
        "gtxn_idx%5#0 (copy)"
      ]
    },
    "295": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%5#0",
        "gtxn_type%5#0",
        "tmp%55#0"
      ],
      "stack_out": [
        "tmp%55#0",
        "gtxn_idx%5#0",
        "gtxn_type%5#0"
      ]
    },
    "297": {
      "op": "intc_0 // pay",
      "defined_out": [
        "gtxn_idx%5#0",
        "gtxn_type%5#0",
        "pay",
        "tmp%55#0"
      ],
      "stack_out": [
        "tmp%55#0",
        "gtxn_idx%5#0",
        "gtxn_type%5#0",
        "pay"
      ]
    },
    "298": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%5#0",
        "gtxn_type_matches%5#0",
        "tmp%55#0"
      ],
      "stack_out": [
        "tmp%55#0",
        "gtxn_idx%5#0",
        "gtxn_type_matches%5#0"
      ]
    },
    "299": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "tmp%55#0",
        "gtxn_idx%5#0"
      ]
    },
    "300": {
      "callsub": "smart_contracts.pieout.contract.Pieout.join_game",
      "op": "callsub join_game",
      "stack_out": []
    },
    "303": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "304": {
      "op": "return",
      "stack_out": []
    },
    "305": {
      "block": "main_new_game_route@12",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%43#0"
      ],
      "stack_out": [
        "tmp%43#0"
      ]
    },
    "307": {
      "op": "!",
      "defined_out": [
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%44#0"
      ]
    },
    "308": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "309": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%45#0"
      ]
    },
    "311": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "312": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%2#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%2#0"
      ]
    },
    "315": {
      "op": "btoi",
      "defined_out": [
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%47#0"
      ]
    },
    "316": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%47#0",
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%47#0",
        "tmp%48#0"
      ]
    },
    "318": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "tmp%47#0",
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%47#0",
        "tmp%48#0",
        "3"
      ]
    },
    "320": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%2#0",
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%47#0",
        "gtxn_idx%2#0"
      ]
    },
    "321": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_idx%2#0 (copy)",
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%47#0",
        "gtxn_idx%2#0",
        "gtxn_idx%2#0 (copy)"
      ]
    },
    "322": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_type%2#0",
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%47#0",
        "gtxn_idx%2#0",
        "gtxn_type%2#0"
      ]
    },
    "324": {
      "op": "intc_0 // pay",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_type%2#0",
        "pay",
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%47#0",
        "gtxn_idx%2#0",
        "gtxn_type%2#0",
        "pay"
      ]
    },
    "325": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_type_matches%2#0",
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%47#0",
        "gtxn_idx%2#0",
        "gtxn_type_matches%2#0"
      ]
    },
    "326": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "tmp%47#0",
        "gtxn_idx%2#0"
      ]
    },
    "327": {
      "op": "txn GroupIndex",
      "defined_out": [
        "gtxn_idx%2#0",
        "tmp%47#0",
        "tmp%49#0"
      ],
      "stack_out": [
        "tmp%47#0",
        "gtxn_idx%2#0",
        "tmp%49#0"
      ]
    },
    "329": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "gtxn_idx%2#0",
        "tmp%47#0",
        "tmp%49#0"
      ],
      "stack_out": [
        "tmp%47#0",
        "gtxn_idx%2#0",
        "tmp%49#0",
        "2"
      ]
    },
    "330": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%47#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0"
      ]
    },
    "331": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%3#0 (copy)",
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%47#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%3#0 (copy)"
      ]
    },
    "332": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_type%3#0",
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%47#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_type%3#0"
      ]
    },
    "334": {
      "op": "intc_0 // pay",
      "stack_out": [
        "tmp%47#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_type%3#0",
        "pay"
      ]
    },
    "335": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_type_matches%3#0",
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%47#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_type_matches%3#0"
      ]
    },
    "336": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "tmp%47#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0"
      ]
    },
    "337": {
      "op": "txn GroupIndex",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "tmp%47#0",
        "tmp%50#0"
      ],
      "stack_out": [
        "tmp%47#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "tmp%50#0"
      ]
    },
    "339": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "tmp%47#0",
        "tmp%50#0"
      ],
      "stack_out": [
        "tmp%47#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "tmp%50#0",
        "1"
      ]
    },
    "340": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%47#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0"
      ]
    },
    "341": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "gtxn_idx%4#0 (copy)",
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%47#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "gtxn_idx%4#0 (copy)"
      ]
    },
    "342": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "gtxn_type%4#0",
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%47#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "gtxn_type%4#0"
      ]
    },
    "344": {
      "op": "intc_0 // pay",
      "stack_out": [
        "tmp%47#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "gtxn_type%4#0",
        "pay"
      ]
    },
    "345": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "gtxn_type_matches%4#0",
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%47#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "gtxn_type_matches%4#0"
      ]
    },
    "346": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "tmp%47#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0"
      ]
    },
    "347": {
      "callsub": "smart_contracts.pieout.contract.Pieout.new_game",
      "op": "callsub new_game",
      "stack_out": []
    },
    "350": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "351": {
      "op": "return",
      "stack_out": []
    },
    "352": {
      "block": "main_get_trophy_route@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%39#0"
      ]
    },
    "354": {
      "op": "!",
      "defined_out": [
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%40#0"
      ]
    },
    "355": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "356": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0"
      ]
    },
    "358": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "359": {
      "callsub": "smart_contracts.pieout.contract.Pieout.get_trophy",
      "op": "callsub get_trophy"
    },
    "362": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "363": {
      "op": "return",
      "stack_out": []
    },
    "364": {
      "block": "main_mint_trophy_route@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "366": {
      "op": "!",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0"
      ]
    },
    "367": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "368": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "370": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "371": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0"
      ]
    },
    "373": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0",
        "2"
      ]
    },
    "374": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "375": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ]
    },
    "376": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ]
    },
    "378": {
      "op": "intc_0 // pay",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay"
      ]
    },
    "379": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ]
    },
    "380": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "381": {
      "op": "txn GroupIndex",
      "defined_out": [
        "gtxn_idx%0#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%36#0"
      ]
    },
    "383": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "gtxn_idx%0#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%36#0",
        "1"
      ]
    },
    "384": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0"
      ]
    },
    "385": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0",
        "gtxn_idx%1#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0",
        "gtxn_idx%1#0 (copy)"
      ]
    },
    "386": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0",
        "gtxn_type%1#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0",
        "gtxn_type%1#0"
      ]
    },
    "388": {
      "op": "intc_0 // pay",
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0",
        "gtxn_type%1#0",
        "pay"
      ]
    },
    "389": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0",
        "gtxn_type_matches%1#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0",
        "gtxn_type_matches%1#0"
      ]
    },
    "390": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0"
      ]
    },
    "391": {
      "callsub": "smart_contracts.pieout.contract.Pieout.mint_trophy",
      "op": "callsub mint_trophy",
      "defined_out": [
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0"
      ]
    },
    "394": {
      "op": "bytec 5 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0",
        "0x151f7c75"
      ]
    },
    "396": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%37#0"
      ]
    },
    "397": {
      "op": "concat",
      "defined_out": [
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%38#0"
      ]
    },
    "398": {
      "op": "log",
      "stack_out": []
    },
    "399": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "400": {
      "op": "return",
      "stack_out": []
    },
    "401": {
      "block": "main_generate_route@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "403": {
      "op": "!",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "404": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "405": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "407": {
      "op": "!",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0"
      ]
    },
    "408": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "409": {
      "callsub": "smart_contracts.pieout.contract.Pieout.generate",
      "op": "callsub generate"
    },
    "412": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "413": {
      "op": "return",
      "stack_out": []
    },
    "414": {
      "block": "main_read_game_players_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "416": {
      "op": "!",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "417": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "418": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "420": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "421": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%1#0"
      ]
    },
    "424": {
      "op": "btoi",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "425": {
      "callsub": "smart_contracts.pieout.contract.Pieout.read_game_players",
      "op": "callsub read_game_players",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "428": {
      "op": "bytec 5 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0",
        "0x151f7c75"
      ]
    },
    "430": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%25#0"
      ]
    },
    "431": {
      "op": "concat",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "432": {
      "op": "log",
      "stack_out": []
    },
    "433": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "434": {
      "op": "return",
      "stack_out": []
    },
    "435": {
      "block": "main_read_game_state_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "437": {
      "op": "!",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "438": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "439": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "441": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "442": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%0#0"
      ]
    },
    "445": {
      "op": "btoi",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "446": {
      "callsub": "smart_contracts.pieout.contract.Pieout.read_game_state",
      "op": "callsub read_game_state",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "449": {
      "op": "bytec 5 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0",
        "0x151f7c75"
      ]
    },
    "451": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%18#0"
      ]
    },
    "452": {
      "op": "concat",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "453": {
      "op": "log",
      "stack_out": []
    },
    "454": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "455": {
      "op": "return",
      "stack_out": []
    },
    "456": {
      "block": "main_read_gen_unix_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "458": {
      "op": "!",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "459": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "460": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "462": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "463": {
      "op": "intc 12 // TMPL_GEN_UNIX",
      "defined_out": [
        "to_encode%1#0"
      ],
      "stack_out": [
        "to_encode%1#0"
      ]
    },
    "465": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0"
      ]
    },
    "466": {
      "op": "bytec 5 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0",
        "0x151f7c75"
      ]
    },
    "468": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%1#0"
      ]
    },
    "469": {
      "op": "concat",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "470": {
      "op": "log",
      "stack_out": []
    },
    "471": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "472": {
      "op": "return",
      "stack_out": []
    },
    "473": {
      "block": "main_calc_single_box_fee_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "475": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "476": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "477": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "479": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "480": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%0#0"
      ]
    },
    "483": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[1]%0#0",
        "reinterpret_bytes[2]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%0#0",
        "reinterpret_bytes[2]%0#0"
      ]
    },
    "486": {
      "callsub": "smart_contracts.pieout.contract.Pieout.calc_single_box_fee",
      "op": "callsub calc_single_box_fee",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "489": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "490": {
      "op": "bytec 5 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "0x151f7c75"
      ]
    },
    "492": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ]
    },
    "493": {
      "op": "concat",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "494": {
      "op": "log",
      "stack_out": []
    },
    "495": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "496": {
      "op": "return",
      "stack_out": []
    },
    "497": {
      "subroutine": "smart_contracts.pieout.subroutines.payout_itxn",
      "params": {
        "receiver#0": "bytes",
        "amount#0": "uint64",
        "note#0": "bytes"
      },
      "block": "payout_itxn",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "500": {
      "op": "itxn_begin"
    },
    "501": {
      "op": "frame_dig -1",
      "defined_out": [
        "note#0 (copy)"
      ],
      "stack_out": [
        "note#0 (copy)"
      ]
    },
    "503": {
      "op": "itxn_field Note",
      "stack_out": []
    },
    "505": {
      "op": "frame_dig -2",
      "defined_out": [
        "amount#0 (copy)"
      ],
      "stack_out": [
        "amount#0 (copy)"
      ]
    },
    "507": {
      "op": "itxn_field Amount",
      "stack_out": []
    },
    "509": {
      "op": "frame_dig -3",
      "defined_out": [
        "receiver#0 (copy)"
      ],
      "stack_out": [
        "receiver#0 (copy)"
      ]
    },
    "511": {
      "op": "itxn_field Receiver",
      "stack_out": []
    },
    "513": {
      "op": "intc_0 // pay",
      "defined_out": [
        "pay"
      ],
      "stack_out": [
        "pay"
      ]
    },
    "514": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "516": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "517": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "519": {
      "op": "itxn_submit"
    },
    "520": {
      "retsub": true,
      "op": "retsub"
    },
    "521": {
      "subroutine": "smart_contracts.pieout.subroutines.check_sender_in_game",
      "params": {
        "game_id#0": "uint64",
        "box_game_players#0": "bytes",
        "player_count#0": "uint64",
        "clear_player#0": "uint64"
      },
      "block": "check_sender_in_game",
      "stack_in": [],
      "op": "proto 4 1"
    },
    "524": {
      "op": "intc_1 // 0",
      "stack_out": [
        "players_ref#0"
      ]
    },
    "525": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5"
      ]
    },
    "527": {
      "op": "frame_dig -2",
      "defined_out": [
        "player_count#0 (copy)"
      ],
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "player_count#0 (copy)"
      ]
    },
    "529": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "player_count#0 (copy)"
      ],
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "player_count#0 (copy)",
        "32"
      ]
    },
    "530": {
      "op": "*",
      "defined_out": [
        "game_players_length#0"
      ],
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0"
      ]
    },
    "531": {
      "op": "intc_1 // 0"
    },
    "532": {
      "op": "dup",
      "defined_out": [
        "game_players_length#0",
        "i#0",
        "txn_sender_in_game#0"
      ],
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0"
      ]
    },
    "533": {
      "block": "check_sender_in_game_for_header@1",
      "stack_in": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0",
        "i#0"
      ]
    },
    "535": {
      "op": "frame_dig 2",
      "defined_out": [
        "game_players_length#0",
        "i#0"
      ],
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0",
        "i#0",
        "game_players_length#0"
      ]
    },
    "537": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "game_players_length#0",
        "i#0"
      ],
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "538": {
      "op": "frame_dig 3",
      "defined_out": [
        "continue_looping%0#0",
        "game_players_length#0",
        "i#0",
        "txn_sender_in_game#5"
      ],
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0",
        "continue_looping%0#0",
        "txn_sender_in_game#5"
      ]
    },
    "540": {
      "op": "frame_bury 1",
      "defined_out": [
        "continue_looping%0#0",
        "game_players_length#0",
        "i#0",
        "txn_sender_in_game#5"
      ],
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "542": {
      "op": "bz check_sender_in_game_after_for@8",
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0"
      ]
    },
    "545": {
      "op": "frame_dig -4",
      "defined_out": [
        "game_id#0 (copy)",
        "game_players_length#0",
        "i#0",
        "txn_sender_in_game#5"
      ],
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0",
        "game_id#0 (copy)"
      ]
    },
    "547": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0",
        "game_players_length#0",
        "i#0",
        "txn_sender_in_game#5"
      ],
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0",
        "encoded_value%0#0"
      ]
    },
    "548": {
      "op": "frame_dig -3",
      "defined_out": [
        "box_game_players#0 (copy)",
        "encoded_value%0#0",
        "game_players_length#0",
        "i#0",
        "txn_sender_in_game#5"
      ],
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0",
        "encoded_value%0#0",
        "box_game_players#0 (copy)"
      ]
    },
    "550": {
      "op": "swap",
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0",
        "box_game_players#0 (copy)",
        "encoded_value%0#0"
      ]
    },
    "551": {
      "op": "concat",
      "defined_out": [
        "game_players_length#0",
        "i#0",
        "players_ref#0",
        "txn_sender_in_game#5"
      ],
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0",
        "players_ref#0"
      ]
    },
    "552": {
      "op": "dup",
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0",
        "players_ref#0",
        "players_ref#0"
      ]
    },
    "553": {
      "op": "frame_bury 0",
      "defined_out": [
        "game_players_length#0",
        "i#0",
        "players_ref#0",
        "txn_sender_in_game#5"
      ],
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0",
        "players_ref#0"
      ]
    },
    "555": {
      "op": "box_get",
      "defined_out": [
        "game_players_length#0",
        "i#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "players_ref#0",
        "txn_sender_in_game#5"
      ],
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "556": {
      "error": "check BoxMap entry exists",
      "op": "assert // check BoxMap entry exists",
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0",
        "maybe_value%0#0"
      ]
    },
    "557": {
      "op": "frame_dig 4",
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0",
        "maybe_value%0#0",
        "i#0"
      ]
    },
    "559": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "game_players_length#0",
        "i#0",
        "maybe_value%0#0",
        "players_ref#0",
        "txn_sender_in_game#5"
      ],
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0",
        "maybe_value%0#0",
        "i#0",
        "32"
      ]
    },
    "560": {
      "op": "extract3",
      "defined_out": [
        "game_players_length#0",
        "i#0",
        "player_addr_bytes#0",
        "players_ref#0",
        "txn_sender_in_game#5"
      ],
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0",
        "player_addr_bytes#0"
      ]
    },
    "561": {
      "op": "txn Sender",
      "defined_out": [
        "game_players_length#0",
        "i#0",
        "player_addr_bytes#0",
        "players_ref#0",
        "tmp%0#0",
        "txn_sender_in_game#5"
      ],
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0",
        "player_addr_bytes#0",
        "tmp%0#0"
      ]
    },
    "563": {
      "op": "==",
      "defined_out": [
        "game_players_length#0",
        "i#0",
        "players_ref#0",
        "tmp%1#0",
        "txn_sender_in_game#5"
      ],
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0",
        "tmp%1#0"
      ]
    },
    "564": {
      "op": "bz check_sender_in_game_after_if_else@6",
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0"
      ]
    },
    "567": {
      "op": "intc_0 // 1",
      "defined_out": [
        "game_players_length#0",
        "i#0",
        "players_ref#0",
        "txn_sender_in_game#0",
        "txn_sender_in_game#5"
      ],
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0",
        "txn_sender_in_game#0"
      ]
    },
    "568": {
      "op": "frame_bury 3",
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0"
      ]
    },
    "570": {
      "op": "frame_dig -1",
      "defined_out": [
        "clear_player#0 (copy)",
        "game_players_length#0",
        "i#0",
        "players_ref#0",
        "txn_sender_in_game#0",
        "txn_sender_in_game#5"
      ],
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0",
        "clear_player#0 (copy)"
      ]
    },
    "572": {
      "op": "bz check_sender_in_game_after_if_else@5",
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0"
      ]
    },
    "575": {
      "op": "frame_dig 0",
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0",
        "players_ref#0"
      ]
    },
    "577": {
      "op": "frame_dig 4",
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0",
        "players_ref#0",
        "i#0"
      ]
    },
    "579": {
      "op": "bytec 10 // 0x0000000000000000000000000000000000000000000000000000000000000000",
      "defined_out": [
        "0x0000000000000000000000000000000000000000000000000000000000000000",
        "game_players_length#0",
        "i#0",
        "players_ref#0",
        "txn_sender_in_game#0",
        "txn_sender_in_game#5"
      ],
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0",
        "players_ref#0",
        "i#0",
        "0x0000000000000000000000000000000000000000000000000000000000000000"
      ]
    },
    "581": {
      "op": "box_replace",
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0"
      ]
    },
    "582": {
      "block": "check_sender_in_game_after_if_else@5",
      "stack_in": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "txn_sender_in_game#5"
      ],
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0",
        "txn_sender_in_game#5"
      ]
    },
    "584": {
      "op": "frame_bury 1",
      "defined_out": [
        "txn_sender_in_game#5"
      ],
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0"
      ]
    },
    "586": {
      "block": "check_sender_in_game_after_for@8",
      "stack_in": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "txn_sender_in_game#0"
      ],
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0",
        "txn_sender_in_game#0"
      ]
    },
    "588": {
      "op": "frame_bury 0"
    },
    "590": {
      "retsub": true,
      "op": "retsub"
    },
    "591": {
      "block": "check_sender_in_game_after_if_else@6",
      "stack_in": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0",
        "i#0"
      ]
    },
    "593": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "i#0"
      ],
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0",
        "i#0",
        "32"
      ]
    },
    "594": {
      "op": "+",
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0",
        "i#0"
      ]
    },
    "595": {
      "op": "frame_bury 4",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0"
      ]
    },
    "597": {
      "op": "b check_sender_in_game_for_header@1"
    },
    "600": {
      "subroutine": "smart_contracts.pieout.subroutines.is_game_live",
      "params": {
        "game_state#0": "bytes"
      },
      "block": "is_game_live",
      "stack_in": [],
      "op": "proto 1 2"
    },
    "603": {
      "op": "frame_dig -1",
      "defined_out": [
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "game_state#0 (copy)"
      ]
    },
    "605": {
      "error": "Index access is out of bounds",
      "op": "extract 8 8 // on error: Index access is out of bounds",
      "defined_out": [
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0"
      ]
    },
    "608": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "reinterpret_biguint%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "tmp%0#0"
      ]
    },
    "610": {
      "op": "itob",
      "defined_out": [
        "reinterpret_biguint%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "tmp%1#0"
      ]
    },
    "611": {
      "op": "b<",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "612": {
      "op": "bnz is_game_live_if_body@2",
      "stack_out": []
    },
    "615": {
      "op": "frame_dig -1",
      "stack_out": [
        "game_state#0 (copy)"
      ]
    },
    "617": {
      "error": "Index access is out of bounds",
      "op": "extract 2 1 // on error: Index access is out of bounds",
      "defined_out": [
        "reinterpret_biguint%1#0"
      ],
      "stack_out": [
        "reinterpret_biguint%1#0"
      ]
    },
    "620": {
      "op": "frame_dig -1",
      "stack_out": [
        "reinterpret_biguint%1#0",
        "game_state#0 (copy)"
      ]
    },
    "622": {
      "error": "Index access is out of bounds",
      "op": "extract 1 1 // on error: Index access is out of bounds",
      "defined_out": [
        "reinterpret_biguint%1#0",
        "reinterpret_biguint%2#0"
      ],
      "stack_out": [
        "reinterpret_biguint%1#0",
        "reinterpret_biguint%2#0"
      ]
    },
    "625": {
      "op": "b==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "626": {
      "op": "bz is_game_live_else_body@7",
      "stack_out": []
    },
    "629": {
      "block": "is_game_live_if_body@2",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "game_state#0 (copy)"
      ]
    },
    "631": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "game_state#0 (copy)",
        "0"
      ]
    },
    "632": {
      "op": "intc_0 // 1",
      "defined_out": [
        "0",
        "1",
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "game_state#0 (copy)",
        "0",
        "1"
      ]
    },
    "633": {
      "op": "setbit",
      "defined_out": [
        "game_state#0"
      ],
      "stack_out": [
        "game_state#0"
      ]
    },
    "634": {
      "op": "frame_bury -1",
      "stack_out": []
    },
    "636": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "638": {
      "op": "intc 5 // 3600",
      "defined_out": [
        "3600",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "3600"
      ]
    },
    "640": {
      "op": "+",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "641": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "642": {
      "op": "frame_dig -1",
      "stack_out": [
        "val_as_bytes%0#0",
        "game_state#0 (copy)"
      ]
    },
    "644": {
      "op": "swap",
      "stack_out": [
        "game_state#0 (copy)",
        "val_as_bytes%0#0"
      ]
    },
    "645": {
      "op": "replace2 8",
      "stack_out": [
        "game_state#0"
      ]
    },
    "647": {
      "op": "dup"
    },
    "648": {
      "op": "frame_bury -1",
      "stack_out": [
        "game_state#0 (copy)"
      ]
    },
    "650": {
      "op": "intc_1 // 0",
      "stack_out": [
        "game_state#0 (copy)",
        "0"
      ]
    },
    "651": {
      "op": "getbit",
      "defined_out": [
        "is_true%1#0"
      ],
      "stack_out": [
        "is_true%1#0"
      ]
    },
    "652": {
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x00",
        "is_true%1#0"
      ],
      "stack_out": [
        "is_true%1#0",
        "0x00"
      ]
    },
    "653": {
      "op": "intc_1 // 0",
      "stack_out": [
        "is_true%1#0",
        "0x00",
        "0"
      ]
    },
    "654": {
      "op": "uncover 2",
      "stack_out": [
        "0x00",
        "0",
        "is_true%1#0"
      ]
    },
    "656": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%1#0"
      ],
      "stack_out": [
        "encoded_bool%1#0"
      ]
    },
    "657": {
      "op": "frame_dig -1",
      "stack_out": [
        "encoded_bool%1#0",
        "game_state#0 (copy)"
      ]
    },
    "659": {
      "error": "Index access is out of bounds",
      "op": "extract 8 8 // on error: Index access is out of bounds",
      "defined_out": [
        "encoded_bool%1#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "encoded_bool%1#0",
        "tmp%5#0"
      ]
    },
    "662": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%2#0"
      ]
    },
    "663": {
      "op": "pushbytes 0xf1f3294a // method \"game_live(bool,uint64)\"",
      "defined_out": [
        "Method(game_live(bool,uint64))",
        "encoded_tuple_buffer%2#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%2#0",
        "Method(game_live(bool,uint64))"
      ]
    },
    "669": {
      "op": "swap",
      "stack_out": [
        "Method(game_live(bool,uint64))",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "670": {
      "op": "concat",
      "defined_out": [
        "event%0#0"
      ],
      "stack_out": [
        "event%0#0"
      ]
    },
    "671": {
      "op": "log",
      "stack_out": []
    },
    "672": {
      "op": "pushbytes 0x80",
      "defined_out": [
        "0x80"
      ],
      "stack_out": [
        "0x80"
      ]
    },
    "675": {
      "op": "frame_dig -1",
      "stack_out": [
        "0x80",
        "game_state#0 (copy)"
      ]
    },
    "677": {
      "retsub": true,
      "op": "retsub"
    },
    "678": {
      "block": "is_game_live_else_body@7",
      "stack_in": [],
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x00"
      ],
      "stack_out": [
        "0x00"
      ]
    },
    "679": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x00",
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "0x00",
        "game_state#0 (copy)"
      ]
    },
    "681": {
      "retsub": true,
      "op": "retsub"
    },
    "682": {
      "subroutine": "smart_contracts.pieout.contract.Pieout.calc_single_box_fee",
      "params": {
        "key_size#0": "bytes",
        "value_size#0": "bytes"
      },
      "block": "calc_single_box_fee",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "685": {
      "op": "frame_dig -2",
      "defined_out": [
        "key_size#0 (copy)"
      ],
      "stack_out": [
        "key_size#0 (copy)"
      ]
    },
    "687": {
      "op": "btoi",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "688": {
      "op": "frame_dig -1",
      "defined_out": [
        "tmp%1#0",
        "value_size#0 (copy)"
      ],
      "stack_out": [
        "tmp%1#0",
        "value_size#0 (copy)"
      ]
    },
    "690": {
      "op": "btoi",
      "defined_out": [
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "691": {
      "op": "+",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "692": {
      "op": "pushint 400 // 400",
      "defined_out": [
        "400",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "400"
      ]
    },
    "695": {
      "op": "*",
      "defined_out": [
        "size_fee#0"
      ],
      "stack_out": [
        "size_fee#0"
      ]
    },
    "696": {
      "op": "pushint 2500 // 2500",
      "defined_out": [
        "2500",
        "size_fee#0"
      ],
      "stack_out": [
        "size_fee#0",
        "2500"
      ]
    },
    "699": {
      "op": "+",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "700": {
      "retsub": true,
      "op": "retsub"
    },
    "701": {
      "subroutine": "smart_contracts.pieout.contract.Pieout.read_game_state",
      "params": {
        "game_id#0": "uint64"
      },
      "block": "read_game_state",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "704": {
      "op": "frame_dig -1",
      "defined_out": [
        "game_id#0 (copy)"
      ],
      "stack_out": [
        "game_id#0 (copy)"
      ]
    },
    "706": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "707": {
      "op": "bytec_3 // \"s_\"",
      "defined_out": [
        "\"s_\"",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "\"s_\""
      ]
    },
    "708": {
      "op": "dig 1",
      "defined_out": [
        "\"s_\"",
        "encoded_value%0#0",
        "encoded_value%0#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "\"s_\"",
        "encoded_value%0#0 (copy)"
      ]
    },
    "710": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "711": {
      "op": "box_get",
      "defined_out": [
        "encoded_value%0#0",
        "game_state#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "maybe_exists%0#0"
      ]
    },
    "712": {
      "error": "check self.box_game_state entry exists",
      "op": "assert // check self.box_game_state entry exists",
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0"
      ]
    },
    "713": {
      "op": "dup",
      "defined_out": [
        "encoded_value%0#0",
        "game_state#0",
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "714": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "game_state#0 (copy)",
        "0"
      ]
    },
    "715": {
      "op": "getbit",
      "defined_out": [
        "encoded_value%0#0",
        "game_state#0",
        "is_true%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "is_true%0#0"
      ]
    },
    "716": {
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x00",
        "encoded_value%0#0",
        "game_state#0",
        "is_true%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "is_true%0#0",
        "0x00"
      ]
    },
    "717": {
      "op": "intc_1 // 0",
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "is_true%0#0",
        "0x00",
        "0"
      ]
    },
    "718": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "0x00",
        "0",
        "is_true%0#0"
      ]
    },
    "720": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "game_state#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "encoded_bool%0#0"
      ]
    },
    "721": {
      "op": "dig 1",
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "encoded_bool%0#0",
        "game_state#0 (copy)"
      ]
    },
    "723": {
      "error": "Index access is out of bounds",
      "op": "extract 1 1 // on error: Index access is out of bounds",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "encoded_bool%0#0",
        "tmp%0#0"
      ]
    },
    "726": {
      "op": "dig 2",
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "encoded_bool%0#0",
        "tmp%0#0",
        "game_state#0 (copy)"
      ]
    },
    "728": {
      "error": "Index access is out of bounds",
      "op": "extract 2 1 // on error: Index access is out of bounds",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "encoded_bool%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "731": {
      "op": "dig 3",
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "encoded_bool%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "game_state#0 (copy)"
      ]
    },
    "733": {
      "error": "Index access is out of bounds",
      "op": "extract 3 1 // on error: Index access is out of bounds",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "encoded_bool%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "736": {
      "op": "dig 4",
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "encoded_bool%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "game_state#0 (copy)"
      ]
    },
    "738": {
      "error": "Index access is out of bounds",
      "op": "extract 4 1 // on error: Index access is out of bounds",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "encoded_bool%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "741": {
      "op": "dig 5",
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "encoded_bool%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "game_state#0 (copy)"
      ]
    },
    "743": {
      "error": "Index access is out of bounds",
      "op": "extract 5 1 // on error: Index access is out of bounds",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "encoded_bool%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "746": {
      "op": "dig 6",
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "encoded_bool%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "game_state#0 (copy)"
      ]
    },
    "748": {
      "error": "Index access is out of bounds",
      "op": "extract 6 2 // on error: Index access is out of bounds",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "encoded_bool%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "751": {
      "op": "dig 7",
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "encoded_bool%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "game_state#0 (copy)"
      ]
    },
    "753": {
      "error": "Index access is out of bounds",
      "op": "extract 8 8 // on error: Index access is out of bounds",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "encoded_bool%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0"
      ]
    },
    "756": {
      "op": "dig 8",
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "encoded_bool%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "game_state#0 (copy)"
      ]
    },
    "758": {
      "error": "Index access is out of bounds",
      "op": "extract 16 8 // on error: Index access is out of bounds",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "encoded_bool%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "761": {
      "op": "dig 9",
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "encoded_bool%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "game_state#0 (copy)"
      ]
    },
    "763": {
      "error": "Index access is out of bounds",
      "op": "extract 24 32 // on error: Index access is out of bounds",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "encoded_bool%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "766": {
      "op": "dig 10",
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "encoded_bool%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "game_state#0 (copy)"
      ]
    },
    "768": {
      "error": "Index access is out of bounds",
      "op": "extract 56 32 // on error: Index access is out of bounds",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "encoded_bool%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "771": {
      "op": "dig 11",
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "encoded_bool%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "game_state#0 (copy)"
      ]
    },
    "773": {
      "error": "Index access is out of bounds",
      "op": "extract 88 32 // on error: Index access is out of bounds",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%10#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "encoded_bool%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0"
      ]
    },
    "776": {
      "op": "uncover 12",
      "stack_out": [
        "encoded_value%0#0",
        "encoded_bool%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "game_state#0"
      ]
    },
    "778": {
      "error": "Index access is out of bounds",
      "op": "extract 120 32 // on error: Index access is out of bounds",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "encoded_bool%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0"
      ]
    },
    "781": {
      "op": "uncover 13",
      "stack_out": [
        "encoded_bool%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded_value%0#0"
      ]
    },
    "783": {
      "op": "uncover 13",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded_value%0#0",
        "encoded_bool%0#0"
      ]
    },
    "785": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "786": {
      "op": "uncover 12",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded_tuple_buffer%2#0",
        "tmp%0#0"
      ]
    },
    "788": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "tmp%1#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "789": {
      "op": "uncover 11",
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded_tuple_buffer%3#0",
        "tmp%1#0"
      ]
    },
    "791": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%4#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "792": {
      "op": "uncover 10",
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded_tuple_buffer%4#0",
        "tmp%2#0"
      ]
    },
    "794": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%5#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "795": {
      "op": "uncover 9",
      "stack_out": [
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded_tuple_buffer%5#0",
        "tmp%3#0"
      ]
    },
    "797": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%6#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "798": {
      "op": "uncover 8",
      "stack_out": [
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded_tuple_buffer%6#0",
        "tmp%4#0"
      ]
    },
    "800": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%7#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded_tuple_buffer%7#0"
      ]
    },
    "801": {
      "op": "uncover 7",
      "stack_out": [
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded_tuple_buffer%7#0",
        "tmp%5#0"
      ]
    },
    "803": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%8#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded_tuple_buffer%8#0"
      ]
    },
    "804": {
      "op": "uncover 6",
      "stack_out": [
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded_tuple_buffer%8#0",
        "tmp%6#0"
      ]
    },
    "806": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded_tuple_buffer%9#0"
      ]
    },
    "807": {
      "op": "uncover 5",
      "stack_out": [
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded_tuple_buffer%9#0",
        "tmp%7#0"
      ]
    },
    "809": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%10#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded_tuple_buffer%10#0"
      ]
    },
    "810": {
      "op": "uncover 4",
      "stack_out": [
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded_tuple_buffer%10#0",
        "tmp%8#0"
      ]
    },
    "812": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%11#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded_tuple_buffer%11#0"
      ]
    },
    "813": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%10#0",
        "tmp%11#0",
        "encoded_tuple_buffer%11#0",
        "tmp%9#0"
      ]
    },
    "815": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%12#0",
        "tmp%10#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "tmp%11#0",
        "encoded_tuple_buffer%12#0"
      ]
    },
    "816": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "encoded_tuple_buffer%12#0",
        "tmp%10#0"
      ]
    },
    "818": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%13#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "encoded_tuple_buffer%13#0"
      ]
    },
    "819": {
      "op": "swap",
      "stack_out": [
        "encoded_tuple_buffer%13#0",
        "tmp%11#0"
      ]
    },
    "820": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%14#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%14#0"
      ]
    },
    "821": {
      "retsub": true,
      "op": "retsub"
    },
    "822": {
      "subroutine": "smart_contracts.pieout.contract.Pieout.read_game_players",
      "params": {
        "game_id#0": "uint64"
      },
      "block": "read_game_players",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "825": {
      "op": "intc_1 // 0",
      "stack_out": [
        "player_addr_bytes#0"
      ]
    },
    "826": {
      "op": "dup",
      "stack_out": [
        "player_addr_bytes#0",
        "players#9"
      ]
    },
    "827": {
      "op": "frame_dig -1",
      "defined_out": [
        "game_id#0 (copy)"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_id#0 (copy)"
      ]
    },
    "829": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "encoded_value%0#0"
      ]
    },
    "830": {
      "op": "bytec_1 // \"p_\"",
      "defined_out": [
        "\"p_\"",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "encoded_value%0#0",
        "\"p_\""
      ]
    },
    "831": {
      "op": "swap",
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "\"p_\"",
        "encoded_value%0#0"
      ]
    },
    "832": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "box_prefixed_key%0#0"
      ]
    },
    "833": {
      "op": "box_get",
      "defined_out": [
        "game_players#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "maybe_exists%0#0"
      ]
    },
    "834": {
      "op": "swap",
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "maybe_exists%0#0",
        "game_players#0"
      ]
    },
    "835": {
      "op": "dup",
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "maybe_exists%0#0",
        "game_players#0",
        "game_players#0 (copy)"
      ]
    },
    "836": {
      "op": "uncover 2",
      "defined_out": [
        "game_players#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "game_players#0",
        "maybe_exists%0#0"
      ]
    },
    "838": {
      "error": "check self.box_game_players entry exists",
      "op": "assert // check self.box_game_players entry exists",
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "game_players#0"
      ]
    },
    "839": {
      "op": "pushbytes 0x0000",
      "defined_out": [
        "game_players#0",
        "players#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "game_players#0",
        "players#0"
      ]
    },
    "843": {
      "op": "swap",
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "game_players#0"
      ]
    },
    "844": {
      "op": "len",
      "defined_out": [
        "game_players#0",
        "players#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0"
      ]
    },
    "845": {
      "op": "intc_1 // 0",
      "defined_out": [
        "game_players#0",
        "i#0",
        "players#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0"
      ]
    },
    "846": {
      "block": "read_game_players_for_header@1",
      "stack_in": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "i#0"
      ]
    },
    "848": {
      "op": "frame_dig 4",
      "defined_out": [
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "i#0",
        "tmp%0#0"
      ]
    },
    "850": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "851": {
      "op": "bz read_game_players_after_for@6",
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0"
      ]
    },
    "854": {
      "op": "frame_dig 2",
      "defined_out": [
        "game_players#0",
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "game_players#0"
      ]
    },
    "856": {
      "op": "frame_dig 5",
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "game_players#0",
        "i#0"
      ]
    },
    "858": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "game_players#0",
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "game_players#0",
        "i#0",
        "32"
      ]
    },
    "859": {
      "op": "extract3",
      "defined_out": [
        "game_players#0",
        "i#0",
        "player_addr_bytes#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "player_addr_bytes#0"
      ]
    },
    "860": {
      "op": "dup",
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "player_addr_bytes#0",
        "player_addr_bytes#0"
      ]
    },
    "861": {
      "op": "frame_bury 0",
      "defined_out": [
        "game_players#0",
        "i#0",
        "player_addr_bytes#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "player_addr_bytes#0"
      ]
    },
    "863": {
      "op": "bytec 10 // 0x0000000000000000000000000000000000000000000000000000000000000000",
      "defined_out": [
        "0x0000000000000000000000000000000000000000000000000000000000000000",
        "game_players#0",
        "i#0",
        "player_addr_bytes#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "player_addr_bytes#0",
        "0x0000000000000000000000000000000000000000000000000000000000000000"
      ]
    },
    "865": {
      "op": "!=",
      "defined_out": [
        "game_players#0",
        "i#0",
        "player_addr_bytes#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "tmp%1#0"
      ]
    },
    "866": {
      "op": "frame_dig 3",
      "defined_out": [
        "game_players#0",
        "i#0",
        "player_addr_bytes#0",
        "players#9",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "tmp%1#0",
        "players#9"
      ]
    },
    "868": {
      "op": "frame_bury 1",
      "defined_out": [
        "game_players#0",
        "i#0",
        "player_addr_bytes#0",
        "players#9",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "tmp%1#0"
      ]
    },
    "870": {
      "op": "bz read_game_players_after_if_else@4",
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0"
      ]
    },
    "873": {
      "op": "frame_dig 3",
      "defined_out": [
        "game_players#0",
        "i#0",
        "player_addr_bytes#0",
        "players#0",
        "players#9",
        "tmp%0#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "players#0"
      ]
    },
    "875": {
      "op": "extract 2 0",
      "defined_out": [
        "expr_value_trimmed%0#0",
        "game_players#0",
        "i#0",
        "player_addr_bytes#0",
        "players#0",
        "players#9",
        "tmp%0#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "expr_value_trimmed%0#0"
      ]
    },
    "878": {
      "op": "frame_dig 0",
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "player_addr_bytes#0"
      ]
    },
    "880": {
      "op": "concat",
      "defined_out": [
        "concatenated%0#0",
        "game_players#0",
        "i#0",
        "player_addr_bytes#0",
        "players#0",
        "players#9",
        "tmp%0#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "concatenated%0#0"
      ]
    },
    "881": {
      "op": "dup",
      "defined_out": [
        "concatenated%0#0",
        "concatenated%0#0 (copy)",
        "game_players#0",
        "i#0",
        "player_addr_bytes#0",
        "players#0",
        "players#9",
        "tmp%0#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "concatenated%0#0",
        "concatenated%0#0 (copy)"
      ]
    },
    "882": {
      "op": "len",
      "defined_out": [
        "byte_len%0#0",
        "concatenated%0#0",
        "game_players#0",
        "i#0",
        "player_addr_bytes#0",
        "players#0",
        "players#9",
        "tmp%0#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "concatenated%0#0",
        "byte_len%0#0"
      ]
    },
    "883": {
      "op": "intc_3 // 32",
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "concatenated%0#0",
        "byte_len%0#0",
        "32"
      ]
    },
    "884": {
      "op": "/",
      "defined_out": [
        "concatenated%0#0",
        "game_players#0",
        "i#0",
        "len_%0#0",
        "player_addr_bytes#0",
        "players#0",
        "players#9",
        "tmp%0#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "concatenated%0#0",
        "len_%0#0"
      ]
    },
    "885": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "concatenated%0#0",
        "game_players#0",
        "i#0",
        "player_addr_bytes#0",
        "players#0",
        "players#9",
        "tmp%0#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "concatenated%0#0",
        "as_bytes%0#0"
      ]
    },
    "886": {
      "op": "extract 6 2",
      "defined_out": [
        "concatenated%0#0",
        "game_players#0",
        "i#0",
        "len_16_bit%0#0",
        "player_addr_bytes#0",
        "players#0",
        "players#9",
        "tmp%0#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "concatenated%0#0",
        "len_16_bit%0#0"
      ]
    },
    "889": {
      "op": "swap",
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "len_16_bit%0#0",
        "concatenated%0#0"
      ]
    },
    "890": {
      "op": "concat",
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "players#9"
      ]
    },
    "891": {
      "op": "frame_bury 1",
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0"
      ]
    },
    "893": {
      "block": "read_game_players_after_if_else@4",
      "stack_in": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "players#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "players#0"
      ]
    },
    "895": {
      "op": "frame_bury 3",
      "defined_out": [
        "players#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0"
      ]
    },
    "897": {
      "op": "frame_dig 5",
      "defined_out": [
        "i#0",
        "players#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "i#0"
      ]
    },
    "899": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "i#0",
        "players#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "i#0",
        "32"
      ]
    },
    "900": {
      "op": "+",
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "i#0"
      ]
    },
    "901": {
      "op": "frame_bury 5",
      "defined_out": [
        "i#0",
        "players#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0"
      ]
    },
    "903": {
      "op": "b read_game_players_for_header@1"
    },
    "906": {
      "block": "read_game_players_after_for@6",
      "stack_in": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "players#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "players#0"
      ]
    },
    "908": {
      "op": "frame_bury 0"
    },
    "910": {
      "retsub": true,
      "op": "retsub"
    },
    "911": {
      "subroutine": "smart_contracts.pieout.contract.Pieout.generate",
      "params": {},
      "block": "generate",
      "stack_in": [],
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "913": {
      "op": "global CreatorAddress",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "915": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "916": {
      "error": "Transaction sender address must match application creator address.",
      "op": "assert // Transaction sender address must match application creator address.",
      "stack_out": []
    },
    "917": {
      "op": "bytec 7 // \"game_id\"",
      "defined_out": [
        "\"game_id\""
      ],
      "stack_out": [
        "\"game_id\""
      ]
    },
    "919": {
      "op": "intc_1 // 0",
      "defined_out": [
        "\"game_id\"",
        "0"
      ],
      "stack_out": [
        "\"game_id\"",
        "0"
      ]
    },
    "920": {
      "op": "app_global_put",
      "stack_out": []
    },
    "921": {
      "op": "bytec 6 // \"commit_rand_salt_id\"",
      "defined_out": [
        "\"commit_rand_salt_id\""
      ],
      "stack_out": [
        "\"commit_rand_salt_id\""
      ]
    },
    "923": {
      "op": "intc_1 // 0",
      "stack_out": [
        "\"commit_rand_salt_id\"",
        "0"
      ]
    },
    "924": {
      "op": "app_global_put",
      "stack_out": []
    },
    "925": {
      "op": "bytec 8 // \"ath_score\"",
      "defined_out": [
        "\"ath_score\""
      ],
      "stack_out": [
        "\"ath_score\""
      ]
    },
    "927": {
      "op": "intc_1 // 0",
      "stack_out": [
        "\"ath_score\"",
        "0"
      ]
    },
    "928": {
      "op": "app_global_put",
      "stack_out": []
    },
    "929": {
      "op": "bytec 9 // \"ath_address\"",
      "defined_out": [
        "\"ath_address\""
      ],
      "stack_out": [
        "\"ath_address\""
      ]
    },
    "931": {
      "op": "global ZeroAddress",
      "defined_out": [
        "\"ath_address\"",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "\"ath_address\"",
        "materialized_values%0#0"
      ]
    },
    "933": {
      "op": "app_global_put",
      "stack_out": []
    },
    "934": {
      "retsub": true,
      "op": "retsub"
    },
    "935": {
      "subroutine": "smart_contracts.pieout.contract.Pieout.mint_trophy",
      "params": {
        "box_t_pay#0": "uint64",
        "mint_pay#0": "uint64"
      },
      "block": "mint_trophy",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "938": {
      "op": "frame_dig -2",
      "defined_out": [
        "box_t_pay#0 (copy)"
      ],
      "stack_out": [
        "box_t_pay#0 (copy)"
      ]
    },
    "940": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "942": {
      "op": "intc 4 // 19300",
      "defined_out": [
        "19300",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "19300"
      ]
    },
    "944": {
      "op": ">=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "945": {
      "error": "Insufficient funds. Box pay amount is not enough to cover application MBR.",
      "op": "assert // Insufficient funds. Box pay amount is not enough to cover application MBR.",
      "stack_out": []
    },
    "946": {
      "op": "frame_dig -2",
      "stack_out": [
        "box_t_pay#0 (copy)"
      ]
    },
    "948": {
      "op": "gtxns Sender",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "950": {
      "op": "global CreatorAddress",
      "defined_out": [
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "952": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "953": {
      "error": "Box payment sender address must match transaction sender address.",
      "op": "assert // Box payment sender address must match transaction sender address.",
      "stack_out": []
    },
    "954": {
      "op": "frame_dig -2",
      "stack_out": [
        "box_t_pay#0 (copy)"
      ]
    },
    "956": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "958": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "tmp%6#0"
      ]
    },
    "960": {
      "op": "==",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "961": {
      "error": "Box payment receiver address must match application address.",
      "op": "assert // Box payment receiver address must match application address.",
      "stack_out": []
    },
    "962": {
      "op": "frame_dig -1",
      "defined_out": [
        "mint_pay#0 (copy)"
      ],
      "stack_out": [
        "mint_pay#0 (copy)"
      ]
    },
    "964": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "966": {
      "op": "global AssetCreateMinBalance",
      "defined_out": [
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "968": {
      "op": ">=",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "969": {
      "error": "Insufficient funds. Mint pay amount is not enough to cover application MBR.",
      "op": "assert // Insufficient funds. Mint pay amount is not enough to cover application MBR.",
      "stack_out": []
    },
    "970": {
      "op": "frame_dig -1",
      "stack_out": [
        "mint_pay#0 (copy)"
      ]
    },
    "972": {
      "op": "gtxns Sender",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "974": {
      "op": "global CreatorAddress",
      "defined_out": [
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%12#0"
      ]
    },
    "976": {
      "op": "==",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "977": {
      "error": "Mint payment sender address must match transaction sender address.",
      "op": "assert // Mint payment sender address must match transaction sender address.",
      "stack_out": []
    },
    "978": {
      "op": "frame_dig -1",
      "stack_out": [
        "mint_pay#0 (copy)"
      ]
    },
    "980": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "982": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%14#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%15#0"
      ]
    },
    "984": {
      "op": "==",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "985": {
      "error": "Mint payment receiver address must match application address.",
      "op": "assert // Mint payment receiver address must match application address.",
      "stack_out": []
    },
    "986": {
      "op": "itxn_begin"
    },
    "987": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0"
      ]
    },
    "989": {
      "op": "dupn 2",
      "defined_out": [
        "inner_txn_params%0%%param_ConfigAssetClawback_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetClawback_idx_0#0"
      ]
    },
    "991": {
      "op": "itxn_field ConfigAssetClawback",
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0"
      ]
    },
    "993": {
      "op": "itxn_field ConfigAssetFreeze",
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0"
      ]
    },
    "995": {
      "op": "itxn_field ConfigAssetManager",
      "stack_out": []
    },
    "997": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "998": {
      "op": "itxn_field ConfigAssetDefaultFrozen",
      "stack_out": []
    },
    "1000": {
      "op": "intc_1 // 0",
      "stack_out": [
        "0"
      ]
    },
    "1001": {
      "op": "itxn_field ConfigAssetDecimals",
      "stack_out": []
    },
    "1003": {
      "op": "pushbytes \"Gamename-ATH-Trophy\"",
      "defined_out": [
        "\"Gamename-ATH-Trophy\""
      ],
      "stack_out": [
        "\"Gamename-ATH-Trophy\""
      ]
    },
    "1024": {
      "op": "itxn_field ConfigAssetName",
      "stack_out": []
    },
    "1026": {
      "op": "pushbytes \"TRFY\"",
      "defined_out": [
        "\"TRFY\""
      ],
      "stack_out": [
        "\"TRFY\""
      ]
    },
    "1032": {
      "op": "itxn_field ConfigAssetUnitName",
      "stack_out": []
    },
    "1034": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1035": {
      "op": "itxn_field ConfigAssetTotal",
      "stack_out": []
    },
    "1037": {
      "op": "pushint 3 // acfg",
      "defined_out": [
        "acfg"
      ],
      "stack_out": [
        "acfg"
      ]
    },
    "1039": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "1041": {
      "op": "intc_1 // 0",
      "stack_out": [
        "0"
      ]
    },
    "1042": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1044": {
      "op": "itxn_submit"
    },
    "1045": {
      "op": "itxn CreatedAssetID",
      "defined_out": [
        "acfg_itxn.CreatedAssetID#0"
      ],
      "stack_out": [
        "acfg_itxn.CreatedAssetID#0"
      ]
    },
    "1047": {
      "op": "bytec_2 // 0x745f",
      "defined_out": [
        "0x745f",
        "acfg_itxn.CreatedAssetID#0"
      ],
      "stack_out": [
        "acfg_itxn.CreatedAssetID#0",
        "0x745f"
      ]
    },
    "1048": {
      "op": "pushint 40 // 40",
      "defined_out": [
        "0x745f",
        "40",
        "acfg_itxn.CreatedAssetID#0"
      ],
      "stack_out": [
        "acfg_itxn.CreatedAssetID#0",
        "0x745f",
        "40"
      ]
    },
    "1050": {
      "op": "box_create",
      "defined_out": [
        "acfg_itxn.CreatedAssetID#0",
        "{box_create}"
      ],
      "stack_out": [
        "acfg_itxn.CreatedAssetID#0",
        "{box_create}"
      ]
    },
    "1051": {
      "op": "pop",
      "stack_out": [
        "acfg_itxn.CreatedAssetID#0"
      ]
    },
    "1052": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "1053": {
      "op": "global ZeroAddress",
      "defined_out": [
        "tmp%17#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "tmp%17#0"
      ]
    },
    "1055": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%2#0"
      ]
    },
    "1056": {
      "op": "bytec_2 // 0x745f",
      "stack_out": [
        "encoded_tuple_buffer%2#0",
        "0x745f"
      ]
    },
    "1057": {
      "op": "dig 1",
      "defined_out": [
        "0x745f",
        "encoded_tuple_buffer%2#0",
        "encoded_tuple_buffer%2#0 (copy)"
      ],
      "stack_out": [
        "encoded_tuple_buffer%2#0",
        "0x745f",
        "encoded_tuple_buffer%2#0 (copy)"
      ]
    },
    "1059": {
      "op": "box_put",
      "stack_out": [
        "encoded_tuple_buffer%2#0"
      ]
    },
    "1060": {
      "error": "Index access is out of bounds",
      "op": "extract 8 32 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "1063": {
      "retsub": true,
      "op": "retsub"
    },
    "1064": {
      "subroutine": "smart_contracts.pieout.contract.Pieout.get_trophy",
      "params": {},
      "block": "get_trophy",
      "stack_in": [],
      "op": "global GroupSize",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1066": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "1"
      ]
    },
    "1067": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1068": {
      "error": "Invalid group size. This app call only appproves standalone transactions.",
      "op": "assert // Invalid group size. This app call only appproves standalone transactions.",
      "stack_out": []
    },
    "1069": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1071": {
      "op": "bytec_2 // 0x745f",
      "defined_out": [
        "0x745f",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "0x745f"
      ]
    },
    "1072": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1073": {
      "error": "check self.box_game_trophy exists",
      "op": "assert // check self.box_game_trophy exists",
      "stack_out": [
        "tmp%2#0",
        "maybe_value%0#0"
      ]
    },
    "1074": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "maybe_value%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "maybe_value%0#0",
        "0"
      ]
    },
    "1075": {
      "op": "extract_uint64",
      "defined_out": [
        "tmp%2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%4#0"
      ]
    },
    "1076": {
      "op": "swap",
      "stack_out": [
        "tmp%4#0",
        "tmp%2#0"
      ]
    },
    "1077": {
      "op": "dig 1",
      "defined_out": [
        "tmp%2#0",
        "tmp%4#0",
        "tmp%4#0 (copy)"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%2#0",
        "tmp%4#0 (copy)"
      ]
    },
    "1079": {
      "op": "asset_holding_get AssetBalance",
      "defined_out": [
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0"
      ]
    },
    "1081": {
      "op": "bury 1",
      "stack_out": [
        "tmp%4#0",
        "tmp%6#0"
      ]
    },
    "1083": {
      "error": "Sender needs to be opt-in to receieve trophy",
      "op": "assert // Sender needs to be opt-in to receieve trophy",
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "1084": {
      "op": "itxn_begin"
    },
    "1085": {
      "op": "txn Sender",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "1087": {
      "op": "intc_0 // 1",
      "stack_out": [
        "tmp%4#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "1"
      ]
    },
    "1088": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "tmp%4#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "1090": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "1092": {
      "op": "itxn_field XferAsset",
      "stack_out": []
    },
    "1094": {
      "op": "pushint 4 // axfer",
      "defined_out": [
        "axfer"
      ],
      "stack_out": [
        "axfer"
      ]
    },
    "1096": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "1098": {
      "op": "intc_1 // 0",
      "stack_out": [
        "0"
      ]
    },
    "1099": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1101": {
      "op": "itxn_submit"
    },
    "1102": {
      "retsub": true,
      "op": "retsub"
    },
    "1103": {
      "subroutine": "smart_contracts.pieout.contract.Pieout.new_game",
      "params": {
        "max_players#0": "uint64",
        "box_s_pay#0": "uint64",
        "box_p_pay#0": "uint64",
        "stake_pay#0": "uint64"
      },
      "block": "new_game",
      "stack_in": [],
      "op": "proto 4 0"
    },
    "1106": {
      "op": "frame_dig -4",
      "defined_out": [
        "max_players#0 (copy)"
      ],
      "stack_out": [
        "max_players#0 (copy)"
      ]
    },
    "1108": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "max_players#0 (copy)"
      ],
      "stack_out": [
        "max_players#0 (copy)",
        "10"
      ]
    },
    "1110": {
      "op": "<=",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1111": {
      "error": "Player cap overflow. Max players limit must not be exceeded.",
      "op": "assert // Player cap overflow. Max players limit must not be exceeded.",
      "stack_out": []
    },
    "1112": {
      "op": "frame_dig -1",
      "defined_out": [
        "stake_pay#0 (copy)"
      ],
      "stack_out": [
        "stake_pay#0 (copy)"
      ]
    },
    "1114": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1116": {
      "op": "dup",
      "defined_out": [
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ]
    },
    "1117": {
      "op": "intc 6 // 1000",
      "defined_out": [
        "1000",
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%1#0 (copy)",
        "1000"
      ]
    },
    "1119": {
      "op": ">=",
      "defined_out": [
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "1120": {
      "error": "Insufficient funds. Stake pay amount is not enough to cover application MBR.",
      "op": "assert // Insufficient funds. Stake pay amount is not enough to cover application MBR.",
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1121": {
      "op": "frame_dig -3",
      "defined_out": [
        "box_s_pay#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "box_s_pay#0 (copy)"
      ]
    },
    "1123": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%3#0"
      ]
    },
    "1125": {
      "op": "intc 10 // 67300",
      "defined_out": [
        "67300",
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%3#0",
        "67300"
      ]
    },
    "1127": {
      "op": ">=",
      "defined_out": [
        "tmp%1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%4#0"
      ]
    },
    "1128": {
      "error": "Insufficient funds. Box pay amount is not enough to cover application MBR.",
      "op": "assert // Insufficient funds. Box pay amount is not enough to cover application MBR.",
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1129": {
      "op": "frame_dig -2",
      "defined_out": [
        "box_p_pay#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "box_p_pay#0 (copy)"
      ]
    },
    "1131": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%1#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%5#0"
      ]
    },
    "1133": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "tmp%1#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%5#0",
        "32"
      ]
    },
    "1134": {
      "op": "frame_dig -4",
      "stack_out": [
        "tmp%1#0",
        "tmp%5#0",
        "32",
        "max_players#0 (copy)"
      ]
    },
    "1136": {
      "op": "*",
      "defined_out": [
        "tmp%1#0",
        "tmp%5#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%5#0",
        "to_encode%0#0"
      ]
    },
    "1137": {
      "op": "dup",
      "defined_out": [
        "tmp%1#0",
        "tmp%5#0",
        "to_encode%0#0",
        "to_encode%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%5#0",
        "to_encode%0#0",
        "to_encode%0#0 (copy)"
      ]
    },
    "1138": {
      "op": "itob",
      "defined_out": [
        "tmp%1#0",
        "tmp%5#0",
        "to_encode%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%5#0",
        "to_encode%0#0",
        "val_as_bytes%0#0"
      ]
    },
    "1139": {
      "op": "dup",
      "defined_out": [
        "tmp%1#0",
        "tmp%5#0",
        "to_encode%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%5#0",
        "to_encode%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%0#0 (copy)"
      ]
    },
    "1140": {
      "op": "bitlen",
      "defined_out": [
        "bitlen%0#0",
        "tmp%1#0",
        "tmp%5#0",
        "to_encode%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%5#0",
        "to_encode%0#0",
        "val_as_bytes%0#0",
        "bitlen%0#0"
      ]
    },
    "1141": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "bitlen%0#0",
        "tmp%1#0",
        "tmp%5#0",
        "to_encode%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%5#0",
        "to_encode%0#0",
        "val_as_bytes%0#0",
        "bitlen%0#0",
        "16"
      ]
    },
    "1143": {
      "op": "<=",
      "defined_out": [
        "no_overflow%0#0",
        "tmp%1#0",
        "tmp%5#0",
        "to_encode%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%5#0",
        "to_encode%0#0",
        "val_as_bytes%0#0",
        "no_overflow%0#0"
      ]
    },
    "1144": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "tmp%1#0",
        "tmp%5#0",
        "to_encode%0#0",
        "val_as_bytes%0#0"
      ]
    },
    "1145": {
      "op": "extract 6 2",
      "defined_out": [
        "tmp%1#0",
        "tmp%5#0",
        "to_encode%0#0",
        "uint16%0#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%5#0",
        "to_encode%0#0",
        "uint16%0#0"
      ]
    },
    "1148": {
      "op": "pushbytes 0x0a",
      "defined_out": [
        "0x0a",
        "tmp%1#0",
        "tmp%5#0",
        "to_encode%0#0",
        "uint16%0#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%5#0",
        "to_encode%0#0",
        "uint16%0#0",
        "0x0a"
      ]
    },
    "1151": {
      "op": "swap",
      "stack_out": [
        "tmp%1#0",
        "tmp%5#0",
        "to_encode%0#0",
        "0x0a",
        "uint16%0#0"
      ]
    },
    "1152": {
      "callsub": "smart_contracts.pieout.contract.Pieout.calc_single_box_fee",
      "op": "callsub calc_single_box_fee",
      "defined_out": [
        "tmp%1#0",
        "tmp%5#0",
        "tmp%6#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%5#0",
        "to_encode%0#0",
        "tmp%6#0"
      ]
    },
    "1155": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%1#0",
        "to_encode%0#0",
        "tmp%6#0",
        "tmp%5#0"
      ]
    },
    "1157": {
      "op": "<=",
      "defined_out": [
        "tmp%1#0",
        "tmp%7#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "to_encode%0#0",
        "tmp%7#0"
      ]
    },
    "1158": {
      "error": "Insufficient funds. Box pay amount is not enough to cover application MBR.",
      "op": "assert // Insufficient funds. Box pay amount is not enough to cover application MBR.",
      "stack_out": [
        "tmp%1#0",
        "to_encode%0#0"
      ]
    },
    "1159": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%1#0",
        "to_encode%0#0",
        "stake_pay#0 (copy)"
      ]
    },
    "1161": {
      "op": "gtxns Sender",
      "defined_out": [
        "tmp%1#0",
        "tmp%8#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "to_encode%0#0",
        "tmp%8#0"
      ]
    },
    "1163": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "to_encode%0#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "1165": {
      "op": "==",
      "defined_out": [
        "tmp%1#0",
        "tmp%10#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "to_encode%0#0",
        "tmp%10#0"
      ]
    },
    "1166": {
      "error": "Stake payment sender address must match transaction sender address.",
      "op": "assert // Stake payment sender address must match transaction sender address.",
      "stack_out": [
        "tmp%1#0",
        "to_encode%0#0"
      ]
    },
    "1167": {
      "op": "frame_dig -3",
      "stack_out": [
        "tmp%1#0",
        "to_encode%0#0",
        "box_s_pay#0 (copy)"
      ]
    },
    "1169": {
      "op": "gtxns Sender",
      "defined_out": [
        "tmp%1#0",
        "tmp%11#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "to_encode%0#0",
        "tmp%11#0"
      ]
    },
    "1171": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%1#0",
        "tmp%11#0",
        "tmp%12#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "to_encode%0#0",
        "tmp%11#0",
        "tmp%12#0"
      ]
    },
    "1173": {
      "op": "==",
      "defined_out": [
        "tmp%1#0",
        "tmp%13#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "to_encode%0#0",
        "tmp%13#0"
      ]
    },
    "1174": {
      "error": "Box payment sender address must match transaction sender address.",
      "op": "assert // Box payment sender address must match transaction sender address.",
      "stack_out": [
        "tmp%1#0",
        "to_encode%0#0"
      ]
    },
    "1175": {
      "op": "frame_dig -2",
      "stack_out": [
        "tmp%1#0",
        "to_encode%0#0",
        "box_p_pay#0 (copy)"
      ]
    },
    "1177": {
      "op": "gtxns Sender",
      "defined_out": [
        "tmp%1#0",
        "tmp%14#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "to_encode%0#0",
        "tmp%14#0"
      ]
    },
    "1179": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%1#0",
        "tmp%14#0",
        "tmp%15#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "to_encode%0#0",
        "tmp%14#0",
        "tmp%15#0"
      ]
    },
    "1181": {
      "op": "==",
      "defined_out": [
        "tmp%1#0",
        "tmp%16#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "to_encode%0#0",
        "tmp%16#0"
      ]
    },
    "1182": {
      "error": "Box payment sender address must match transaction sender address.",
      "op": "assert // Box payment sender address must match transaction sender address.",
      "stack_out": [
        "tmp%1#0",
        "to_encode%0#0"
      ]
    },
    "1183": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%1#0",
        "to_encode%0#0",
        "stake_pay#0 (copy)"
      ]
    },
    "1185": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%1#0",
        "tmp%17#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "to_encode%0#0",
        "tmp%17#0"
      ]
    },
    "1187": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%1#0",
        "tmp%17#0",
        "tmp%18#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "to_encode%0#0",
        "tmp%17#0",
        "tmp%18#0"
      ]
    },
    "1189": {
      "op": "==",
      "defined_out": [
        "tmp%1#0",
        "tmp%19#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "to_encode%0#0",
        "tmp%19#0"
      ]
    },
    "1190": {
      "error": "Stake payment receiver address must match application address.",
      "op": "assert // Stake payment receiver address must match application address.",
      "stack_out": [
        "tmp%1#0",
        "to_encode%0#0"
      ]
    },
    "1191": {
      "op": "frame_dig -3",
      "stack_out": [
        "tmp%1#0",
        "to_encode%0#0",
        "box_s_pay#0 (copy)"
      ]
    },
    "1193": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%1#0",
        "tmp%20#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "to_encode%0#0",
        "tmp%20#0"
      ]
    },
    "1195": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%1#0",
        "tmp%20#0",
        "tmp%21#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "to_encode%0#0",
        "tmp%20#0",
        "tmp%21#0"
      ]
    },
    "1197": {
      "op": "==",
      "defined_out": [
        "tmp%1#0",
        "tmp%22#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "to_encode%0#0",
        "tmp%22#0"
      ]
    },
    "1198": {
      "error": "Box payment receiver address must match application address.",
      "op": "assert // Box payment receiver address must match application address.",
      "stack_out": [
        "tmp%1#0",
        "to_encode%0#0"
      ]
    },
    "1199": {
      "op": "frame_dig -2",
      "stack_out": [
        "tmp%1#0",
        "to_encode%0#0",
        "box_p_pay#0 (copy)"
      ]
    },
    "1201": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%1#0",
        "tmp%23#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "to_encode%0#0",
        "tmp%23#0"
      ]
    },
    "1203": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%1#0",
        "tmp%23#0",
        "tmp%24#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "to_encode%0#0",
        "tmp%23#0",
        "tmp%24#0"
      ]
    },
    "1205": {
      "op": "==",
      "defined_out": [
        "tmp%1#0",
        "tmp%25#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "to_encode%0#0",
        "tmp%25#0"
      ]
    },
    "1206": {
      "error": "Box payment receiver address must match application address.",
      "op": "assert // Box payment receiver address must match application address.",
      "stack_out": [
        "tmp%1#0",
        "to_encode%0#0"
      ]
    },
    "1207": {
      "op": "frame_dig -4",
      "stack_out": [
        "tmp%1#0",
        "to_encode%0#0",
        "max_players#0 (copy)"
      ]
    },
    "1209": {
      "op": "itob",
      "defined_out": [
        "tmp%1#0",
        "to_encode%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "to_encode%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "1210": {
      "op": "dup",
      "defined_out": [
        "tmp%1#0",
        "to_encode%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%1#0 (copy)"
      ],
      "stack_out": [
        "tmp%1#0",
        "to_encode%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%1#0 (copy)"
      ]
    },
    "1211": {
      "op": "bitlen",
      "defined_out": [
        "bitlen%1#0",
        "tmp%1#0",
        "to_encode%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "to_encode%0#0",
        "val_as_bytes%1#0",
        "bitlen%1#0"
      ]
    },
    "1212": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "bitlen%1#0",
        "tmp%1#0",
        "to_encode%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "to_encode%0#0",
        "val_as_bytes%1#0",
        "bitlen%1#0",
        "8"
      ]
    },
    "1214": {
      "op": "<=",
      "defined_out": [
        "no_overflow%1#0",
        "tmp%1#0",
        "to_encode%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "to_encode%0#0",
        "val_as_bytes%1#0",
        "no_overflow%1#0"
      ]
    },
    "1215": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "tmp%1#0",
        "to_encode%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "1216": {
      "op": "extract 7 1",
      "defined_out": [
        "tmp%1#0",
        "to_encode%0#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "to_encode%0#0",
        "uint8%0#0"
      ]
    },
    "1219": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "tmp%1#0",
        "tmp%26#0",
        "to_encode%0#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "to_encode%0#0",
        "uint8%0#0",
        "tmp%26#0"
      ]
    },
    "1221": {
      "op": "intc 5 // 3600",
      "defined_out": [
        "3600",
        "tmp%1#0",
        "tmp%26#0",
        "to_encode%0#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "to_encode%0#0",
        "uint8%0#0",
        "tmp%26#0",
        "3600"
      ]
    },
    "1223": {
      "op": "+",
      "defined_out": [
        "tmp%1#0",
        "to_encode%0#0",
        "to_encode%1#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "to_encode%0#0",
        "uint8%0#0",
        "to_encode%1#0"
      ]
    },
    "1224": {
      "op": "itob",
      "defined_out": [
        "tmp%1#0",
        "to_encode%0#0",
        "uint8%0#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "to_encode%0#0",
        "uint8%0#0",
        "val_as_bytes%2#0"
      ]
    },
    "1225": {
      "op": "uncover 3",
      "stack_out": [
        "to_encode%0#0",
        "uint8%0#0",
        "val_as_bytes%2#0",
        "tmp%1#0"
      ]
    },
    "1227": {
      "op": "itob",
      "defined_out": [
        "to_encode%0#0",
        "uint8%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "uint8%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ]
    },
    "1228": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%27#0",
        "to_encode%0#0",
        "uint8%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "uint8%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "tmp%27#0"
      ]
    },
    "1230": {
      "op": "global ZeroAddress",
      "defined_out": [
        "tmp%27#0",
        "tmp%28#0",
        "to_encode%0#0",
        "uint8%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "uint8%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "tmp%27#0",
        "tmp%28#0"
      ]
    },
    "1232": {
      "op": "dupn 2",
      "defined_out": [
        "tmp%27#0",
        "tmp%28#0",
        "tmp%29#0",
        "tmp%30#0",
        "to_encode%0#0",
        "uint8%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "uint8%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "tmp%27#0",
        "tmp%28#0",
        "tmp%29#0",
        "tmp%30#0"
      ]
    },
    "1234": {
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x00",
        "tmp%27#0",
        "tmp%28#0",
        "tmp%29#0",
        "tmp%30#0",
        "to_encode%0#0",
        "uint8%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "uint8%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "tmp%27#0",
        "tmp%28#0",
        "tmp%29#0",
        "tmp%30#0",
        "0x00"
      ]
    },
    "1235": {
      "op": "uncover 7",
      "stack_out": [
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "tmp%27#0",
        "tmp%28#0",
        "tmp%29#0",
        "tmp%30#0",
        "0x00",
        "uint8%0#0"
      ]
    },
    "1237": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "tmp%27#0",
        "tmp%28#0",
        "tmp%29#0",
        "tmp%30#0",
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "tmp%27#0",
        "tmp%28#0",
        "tmp%29#0",
        "tmp%30#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "1238": {
      "op": "pushbytes 0x01",
      "defined_out": [
        "0x01",
        "encoded_tuple_buffer%2#0",
        "tmp%27#0",
        "tmp%28#0",
        "tmp%29#0",
        "tmp%30#0",
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "tmp%27#0",
        "tmp%28#0",
        "tmp%29#0",
        "tmp%30#0",
        "encoded_tuple_buffer%2#0",
        "0x01"
      ]
    },
    "1241": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "tmp%27#0",
        "tmp%28#0",
        "tmp%29#0",
        "tmp%30#0",
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "tmp%27#0",
        "tmp%28#0",
        "tmp%29#0",
        "tmp%30#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "1242": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "tmp%27#0",
        "tmp%28#0",
        "tmp%29#0",
        "tmp%30#0",
        "encoded_tuple_buffer%3#0",
        "0x00"
      ]
    },
    "1243": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%4#0",
        "tmp%27#0",
        "tmp%28#0",
        "tmp%29#0",
        "tmp%30#0",
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "tmp%27#0",
        "tmp%28#0",
        "tmp%29#0",
        "tmp%30#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "1244": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "tmp%27#0",
        "tmp%28#0",
        "tmp%29#0",
        "tmp%30#0",
        "encoded_tuple_buffer%4#0",
        "0x00"
      ]
    },
    "1245": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%5#0",
        "tmp%27#0",
        "tmp%28#0",
        "tmp%29#0",
        "tmp%30#0",
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "tmp%27#0",
        "tmp%28#0",
        "tmp%29#0",
        "tmp%30#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "1246": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "tmp%27#0",
        "tmp%28#0",
        "tmp%29#0",
        "tmp%30#0",
        "encoded_tuple_buffer%5#0",
        "0x00"
      ]
    },
    "1247": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%6#0",
        "tmp%27#0",
        "tmp%28#0",
        "tmp%29#0",
        "tmp%30#0",
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "tmp%27#0",
        "tmp%28#0",
        "tmp%29#0",
        "tmp%30#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "1248": {
      "op": "bytec 11 // 0x0020",
      "defined_out": [
        "0x0020",
        "encoded_tuple_buffer%6#0",
        "tmp%27#0",
        "tmp%28#0",
        "tmp%29#0",
        "tmp%30#0",
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "tmp%27#0",
        "tmp%28#0",
        "tmp%29#0",
        "tmp%30#0",
        "encoded_tuple_buffer%6#0",
        "0x0020"
      ]
    },
    "1250": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%7#0",
        "tmp%27#0",
        "tmp%28#0",
        "tmp%29#0",
        "tmp%30#0",
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "tmp%27#0",
        "tmp%28#0",
        "tmp%29#0",
        "tmp%30#0",
        "encoded_tuple_buffer%7#0"
      ]
    },
    "1251": {
      "op": "uncover 6",
      "stack_out": [
        "to_encode%0#0",
        "val_as_bytes%3#0",
        "tmp%27#0",
        "tmp%28#0",
        "tmp%29#0",
        "tmp%30#0",
        "encoded_tuple_buffer%7#0",
        "val_as_bytes%2#0"
      ]
    },
    "1253": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%8#0",
        "tmp%27#0",
        "tmp%28#0",
        "tmp%29#0",
        "tmp%30#0",
        "to_encode%0#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "val_as_bytes%3#0",
        "tmp%27#0",
        "tmp%28#0",
        "tmp%29#0",
        "tmp%30#0",
        "encoded_tuple_buffer%8#0"
      ]
    },
    "1254": {
      "op": "uncover 5",
      "stack_out": [
        "to_encode%0#0",
        "tmp%27#0",
        "tmp%28#0",
        "tmp%29#0",
        "tmp%30#0",
        "encoded_tuple_buffer%8#0",
        "val_as_bytes%3#0"
      ]
    },
    "1256": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%9#0",
        "tmp%27#0",
        "tmp%28#0",
        "tmp%29#0",
        "tmp%30#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "tmp%27#0",
        "tmp%28#0",
        "tmp%29#0",
        "tmp%30#0",
        "encoded_tuple_buffer%9#0"
      ]
    },
    "1257": {
      "op": "uncover 4",
      "stack_out": [
        "to_encode%0#0",
        "tmp%28#0",
        "tmp%29#0",
        "tmp%30#0",
        "encoded_tuple_buffer%9#0",
        "tmp%27#0"
      ]
    },
    "1259": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%10#0",
        "tmp%28#0",
        "tmp%29#0",
        "tmp%30#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "tmp%28#0",
        "tmp%29#0",
        "tmp%30#0",
        "encoded_tuple_buffer%10#0"
      ]
    },
    "1260": {
      "op": "uncover 3",
      "stack_out": [
        "to_encode%0#0",
        "tmp%29#0",
        "tmp%30#0",
        "encoded_tuple_buffer%10#0",
        "tmp%28#0"
      ]
    },
    "1262": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%11#0",
        "tmp%29#0",
        "tmp%30#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "tmp%29#0",
        "tmp%30#0",
        "encoded_tuple_buffer%11#0"
      ]
    },
    "1263": {
      "op": "uncover 2",
      "stack_out": [
        "to_encode%0#0",
        "tmp%30#0",
        "encoded_tuple_buffer%11#0",
        "tmp%29#0"
      ]
    },
    "1265": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%12#0",
        "tmp%30#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "tmp%30#0",
        "encoded_tuple_buffer%12#0"
      ]
    },
    "1266": {
      "op": "swap",
      "stack_out": [
        "to_encode%0#0",
        "encoded_tuple_buffer%12#0",
        "tmp%30#0"
      ]
    },
    "1267": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%13#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "encoded_tuple_buffer%13#0"
      ]
    },
    "1268": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "encoded_tuple_buffer%13#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "encoded_tuple_buffer%13#0",
        "0"
      ]
    },
    "1269": {
      "op": "bytec 7 // \"game_id\"",
      "defined_out": [
        "\"game_id\"",
        "0",
        "encoded_tuple_buffer%13#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "encoded_tuple_buffer%13#0",
        "0",
        "\"game_id\""
      ]
    },
    "1271": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_tuple_buffer%13#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "encoded_tuple_buffer%13#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1272": {
      "error": "check self.game_id exists",
      "op": "assert // check self.game_id exists",
      "stack_out": [
        "to_encode%0#0",
        "encoded_tuple_buffer%13#0",
        "maybe_value%0#0"
      ]
    },
    "1273": {
      "op": "dup",
      "defined_out": [
        "encoded_tuple_buffer%13#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "encoded_tuple_buffer%13#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "1274": {
      "op": "itob",
      "defined_out": [
        "encoded_tuple_buffer%13#0",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "encoded_tuple_buffer%13#0",
        "maybe_value%0#0",
        "encoded_value%0#0"
      ]
    },
    "1275": {
      "op": "bytec_3 // \"s_\"",
      "defined_out": [
        "\"s_\"",
        "encoded_tuple_buffer%13#0",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "encoded_tuple_buffer%13#0",
        "maybe_value%0#0",
        "encoded_value%0#0",
        "\"s_\""
      ]
    },
    "1276": {
      "op": "dig 1",
      "defined_out": [
        "\"s_\"",
        "encoded_tuple_buffer%13#0",
        "encoded_value%0#0",
        "encoded_value%0#0 (copy)",
        "maybe_value%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "encoded_tuple_buffer%13#0",
        "maybe_value%0#0",
        "encoded_value%0#0",
        "\"s_\"",
        "encoded_value%0#0 (copy)"
      ]
    },
    "1278": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_tuple_buffer%13#0",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "encoded_tuple_buffer%13#0",
        "maybe_value%0#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1279": {
      "op": "uncover 3",
      "stack_out": [
        "to_encode%0#0",
        "maybe_value%0#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "encoded_tuple_buffer%13#0"
      ]
    },
    "1281": {
      "op": "box_put",
      "stack_out": [
        "to_encode%0#0",
        "maybe_value%0#0",
        "encoded_value%0#0"
      ]
    },
    "1282": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "encoded_value%0#0",
        "to_encode%0#0"
      ]
    },
    "1284": {
      "op": "bzero",
      "defined_out": [
        "encoded_value%0#0",
        "materialized_values%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "encoded_value%0#0",
        "materialized_values%0#0"
      ]
    },
    "1285": {
      "op": "bytec_1 // \"p_\"",
      "defined_out": [
        "\"p_\"",
        "encoded_value%0#0",
        "materialized_values%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "encoded_value%0#0",
        "materialized_values%0#0",
        "\"p_\""
      ]
    },
    "1286": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "materialized_values%0#0",
        "\"p_\"",
        "encoded_value%0#0"
      ]
    },
    "1288": {
      "op": "concat",
      "defined_out": [
        "game_players_bref#0",
        "materialized_values%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "materialized_values%0#0",
        "game_players_bref#0"
      ]
    },
    "1289": {
      "op": "dup",
      "defined_out": [
        "game_players_bref#0",
        "game_players_bref#0 (copy)",
        "materialized_values%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "materialized_values%0#0",
        "game_players_bref#0",
        "game_players_bref#0 (copy)"
      ]
    },
    "1290": {
      "op": "box_del",
      "defined_out": [
        "game_players_bref#0",
        "materialized_values%0#0",
        "maybe_value%0#0",
        "{box_del}"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "materialized_values%0#0",
        "game_players_bref#0",
        "{box_del}"
      ]
    },
    "1291": {
      "op": "pop",
      "stack_out": [
        "maybe_value%0#0",
        "materialized_values%0#0",
        "game_players_bref#0"
      ]
    },
    "1292": {
      "op": "dup",
      "stack_out": [
        "maybe_value%0#0",
        "materialized_values%0#0",
        "game_players_bref#0",
        "game_players_bref#0 (copy)"
      ]
    },
    "1293": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "game_players_bref#0",
        "game_players_bref#0 (copy)",
        "materialized_values%0#0"
      ]
    },
    "1295": {
      "op": "box_put",
      "stack_out": [
        "maybe_value%0#0",
        "game_players_bref#0"
      ]
    },
    "1296": {
      "op": "intc_1 // 0"
    },
    "1297": {
      "op": "txn Sender",
      "defined_out": [
        "0",
        "game_players_bref#0",
        "maybe_value%0#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "game_players_bref#0",
        "0",
        "tmp%33#0"
      ]
    },
    "1299": {
      "op": "box_replace",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1300": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "1"
      ]
    },
    "1301": {
      "op": "+",
      "defined_out": [
        "materialized_values%1#0"
      ],
      "stack_out": [
        "materialized_values%1#0"
      ]
    },
    "1302": {
      "op": "bytec 7 // \"game_id\"",
      "stack_out": [
        "materialized_values%1#0",
        "\"game_id\""
      ]
    },
    "1304": {
      "op": "swap",
      "stack_out": [
        "\"game_id\"",
        "materialized_values%1#0"
      ]
    },
    "1305": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1306": {
      "retsub": true,
      "op": "retsub"
    },
    "1307": {
      "subroutine": "smart_contracts.pieout.contract.Pieout.join_game",
      "params": {
        "game_id#0": "uint64",
        "stake_pay#0": "uint64"
      },
      "block": "join_game",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "1310": {
      "op": "frame_dig -2",
      "defined_out": [
        "game_id#0 (copy)"
      ],
      "stack_out": [
        "game_id#0 (copy)"
      ]
    },
    "1312": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "1313": {
      "op": "bytec_3 // \"s_\"",
      "defined_out": [
        "\"s_\"",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "\"s_\""
      ]
    },
    "1314": {
      "op": "dig 1",
      "defined_out": [
        "\"s_\"",
        "encoded_value%0#0",
        "encoded_value%0#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "\"s_\"",
        "encoded_value%0#0 (copy)"
      ]
    },
    "1316": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1317": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "1318": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "_%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1319": {
      "op": "bury 1",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1321": {
      "error": "Box game state not found. Check if Game ID is valid.",
      "op": "assert // Box game state not found. Check if Game ID is valid.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1322": {
      "op": "frame_dig -1",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "stake_pay#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "stake_pay#0 (copy)"
      ]
    },
    "1324": {
      "op": "gtxns Amount",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%0#0"
      ]
    },
    "1326": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "1327": {
      "op": "pushint 258400 // 258400",
      "defined_out": [
        "258400",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "tmp%0#0 (copy)",
        "258400"
      ]
    },
    "1331": {
      "op": ">=",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "1332": {
      "error": "Insufficient funds. Stake pay amount is not enough to cover application MBR.",
      "op": "assert // Insufficient funds. Stake pay amount is not enough to cover application MBR.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%0#0"
      ]
    },
    "1333": {
      "op": "frame_dig -1",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "stake_pay#0 (copy)"
      ]
    },
    "1335": {
      "op": "gtxns Sender",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "tmp%2#0"
      ]
    },
    "1337": {
      "op": "txn Sender",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "1339": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "tmp%4#0"
      ]
    },
    "1340": {
      "error": "Stake payment sender address must match transaction sender address.",
      "op": "assert // Stake payment sender address must match transaction sender address.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%0#0"
      ]
    },
    "1341": {
      "op": "frame_dig -1",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "stake_pay#0 (copy)"
      ]
    },
    "1343": {
      "op": "gtxns Receiver",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%0#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "tmp%5#0"
      ]
    },
    "1345": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%0#0",
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "tmp%5#0",
        "tmp%6#0"
      ]
    },
    "1347": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "tmp%7#0"
      ]
    },
    "1348": {
      "error": "Stake payment receiver address must match application address.",
      "op": "assert // Stake payment receiver address must match application address.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%0#0"
      ]
    },
    "1349": {
      "op": "dig 1",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "1351": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "maybe_exists%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "maybe_exists%1#0"
      ]
    },
    "1352": {
      "error": "check self.box_game_state entry exists",
      "op": "assert // check self.box_game_state entry exists",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0"
      ]
    },
    "1353": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "1354": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "game_state#0 (copy)",
        "2"
      ]
    },
    "1355": {
      "op": "getbyte",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%0#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "tmp%9#0"
      ]
    },
    "1356": {
      "op": "frame_dig -2",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "tmp%9#0",
        "game_id#0 (copy)"
      ]
    },
    "1358": {
      "op": "bytec_1 // \"p_\"",
      "defined_out": [
        "\"p_\"",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_id#0 (copy)",
        "game_state#0",
        "tmp%0#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "tmp%9#0",
        "game_id#0 (copy)",
        "\"p_\""
      ]
    },
    "1359": {
      "op": "dig 2",
      "defined_out": [
        "\"p_\"",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_id#0 (copy)",
        "game_state#0",
        "tmp%0#0",
        "tmp%9#0",
        "tmp%9#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "tmp%9#0",
        "game_id#0 (copy)",
        "\"p_\"",
        "tmp%9#0 (copy)"
      ]
    },
    "1361": {
      "op": "intc_1 // 0",
      "defined_out": [
        "\"p_\"",
        "0",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_id#0 (copy)",
        "game_state#0",
        "tmp%0#0",
        "tmp%9#0",
        "tmp%9#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "tmp%9#0",
        "game_id#0 (copy)",
        "\"p_\"",
        "tmp%9#0 (copy)",
        "0"
      ]
    },
    "1362": {
      "callsub": "smart_contracts.pieout.subroutines.check_sender_in_game",
      "op": "callsub check_sender_in_game",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%0#0",
        "tmp%10#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "tmp%9#0",
        "tmp%10#0"
      ]
    },
    "1365": {
      "op": "!",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%0#0",
        "tmp%11#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "tmp%9#0",
        "tmp%11#0"
      ]
    },
    "1366": {
      "error": "Transaction sender is already recognized as a valid player for this game.",
      "op": "assert // Transaction sender is already recognized as a valid player for this game.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "tmp%9#0"
      ]
    },
    "1367": {
      "op": "dig 1",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "tmp%9#0",
        "game_state#0 (copy)"
      ]
    },
    "1369": {
      "op": "intc_1 // 0",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "tmp%9#0",
        "game_state#0 (copy)",
        "0"
      ]
    },
    "1370": {
      "op": "getbit",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "is_true%0#0",
        "tmp%0#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "tmp%9#0",
        "is_true%0#0"
      ]
    },
    "1371": {
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x00",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "is_true%0#0",
        "tmp%0#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "tmp%9#0",
        "is_true%0#0",
        "0x00"
      ]
    },
    "1372": {
      "op": "intc_1 // 0",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "tmp%9#0",
        "is_true%0#0",
        "0x00",
        "0"
      ]
    },
    "1373": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "tmp%9#0",
        "0x00",
        "0",
        "is_true%0#0"
      ]
    },
    "1375": {
      "op": "setbit",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%0#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "tmp%9#0",
        "encoded_bool%0#0"
      ]
    },
    "1376": {
      "op": "intc_1 // 0",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "tmp%9#0",
        "encoded_bool%0#0",
        "0"
      ]
    },
    "1377": {
      "op": "getbit",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%0#0",
        "tmp%12#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "tmp%9#0",
        "tmp%12#0"
      ]
    },
    "1378": {
      "op": "!",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%0#0",
        "tmp%13#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "tmp%9#0",
        "tmp%13#0"
      ]
    },
    "1379": {
      "error": "Game state staking finalized value mismatch.",
      "op": "assert // Game state staking finalized value mismatch.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "tmp%9#0"
      ]
    },
    "1380": {
      "op": "dig 1",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "tmp%9#0",
        "game_state#0 (copy)"
      ]
    },
    "1382": {
      "error": "Index access is out of bounds",
      "op": "extract 8 8 // on error: Index access is out of bounds",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "reinterpret_biguint%0#0",
        "tmp%0#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "tmp%9#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "1385": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "reinterpret_biguint%0#0",
        "tmp%0#0",
        "tmp%14#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "tmp%9#0",
        "reinterpret_biguint%0#0",
        "tmp%14#0"
      ]
    },
    "1387": {
      "op": "itob",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "reinterpret_biguint%0#0",
        "tmp%0#0",
        "tmp%15#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "tmp%9#0",
        "reinterpret_biguint%0#0",
        "tmp%15#0"
      ]
    },
    "1388": {
      "op": "b>=",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%0#0",
        "tmp%16#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "tmp%9#0",
        "tmp%16#0"
      ]
    },
    "1389": {
      "error": "Phase deadline expired. Latest block timestamp must not exceed expiry timestamp.",
      "op": "assert // Phase deadline expired. Latest block timestamp must not exceed expiry timestamp.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "tmp%9#0"
      ]
    },
    "1390": {
      "op": "dig 1",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "tmp%9#0",
        "game_state#0 (copy)"
      ]
    },
    "1392": {
      "error": "Index access is out of bounds",
      "op": "extract 2 1 // on error: Index access is out of bounds",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "reinterpret_biguint%1#0",
        "tmp%0#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "tmp%9#0",
        "reinterpret_biguint%1#0"
      ]
    },
    "1395": {
      "op": "dig 2",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "tmp%9#0",
        "reinterpret_biguint%1#0",
        "game_state#0 (copy)"
      ]
    },
    "1397": {
      "error": "Index access is out of bounds",
      "op": "extract 1 1 // on error: Index access is out of bounds",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "reinterpret_biguint%1#0",
        "reinterpret_biguint%2#0",
        "tmp%0#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "tmp%9#0",
        "reinterpret_biguint%1#0",
        "reinterpret_biguint%2#0"
      ]
    },
    "1400": {
      "op": "b<=",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%0#0",
        "tmp%17#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "tmp%9#0",
        "tmp%17#0"
      ]
    },
    "1401": {
      "error": "Number of active players must not exceed number of max players.",
      "op": "assert // Number of active players must not exceed number of max players.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "tmp%9#0"
      ]
    },
    "1402": {
      "op": "dig 1",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "tmp%9#0",
        "game_state#0 (copy)"
      ]
    },
    "1404": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state#0 (copy)",
        "tmp%0#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "tmp%9#0",
        "game_state#0 (copy)",
        "6"
      ]
    },
    "1406": {
      "op": "extract_uint16",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%0#0",
        "tmp%19#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "tmp%9#0",
        "tmp%19#0"
      ]
    },
    "1407": {
      "op": "dig 2",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "tmp%9#0",
        "tmp%19#0",
        "game_state#0 (copy)"
      ]
    },
    "1409": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state#0 (copy)",
        "tmp%0#0",
        "tmp%19#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "tmp%9#0",
        "tmp%19#0",
        "game_state#0 (copy)",
        "1"
      ]
    },
    "1410": {
      "op": "getbyte",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%0#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "tmp%9#0",
        "tmp%19#0",
        "tmp%21#0"
      ]
    },
    "1411": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%0#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "tmp%9#0",
        "tmp%19#0",
        "tmp%21#0",
        "32"
      ]
    },
    "1412": {
      "op": "*",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%0#0",
        "tmp%19#0",
        "tmp%22#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "tmp%9#0",
        "tmp%19#0",
        "tmp%22#0"
      ]
    },
    "1413": {
      "op": "dig 1",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%0#0",
        "tmp%19#0",
        "tmp%19#0 (copy)",
        "tmp%22#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "tmp%9#0",
        "tmp%19#0",
        "tmp%22#0",
        "tmp%19#0 (copy)"
      ]
    },
    "1415": {
      "op": ">",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%0#0",
        "tmp%19#0",
        "tmp%23#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "tmp%9#0",
        "tmp%19#0",
        "tmp%23#0"
      ]
    },
    "1416": {
      "error": "Players box start position index overflow. Can not store more addresses.",
      "op": "assert // Players box start position index overflow. Can not store more addresses.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "tmp%9#0",
        "tmp%19#0"
      ]
    },
    "1417": {
      "op": "bytec_1 // \"p_\"",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "tmp%9#0",
        "tmp%19#0",
        "\"p_\""
      ]
    },
    "1418": {
      "op": "uncover 6",
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "tmp%9#0",
        "tmp%19#0",
        "\"p_\"",
        "encoded_value%0#0"
      ]
    },
    "1420": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_players_bref#0",
        "game_state#0",
        "tmp%0#0",
        "tmp%19#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "tmp%9#0",
        "tmp%19#0",
        "game_players_bref#0"
      ]
    },
    "1421": {
      "op": "txn Sender",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_players_bref#0",
        "game_state#0",
        "tmp%0#0",
        "tmp%19#0",
        "tmp%27#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "tmp%9#0",
        "tmp%19#0",
        "game_players_bref#0",
        "tmp%27#0"
      ]
    },
    "1423": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "tmp%9#0",
        "tmp%19#0",
        "tmp%27#0",
        "game_players_bref#0"
      ]
    },
    "1424": {
      "op": "cover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "tmp%9#0",
        "game_players_bref#0",
        "tmp%19#0",
        "tmp%27#0"
      ]
    },
    "1426": {
      "op": "box_replace",
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "tmp%9#0"
      ]
    },
    "1427": {
      "op": "intc_0 // 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "tmp%9#0",
        "1"
      ]
    },
    "1428": {
      "op": "+",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "to_encode%0#0"
      ]
    },
    "1429": {
      "op": "itob",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "val_as_bytes%0#0"
      ]
    },
    "1430": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "val_as_bytes%0#0",
        "val_as_bytes%0#0 (copy)"
      ]
    },
    "1431": {
      "op": "bitlen",
      "defined_out": [
        "bitlen%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "val_as_bytes%0#0",
        "bitlen%0#0"
      ]
    },
    "1432": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "bitlen%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "val_as_bytes%0#0",
        "bitlen%0#0",
        "8"
      ]
    },
    "1434": {
      "op": "<=",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "no_overflow%0#0",
        "tmp%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "val_as_bytes%0#0",
        "no_overflow%0#0"
      ]
    },
    "1435": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "val_as_bytes%0#0"
      ]
    },
    "1436": {
      "op": "extract 7 1",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%0#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "uint8%0#0"
      ]
    },
    "1439": {
      "op": "replace2 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0"
      ]
    },
    "1441": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "1442": {
      "op": "pushint 6 // 6",
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "game_state#0 (copy)",
        "6"
      ]
    },
    "1444": {
      "op": "extract_uint16",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%0#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "tmp%31#0"
      ]
    },
    "1445": {
      "op": "intc_3 // 32",
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "tmp%31#0",
        "32"
      ]
    },
    "1446": {
      "op": "+",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%0#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "to_encode%1#0"
      ]
    },
    "1447": {
      "op": "itob",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "val_as_bytes%1#0"
      ]
    },
    "1448": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%1#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "val_as_bytes%1#0",
        "val_as_bytes%1#0 (copy)"
      ]
    },
    "1449": {
      "op": "bitlen",
      "defined_out": [
        "bitlen%1#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "val_as_bytes%1#0",
        "bitlen%1#0"
      ]
    },
    "1450": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "bitlen%1#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "val_as_bytes%1#0",
        "bitlen%1#0",
        "16"
      ]
    },
    "1452": {
      "op": "<=",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "no_overflow%1#0",
        "tmp%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "val_as_bytes%1#0",
        "no_overflow%1#0"
      ]
    },
    "1453": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "val_as_bytes%1#0"
      ]
    },
    "1454": {
      "op": "extract 6 2",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%0#0",
        "uint16%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "uint16%0#0"
      ]
    },
    "1457": {
      "op": "replace2 6",
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0"
      ]
    },
    "1459": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "1460": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "game_state#0 (copy)",
        "16"
      ]
    },
    "1462": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%0#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "game_state#0",
        "tmp%33#0"
      ]
    },
    "1463": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%33#0",
        "tmp%0#0"
      ]
    },
    "1465": {
      "op": "+",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "to_encode%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "to_encode%2#0"
      ]
    },
    "1466": {
      "op": "itob",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "val_as_bytes%2#0"
      ]
    },
    "1467": {
      "op": "replace2 16",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "1469": {
      "callsub": "smart_contracts.pieout.subroutines.is_game_live",
      "op": "callsub is_game_live",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "is_game_live%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "is_game_live%0#0",
        "game_state#0"
      ]
    },
    "1472": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "1474": {
      "op": "box_put",
      "stack_out": []
    },
    "1475": {
      "retsub": true,
      "op": "retsub"
    },
    "1476": {
      "subroutine": "smart_contracts.pieout.contract.Pieout.get_box_commit_rand",
      "params": {
        "box_c_pay#0": "uint64"
      },
      "block": "get_box_commit_rand",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1479": {
      "op": "bytec 4 // \"c_\"",
      "defined_out": [
        "\"c_\""
      ],
      "stack_out": [
        "\"c_\""
      ]
    },
    "1481": {
      "op": "txn Sender",
      "defined_out": [
        "\"c_\"",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "\"c_\"",
        "materialized_values%0#0"
      ]
    },
    "1483": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "1484": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "_%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1485": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%0#0"
      ]
    },
    "1487": {
      "op": "!",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1488": {
      "error": "Box commit rand not found for sender address. Ensure commit rand was called.",
      "op": "assert // Box commit rand not found for sender address. Ensure commit rand was called.",
      "stack_out": []
    },
    "1489": {
      "op": "frame_dig -1",
      "defined_out": [
        "box_c_pay#0 (copy)"
      ],
      "stack_out": [
        "box_c_pay#0 (copy)"
      ]
    },
    "1491": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1493": {
      "op": "intc 4 // 19300",
      "defined_out": [
        "19300",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "19300"
      ]
    },
    "1495": {
      "op": ">=",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1496": {
      "error": "Insufficient funds. Box pay amount is not enough to cover application MBR.",
      "op": "assert // Insufficient funds. Box pay amount is not enough to cover application MBR.",
      "stack_out": []
    },
    "1497": {
      "op": "frame_dig -1",
      "stack_out": [
        "box_c_pay#0 (copy)"
      ]
    },
    "1499": {
      "op": "gtxns Sender",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1501": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "1503": {
      "op": "==",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "1504": {
      "error": "Box payment sender address must match transaction sender address.",
      "op": "assert // Box payment sender address must match transaction sender address.",
      "stack_out": []
    },
    "1505": {
      "op": "frame_dig -1",
      "stack_out": [
        "box_c_pay#0 (copy)"
      ]
    },
    "1507": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "1509": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "1511": {
      "op": "==",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "1512": {
      "error": "Box payment receiver address must match application address.",
      "op": "assert // Box payment receiver address must match application address.",
      "stack_out": []
    },
    "1513": {
      "op": "bytec 4 // \"c_\"",
      "stack_out": [
        "\"c_\""
      ]
    },
    "1515": {
      "op": "txn Sender",
      "defined_out": [
        "\"c_\"",
        "materialized_values%1#0"
      ],
      "stack_out": [
        "\"c_\"",
        "materialized_values%1#0"
      ]
    },
    "1517": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0"
      ]
    },
    "1518": {
      "op": "pushbytes 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "box_prefixed_key%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "0x0000000000000000"
      ]
    },
    "1528": {
      "op": "box_put",
      "stack_out": []
    },
    "1529": {
      "retsub": true,
      "op": "retsub"
    },
    "1530": {
      "subroutine": "smart_contracts.pieout.contract.Pieout.commit_rand",
      "params": {
        "game_id#0": "uint64"
      },
      "block": "commit_rand",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1533": {
      "op": "frame_dig -1",
      "defined_out": [
        "game_id#0 (copy)"
      ],
      "stack_out": [
        "game_id#0 (copy)"
      ]
    },
    "1535": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "1536": {
      "op": "bytec_3 // \"s_\"",
      "defined_out": [
        "\"s_\"",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "\"s_\""
      ]
    },
    "1537": {
      "op": "swap",
      "stack_out": [
        "\"s_\"",
        "encoded_value%0#0"
      ]
    },
    "1538": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "1539": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "1540": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "box_prefixed_key%0#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "_%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1541": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1543": {
      "error": "Box game state not found. Check if Game ID is valid.",
      "op": "assert // Box game state not found. Check if Game ID is valid.",
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "1544": {
      "op": "bytec 4 // \"c_\"",
      "defined_out": [
        "\"c_\"",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "\"c_\""
      ]
    },
    "1546": {
      "op": "txn Sender",
      "defined_out": [
        "\"c_\"",
        "box_prefixed_key%0#0",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "\"c_\"",
        "materialized_values%0#0"
      ]
    },
    "1548": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%1#0"
      ]
    },
    "1549": {
      "op": "box_len",
      "defined_out": [
        "_%1#0",
        "box_prefixed_key%0#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "_%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1550": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%1#0"
      ]
    },
    "1552": {
      "error": "Box commit rand not found for sender address. Ensure commit rand was called.",
      "op": "assert // Box commit rand not found for sender address. Ensure commit rand was called.",
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "1553": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%2#0"
      ]
    },
    "1554": {
      "error": "check self.box_game_state entry exists",
      "op": "assert // check self.box_game_state entry exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1555": {
      "op": "dup",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "1556": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "0"
      ]
    },
    "1557": {
      "op": "getbit",
      "defined_out": [
        "is_true%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "is_true%0#0"
      ]
    },
    "1558": {
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x00",
        "is_true%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "is_true%0#0",
        "0x00"
      ]
    },
    "1559": {
      "op": "intc_1 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "is_true%0#0",
        "0x00",
        "0"
      ]
    },
    "1560": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "0x00",
        "0",
        "is_true%0#0"
      ]
    },
    "1562": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "encoded_bool%0#0"
      ]
    },
    "1563": {
      "op": "intc_1 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "encoded_bool%0#0",
        "0"
      ]
    },
    "1564": {
      "op": "getbit",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%0#0"
      ]
    },
    "1565": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%0#0",
        "1"
      ]
    },
    "1566": {
      "op": "==",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%1#0"
      ]
    },
    "1567": {
      "error": "Game state staking finalized value mismatch.",
      "op": "assert // Game state staking finalized value mismatch.",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1568": {
      "op": "intc_0 // 1",
      "stack_out": [
        "maybe_value%0#0",
        "1"
      ]
    },
    "1569": {
      "op": "getbyte",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1570": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%3#0",
        "game_id#0 (copy)"
      ]
    },
    "1572": {
      "op": "bytec_1 // \"p_\"",
      "defined_out": [
        "\"p_\"",
        "game_id#0 (copy)",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "game_id#0 (copy)",
        "\"p_\""
      ]
    },
    "1573": {
      "op": "uncover 2",
      "stack_out": [
        "game_id#0 (copy)",
        "\"p_\"",
        "tmp%3#0"
      ]
    },
    "1575": {
      "op": "intc_1 // 0",
      "stack_out": [
        "game_id#0 (copy)",
        "\"p_\"",
        "tmp%3#0",
        "0"
      ]
    },
    "1576": {
      "callsub": "smart_contracts.pieout.subroutines.check_sender_in_game",
      "op": "callsub check_sender_in_game",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "1579": {
      "op": "intc_0 // 1",
      "stack_out": [
        "tmp%4#0",
        "1"
      ]
    },
    "1580": {
      "op": "==",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "1581": {
      "error": "Transaction sender is not recognized as a valid player for this game.",
      "op": "assert // Transaction sender is not recognized as a valid player for this game.",
      "stack_out": []
    },
    "1582": {
      "op": "txn TxID",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "1584": {
      "op": "global Round",
      "defined_out": [
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "1586": {
      "op": "itob",
      "defined_out": [
        "tmp%6#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "tmp%8#0"
      ]
    },
    "1587": {
      "op": "concat",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "1588": {
      "op": "sha256",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "1589": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "16"
      ]
    },
    "1591": {
      "op": "extract_uint16",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "1592": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "3"
      ]
    },
    "1594": {
      "op": "%",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "1595": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "4"
      ]
    },
    "1597": {
      "op": "+",
      "defined_out": [
        "round_offset#0"
      ],
      "stack_out": [
        "round_offset#0"
      ]
    },
    "1598": {
      "op": "global Round",
      "defined_out": [
        "round_offset#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "round_offset#0",
        "tmp%14#0"
      ]
    },
    "1600": {
      "op": "+",
      "defined_out": [
        "commit_round#0"
      ],
      "stack_out": [
        "commit_round#0"
      ]
    },
    "1601": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "1602": {
      "op": "bytec 4 // \"c_\"",
      "stack_out": [
        "val_as_bytes%0#0",
        "\"c_\""
      ]
    },
    "1604": {
      "op": "txn Sender",
      "defined_out": [
        "\"c_\"",
        "materialized_values%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "\"c_\"",
        "materialized_values%1#0"
      ]
    },
    "1606": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%4#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "box_prefixed_key%4#0"
      ]
    },
    "1607": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%4#0",
        "val_as_bytes%0#0"
      ]
    },
    "1608": {
      "op": "box_put",
      "stack_out": []
    },
    "1609": {
      "retsub": true,
      "op": "retsub"
    },
    "1610": {
      "subroutine": "smart_contracts.pieout.contract.Pieout.del_box_commit_rand",
      "params": {},
      "block": "del_box_commit_rand",
      "stack_in": [],
      "op": "global GroupSize",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1612": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "1"
      ]
    },
    "1613": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1614": {
      "error": "Invalid group size. This app call only appproves standalone transactions.",
      "op": "assert // Invalid group size. This app call only appproves standalone transactions.",
      "stack_out": []
    },
    "1615": {
      "op": "bytec 4 // \"c_\"",
      "defined_out": [
        "\"c_\""
      ],
      "stack_out": [
        "\"c_\""
      ]
    },
    "1617": {
      "op": "txn Sender",
      "defined_out": [
        "\"c_\"",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "\"c_\"",
        "materialized_values%0#0"
      ]
    },
    "1619": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "1620": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "_%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1621": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%0#0"
      ]
    },
    "1623": {
      "error": "Box commit rand not found for sender address. Ensure commit rand was called.",
      "op": "assert // Box commit rand not found for sender address. Ensure commit rand was called.",
      "stack_out": []
    },
    "1624": {
      "op": "bytec 4 // \"c_\"",
      "stack_out": [
        "\"c_\""
      ]
    },
    "1626": {
      "op": "txn Sender",
      "defined_out": [
        "\"c_\"",
        "materialized_values%1#0"
      ],
      "stack_out": [
        "\"c_\"",
        "materialized_values%1#0"
      ]
    },
    "1628": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0"
      ]
    },
    "1629": {
      "op": "box_del",
      "defined_out": [
        "{box_del}"
      ],
      "stack_out": [
        "{box_del}"
      ]
    },
    "1630": {
      "op": "pop",
      "stack_out": []
    },
    "1631": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1633": {
      "op": "intc 4 // 19300",
      "defined_out": [
        "19300",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "19300"
      ]
    },
    "1635": {
      "op": "pushbytes \"sender:app_address,receiver:sender_address,concern:box_commit_rand_deletion\"",
      "defined_out": [
        "\"sender:app_address,receiver:sender_address,concern:box_commit_rand_deletion\"",
        "19300",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "19300",
        "\"sender:app_address,receiver:sender_address,concern:box_commit_rand_deletion\""
      ]
    },
    "1712": {
      "callsub": "smart_contracts.pieout.subroutines.payout_itxn",
      "op": "callsub payout_itxn",
      "stack_out": []
    },
    "1715": {
      "retsub": true,
      "op": "retsub"
    },
    "1716": {
      "subroutine": "smart_contracts.pieout.contract.Pieout.play_game",
      "params": {
        "game_id#0": "uint64"
      },
      "block": "play_game",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1719": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "1720": {
      "op": "dupn 6",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0"
      ]
    },
    "1722": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0"
      ]
    },
    "1724": {
      "op": "dupn 9",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1"
      ]
    },
    "1726": {
      "block": "play_game_while_top@36",
      "stack_in": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1"
      ],
      "op": "pushint 19610 // 19610",
      "defined_out": [
        "19610"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "19610"
      ]
    },
    "1730": {
      "op": "global OpcodeBudget",
      "defined_out": [
        "19610",
        "tmp%0#3"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "19610",
        "tmp%0#3"
      ]
    },
    "1732": {
      "op": ">",
      "defined_out": [
        "tmp%1#2"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "tmp%1#2"
      ]
    },
    "1733": {
      "op": "bz play_game_after_while@41",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1"
      ]
    },
    "1736": {
      "op": "itxn_begin"
    },
    "1737": {
      "op": "pushint 6 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "appl"
      ]
    },
    "1739": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1"
      ]
    },
    "1741": {
      "op": "pushint 5 // DeleteApplication",
      "defined_out": [
        "DeleteApplication"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "DeleteApplication"
      ]
    },
    "1743": {
      "op": "itxn_field OnCompletion",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1"
      ]
    },
    "1745": {
      "op": "bytec 12 // 0x068101",
      "defined_out": [
        "0x068101"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "0x068101"
      ]
    },
    "1747": {
      "op": "itxn_field ApprovalProgram",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1"
      ]
    },
    "1749": {
      "op": "bytec 12 // 0x068101",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "0x068101"
      ]
    },
    "1751": {
      "op": "itxn_field ClearStateProgram",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1"
      ]
    },
    "1753": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "0"
      ]
    },
    "1754": {
      "op": "itxn_field Fee",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1"
      ]
    },
    "1756": {
      "op": "itxn_submit"
    },
    "1757": {
      "op": "b play_game_while_top@36"
    },
    "1760": {
      "block": "play_game_after_while@41",
      "stack_in": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "game_id#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_id#0 (copy)"
      ]
    },
    "1762": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "encoded_value%0#0"
      ]
    },
    "1763": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "encoded_value%0#0",
        "encoded_value%0#0"
      ]
    },
    "1764": {
      "op": "frame_bury 1",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "encoded_value%0#0"
      ]
    },
    "1766": {
      "op": "bytec_3 // \"s_\"",
      "defined_out": [
        "\"s_\"",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "encoded_value%0#0",
        "\"s_\""
      ]
    },
    "1767": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "\"s_\"",
        "encoded_value%0#0"
      ]
    },
    "1768": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "box_prefixed_key%0#0"
      ]
    },
    "1769": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1770": {
      "op": "frame_bury 0",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "box_prefixed_key%0#0"
      ]
    },
    "1772": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "1773": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "_%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1774": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1776": {
      "error": "Box game state not found. Check if Game ID is valid.",
      "op": "assert // Box game state not found. Check if Game ID is valid.",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "box_prefixed_key%0#0"
      ]
    },
    "1777": {
      "op": "bytec 4 // \"c_\"",
      "defined_out": [
        "\"c_\"",
        "box_prefixed_key%0#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "\"c_\""
      ]
    },
    "1779": {
      "op": "txn Sender",
      "defined_out": [
        "\"c_\"",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "\"c_\"",
        "materialized_values%0#0"
      ]
    },
    "1781": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%1#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "box_prefixed_key%1#0"
      ]
    },
    "1782": {
      "op": "box_len",
      "defined_out": [
        "_%1#0",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "_%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1783": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "maybe_exists%1#0"
      ]
    },
    "1785": {
      "error": "Box commit rand not found for sender address. Ensure commit rand was called.",
      "op": "assert // Box commit rand not found for sender address. Ensure commit rand was called.",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "box_prefixed_key%0#0"
      ]
    },
    "1786": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "1787": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "maybe_exists%2#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_exists%2#0"
      ]
    },
    "1788": {
      "error": "check self.box_game_state entry exists",
      "op": "assert // check self.box_game_state entry exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "maybe_value%0#0"
      ]
    },
    "1789": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "1"
      ]
    },
    "1790": {
      "op": "getbyte",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "tmp%1#0"
      ]
    },
    "1791": {
      "op": "frame_dig -1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "tmp%1#0",
        "game_id#0 (copy)"
      ]
    },
    "1793": {
      "op": "bytec_1 // \"p_\"",
      "defined_out": [
        "\"p_\"",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_id#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "tmp%1#0",
        "game_id#0 (copy)",
        "\"p_\""
      ]
    },
    "1794": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "game_id#0 (copy)",
        "\"p_\"",
        "tmp%1#0"
      ]
    },
    "1796": {
      "op": "intc_0 // 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "game_id#0 (copy)",
        "\"p_\"",
        "tmp%1#0",
        "1"
      ]
    },
    "1797": {
      "callsub": "smart_contracts.pieout.subroutines.check_sender_in_game",
      "op": "callsub check_sender_in_game",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "tmp%2#0"
      ]
    },
    "1800": {
      "op": "intc_0 // 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "tmp%2#0",
        "1"
      ]
    },
    "1801": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "tmp%3#0"
      ]
    },
    "1802": {
      "error": "Transaction sender is not recognized as a valid player for this game.",
      "op": "assert // Transaction sender is not recognized as a valid player for this game.",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "box_prefixed_key%0#0"
      ]
    },
    "1803": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "maybe_exists%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0",
        "maybe_exists%3#0"
      ]
    },
    "1804": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "maybe_exists%3#0",
        "game_state#0"
      ]
    },
    "1805": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "maybe_exists%3#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "1806": {
      "op": "cover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0",
        "maybe_exists%3#0",
        "game_state#0"
      ]
    },
    "1808": {
      "op": "frame_bury 2",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "maybe_exists%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0",
        "maybe_exists%3#0"
      ]
    },
    "1810": {
      "error": "check self.box_game_state entry exists",
      "op": "assert // check self.box_game_state entry exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0"
      ]
    },
    "1811": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "1812": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0",
        "game_state#0 (copy)",
        "0"
      ]
    },
    "1813": {
      "op": "getbit",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "is_true%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0",
        "is_true%0#0"
      ]
    },
    "1814": {
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x00",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "is_true%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0",
        "is_true%0#0",
        "0x00"
      ]
    },
    "1815": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0",
        "is_true%0#0",
        "0x00",
        "0"
      ]
    },
    "1816": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0",
        "0x00",
        "0",
        "is_true%0#0"
      ]
    },
    "1818": {
      "op": "setbit",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0",
        "encoded_bool%0#0"
      ]
    },
    "1819": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0",
        "encoded_bool%0#0",
        "0"
      ]
    },
    "1820": {
      "op": "getbit",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0",
        "tmp%4#0"
      ]
    },
    "1821": {
      "op": "intc_0 // 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0",
        "tmp%4#0",
        "1"
      ]
    },
    "1822": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0",
        "tmp%5#0"
      ]
    },
    "1823": {
      "error": "Game state staking finalized value mismatch.",
      "op": "assert // Game state staking finalized value mismatch.",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0"
      ]
    },
    "1824": {
      "error": "Index access is out of bounds",
      "op": "extract 8 8 // on error: Index access is out of bounds",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "reinterpret_biguint%0#0"
      ]
    },
    "1827": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "reinterpret_biguint%0#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "reinterpret_biguint%0#0",
        "tmp%6#0"
      ]
    },
    "1829": {
      "op": "itob",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "reinterpret_biguint%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "reinterpret_biguint%0#0",
        "tmp%7#0"
      ]
    },
    "1830": {
      "op": "b>=",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "tmp%8#0"
      ]
    },
    "1831": {
      "error": "Phase deadline expired. Latest block timestamp must not exceed expiry timestamp.",
      "op": "assert // Phase deadline expired. Latest block timestamp must not exceed expiry timestamp.",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1"
      ]
    },
    "1832": {
      "op": "bytec_2 // 0x745f",
      "defined_out": [
        "0x745f",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "0x745f"
      ]
    },
    "1833": {
      "op": "box_len",
      "defined_out": [
        "_%2#0",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "maybe_exists%4#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "_%2#0",
        "maybe_exists%4#0"
      ]
    },
    "1834": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "maybe_exists%4#0"
      ]
    },
    "1836": {
      "error": "Trophy has not yet been minted.",
      "op": "assert // Trophy has not yet been minted.",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1"
      ]
    },
    "1837": {
      "op": "intc_1 // 0",
      "defined_out": [
        "balance#0",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "balance#0"
      ]
    },
    "1838": {
      "op": "frame_bury 7",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1"
      ]
    },
    "1840": {
      "op": "intc_1 // 0",
      "defined_out": [
        "balance#0",
        "box_prefixed_key%0#0",
        "did_exist#0",
        "encoded_value%0#0",
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "did_exist#0"
      ]
    },
    "1841": {
      "op": "frame_bury 10",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1"
      ]
    },
    "1843": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "0"
      ]
    },
    "1844": {
      "op": "bytec 9 // \"ath_address\"",
      "defined_out": [
        "\"ath_address\"",
        "0",
        "balance#0",
        "box_prefixed_key%0#0",
        "did_exist#0",
        "encoded_value%0#0",
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "0",
        "\"ath_address\""
      ]
    },
    "1846": {
      "op": "app_global_get_ex",
      "defined_out": [
        "balance#0",
        "box_prefixed_key%0#0",
        "did_exist#0",
        "encoded_value%0#0",
        "game_state#0",
        "maybe_exists%5#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "maybe_value%2#0",
        "maybe_exists%5#0"
      ]
    },
    "1847": {
      "error": "check self.ath_address exists",
      "op": "assert // check self.ath_address exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "maybe_value%2#0"
      ]
    },
    "1848": {
      "op": "global ZeroAddress",
      "defined_out": [
        "balance#0",
        "box_prefixed_key%0#0",
        "did_exist#0",
        "encoded_value%0#0",
        "game_state#0",
        "maybe_value%2#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "maybe_value%2#0",
        "tmp%9#0"
      ]
    },
    "1850": {
      "op": "!=",
      "defined_out": [
        "balance#0",
        "box_prefixed_key%0#0",
        "did_exist#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "tmp%10#0"
      ]
    },
    "1851": {
      "op": "bz play_game_after_if_else@2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1"
      ]
    },
    "1854": {
      "op": "bytec_2 // 0x745f",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "0x745f"
      ]
    },
    "1855": {
      "op": "box_get",
      "defined_out": [
        "balance#0",
        "box_prefixed_key%0#0",
        "did_exist#0",
        "encoded_value%0#0",
        "game_state#0",
        "maybe_exists%6#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "maybe_value%3#0",
        "maybe_exists%6#0"
      ]
    },
    "1856": {
      "error": "check self.box_game_trophy exists",
      "op": "assert // check self.box_game_trophy exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "maybe_value%3#0"
      ]
    },
    "1857": {
      "op": "dup",
      "defined_out": [
        "balance#0",
        "box_prefixed_key%0#0",
        "did_exist#0",
        "encoded_value%0#0",
        "game_state#0",
        "maybe_value%3#0",
        "maybe_value%3#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "maybe_value%3#0",
        "maybe_value%3#0 (copy)"
      ]
    },
    "1858": {
      "error": "Index access is out of bounds",
      "op": "extract 8 32 // on error: Index access is out of bounds",
      "defined_out": [
        "balance#0",
        "box_prefixed_key%0#0",
        "did_exist#0",
        "encoded_value%0#0",
        "game_state#0",
        "maybe_value%3#0",
        "reinterpret_bytes[32]%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "maybe_value%3#0",
        "reinterpret_bytes[32]%0#0"
      ]
    },
    "1861": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "reinterpret_bytes[32]%0#0",
        "maybe_value%3#0"
      ]
    },
    "1862": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "reinterpret_bytes[32]%0#0",
        "maybe_value%3#0",
        "0"
      ]
    },
    "1863": {
      "op": "extract_uint64",
      "defined_out": [
        "balance#0",
        "box_prefixed_key%0#0",
        "did_exist#0",
        "encoded_value%0#0",
        "game_state#0",
        "reinterpret_bytes[32]%0#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "reinterpret_bytes[32]%0#0",
        "tmp%12#0"
      ]
    },
    "1864": {
      "op": "asset_holding_get AssetBalance",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "balance#0",
        "did_exist#0"
      ]
    },
    "1866": {
      "op": "frame_bury 10",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "balance#0"
      ]
    },
    "1868": {
      "op": "frame_bury 7",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1"
      ]
    },
    "1870": {
      "block": "play_game_after_if_else@2",
      "stack_in": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1"
      ],
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "0"
      ]
    },
    "1871": {
      "op": "bytec 6 // \"commit_rand_salt_id\"",
      "defined_out": [
        "\"commit_rand_salt_id\"",
        "0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "0",
        "\"commit_rand_salt_id\""
      ]
    },
    "1873": {
      "op": "app_global_get_ex",
      "defined_out": [
        "commit_rand_salt_id#0",
        "maybe_exists%8#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "commit_rand_salt_id#0",
        "maybe_exists%8#0"
      ]
    },
    "1874": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "maybe_exists%8#0",
        "commit_rand_salt_id#0"
      ]
    },
    "1875": {
      "op": "frame_bury 9",
      "defined_out": [
        "commit_rand_salt_id#0",
        "maybe_exists%8#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "maybe_exists%8#0"
      ]
    },
    "1877": {
      "error": "check self.commit_rand_salt_id exists",
      "op": "assert // check self.commit_rand_salt_id exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1"
      ]
    },
    "1878": {
      "op": "txn Sender",
      "defined_out": [
        "commit_rand_salt_id#0",
        "player#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "player#0"
      ]
    },
    "1880": {
      "op": "frame_bury 4",
      "defined_out": [
        "commit_rand_salt_id#0",
        "player#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1"
      ]
    },
    "1882": {
      "op": "txn TxID",
      "defined_out": [
        "commit_rand_salt_id#0",
        "player#0",
        "seed#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "seed#0"
      ]
    },
    "1884": {
      "op": "dup",
      "defined_out": [
        "commit_rand_salt_id#0",
        "player#0",
        "seed#0",
        "seed#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "seed#0",
        "seed#0 (copy)"
      ]
    },
    "1885": {
      "op": "extract 16 8",
      "defined_out": [
        "commit_rand_salt_id#0",
        "player#0",
        "seed#0",
        "seed#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "seed#0",
        "seed#1"
      ]
    },
    "1888": {
      "op": "len",
      "defined_out": [
        "commit_rand_salt_id#0",
        "player#0",
        "seed#0",
        "tmp%0#3"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "seed#0",
        "tmp%0#3"
      ]
    },
    "1889": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "commit_rand_salt_id#0",
        "player#0",
        "seed#0",
        "tmp%0#3"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "seed#0",
        "tmp%0#3",
        "8"
      ]
    },
    "1891": {
      "op": "==",
      "defined_out": [
        "commit_rand_salt_id#0",
        "player#0",
        "seed#0",
        "tmp%1#2"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "seed#0",
        "tmp%1#2"
      ]
    },
    "1892": {
      "op": "assert",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "seed#0"
      ]
    },
    "1893": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "commit_rand_salt_id#0",
        "player#0",
        "seed#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "seed#0",
        "16"
      ]
    },
    "1895": {
      "op": "extract_uint64",
      "defined_out": [
        "commit_rand_salt_id#0",
        "initial_state#0",
        "player#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "initial_state#0"
      ]
    },
    "1896": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "initial_state#0",
        "0"
      ]
    },
    "1897": {
      "op": "intc 7 // 6364136223846793005",
      "defined_out": [
        "0",
        "6364136223846793005",
        "commit_rand_salt_id#0",
        "initial_state#0",
        "player#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "initial_state#0",
        "0",
        "6364136223846793005"
      ]
    },
    "1899": {
      "op": "mulw",
      "defined_out": [
        "_high_mul#0",
        "commit_rand_salt_id#0",
        "initial_state#0",
        "low_mul#0",
        "player#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "initial_state#0",
        "_high_mul#0",
        "low_mul#0"
      ]
    },
    "1900": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "initial_state#0",
        "low_mul#0"
      ]
    },
    "1902": {
      "op": "intc 8 // 1442695040888963407",
      "defined_out": [
        "1442695040888963407",
        "commit_rand_salt_id#0",
        "initial_state#0",
        "low_mul#0",
        "player#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "initial_state#0",
        "low_mul#0",
        "1442695040888963407"
      ]
    },
    "1904": {
      "op": "addw",
      "defined_out": [
        "_high_add#0",
        "commit_rand_salt_id#0",
        "initial_state#0",
        "low_add#0",
        "player#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "initial_state#0",
        "_high_add#0",
        "low_add#0"
      ]
    },
    "1905": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "initial_state#0",
        "low_add#0"
      ]
    },
    "1907": {
      "op": "addw",
      "defined_out": [
        "_high_addw#0",
        "commit_rand_salt_id#0",
        "player#0",
        "state#2"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "_high_addw#0",
        "state#2"
      ]
    },
    "1908": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "state#2"
      ]
    },
    "1910": {
      "op": "intc 7 // 6364136223846793005",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "state#2",
        "6364136223846793005"
      ]
    },
    "1912": {
      "op": "mulw",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "_high_mul#0",
        "low_mul#0"
      ]
    },
    "1913": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "low_mul#0"
      ]
    },
    "1915": {
      "op": "intc 8 // 1442695040888963407",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "low_mul#0",
        "1442695040888963407"
      ]
    },
    "1917": {
      "op": "addw",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "_high_add#0",
        "low_add#0"
      ]
    },
    "1918": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "low_add#0"
      ]
    },
    "1920": {
      "op": "pushbytes 0x00ff",
      "defined_out": [
        "commit_rand_salt_id#0",
        "low_add#0",
        "player#0",
        "result#1",
        "state#2"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "low_add#0",
        "result#1"
      ]
    },
    "1924": {
      "op": "frame_bury 5",
      "defined_out": [
        "commit_rand_salt_id#0",
        "low_add#0",
        "player#0",
        "result#1",
        "state#2"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "low_add#0"
      ]
    },
    "1926": {
      "op": "pushint 18446744073709486080 // 18446744073709486080",
      "defined_out": [
        "18446744073709486080",
        "commit_rand_salt_id#0",
        "low_add#0",
        "player#0",
        "result#1",
        "state#2"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "low_add#0",
        "18446744073709486080"
      ]
    },
    "1937": {
      "op": "intc_0 // 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "low_add#0",
        "18446744073709486080",
        "1"
      ]
    },
    "1938": {
      "op": "addw",
      "defined_out": [
        "_addw_high#0",
        "addw_low#0",
        "commit_rand_salt_id#0",
        "low_add#0",
        "player#0",
        "result#1",
        "state#2"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "low_add#0",
        "_addw_high#0",
        "addw_low#0"
      ]
    },
    "1939": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "low_add#0",
        "addw_low#0"
      ]
    },
    "1941": {
      "op": "intc 9 // 4294967295",
      "defined_out": [
        "4294967295",
        "addw_low#0",
        "commit_rand_salt_id#0",
        "low_add#0",
        "player#0",
        "result#1",
        "state#2"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "low_add#0",
        "addw_low#0",
        "4294967295"
      ]
    },
    "1943": {
      "op": "&",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "low_add#0",
        "tmp%0#3"
      ]
    },
    "1944": {
      "op": "intc 11 // 65535",
      "defined_out": [
        "65535",
        "commit_rand_salt_id#0",
        "low_add#0",
        "player#0",
        "result#1",
        "state#2",
        "tmp%0#3"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "low_add#0",
        "tmp%0#3",
        "65535"
      ]
    },
    "1946": {
      "op": "%",
      "defined_out": [
        "commit_rand_salt_id#0",
        "low_add#0",
        "player#0",
        "result#1",
        "state#2",
        "threshold#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "low_add#0",
        "threshold#0"
      ]
    },
    "1947": {
      "op": "frame_bury 14",
      "defined_out": [
        "commit_rand_salt_id#0",
        "low_add#0",
        "player#0",
        "result#1",
        "state#2",
        "threshold#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "low_add#0"
      ]
    },
    "1949": {
      "op": "intc_1 // 0",
      "defined_out": [
        "commit_rand_salt_id#0",
        "i#0",
        "low_add#0",
        "player#0",
        "result#1",
        "state#2",
        "threshold#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "low_add#0",
        "i#0"
      ]
    },
    "1950": {
      "op": "frame_bury 11",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "state#2"
      ]
    },
    "1952": {
      "op": "frame_bury 13",
      "defined_out": [
        "commit_rand_salt_id#0",
        "i#0",
        "player#0",
        "result#1",
        "state#2",
        "threshold#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1"
      ]
    },
    "1954": {
      "block": "play_game_for_header@12",
      "stack_in": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1"
      ],
      "op": "frame_dig 11",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "i#0"
      ]
    },
    "1956": {
      "op": "pushint 255 // 255",
      "defined_out": [
        "255",
        "i#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "i#0",
        "255"
      ]
    },
    "1959": {
      "op": "<",
      "defined_out": [
        "continue_looping%1#0",
        "i#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "continue_looping%1#0"
      ]
    },
    "1960": {
      "op": "bz play_game_after_for@17",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1"
      ]
    },
    "1963": {
      "block": "play_game_while_top@14",
      "stack_in": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1"
      ],
      "op": "frame_dig 13",
      "defined_out": [
        "state#2"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "state#2"
      ]
    },
    "1965": {
      "op": "dup",
      "defined_out": [
        "state#2",
        "state#2 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "state#2",
        "state#2 (copy)"
      ]
    },
    "1966": {
      "op": "intc 7 // 6364136223846793005",
      "defined_out": [
        "6364136223846793005",
        "state#2",
        "state#2 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "state#2",
        "state#2 (copy)",
        "6364136223846793005"
      ]
    },
    "1968": {
      "op": "mulw",
      "defined_out": [
        "_high_mul#0",
        "low_mul#0",
        "state#2"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "state#2",
        "_high_mul#0",
        "low_mul#0"
      ]
    },
    "1969": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "state#2",
        "low_mul#0"
      ]
    },
    "1971": {
      "op": "intc 8 // 1442695040888963407",
      "defined_out": [
        "1442695040888963407",
        "low_mul#0",
        "state#2"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "state#2",
        "low_mul#0",
        "1442695040888963407"
      ]
    },
    "1973": {
      "op": "addw",
      "defined_out": [
        "_high_add#0",
        "low_add#0",
        "state#2"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "state#2",
        "_high_add#0",
        "low_add#0"
      ]
    },
    "1974": {
      "op": "cover 2",
      "defined_out": [
        "_high_add#0",
        "low_add#0",
        "state#2"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "low_add#0",
        "state#2",
        "_high_add#0"
      ]
    },
    "1976": {
      "op": "pop",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "low_add#0",
        "state#2"
      ]
    },
    "1977": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "low_add#0",
        "state#2",
        "state#2 (copy)"
      ]
    },
    "1978": {
      "op": "pushint 18 // 18",
      "defined_out": [
        "18",
        "low_add#0",
        "state#2",
        "state#2 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "low_add#0",
        "state#2",
        "state#2 (copy)",
        "18"
      ]
    },
    "1980": {
      "op": "shr",
      "defined_out": [
        "low_add#0",
        "state#2",
        "tmp%0#3"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "low_add#0",
        "state#2",
        "tmp%0#3"
      ]
    },
    "1981": {
      "op": "dig 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "low_add#0",
        "state#2",
        "tmp%0#3",
        "state#2 (copy)"
      ]
    },
    "1983": {
      "op": "^",
      "defined_out": [
        "low_add#0",
        "state#2",
        "tmp%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "low_add#0",
        "state#2",
        "tmp%1#0"
      ]
    },
    "1984": {
      "op": "pushint 27 // 27",
      "defined_out": [
        "27",
        "low_add#0",
        "state#2",
        "tmp%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "low_add#0",
        "state#2",
        "tmp%1#0",
        "27"
      ]
    },
    "1986": {
      "op": "shr",
      "defined_out": [
        "low_add#0",
        "state#2",
        "value#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "low_add#0",
        "state#2",
        "value#0"
      ]
    },
    "1987": {
      "op": "intc 9 // 4294967295",
      "defined_out": [
        "4294967295",
        "low_add#0",
        "state#2",
        "value#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "low_add#0",
        "state#2",
        "value#0",
        "4294967295"
      ]
    },
    "1989": {
      "op": "&",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "low_add#0",
        "state#2",
        "value#0"
      ]
    },
    "1990": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "low_add#0",
        "value#0",
        "state#2"
      ]
    },
    "1991": {
      "op": "pushint 59 // 59",
      "defined_out": [
        "59",
        "low_add#0",
        "state#2",
        "value#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "low_add#0",
        "value#0",
        "state#2",
        "59"
      ]
    },
    "1993": {
      "op": "shr",
      "defined_out": [
        "low_add#0",
        "rot#0",
        "state#2",
        "value#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "low_add#0",
        "value#0",
        "rot#0"
      ]
    },
    "1994": {
      "op": "dup2",
      "defined_out": [
        "low_add#0",
        "rot#0",
        "rot#0 (copy)",
        "state#2",
        "value#0",
        "value#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "low_add#0",
        "value#0",
        "rot#0",
        "value#0 (copy)",
        "rot#0 (copy)"
      ]
    },
    "1995": {
      "op": "shr",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "low_add#0",
        "value#0",
        "rot#0",
        "tmp%0#3"
      ]
    },
    "1996": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "low_add#0",
        "value#0",
        "tmp%0#3",
        "rot#0"
      ]
    },
    "1997": {
      "op": "~",
      "defined_out": [
        "low_add#0",
        "state#2",
        "tmp%0#11",
        "tmp%0#3",
        "value#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "low_add#0",
        "value#0",
        "tmp%0#3",
        "tmp%0#11"
      ]
    },
    "1998": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "low_add#0",
        "state#2",
        "tmp%0#11",
        "tmp%0#3",
        "value#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "low_add#0",
        "value#0",
        "tmp%0#3",
        "tmp%0#11",
        "1"
      ]
    },
    "1999": {
      "op": "addw",
      "defined_out": [
        "_addw_high#0",
        "addw_low#0",
        "low_add#0",
        "state#2",
        "tmp%0#3",
        "value#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "low_add#0",
        "value#0",
        "tmp%0#3",
        "_addw_high#0",
        "addw_low#0"
      ]
    },
    "2000": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "low_add#0",
        "value#0",
        "tmp%0#3",
        "addw_low#0"
      ]
    },
    "2002": {
      "op": "pushint 31 // 31",
      "defined_out": [
        "31",
        "addw_low#0",
        "low_add#0",
        "state#2",
        "tmp%0#3",
        "value#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "low_add#0",
        "value#0",
        "tmp%0#3",
        "addw_low#0",
        "31"
      ]
    },
    "2004": {
      "op": "&",
      "defined_out": [
        "low_add#0",
        "state#2",
        "tmp%0#3",
        "tmp%2#2",
        "value#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "low_add#0",
        "value#0",
        "tmp%0#3",
        "tmp%2#2"
      ]
    },
    "2005": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "low_add#0",
        "tmp%0#3",
        "tmp%2#2",
        "value#0"
      ]
    },
    "2007": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "low_add#0",
        "tmp%0#3",
        "value#0",
        "tmp%2#2"
      ]
    },
    "2008": {
      "op": "shl",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "low_add#0",
        "tmp%0#3",
        "value#0"
      ]
    },
    "2009": {
      "op": "intc 9 // 4294967295",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "low_add#0",
        "tmp%0#3",
        "value#0",
        "4294967295"
      ]
    },
    "2011": {
      "op": "&",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "low_add#0",
        "tmp%0#3",
        "tmp%0#11"
      ]
    },
    "2012": {
      "op": "|",
      "defined_out": [
        "candidate#0",
        "low_add#0",
        "state#2"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "low_add#0",
        "candidate#0"
      ]
    },
    "2013": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "low_add#0",
        "candidate#0",
        "candidate#0"
      ]
    },
    "2014": {
      "op": "frame_bury 8",
      "defined_out": [
        "candidate#0",
        "low_add#0",
        "state#2"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "low_add#0",
        "candidate#0"
      ]
    },
    "2016": {
      "op": "frame_dig 14",
      "defined_out": [
        "candidate#0",
        "low_add#0",
        "state#2",
        "threshold#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "low_add#0",
        "candidate#0",
        "threshold#0"
      ]
    },
    "2018": {
      "op": ">=",
      "defined_out": [
        "candidate#0",
        "low_add#0",
        "state#2",
        "threshold#0",
        "tmp%20#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "low_add#0",
        "tmp%20#1"
      ]
    },
    "2019": {
      "op": "bz play_game_after_if_else@16",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "low_add#0"
      ]
    },
    "2022": {
      "op": "frame_dig 8",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "low_add#0",
        "candidate#0"
      ]
    },
    "2024": {
      "op": "intc 11 // 65535",
      "defined_out": [
        "65535",
        "candidate#0",
        "low_add#0",
        "state#2",
        "threshold#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "low_add#0",
        "candidate#0",
        "65535"
      ]
    },
    "2026": {
      "op": "%",
      "defined_out": [
        "candidate#0",
        "low_add#0",
        "state#2",
        "threshold#0",
        "tmp%21#2"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "low_add#0",
        "tmp%21#2"
      ]
    },
    "2027": {
      "op": "intc_0 // 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "low_add#0",
        "tmp%21#2",
        "1"
      ]
    },
    "2028": {
      "op": "+",
      "defined_out": [
        "candidate#0",
        "low_add#0",
        "state#2",
        "threshold#0",
        "tmp%22#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "low_add#0",
        "tmp%22#1"
      ]
    },
    "2029": {
      "op": "itob",
      "defined_out": [
        "candidate#0",
        "low_add#0",
        "state#2",
        "threshold#0",
        "tmp%23#2"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "low_add#0",
        "tmp%23#2"
      ]
    },
    "2030": {
      "op": "extract 6 2",
      "defined_out": [
        "candidate#0",
        "low_add#0",
        "state#2",
        "threshold#0",
        "tmp%24#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "low_add#0",
        "tmp%24#1"
      ]
    },
    "2033": {
      "op": "frame_dig 5",
      "defined_out": [
        "candidate#0",
        "low_add#0",
        "result#1",
        "state#2",
        "threshold#0",
        "tmp%24#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "low_add#0",
        "tmp%24#1",
        "result#1"
      ]
    },
    "2035": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "low_add#0",
        "result#1",
        "tmp%24#1"
      ]
    },
    "2036": {
      "op": "concat",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "low_add#0",
        "result#1"
      ]
    },
    "2037": {
      "op": "frame_bury 5",
      "defined_out": [
        "candidate#0",
        "low_add#0",
        "result#1",
        "state#2",
        "threshold#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "low_add#0"
      ]
    },
    "2039": {
      "op": "frame_dig 11",
      "defined_out": [
        "candidate#0",
        "i#0",
        "low_add#0",
        "result#1",
        "state#2",
        "threshold#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "low_add#0",
        "i#0"
      ]
    },
    "2041": {
      "op": "intc_0 // 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "low_add#0",
        "i#0",
        "1"
      ]
    },
    "2042": {
      "op": "+",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "low_add#0",
        "i#0"
      ]
    },
    "2043": {
      "op": "frame_bury 11",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "state#2"
      ]
    },
    "2045": {
      "op": "frame_bury 13",
      "defined_out": [
        "candidate#0",
        "i#0",
        "result#1",
        "state#2",
        "threshold#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1"
      ]
    },
    "2047": {
      "op": "b play_game_for_header@12"
    },
    "2050": {
      "block": "play_game_after_if_else@16",
      "stack_in": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "low_add#0"
      ],
      "op": "frame_bury 13",
      "defined_out": [
        "state#2"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1"
      ]
    },
    "2052": {
      "op": "b play_game_while_top@14"
    },
    "2055": {
      "block": "play_game_after_for@17",
      "stack_in": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1"
      ],
      "op": "intc_1 // 0",
      "defined_out": [
        "score#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "score#0"
      ]
    },
    "2056": {
      "op": "frame_bury 12",
      "defined_out": [
        "score#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1"
      ]
    },
    "2058": {
      "op": "frame_dig 5",
      "defined_out": [
        "result#1",
        "score#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "result#1"
      ]
    },
    "2060": {
      "op": "len",
      "defined_out": [
        "result#1",
        "score#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "tmp%3#1"
      ]
    },
    "2061": {
      "op": "frame_bury 16",
      "defined_out": [
        "result#1",
        "score#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1"
      ]
    },
    "2063": {
      "op": "intc_2 // 2",
      "defined_out": [
        "i#0",
        "result#1",
        "score#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "i#0"
      ]
    },
    "2064": {
      "op": "frame_bury 11",
      "defined_out": [
        "i#0",
        "result#1",
        "score#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1"
      ]
    },
    "2066": {
      "block": "play_game_for_header@19",
      "stack_in": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1"
      ],
      "op": "frame_dig 11",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "i#0"
      ]
    },
    "2068": {
      "op": "frame_dig 16",
      "defined_out": [
        "i#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "i#0",
        "tmp%3#1"
      ]
    },
    "2070": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "continue_looping%0#0"
      ]
    },
    "2071": {
      "op": "bz play_game_after_for@22",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1"
      ]
    },
    "2074": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "i#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "2"
      ]
    },
    "2075": {
      "op": "frame_dig 16",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "2",
        "tmp%3#1"
      ]
    },
    "2077": {
      "op": "dup",
      "defined_out": [
        "2",
        "i#0",
        "tmp%3#1",
        "tmp%3#1 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "2",
        "tmp%3#1 (copy)",
        "tmp%3#1 (copy)"
      ]
    },
    "2078": {
      "op": "cover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "tmp%3#1",
        "2",
        "tmp%3#1 (copy)"
      ]
    },
    "2080": {
      "op": ">=",
      "defined_out": [
        "i#0",
        "is_out_of_bounds%0#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "tmp%3#1",
        "is_out_of_bounds%0#0"
      ]
    },
    "2081": {
      "op": "intc_2 // 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "tmp%3#1",
        "is_out_of_bounds%0#0",
        "2"
      ]
    },
    "2082": {
      "op": "dig 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "tmp%3#1",
        "is_out_of_bounds%0#0",
        "2",
        "tmp%3#1 (copy)"
      ]
    },
    "2084": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "tmp%3#1",
        "2",
        "tmp%3#1 (copy)",
        "is_out_of_bounds%0#0"
      ]
    },
    "2086": {
      "op": "select",
      "defined_out": [
        "bounded_index%0#0",
        "i#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "tmp%3#1",
        "bounded_index%0#0"
      ]
    },
    "2087": {
      "op": "frame_dig 5",
      "defined_out": [
        "bounded_index%0#0",
        "i#0",
        "result#1",
        "tmp%3#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "tmp%3#1",
        "bounded_index%0#0",
        "result#1"
      ]
    },
    "2089": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "tmp%3#1",
        "result#1",
        "bounded_index%0#0"
      ]
    },
    "2090": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "result#1",
        "bounded_index%0#0",
        "tmp%3#1"
      ]
    },
    "2092": {
      "op": "substring3",
      "defined_out": [
        "i#0",
        "result#1",
        "tmp%3#1",
        "tmp%4#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "tmp%4#1"
      ]
    },
    "2093": {
      "op": "frame_dig 11",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "tmp%4#1",
        "i#0"
      ]
    },
    "2095": {
      "op": "extract_uint16",
      "defined_out": [
        "i#0",
        "result#1",
        "roll#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "roll#0"
      ]
    },
    "2096": {
      "op": "pushint 10992 // 10992",
      "defined_out": [
        "10992",
        "i#0",
        "result#1",
        "roll#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "roll#0",
        "10992"
      ]
    },
    "2099": {
      "op": "<=",
      "defined_out": [
        "i#0",
        "result#1",
        "tmp%3#1",
        "tmp%5#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "tmp%5#0"
      ]
    },
    "2100": {
      "op": "bnz play_game_after_for@22",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1"
      ]
    },
    "2103": {
      "op": "frame_dig 12",
      "defined_out": [
        "i#0",
        "result#1",
        "score#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "score#0"
      ]
    },
    "2105": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "i#0",
        "result#1",
        "score#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "score#0",
        "1"
      ]
    },
    "2106": {
      "op": "+",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "score#0"
      ]
    },
    "2107": {
      "op": "frame_bury 12",
      "defined_out": [
        "i#0",
        "result#1",
        "score#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1"
      ]
    },
    "2109": {
      "op": "frame_dig 11",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "i#0"
      ]
    },
    "2111": {
      "op": "intc_2 // 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "i#0",
        "2"
      ]
    },
    "2112": {
      "op": "+",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "i#0"
      ]
    },
    "2113": {
      "op": "frame_bury 11",
      "defined_out": [
        "i#0",
        "result#1",
        "score#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1"
      ]
    },
    "2115": {
      "op": "b play_game_for_header@19"
    },
    "2118": {
      "block": "play_game_after_for@22",
      "stack_in": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1"
      ],
      "op": "frame_dig 9",
      "defined_out": [
        "commit_rand_salt_id#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "commit_rand_salt_id#0"
      ]
    },
    "2120": {
      "op": "itob",
      "defined_out": [
        "commit_rand_salt_id#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "val_as_bytes%1#0"
      ]
    },
    "2121": {
      "op": "frame_dig 12",
      "defined_out": [
        "commit_rand_salt_id#0",
        "score#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "val_as_bytes%1#0",
        "score#0"
      ]
    },
    "2123": {
      "op": "itob",
      "defined_out": [
        "commit_rand_salt_id#0",
        "score#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ]
    },
    "2124": {
      "op": "dup",
      "defined_out": [
        "commit_rand_salt_id#0",
        "score#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%2#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%2#0 (copy)"
      ]
    },
    "2125": {
      "op": "bitlen",
      "defined_out": [
        "bitlen%0#0",
        "commit_rand_salt_id#0",
        "score#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "bitlen%0#0"
      ]
    },
    "2126": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "bitlen%0#0",
        "commit_rand_salt_id#0",
        "score#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "bitlen%0#0",
        "8"
      ]
    },
    "2128": {
      "op": "<=",
      "defined_out": [
        "commit_rand_salt_id#0",
        "no_overflow%0#0",
        "score#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "no_overflow%0#0"
      ]
    },
    "2129": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ]
    },
    "2130": {
      "op": "extract 7 1",
      "defined_out": [
        "commit_rand_salt_id#0",
        "score#0",
        "uint8%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "val_as_bytes%1#0",
        "uint8%0#0"
      ]
    },
    "2133": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "val_as_bytes%1#0",
        "uint8%0#0",
        "uint8%0#0"
      ]
    },
    "2134": {
      "op": "frame_bury 6",
      "defined_out": [
        "commit_rand_salt_id#0",
        "score#0",
        "uint8%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "val_as_bytes%1#0",
        "uint8%0#0"
      ]
    },
    "2136": {
      "op": "frame_dig 1",
      "defined_out": [
        "commit_rand_salt_id#0",
        "encoded_value%0#0",
        "score#0",
        "uint8%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "val_as_bytes%1#0",
        "uint8%0#0",
        "encoded_value%0#0"
      ]
    },
    "2138": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "uint8%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "2140": {
      "op": "concat",
      "defined_out": [
        "commit_rand_salt_id#0",
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0",
        "score#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "uint8%0#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "2141": {
      "op": "frame_dig 4",
      "defined_out": [
        "commit_rand_salt_id#0",
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0",
        "player#0",
        "score#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "uint8%0#0",
        "encoded_tuple_buffer%2#0",
        "player#0"
      ]
    },
    "2143": {
      "op": "concat",
      "defined_out": [
        "commit_rand_salt_id#0",
        "encoded_tuple_buffer%3#0",
        "encoded_value%0#0",
        "player#0",
        "score#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "uint8%0#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "2144": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "encoded_tuple_buffer%3#0",
        "uint8%0#0"
      ]
    },
    "2145": {
      "op": "concat",
      "defined_out": [
        "commit_rand_salt_id#0",
        "encoded_tuple_buffer%4#0",
        "encoded_value%0#0",
        "player#0",
        "score#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "2146": {
      "op": "pushbytes 0x1cc2af51 // method \"player_score(uint64,uint64,address,uint8)\"",
      "defined_out": [
        "Method(player_score(uint64,uint64,address,uint8))",
        "commit_rand_salt_id#0",
        "encoded_tuple_buffer%4#0",
        "encoded_value%0#0",
        "player#0",
        "score#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "encoded_tuple_buffer%4#0",
        "Method(player_score(uint64,uint64,address,uint8))"
      ]
    },
    "2152": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "Method(player_score(uint64,uint64,address,uint8))",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "2153": {
      "op": "concat",
      "defined_out": [
        "commit_rand_salt_id#0",
        "encoded_value%0#0",
        "event%0#0",
        "player#0",
        "score#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "event%0#0"
      ]
    },
    "2154": {
      "op": "log",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1"
      ]
    },
    "2155": {
      "op": "frame_dig 2",
      "defined_out": [
        "commit_rand_salt_id#0",
        "encoded_value%0#0",
        "game_state#0",
        "player#0",
        "score#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0"
      ]
    },
    "2157": {
      "error": "Index access is out of bounds",
      "op": "extract 56 32 // on error: Index access is out of bounds",
      "defined_out": [
        "commit_rand_salt_id#0",
        "encoded_value%0#0",
        "game_state#0",
        "player#0",
        "score#0",
        "tmp%6#1",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "tmp%6#1"
      ]
    },
    "2160": {
      "op": "global ZeroAddress",
      "defined_out": [
        "commit_rand_salt_id#0",
        "encoded_value%0#0",
        "game_state#0",
        "player#0",
        "score#0",
        "tmp%6#1",
        "tmp%7#1",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "tmp%6#1",
        "tmp%7#1"
      ]
    },
    "2162": {
      "op": "==",
      "defined_out": [
        "commit_rand_salt_id#0",
        "encoded_value%0#0",
        "game_state#0",
        "player#0",
        "score#0",
        "tmp%8#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "tmp%8#0"
      ]
    },
    "2163": {
      "op": "bnz play_game_if_body@24",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1"
      ]
    },
    "2166": {
      "op": "frame_dig 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0"
      ]
    },
    "2168": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "commit_rand_salt_id#0",
        "encoded_value%0#0",
        "game_state#0",
        "player#0",
        "score#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0",
        "3"
      ]
    },
    "2170": {
      "op": "getbyte",
      "defined_out": [
        "commit_rand_salt_id#0",
        "encoded_value%0#0",
        "game_state#0",
        "player#0",
        "score#0",
        "tmp%10#1",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "tmp%10#1"
      ]
    },
    "2171": {
      "op": "frame_dig 12",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "tmp%10#1",
        "score#0"
      ]
    },
    "2173": {
      "op": "<",
      "defined_out": [
        "commit_rand_salt_id#0",
        "encoded_value%0#0",
        "game_state#0",
        "player#0",
        "score#0",
        "tmp%11#1",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "tmp%11#1"
      ]
    },
    "2174": {
      "op": "bz play_game_else_body@25",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1"
      ]
    },
    "2177": {
      "block": "play_game_if_body@24",
      "stack_in": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0"
      ]
    },
    "2179": {
      "op": "dup",
      "defined_out": [
        "game_state#0",
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "2180": {
      "error": "Index access is out of bounds",
      "op": "extract 4 1 // on error: Index access is out of bounds",
      "defined_out": [
        "assigned_value%0#1",
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0",
        "assigned_value%0#1"
      ]
    },
    "2183": {
      "op": "replace2 5",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0"
      ]
    },
    "2185": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "2186": {
      "error": "Index access is out of bounds",
      "op": "extract 88 32 // on error: Index access is out of bounds",
      "defined_out": [
        "assigned_value%1#1",
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0",
        "assigned_value%1#1"
      ]
    },
    "2189": {
      "op": "replace2 120",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0"
      ]
    },
    "2191": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "2192": {
      "error": "Index access is out of bounds",
      "op": "extract 3 1 // on error: Index access is out of bounds",
      "defined_out": [
        "assigned_value%2#0",
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0",
        "assigned_value%2#0"
      ]
    },
    "2195": {
      "op": "replace2 4",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0"
      ]
    },
    "2197": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "2198": {
      "error": "Index access is out of bounds",
      "op": "extract 56 32 // on error: Index access is out of bounds",
      "defined_out": [
        "assigned_value%3#0",
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0",
        "assigned_value%3#0"
      ]
    },
    "2201": {
      "op": "replace2 88",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0"
      ]
    },
    "2203": {
      "op": "frame_dig 6",
      "defined_out": [
        "game_state#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0",
        "uint8%0#0"
      ]
    },
    "2205": {
      "op": "replace2 3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0"
      ]
    },
    "2207": {
      "op": "frame_dig 4",
      "defined_out": [
        "game_state#0",
        "player#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0",
        "player#0"
      ]
    },
    "2209": {
      "op": "replace2 56",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0"
      ]
    },
    "2211": {
      "op": "frame_bury 2",
      "defined_out": [
        "game_state#0",
        "player#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1"
      ]
    },
    "2213": {
      "block": "play_game_after_if_else@33",
      "stack_in": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1"
      ],
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "0"
      ]
    },
    "2214": {
      "op": "bytec 6 // \"commit_rand_salt_id\"",
      "defined_out": [
        "\"commit_rand_salt_id\"",
        "0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "0",
        "\"commit_rand_salt_id\""
      ]
    },
    "2216": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%9#0",
        "maybe_value%6#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "maybe_value%6#0",
        "maybe_exists%9#0"
      ]
    },
    "2217": {
      "error": "check self.commit_rand_salt_id exists",
      "op": "assert // check self.commit_rand_salt_id exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "maybe_value%6#0"
      ]
    },
    "2218": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "maybe_value%6#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "maybe_value%6#0",
        "1"
      ]
    },
    "2219": {
      "op": "+",
      "defined_out": [
        "materialized_values%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "materialized_values%1#0"
      ]
    },
    "2220": {
      "op": "bytec 6 // \"commit_rand_salt_id\"",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "materialized_values%1#0",
        "\"commit_rand_salt_id\""
      ]
    },
    "2222": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "\"commit_rand_salt_id\"",
        "materialized_values%1#0"
      ]
    },
    "2223": {
      "op": "app_global_put",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1"
      ]
    },
    "2224": {
      "op": "frame_dig 2",
      "defined_out": [
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0"
      ]
    },
    "2226": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0",
        "3"
      ]
    },
    "2228": {
      "op": "getbyte",
      "defined_out": [
        "game_state#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "tmp%16#0"
      ]
    },
    "2229": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "tmp%16#0",
        "tmp%16#0"
      ]
    },
    "2230": {
      "op": "frame_bury 15",
      "defined_out": [
        "game_state#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "tmp%16#0"
      ]
    },
    "2232": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "tmp%16#0",
        "0"
      ]
    },
    "2233": {
      "op": "bytec 8 // \"ath_score\"",
      "defined_out": [
        "\"ath_score\"",
        "0",
        "game_state#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "tmp%16#0",
        "0",
        "\"ath_score\""
      ]
    },
    "2235": {
      "op": "app_global_get_ex",
      "defined_out": [
        "game_state#0",
        "maybe_exists%10#0",
        "maybe_value%7#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "tmp%16#0",
        "maybe_value%7#0",
        "maybe_exists%10#0"
      ]
    },
    "2236": {
      "error": "check self.ath_score exists",
      "op": "assert // check self.ath_score exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "tmp%16#0",
        "maybe_value%7#0"
      ]
    },
    "2237": {
      "op": ">",
      "defined_out": [
        "game_state#0",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "tmp%17#0"
      ]
    },
    "2238": {
      "op": "bz play_game_after_if_else@7",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1"
      ]
    },
    "2241": {
      "op": "bytec 8 // \"ath_score\"",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "\"ath_score\""
      ]
    },
    "2243": {
      "op": "frame_dig 15",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "\"ath_score\"",
        "tmp%16#0"
      ]
    },
    "2245": {
      "op": "app_global_put",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1"
      ]
    },
    "2246": {
      "op": "frame_dig 10",
      "defined_out": [
        "did_exist#0",
        "game_state#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "did_exist#0"
      ]
    },
    "2248": {
      "op": "bz play_game_after_if_else@6",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1"
      ]
    },
    "2251": {
      "op": "frame_dig 7",
      "defined_out": [
        "balance#0",
        "did_exist#0",
        "game_state#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "balance#0"
      ]
    },
    "2253": {
      "op": "intc_0 // 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "balance#0",
        "1"
      ]
    },
    "2254": {
      "op": "==",
      "defined_out": [
        "balance#0",
        "did_exist#0",
        "game_state#0",
        "tmp%16#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "tmp%19#0"
      ]
    },
    "2255": {
      "op": "bz play_game_after_if_else@6",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1"
      ]
    },
    "2258": {
      "op": "bytec_2 // 0x745f",
      "defined_out": [
        "0x745f",
        "balance#0",
        "did_exist#0",
        "game_state#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "0x745f"
      ]
    },
    "2259": {
      "op": "box_get",
      "defined_out": [
        "balance#0",
        "did_exist#0",
        "game_state#0",
        "maybe_exists%11#0",
        "maybe_value%8#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "maybe_value%8#0",
        "maybe_exists%11#0"
      ]
    },
    "2260": {
      "error": "check self.box_game_trophy exists",
      "op": "assert // check self.box_game_trophy exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "maybe_value%8#0"
      ]
    },
    "2261": {
      "op": "dup",
      "defined_out": [
        "balance#0",
        "did_exist#0",
        "game_state#0",
        "maybe_value%8#0",
        "maybe_value%8#0 (copy)",
        "tmp%16#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "maybe_value%8#0",
        "maybe_value%8#0 (copy)"
      ]
    },
    "2262": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "maybe_value%8#0",
        "maybe_value%8#0 (copy)",
        "0"
      ]
    },
    "2263": {
      "op": "extract_uint64",
      "defined_out": [
        "asset_id#0",
        "balance#0",
        "did_exist#0",
        "game_state#0",
        "maybe_value%8#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "maybe_value%8#0",
        "asset_id#0"
      ]
    },
    "2264": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "asset_id#0",
        "maybe_value%8#0"
      ]
    },
    "2265": {
      "error": "Index access is out of bounds",
      "op": "extract 8 32 // on error: Index access is out of bounds",
      "defined_out": [
        "asset_id#0",
        "asset_sender#0",
        "balance#0",
        "did_exist#0",
        "game_state#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "asset_id#0",
        "asset_sender#0"
      ]
    },
    "2268": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "asset_id#0",
        "asset_receiver#0",
        "asset_sender#0",
        "balance#0",
        "did_exist#0",
        "game_state#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "asset_id#0",
        "asset_sender#0",
        "asset_receiver#0"
      ]
    },
    "2270": {
      "op": "itxn_begin"
    },
    "2271": {
      "op": "intc_0 // 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "asset_id#0",
        "asset_sender#0",
        "asset_receiver#0",
        "1"
      ]
    },
    "2272": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "asset_id#0",
        "asset_sender#0",
        "asset_receiver#0"
      ]
    },
    "2274": {
      "op": "itxn_field AssetReceiver"
    },
    "2276": {
      "op": "itxn_field AssetSender",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "asset_id#0",
        "asset_receiver#0"
      ]
    },
    "2278": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1"
      ]
    },
    "2280": {
      "op": "pushint 4 // axfer",
      "defined_out": [
        "axfer",
        "balance#0",
        "did_exist#0",
        "game_state#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "axfer"
      ]
    },
    "2282": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1"
      ]
    },
    "2284": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "0"
      ]
    },
    "2285": {
      "op": "itxn_field Fee",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1"
      ]
    },
    "2287": {
      "op": "itxn_submit"
    },
    "2288": {
      "block": "play_game_after_if_else@6",
      "stack_in": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1"
      ],
      "op": "txn Sender",
      "defined_out": [
        "materialized_values%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "materialized_values%3#0"
      ]
    },
    "2290": {
      "op": "bytec 9 // \"ath_address\"",
      "defined_out": [
        "\"ath_address\"",
        "materialized_values%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "materialized_values%3#0",
        "\"ath_address\""
      ]
    },
    "2292": {
      "op": "dig 1",
      "defined_out": [
        "\"ath_address\"",
        "materialized_values%3#0",
        "materialized_values%3#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "materialized_values%3#0",
        "\"ath_address\"",
        "materialized_values%3#0 (copy)"
      ]
    },
    "2294": {
      "op": "app_global_put",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "materialized_values%3#0"
      ]
    },
    "2295": {
      "op": "bytec_2 // 0x745f",
      "defined_out": [
        "0x745f",
        "materialized_values%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "materialized_values%3#0",
        "0x745f"
      ]
    },
    "2296": {
      "op": "box_get",
      "defined_out": [
        "materialized_values%3#0",
        "maybe_exists%14#0",
        "maybe_value%11#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "materialized_values%3#0",
        "maybe_value%11#0",
        "maybe_exists%14#0"
      ]
    },
    "2297": {
      "error": "check self.box_game_trophy exists",
      "op": "assert // check self.box_game_trophy exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "materialized_values%3#0",
        "maybe_value%11#0"
      ]
    },
    "2298": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "maybe_value%11#0",
        "materialized_values%3#0"
      ]
    },
    "2299": {
      "op": "replace2 8",
      "defined_out": [
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "updated_data%0#0"
      ]
    },
    "2301": {
      "op": "bytec_2 // 0x745f",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "updated_data%0#0",
        "0x745f"
      ]
    },
    "2302": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "0x745f",
        "updated_data%0#0"
      ]
    },
    "2303": {
      "op": "box_put",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1"
      ]
    },
    "2304": {
      "block": "play_game_after_if_else@7",
      "stack_in": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0"
      ]
    },
    "2306": {
      "op": "dup",
      "defined_out": [
        "game_state#0",
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "2307": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "game_state#0",
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0",
        "game_state#0 (copy)",
        "2"
      ]
    },
    "2308": {
      "op": "getbyte",
      "defined_out": [
        "game_state#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0",
        "tmp%24#0"
      ]
    },
    "2309": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "game_state#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0",
        "tmp%24#0",
        "1"
      ]
    },
    "2310": {
      "op": "-",
      "defined_out": [
        "game_state#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0",
        "to_encode%0#0"
      ]
    },
    "2311": {
      "op": "itob",
      "defined_out": [
        "game_state#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0",
        "val_as_bytes%0#0"
      ]
    },
    "2312": {
      "op": "dup",
      "defined_out": [
        "game_state#0",
        "val_as_bytes%0#0",
        "val_as_bytes%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0",
        "val_as_bytes%0#0",
        "val_as_bytes%0#0 (copy)"
      ]
    },
    "2313": {
      "op": "bitlen",
      "defined_out": [
        "bitlen%0#0",
        "game_state#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0",
        "val_as_bytes%0#0",
        "bitlen%0#0"
      ]
    },
    "2314": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "bitlen%0#0",
        "game_state#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0",
        "val_as_bytes%0#0",
        "bitlen%0#0",
        "8"
      ]
    },
    "2316": {
      "op": "<=",
      "defined_out": [
        "game_state#0",
        "no_overflow%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0",
        "val_as_bytes%0#0",
        "no_overflow%0#0"
      ]
    },
    "2317": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0",
        "val_as_bytes%0#0"
      ]
    },
    "2318": {
      "op": "extract 7 1",
      "defined_out": [
        "game_state#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0",
        "uint8%0#0"
      ]
    },
    "2321": {
      "op": "replace2 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0"
      ]
    },
    "2323": {
      "op": "frame_dig 0",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0",
        "box_prefixed_key%0#0"
      ]
    },
    "2325": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "2326": {
      "op": "box_put",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1"
      ]
    },
    "2327": {
      "retsub": true,
      "op": "retsub"
    },
    "2328": {
      "block": "play_game_else_body@25",
      "stack_in": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0"
      ]
    },
    "2330": {
      "error": "Index access is out of bounds",
      "op": "extract 88 32 // on error: Index access is out of bounds",
      "defined_out": [
        "game_state#0",
        "tmp%12#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "tmp%12#1"
      ]
    },
    "2333": {
      "op": "global ZeroAddress",
      "defined_out": [
        "game_state#0",
        "tmp%12#1",
        "tmp%13#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "tmp%12#1",
        "tmp%13#1"
      ]
    },
    "2335": {
      "op": "==",
      "defined_out": [
        "game_state#0",
        "tmp%14#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "tmp%14#1"
      ]
    },
    "2336": {
      "op": "bnz play_game_if_body@27",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1"
      ]
    },
    "2339": {
      "op": "frame_dig 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0"
      ]
    },
    "2341": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0",
        "4"
      ]
    },
    "2343": {
      "op": "getbyte",
      "defined_out": [
        "game_state#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "tmp%16#0"
      ]
    },
    "2344": {
      "op": "frame_dig 12",
      "defined_out": [
        "game_state#0",
        "score#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "tmp%16#0",
        "score#0"
      ]
    },
    "2346": {
      "op": "<",
      "defined_out": [
        "game_state#0",
        "score#0",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "tmp%17#0"
      ]
    },
    "2347": {
      "op": "bz play_game_else_body@28",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1"
      ]
    },
    "2350": {
      "block": "play_game_if_body@27",
      "stack_in": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0"
      ]
    },
    "2352": {
      "op": "dup",
      "defined_out": [
        "game_state#0",
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "2353": {
      "error": "Index access is out of bounds",
      "op": "extract 4 1 // on error: Index access is out of bounds",
      "defined_out": [
        "assigned_value%6#0",
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0",
        "assigned_value%6#0"
      ]
    },
    "2356": {
      "op": "replace2 5",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0"
      ]
    },
    "2358": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "2359": {
      "error": "Index access is out of bounds",
      "op": "extract 88 32 // on error: Index access is out of bounds",
      "defined_out": [
        "assigned_value%7#0",
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0",
        "assigned_value%7#0"
      ]
    },
    "2362": {
      "op": "replace2 120",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0"
      ]
    },
    "2364": {
      "op": "frame_dig 6",
      "defined_out": [
        "game_state#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0",
        "uint8%0#0"
      ]
    },
    "2366": {
      "op": "replace2 4",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0"
      ]
    },
    "2368": {
      "op": "frame_dig 4",
      "defined_out": [
        "game_state#0",
        "player#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0",
        "player#0"
      ]
    },
    "2370": {
      "op": "replace2 88",
      "defined_out": [
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state%out#23"
      ]
    },
    "2372": {
      "op": "frame_bury 3",
      "defined_out": [
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1"
      ]
    },
    "2374": {
      "block": "play_game_after_if_else@32",
      "stack_in": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0"
      ]
    },
    "2376": {
      "op": "frame_bury 2",
      "defined_out": [
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1"
      ]
    },
    "2378": {
      "op": "b play_game_after_if_else@33"
    },
    "2381": {
      "block": "play_game_else_body@28",
      "stack_in": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0"
      ]
    },
    "2383": {
      "error": "Index access is out of bounds",
      "op": "extract 120 32 // on error: Index access is out of bounds",
      "defined_out": [
        "game_state#0",
        "tmp%18#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "tmp%18#1"
      ]
    },
    "2386": {
      "op": "global ZeroAddress",
      "defined_out": [
        "game_state#0",
        "tmp%18#1",
        "tmp%19#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "tmp%18#1",
        "tmp%19#1"
      ]
    },
    "2388": {
      "op": "==",
      "defined_out": [
        "game_state#0",
        "tmp%20#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "tmp%20#1"
      ]
    },
    "2389": {
      "op": "bnz play_game_if_body@30",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1"
      ]
    },
    "2392": {
      "op": "frame_dig 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0"
      ]
    },
    "2394": {
      "op": "dup",
      "defined_out": [
        "game_state#0",
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "2395": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "game_state#0",
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0",
        "game_state#0 (copy)",
        "5"
      ]
    },
    "2397": {
      "op": "getbyte",
      "defined_out": [
        "game_state#0",
        "tmp%22#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0",
        "tmp%22#1"
      ]
    },
    "2398": {
      "op": "frame_dig 12",
      "defined_out": [
        "game_state#0",
        "score#0",
        "tmp%22#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0",
        "tmp%22#1",
        "score#0"
      ]
    },
    "2400": {
      "op": "<",
      "defined_out": [
        "game_state#0",
        "score#0",
        "tmp%23#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0",
        "tmp%23#1"
      ]
    },
    "2401": {
      "op": "swap",
      "defined_out": [
        "game_state#0",
        "game_state%out#23",
        "score#0",
        "tmp%23#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "tmp%23#1",
        "game_state%out#23"
      ]
    },
    "2402": {
      "op": "frame_bury 3",
      "defined_out": [
        "game_state#0",
        "game_state%out#23",
        "score#0",
        "tmp%23#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "tmp%23#1"
      ]
    },
    "2404": {
      "op": "bz play_game_after_if_else@32",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1"
      ]
    },
    "2407": {
      "block": "play_game_if_body@30",
      "stack_in": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0"
      ]
    },
    "2409": {
      "op": "frame_dig 6",
      "defined_out": [
        "game_state#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0",
        "uint8%0#0"
      ]
    },
    "2411": {
      "op": "replace2 5",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0"
      ]
    },
    "2413": {
      "op": "frame_dig 4",
      "defined_out": [
        "game_state#0",
        "player#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state#0",
        "player#0"
      ]
    },
    "2415": {
      "op": "replace2 120",
      "defined_out": [
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1",
        "game_state%out#23"
      ]
    },
    "2417": {
      "op": "frame_bury 3",
      "defined_out": [
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "balance#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "did_exist#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%16#0",
        "tmp%3#1"
      ]
    },
    "2419": {
      "op": "b play_game_after_if_else@32"
    },
    "2422": {
      "subroutine": "smart_contracts.pieout.contract.Pieout.check_game_event",
      "params": {
        "game_id#0": "uint64",
        "game_event_id#0": "bytes"
      },
      "block": "check_game_event",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "2425": {
      "op": "intc_1 // 0",
      "stack_out": [
        "reinterpret_biguint%0#0"
      ]
    },
    "2426": {
      "op": "global GroupSize",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "tmp%0#0"
      ]
    },
    "2428": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "tmp%0#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "tmp%0#0",
        "1"
      ]
    },
    "2429": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "tmp%1#0"
      ]
    },
    "2430": {
      "error": "Invalid group size. This app call only appproves standalone transactions.",
      "op": "assert // Invalid group size. This app call only appproves standalone transactions.",
      "stack_out": [
        "reinterpret_biguint%0#0"
      ]
    },
    "2431": {
      "op": "frame_dig -2",
      "defined_out": [
        "game_id#0 (copy)"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "game_id#0 (copy)"
      ]
    },
    "2433": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0"
      ]
    },
    "2434": {
      "op": "dup",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "encoded_value%0#0"
      ]
    },
    "2435": {
      "op": "bytec_3 // \"s_\"",
      "defined_out": [
        "\"s_\"",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "encoded_value%0#0",
        "\"s_\""
      ]
    },
    "2436": {
      "op": "swap",
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "\"s_\"",
        "encoded_value%0#0"
      ]
    },
    "2437": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "2438": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "2439": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "_%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2440": {
      "op": "bury 1",
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2442": {
      "error": "Box game state not found. Check if Game ID is valid.",
      "op": "assert // Box game state not found. Check if Game ID is valid.",
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "2443": {
      "op": "box_get",
      "defined_out": [
        "encoded_value%0#0",
        "game_state#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "maybe_exists%1#0"
      ]
    },
    "2444": {
      "error": "check self.box_game_state entry exists",
      "op": "assert // check self.box_game_state entry exists",
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0"
      ]
    },
    "2445": {
      "op": "frame_dig -1",
      "defined_out": [
        "encoded_value%0#0",
        "game_event_id#0 (copy)",
        "game_state#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_event_id#0 (copy)"
      ]
    },
    "2447": {
      "op": "btoi",
      "defined_out": [
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0"
      ]
    },
    "2448": {
      "op": "dup",
      "defined_out": [
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%2#0"
      ]
    },
    "2449": {
      "op": "bnz check_game_event_else_body@2",
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0"
      ]
    },
    "2452": {
      "op": "frame_dig 2",
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0"
      ]
    },
    "2454": {
      "op": "dup",
      "defined_out": [
        "encoded_value%0#0",
        "game_state#0",
        "game_state#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "2455": {
      "op": "intc_0 // 1",
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "game_state#0 (copy)",
        "1"
      ]
    },
    "2456": {
      "op": "getbyte",
      "defined_out": [
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "tmp%5#0"
      ]
    },
    "2457": {
      "op": "frame_dig -2",
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "tmp%5#0",
        "game_id#0 (copy)"
      ]
    },
    "2459": {
      "op": "bytec_1 // \"p_\"",
      "defined_out": [
        "\"p_\"",
        "encoded_value%0#0",
        "game_id#0 (copy)",
        "game_state#0",
        "tmp%2#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "tmp%5#0",
        "game_id#0 (copy)",
        "\"p_\""
      ]
    },
    "2460": {
      "op": "uncover 2",
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "game_id#0 (copy)",
        "\"p_\"",
        "tmp%5#0"
      ]
    },
    "2462": {
      "op": "intc_0 // 1",
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "game_id#0 (copy)",
        "\"p_\"",
        "tmp%5#0",
        "1"
      ]
    },
    "2463": {
      "callsub": "smart_contracts.pieout.subroutines.check_sender_in_game",
      "op": "callsub check_sender_in_game",
      "defined_out": [
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "tmp%6#0"
      ]
    },
    "2466": {
      "op": "intc_0 // 1",
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "tmp%6#0",
        "1"
      ]
    },
    "2467": {
      "op": "==",
      "defined_out": [
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "tmp%7#0"
      ]
    },
    "2468": {
      "error": "Transaction sender is not recognized as a valid player for this game.",
      "op": "assert // Transaction sender is not recognized as a valid player for this game.",
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0"
      ]
    },
    "2469": {
      "callsub": "smart_contracts.pieout.subroutines.is_game_live",
      "op": "callsub is_game_live",
      "defined_out": [
        "encoded_value%0#0",
        "game_state#0",
        "is_game_live#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "is_game_live#0",
        "game_state#0"
      ]
    },
    "2472": {
      "op": "pop",
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "is_game_live#0"
      ]
    },
    "2473": {
      "op": "frame_bury 0"
    },
    "2475": {
      "retsub": true,
      "op": "retsub"
    },
    "2476": {
      "block": "check_game_event_else_body@2",
      "stack_in": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%2#0"
      ]
    },
    "2478": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "tmp%2#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%2#0",
        "2"
      ]
    },
    "2479": {
      "op": "==",
      "defined_out": [
        "tmp%2#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%9#0"
      ]
    },
    "2480": {
      "error": "Game event not found. Check if Game Event ID is valid",
      "op": "assert // Game event not found. Check if Game Event ID is valid",
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0"
      ]
    },
    "2481": {
      "op": "frame_dig 2",
      "defined_out": [
        "game_state#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0"
      ]
    },
    "2483": {
      "op": "dup",
      "defined_out": [
        "game_state#0",
        "game_state#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "2484": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "game_state#0",
        "game_state#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "game_state#0 (copy)",
        "0"
      ]
    },
    "2485": {
      "op": "getbit",
      "defined_out": [
        "game_state#0",
        "is_true%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "is_true%0#0"
      ]
    },
    "2486": {
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x00",
        "game_state#0",
        "is_true%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "is_true%0#0",
        "0x00"
      ]
    },
    "2487": {
      "op": "intc_1 // 0",
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "is_true%0#0",
        "0x00",
        "0"
      ]
    },
    "2488": {
      "op": "uncover 2",
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "0x00",
        "0",
        "is_true%0#0"
      ]
    },
    "2490": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%0#0",
        "game_state#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "encoded_bool%0#0"
      ]
    },
    "2491": {
      "op": "intc_1 // 0",
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "encoded_bool%0#0",
        "0"
      ]
    },
    "2492": {
      "op": "getbit",
      "defined_out": [
        "game_state#0",
        "tmp%10#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "tmp%10#0"
      ]
    },
    "2493": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "game_state#0",
        "tmp%10#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "tmp%10#0",
        "1"
      ]
    },
    "2494": {
      "op": "==",
      "defined_out": [
        "game_state#0",
        "tmp%11#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "tmp%11#0"
      ]
    },
    "2495": {
      "error": "Game state staking finalized value mismatch.",
      "op": "assert // Game state staking finalized value mismatch.",
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0"
      ]
    },
    "2496": {
      "op": "dup",
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "2497": {
      "error": "Index access is out of bounds",
      "op": "extract 8 8 // on error: Index access is out of bounds",
      "defined_out": [
        "game_state#0",
        "reinterpret_biguint%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "2500": {
      "op": "dup",
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "reinterpret_biguint%0#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "2501": {
      "op": "frame_bury 0",
      "defined_out": [
        "game_state#0",
        "reinterpret_biguint%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "2503": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "game_state#0",
        "reinterpret_biguint%0#0",
        "tmp%12#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "reinterpret_biguint%0#0",
        "tmp%12#0"
      ]
    },
    "2505": {
      "op": "itob",
      "defined_out": [
        "game_state#0",
        "reinterpret_biguint%0#0",
        "tmp%13#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "reinterpret_biguint%0#0",
        "tmp%13#0"
      ]
    },
    "2506": {
      "op": "b<",
      "defined_out": [
        "game_state#0",
        "reinterpret_biguint%0#0",
        "tmp%14#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "tmp%14#0"
      ]
    },
    "2507": {
      "error": "Phase deadline expired. Latest block timestamp must not exceed expiry timestamp.",
      "op": "assert // Phase deadline expired. Latest block timestamp must not exceed expiry timestamp.",
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0"
      ]
    },
    "2508": {
      "error": "Index access is out of bounds",
      "op": "extract 24 32 // on error: Index access is out of bounds",
      "defined_out": [
        "game_state#0",
        "reinterpret_biguint%0#0",
        "tmp%15#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%15#0"
      ]
    },
    "2511": {
      "op": "txn Sender",
      "defined_out": [
        "game_state#0",
        "reinterpret_biguint%0#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%15#0",
        "tmp%16#0"
      ]
    },
    "2513": {
      "op": "==",
      "defined_out": [
        "game_state#0",
        "reinterpret_biguint%0#0",
        "tmp%17#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%17#0"
      ]
    },
    "2514": {
      "op": "bnz check_game_event_bool_true@7",
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0"
      ]
    },
    "2517": {
      "op": "frame_dig 2",
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0"
      ]
    },
    "2519": {
      "error": "Index access is out of bounds",
      "op": "extract 56 32 // on error: Index access is out of bounds",
      "defined_out": [
        "game_state#0",
        "reinterpret_biguint%0#0",
        "tmp%18#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%18#0"
      ]
    },
    "2522": {
      "op": "txn Sender",
      "defined_out": [
        "game_state#0",
        "reinterpret_biguint%0#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%18#0",
        "tmp%19#0"
      ]
    },
    "2524": {
      "op": "==",
      "defined_out": [
        "game_state#0",
        "reinterpret_biguint%0#0",
        "tmp%2#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%20#0"
      ]
    },
    "2525": {
      "op": "bnz check_game_event_bool_true@7",
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0"
      ]
    },
    "2528": {
      "op": "frame_dig 2",
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0"
      ]
    },
    "2530": {
      "error": "Index access is out of bounds",
      "op": "extract 88 32 // on error: Index access is out of bounds",
      "defined_out": [
        "game_state#0",
        "reinterpret_biguint%0#0",
        "tmp%2#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%21#0"
      ]
    },
    "2533": {
      "op": "txn Sender",
      "defined_out": [
        "game_state#0",
        "reinterpret_biguint%0#0",
        "tmp%2#0",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%21#0",
        "tmp%22#0"
      ]
    },
    "2535": {
      "op": "==",
      "defined_out": [
        "game_state#0",
        "reinterpret_biguint%0#0",
        "tmp%2#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%23#0"
      ]
    },
    "2536": {
      "op": "bnz check_game_event_bool_true@7",
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0"
      ]
    },
    "2539": {
      "op": "frame_dig 2",
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0"
      ]
    },
    "2541": {
      "error": "Index access is out of bounds",
      "op": "extract 120 32 // on error: Index access is out of bounds",
      "defined_out": [
        "game_state#0",
        "reinterpret_biguint%0#0",
        "tmp%2#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%24#0"
      ]
    },
    "2544": {
      "op": "txn Sender",
      "defined_out": [
        "game_state#0",
        "reinterpret_biguint%0#0",
        "tmp%2#0",
        "tmp%24#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%24#0",
        "tmp%25#0"
      ]
    },
    "2546": {
      "op": "==",
      "defined_out": [
        "game_state#0",
        "reinterpret_biguint%0#0",
        "tmp%2#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%26#0"
      ]
    },
    "2547": {
      "op": "bz check_game_event_bool_false@8",
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0"
      ]
    },
    "2550": {
      "block": "check_game_event_bool_true@7",
      "stack_in": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0"
      ],
      "op": "intc_0 // 1",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "or_result%0#0"
      ]
    },
    "2551": {
      "block": "check_game_event_bool_merge@9",
      "stack_in": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "or_result%0#0"
      ],
      "error": "Transaction sender is not an authorized caller.",
      "op": "assert // Transaction sender is not an authorized caller.",
      "defined_out": [],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0"
      ]
    },
    "2552": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%0#0"
      ]
    },
    "2554": {
      "op": "itob",
      "defined_out": [
        "tmp%1#1"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%1#1"
      ]
    },
    "2555": {
      "op": "frame_dig 0",
      "defined_out": [
        "reinterpret_biguint%0#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%1#1",
        "reinterpret_biguint%0#0"
      ]
    },
    "2557": {
      "op": "b>",
      "defined_out": [
        "reinterpret_biguint%0#0",
        "tmp%2#1"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%2#1"
      ]
    },
    "2558": {
      "op": "bnz check_game_event_if_body@13",
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0"
      ]
    },
    "2561": {
      "op": "frame_dig 2",
      "defined_out": [
        "game_state#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0"
      ]
    },
    "2563": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "game_state#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "2"
      ]
    },
    "2564": {
      "op": "getbyte",
      "defined_out": [
        "game_state#0",
        "reinterpret_biguint%0#0",
        "tmp%4#1"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%4#1"
      ]
    },
    "2565": {
      "op": "bnz check_game_event_else_body@14",
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0"
      ]
    },
    "2568": {
      "block": "check_game_event_if_body@13",
      "stack_in": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "game_state#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0"
      ]
    },
    "2570": {
      "op": "dup",
      "defined_out": [
        "game_state#0",
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "2571": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "game_state#0",
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "game_state#0 (copy)",
        "1"
      ]
    },
    "2572": {
      "op": "getbyte",
      "defined_out": [
        "game_state#0",
        "tmp%7#1"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "tmp%7#1"
      ]
    },
    "2573": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "game_state#0",
        "tmp%7#1"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "tmp%7#1",
        "32"
      ]
    },
    "2574": {
      "op": "*",
      "defined_out": [
        "game_state#0",
        "tmp%8#1"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "tmp%8#1"
      ]
    },
    "2575": {
      "op": "bzero",
      "defined_out": [
        "game_state#0",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "materialized_values%0#0"
      ]
    },
    "2576": {
      "op": "bytec_1 // \"p_\"",
      "defined_out": [
        "\"p_\"",
        "game_state#0",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "materialized_values%0#0",
        "\"p_\""
      ]
    },
    "2577": {
      "op": "frame_dig 1",
      "defined_out": [
        "\"p_\"",
        "encoded_value%0#0",
        "game_state#0",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "materialized_values%0#0",
        "\"p_\"",
        "encoded_value%0#0"
      ]
    },
    "2579": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "materialized_values%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "2580": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)",
        "encoded_value%0#0",
        "game_state#0",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "materialized_values%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "2581": {
      "op": "box_del",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "materialized_values%0#0",
        "{box_del}"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "materialized_values%0#0",
        "box_prefixed_key%0#0",
        "{box_del}"
      ]
    },
    "2582": {
      "op": "pop",
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "materialized_values%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "2583": {
      "op": "swap",
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "box_prefixed_key%0#0",
        "materialized_values%0#0"
      ]
    },
    "2584": {
      "op": "box_put",
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0"
      ]
    },
    "2585": {
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x00",
        "encoded_value%0#0",
        "game_state#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "0x00"
      ]
    },
    "2586": {
      "op": "replace2 2",
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0"
      ]
    },
    "2588": {
      "op": "dup",
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "2589": {
      "error": "Index access is out of bounds",
      "op": "extract 3 1 // on error: Index access is out of bounds",
      "defined_out": [
        "encoded_value%0#0",
        "game_state#0",
        "tmp%9#1"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "tmp%9#1"
      ]
    },
    "2592": {
      "op": "dig 1",
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "tmp%9#1",
        "game_state#0 (copy)"
      ]
    },
    "2594": {
      "error": "Index access is out of bounds",
      "op": "extract 56 32 // on error: Index access is out of bounds",
      "defined_out": [
        "encoded_value%0#0",
        "game_state#0",
        "tmp%10#1",
        "tmp%9#1"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "tmp%9#1",
        "tmp%10#1"
      ]
    },
    "2597": {
      "op": "dig 2",
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "tmp%9#1",
        "tmp%10#1",
        "game_state#0 (copy)"
      ]
    },
    "2599": {
      "error": "Index access is out of bounds",
      "op": "extract 88 32 // on error: Index access is out of bounds",
      "defined_out": [
        "encoded_value%0#0",
        "game_state#0",
        "tmp%10#1",
        "tmp%11#1",
        "tmp%9#1"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "tmp%9#1",
        "tmp%10#1",
        "tmp%11#1"
      ]
    },
    "2602": {
      "op": "dig 3",
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "tmp%9#1",
        "tmp%10#1",
        "tmp%11#1",
        "game_state#0 (copy)"
      ]
    },
    "2604": {
      "error": "Index access is out of bounds",
      "op": "extract 120 32 // on error: Index access is out of bounds",
      "defined_out": [
        "encoded_value%0#0",
        "game_state#0",
        "tmp%10#1",
        "tmp%11#1",
        "tmp%12#1",
        "tmp%9#1"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "tmp%9#1",
        "tmp%10#1",
        "tmp%11#1",
        "tmp%12#1"
      ]
    },
    "2607": {
      "op": "uncover 3",
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "tmp%10#1",
        "tmp%11#1",
        "tmp%12#1",
        "tmp%9#1"
      ]
    },
    "2609": {
      "op": "dig 3",
      "defined_out": [
        "encoded_value%0#0",
        "game_state#0",
        "tmp%10#1",
        "tmp%10#1 (copy)",
        "tmp%11#1",
        "tmp%12#1",
        "tmp%9#1"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "tmp%10#1",
        "tmp%11#1",
        "tmp%12#1",
        "tmp%9#1",
        "tmp%10#1 (copy)"
      ]
    },
    "2611": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%10#1",
        "tmp%11#1",
        "tmp%12#1"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "tmp%10#1",
        "tmp%11#1",
        "tmp%12#1",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "2612": {
      "op": "dig 2",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%10#1",
        "tmp%11#1",
        "tmp%11#1 (copy)",
        "tmp%12#1"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "tmp%10#1",
        "tmp%11#1",
        "tmp%12#1",
        "encoded_tuple_buffer%2#0",
        "tmp%11#1 (copy)"
      ]
    },
    "2614": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%10#1",
        "tmp%11#1",
        "tmp%12#1"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "tmp%10#1",
        "tmp%11#1",
        "tmp%12#1",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "2615": {
      "op": "dig 1",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%10#1",
        "tmp%11#1",
        "tmp%12#1",
        "tmp%12#1 (copy)"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "tmp%10#1",
        "tmp%11#1",
        "tmp%12#1",
        "encoded_tuple_buffer%3#0",
        "tmp%12#1 (copy)"
      ]
    },
    "2617": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%4#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%10#1",
        "tmp%11#1",
        "tmp%12#1"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "tmp%10#1",
        "tmp%11#1",
        "tmp%12#1",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "2618": {
      "op": "pushbytes 0x410b2150 // method \"game_over(uint8,address,address,address)\"",
      "defined_out": [
        "Method(game_over(uint8,address,address,address))",
        "encoded_tuple_buffer%4#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%10#1",
        "tmp%11#1",
        "tmp%12#1"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "tmp%10#1",
        "tmp%11#1",
        "tmp%12#1",
        "encoded_tuple_buffer%4#0",
        "Method(game_over(uint8,address,address,address))"
      ]
    },
    "2624": {
      "op": "swap",
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "tmp%10#1",
        "tmp%11#1",
        "tmp%12#1",
        "Method(game_over(uint8,address,address,address))",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "2625": {
      "op": "concat",
      "defined_out": [
        "encoded_value%0#0",
        "event%0#0",
        "game_state#0",
        "tmp%10#1",
        "tmp%11#1",
        "tmp%12#1"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "tmp%10#1",
        "tmp%11#1",
        "tmp%12#1",
        "event%0#0"
      ]
    },
    "2626": {
      "op": "log",
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "tmp%10#1",
        "tmp%11#1",
        "tmp%12#1"
      ]
    },
    "2627": {
      "op": "uncover 3",
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%10#1",
        "tmp%11#1",
        "tmp%12#1",
        "game_state#0"
      ]
    },
    "2629": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%10#1",
        "tmp%11#1",
        "tmp%12#1"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%10#1",
        "tmp%11#1",
        "tmp%12#1",
        "game_state#0",
        "16"
      ]
    },
    "2631": {
      "op": "extract_uint64",
      "defined_out": [
        "encoded_value%0#0",
        "game_state#0",
        "tmp%10#1",
        "tmp%11#1",
        "tmp%12#1",
        "tmp%14#1"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%10#1",
        "tmp%11#1",
        "tmp%12#1",
        "tmp%14#1"
      ]
    },
    "2632": {
      "op": "dup",
      "defined_out": [
        "encoded_value%0#0",
        "game_state#0",
        "tmp%10#1",
        "tmp%11#1",
        "tmp%12#1",
        "tmp%14#1",
        "tmp%14#1 (copy)"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%10#1",
        "tmp%11#1",
        "tmp%12#1",
        "tmp%14#1",
        "tmp%14#1 (copy)"
      ]
    },
    "2633": {
      "op": "pushint 50 // 50",
      "defined_out": [
        "50",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%10#1",
        "tmp%11#1",
        "tmp%12#1",
        "tmp%14#1",
        "tmp%14#1 (copy)"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%10#1",
        "tmp%11#1",
        "tmp%12#1",
        "tmp%14#1",
        "tmp%14#1 (copy)",
        "50"
      ]
    },
    "2635": {
      "op": "*",
      "defined_out": [
        "encoded_value%0#0",
        "game_state#0",
        "tmp%10#1",
        "tmp%11#1",
        "tmp%12#1",
        "tmp%14#1",
        "tmp%15#1"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%10#1",
        "tmp%11#1",
        "tmp%12#1",
        "tmp%14#1",
        "tmp%15#1"
      ]
    },
    "2636": {
      "op": "pushint 100 // 100",
      "defined_out": [
        "100",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%10#1",
        "tmp%11#1",
        "tmp%12#1",
        "tmp%14#1",
        "tmp%15#1"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%10#1",
        "tmp%11#1",
        "tmp%12#1",
        "tmp%14#1",
        "tmp%15#1",
        "100"
      ]
    },
    "2638": {
      "op": "/",
      "defined_out": [
        "encoded_value%0#0",
        "first_win_share#0",
        "game_state#0",
        "tmp%10#1",
        "tmp%11#1",
        "tmp%12#1",
        "tmp%14#1"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%10#1",
        "tmp%11#1",
        "tmp%12#1",
        "tmp%14#1",
        "first_win_share#0"
      ]
    },
    "2639": {
      "op": "dig 1",
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%10#1",
        "tmp%11#1",
        "tmp%12#1",
        "tmp%14#1",
        "first_win_share#0",
        "tmp%14#1 (copy)"
      ]
    },
    "2641": {
      "op": "pushint 30 // 30",
      "defined_out": [
        "30",
        "encoded_value%0#0",
        "first_win_share#0",
        "game_state#0",
        "tmp%10#1",
        "tmp%11#1",
        "tmp%12#1",
        "tmp%14#1",
        "tmp%14#1 (copy)"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%10#1",
        "tmp%11#1",
        "tmp%12#1",
        "tmp%14#1",
        "first_win_share#0",
        "tmp%14#1 (copy)",
        "30"
      ]
    },
    "2643": {
      "op": "*",
      "defined_out": [
        "encoded_value%0#0",
        "first_win_share#0",
        "game_state#0",
        "tmp%10#1",
        "tmp%11#1",
        "tmp%12#1",
        "tmp%14#1",
        "tmp%18#1"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%10#1",
        "tmp%11#1",
        "tmp%12#1",
        "tmp%14#1",
        "first_win_share#0",
        "tmp%18#1"
      ]
    },
    "2644": {
      "op": "pushint 100 // 100",
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%10#1",
        "tmp%11#1",
        "tmp%12#1",
        "tmp%14#1",
        "first_win_share#0",
        "tmp%18#1",
        "100"
      ]
    },
    "2646": {
      "op": "/",
      "defined_out": [
        "encoded_value%0#0",
        "first_win_share#0",
        "game_state#0",
        "second_win_share#0",
        "tmp%10#1",
        "tmp%11#1",
        "tmp%12#1",
        "tmp%14#1"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%10#1",
        "tmp%11#1",
        "tmp%12#1",
        "tmp%14#1",
        "first_win_share#0",
        "second_win_share#0"
      ]
    },
    "2647": {
      "op": "uncover 2",
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%10#1",
        "tmp%11#1",
        "tmp%12#1",
        "first_win_share#0",
        "second_win_share#0",
        "tmp%14#1"
      ]
    },
    "2649": {
      "op": "dig 2",
      "defined_out": [
        "encoded_value%0#0",
        "first_win_share#0",
        "first_win_share#0 (copy)",
        "game_state#0",
        "second_win_share#0",
        "tmp%10#1",
        "tmp%11#1",
        "tmp%12#1",
        "tmp%14#1"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%10#1",
        "tmp%11#1",
        "tmp%12#1",
        "first_win_share#0",
        "second_win_share#0",
        "tmp%14#1",
        "first_win_share#0 (copy)"
      ]
    },
    "2651": {
      "op": "-",
      "defined_out": [
        "encoded_value%0#0",
        "first_win_share#0",
        "game_state#0",
        "second_win_share#0",
        "tmp%10#1",
        "tmp%11#1",
        "tmp%12#1",
        "tmp%21#1"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%10#1",
        "tmp%11#1",
        "tmp%12#1",
        "first_win_share#0",
        "second_win_share#0",
        "tmp%21#1"
      ]
    },
    "2652": {
      "op": "dig 1",
      "defined_out": [
        "encoded_value%0#0",
        "first_win_share#0",
        "game_state#0",
        "second_win_share#0",
        "second_win_share#0 (copy)",
        "tmp%10#1",
        "tmp%11#1",
        "tmp%12#1",
        "tmp%21#1"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%10#1",
        "tmp%11#1",
        "tmp%12#1",
        "first_win_share#0",
        "second_win_share#0",
        "tmp%21#1",
        "second_win_share#0 (copy)"
      ]
    },
    "2654": {
      "op": "-",
      "defined_out": [
        "encoded_value%0#0",
        "first_win_share#0",
        "game_state#0",
        "second_win_share#0",
        "third_win_share#0",
        "tmp%10#1",
        "tmp%11#1",
        "tmp%12#1"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%10#1",
        "tmp%11#1",
        "tmp%12#1",
        "first_win_share#0",
        "second_win_share#0",
        "third_win_share#0"
      ]
    },
    "2655": {
      "op": "uncover 5",
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%11#1",
        "tmp%12#1",
        "first_win_share#0",
        "second_win_share#0",
        "third_win_share#0",
        "tmp%10#1"
      ]
    },
    "2657": {
      "op": "uncover 3",
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%11#1",
        "tmp%12#1",
        "second_win_share#0",
        "third_win_share#0",
        "tmp%10#1",
        "first_win_share#0"
      ]
    },
    "2659": {
      "op": "pushbytes \"sender:app_address,reciever:first_place_address,concern:prize_pool_first_win_share_payout\"",
      "defined_out": [
        "\"sender:app_address,reciever:first_place_address,concern:prize_pool_first_win_share_payout\"",
        "encoded_value%0#0",
        "first_win_share#0",
        "game_state#0",
        "second_win_share#0",
        "third_win_share#0",
        "tmp%10#1",
        "tmp%11#1",
        "tmp%12#1"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%11#1",
        "tmp%12#1",
        "second_win_share#0",
        "third_win_share#0",
        "tmp%10#1",
        "first_win_share#0",
        "\"sender:app_address,reciever:first_place_address,concern:prize_pool_first_win_share_payout\""
      ]
    },
    "2750": {
      "callsub": "smart_contracts.pieout.subroutines.payout_itxn",
      "op": "callsub payout_itxn",
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%11#1",
        "tmp%12#1",
        "second_win_share#0",
        "third_win_share#0"
      ]
    },
    "2753": {
      "op": "uncover 3",
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#1",
        "second_win_share#0",
        "third_win_share#0",
        "tmp%11#1"
      ]
    },
    "2755": {
      "op": "uncover 2",
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#1",
        "third_win_share#0",
        "tmp%11#1",
        "second_win_share#0"
      ]
    },
    "2757": {
      "op": "pushbytes \"sender:app_address,reciever:second_place_address,concern:prize_pool_second_win_share_payout\"",
      "defined_out": [
        "\"sender:app_address,reciever:second_place_address,concern:prize_pool_second_win_share_payout\"",
        "encoded_value%0#0",
        "game_state#0",
        "second_win_share#0",
        "third_win_share#0",
        "tmp%11#1",
        "tmp%12#1"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#1",
        "third_win_share#0",
        "tmp%11#1",
        "second_win_share#0",
        "\"sender:app_address,reciever:second_place_address,concern:prize_pool_second_win_share_payout\""
      ]
    },
    "2850": {
      "callsub": "smart_contracts.pieout.subroutines.payout_itxn",
      "op": "callsub payout_itxn",
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#1",
        "third_win_share#0"
      ]
    },
    "2853": {
      "op": "pushbytes \"sender:app_address,reciever:third_place_address,concern:prize_pool_third_win_share_payout\"",
      "defined_out": [
        "\"sender:app_address,reciever:third_place_address,concern:prize_pool_third_win_share_payout\"",
        "encoded_value%0#0",
        "game_state#0",
        "third_win_share#0",
        "tmp%12#1"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#1",
        "third_win_share#0",
        "\"sender:app_address,reciever:third_place_address,concern:prize_pool_third_win_share_payout\""
      ]
    },
    "2944": {
      "callsub": "smart_contracts.pieout.subroutines.payout_itxn",
      "op": "callsub payout_itxn",
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0"
      ]
    },
    "2947": {
      "op": "pushbytes 0x80",
      "defined_out": [
        "encoded_value%0#0",
        "game_state#0",
        "is_game_over#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "is_game_over#0"
      ]
    },
    "2950": {
      "block": "check_game_event_after_inlined_smart_contracts.pieout.subroutines.is_game_over@15",
      "stack_in": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "is_game_over#0"
      ],
      "op": "frame_bury 0",
      "defined_out": [
        "is_game_over#0"
      ]
    },
    "2952": {
      "retsub": true,
      "op": "retsub"
    },
    "2953": {
      "block": "check_game_event_else_body@14",
      "stack_in": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0"
      ],
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "is_game_over#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "is_game_over#0"
      ]
    },
    "2954": {
      "op": "b check_game_event_after_inlined_smart_contracts.pieout.subroutines.is_game_over@15"
    },
    "2957": {
      "block": "check_game_event_bool_false@8",
      "stack_in": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0"
      ],
      "op": "intc_1 // 0",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "or_result%0#0"
      ]
    },
    "2958": {
      "op": "b check_game_event_bool_merge@9"
    },
    "2961": {
      "subroutine": "smart_contracts.pieout.contract.Pieout.reset_game",
      "params": {
        "game_id#0": "uint64",
        "stake_pay#0": "uint64"
      },
      "block": "reset_game",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "2964": {
      "op": "global GroupSize",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2966": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "2"
      ]
    },
    "2967": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2968": {
      "error": "Invalid group size. Ensure number of transaction in group is within bounds.",
      "op": "assert // Invalid group size. Ensure number of transaction in group is within bounds.",
      "stack_out": []
    },
    "2969": {
      "op": "frame_dig -2",
      "defined_out": [
        "game_id#0 (copy)"
      ],
      "stack_out": [
        "game_id#0 (copy)"
      ]
    },
    "2971": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "2972": {
      "op": "bytec_3 // \"s_\"",
      "defined_out": [
        "\"s_\"",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "\"s_\""
      ]
    },
    "2973": {
      "op": "dig 1",
      "defined_out": [
        "\"s_\"",
        "encoded_value%0#0",
        "encoded_value%0#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "\"s_\"",
        "encoded_value%0#0 (copy)"
      ]
    },
    "2975": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "2976": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "2977": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "_%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2978": {
      "op": "bury 1",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2980": {
      "error": "Box game state not found. Check if Game ID is valid.",
      "op": "assert // Box game state not found. Check if Game ID is valid.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "2981": {
      "op": "frame_dig -1",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "stake_pay#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "stake_pay#0 (copy)"
      ]
    },
    "2983": {
      "op": "gtxns Sender",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%2#0"
      ]
    },
    "2985": {
      "op": "txn Sender",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "2987": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%4#0"
      ]
    },
    "2988": {
      "error": "Stake payment sender address must match transaction sender address.",
      "op": "assert // Stake payment sender address must match transaction sender address.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "2989": {
      "op": "frame_dig -1",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "stake_pay#0 (copy)"
      ]
    },
    "2991": {
      "op": "gtxns Receiver",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%5#0"
      ]
    },
    "2993": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%5#0",
        "tmp%6#0"
      ]
    },
    "2995": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%7#0"
      ]
    },
    "2996": {
      "error": "Stake payment receiver address must match application address.",
      "op": "assert // Stake payment receiver address must match application address.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "2997": {
      "op": "frame_dig -1",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "stake_pay#0 (copy)"
      ]
    },
    "2999": {
      "op": "gtxns Amount",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%8#0"
      ]
    },
    "3001": {
      "op": "intc 6 // 1000",
      "defined_out": [
        "1000",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%8#0",
        "1000"
      ]
    },
    "3003": {
      "op": ">=",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%9#0"
      ]
    },
    "3004": {
      "error": "Insufficient funds. Stake pay amount is not enough to cover application MBR.",
      "op": "assert // Insufficient funds. Stake pay amount is not enough to cover application MBR.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "3005": {
      "op": "dup",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "3006": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "maybe_exists%1#0"
      ]
    },
    "3007": {
      "error": "check self.box_game_state entry exists",
      "op": "assert // check self.box_game_state entry exists",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "3008": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "3009": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_state#0 (copy)",
        "0"
      ]
    },
    "3010": {
      "op": "getbit",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "is_true%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "is_true%0#0"
      ]
    },
    "3011": {
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x00",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "is_true%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "is_true%0#0",
        "0x00"
      ]
    },
    "3012": {
      "op": "intc_1 // 0",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "is_true%0#0",
        "0x00",
        "0"
      ]
    },
    "3013": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "0x00",
        "0",
        "is_true%0#0"
      ]
    },
    "3015": {
      "op": "setbit",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "game_state#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "encoded_bool%0#0"
      ]
    },
    "3016": {
      "op": "intc_1 // 0",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "encoded_bool%0#0",
        "0"
      ]
    },
    "3017": {
      "op": "getbit",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%10#0"
      ]
    },
    "3018": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%10#0",
        "1"
      ]
    },
    "3019": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%11#0"
      ]
    },
    "3020": {
      "error": "Game state staking finalized value mismatch.",
      "op": "assert // Game state staking finalized value mismatch.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "3021": {
      "op": "dup",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "3022": {
      "error": "Index access is out of bounds",
      "op": "extract 24 32 // on error: Index access is out of bounds",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%12#0"
      ]
    },
    "3025": {
      "op": "txn Sender",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%12#0",
        "tmp%13#0"
      ]
    },
    "3027": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%14#0"
      ]
    },
    "3028": {
      "error": "Transaction sender is not recognized as valid manager address for this game.",
      "op": "assert // Transaction sender is not recognized as valid manager address for this game.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "3029": {
      "op": "dup",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "3030": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_state#0 (copy)",
        "16"
      ]
    },
    "3032": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%16#0"
      ]
    },
    "3033": {
      "op": "!",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%17#0"
      ]
    },
    "3034": {
      "error": "Prize pool not empty. Amount in prize pool must be zero.",
      "op": "assert // Prize pool not empty. Amount in prize pool must be zero.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "3035": {
      "op": "dup",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "3036": {
      "op": "intc_2 // 2",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_state#0 (copy)",
        "2"
      ]
    },
    "3037": {
      "op": "getbyte",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%19#0"
      ]
    },
    "3038": {
      "op": "!",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%20#0"
      ]
    },
    "3039": {
      "error": "Game lobby not empty. Number of active players must be zero.",
      "op": "assert // Game lobby not empty. Number of active players must be zero.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "3040": {
      "op": "bytec_1 // \"p_\"",
      "defined_out": [
        "\"p_\"",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "\"p_\""
      ]
    },
    "3041": {
      "op": "uncover 3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "\"p_\"",
        "encoded_value%0#0"
      ]
    },
    "3043": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_players_bref#0",
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_players_bref#0"
      ]
    },
    "3044": {
      "op": "intc_1 // 0"
    },
    "3045": {
      "op": "txn Sender",
      "defined_out": [
        "0",
        "box_prefixed_key%0#0",
        "game_players_bref#0",
        "game_state#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_players_bref#0",
        "0",
        "tmp%22#0"
      ]
    },
    "3047": {
      "op": "box_replace",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "3048": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "0"
      ]
    },
    "3049": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "0",
        "0"
      ]
    },
    "3050": {
      "op": "setbit",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "3051": {
      "op": "pushbytes 0x01",
      "defined_out": [
        "0x01",
        "box_prefixed_key%0#0",
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "0x01"
      ]
    },
    "3054": {
      "op": "replace2 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "3056": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "0x00"
      ]
    },
    "3057": {
      "op": "replace2 3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "3059": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "0x00"
      ]
    },
    "3060": {
      "op": "replace2 4",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "3062": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "0x00"
      ]
    },
    "3063": {
      "op": "replace2 5",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "3065": {
      "op": "bytec 11 // 0x0020",
      "defined_out": [
        "0x0020",
        "box_prefixed_key%0#0",
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "0x0020"
      ]
    },
    "3067": {
      "op": "replace2 6",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "3069": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%23#0"
      ]
    },
    "3071": {
      "op": "intc 5 // 3600",
      "defined_out": [
        "3600",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%23#0",
        "3600"
      ]
    },
    "3073": {
      "op": "+",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "to_encode%0#0"
      ]
    },
    "3074": {
      "op": "itob",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "val_as_bytes%0#0"
      ]
    },
    "3075": {
      "op": "replace2 8",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "3077": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "3078": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_state#0 (copy)",
        "16"
      ]
    },
    "3080": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%25#0"
      ]
    },
    "3081": {
      "op": "intc 6 // 1000",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%25#0",
        "1000"
      ]
    },
    "3083": {
      "op": "+",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "to_encode%1#0"
      ]
    },
    "3084": {
      "op": "itob",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "val_as_bytes%1#0"
      ]
    },
    "3085": {
      "op": "replace2 16",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "3087": {
      "op": "global ZeroAddress",
      "defined_out": [
        "assigned_value%8#0",
        "box_prefixed_key%0#0",
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "assigned_value%8#0"
      ]
    },
    "3089": {
      "op": "replace2 56",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "3091": {
      "op": "global ZeroAddress",
      "defined_out": [
        "assigned_value%9#0",
        "box_prefixed_key%0#0",
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "assigned_value%9#0"
      ]
    },
    "3093": {
      "op": "replace2 88",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "3095": {
      "op": "global ZeroAddress",
      "defined_out": [
        "assigned_value%10#0",
        "box_prefixed_key%0#0",
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "assigned_value%10#0"
      ]
    },
    "3097": {
      "op": "replace2 120",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "3099": {
      "op": "box_put",
      "stack_out": []
    },
    "3100": {
      "retsub": true,
      "op": "retsub"
    },
    "3101": {
      "subroutine": "smart_contracts.pieout.contract.Pieout.delete_game",
      "params": {
        "game_id#0": "uint64"
      },
      "block": "delete_game",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "3104": {
      "op": "global GroupSize",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3106": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "1"
      ]
    },
    "3107": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "3108": {
      "error": "Invalid group size. This app call only appproves standalone transactions.",
      "op": "assert // Invalid group size. This app call only appproves standalone transactions.",
      "stack_out": []
    },
    "3109": {
      "op": "frame_dig -1",
      "defined_out": [
        "game_id#0 (copy)"
      ],
      "stack_out": [
        "game_id#0 (copy)"
      ]
    },
    "3111": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "3112": {
      "op": "dup",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "encoded_value%0#0"
      ]
    },
    "3113": {
      "op": "bytec_3 // \"s_\"",
      "defined_out": [
        "\"s_\"",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "encoded_value%0#0",
        "\"s_\""
      ]
    },
    "3114": {
      "op": "swap",
      "stack_out": [
        "encoded_value%0#0",
        "\"s_\"",
        "encoded_value%0#0"
      ]
    },
    "3115": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "3116": {
      "op": "dupn 2",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "3118": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0",
        "_%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3119": {
      "op": "bury 1",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3121": {
      "error": "Box game state not found. Check if Game ID is valid.",
      "op": "assert // Box game state not found. Check if Game ID is valid.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "3122": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "maybe_exists%1#0"
      ]
    },
    "3123": {
      "op": "swap",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "maybe_exists%1#0",
        "game_state#0"
      ]
    },
    "3124": {
      "op": "dup",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "maybe_exists%1#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "3125": {
      "op": "uncover 2",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_state#0",
        "maybe_exists%1#0"
      ]
    },
    "3127": {
      "error": "check self.box_game_state entry exists",
      "op": "assert // check self.box_game_state entry exists",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_state#0"
      ]
    },
    "3128": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "3129": {
      "error": "Index access is out of bounds",
      "op": "extract 24 32 // on error: Index access is out of bounds",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_state#0",
        "tmp%2#0"
      ]
    },
    "3132": {
      "op": "txn Sender",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "3134": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_state#0",
        "tmp%4#0"
      ]
    },
    "3135": {
      "error": "Transaction sender is not recognized as valid manager address for this game.",
      "op": "assert // Transaction sender is not recognized as valid manager address for this game.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_state#0"
      ]
    },
    "3136": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_state#0",
        "2"
      ]
    },
    "3137": {
      "op": "getbyte",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0"
      ]
    },
    "3138": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "tmp%6#0"
      ]
    },
    "3139": {
      "op": "intc_0 // 1",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "tmp%6#0",
        "1"
      ]
    },
    "3140": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "3141": {
      "op": "bz delete_game_else_body@2",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0"
      ]
    },
    "3144": {
      "op": "frame_dig -1",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "game_id#0 (copy)"
      ]
    },
    "3146": {
      "op": "bytec_1 // \"p_\"",
      "defined_out": [
        "\"p_\"",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_id#0 (copy)",
        "game_state#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "game_id#0 (copy)",
        "\"p_\""
      ]
    },
    "3147": {
      "op": "intc_0 // 1",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "game_id#0 (copy)",
        "\"p_\"",
        "1"
      ]
    },
    "3148": {
      "op": "intc_1 // 0",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "game_id#0 (copy)",
        "\"p_\"",
        "1",
        "0"
      ]
    },
    "3149": {
      "callsub": "smart_contracts.pieout.subroutines.check_sender_in_game",
      "op": "callsub check_sender_in_game",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%6#0",
        "txn_sender_in_game#1"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "txn_sender_in_game#1"
      ]
    },
    "3152": {
      "op": "intc_0 // 1",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "txn_sender_in_game#1",
        "1"
      ]
    },
    "3153": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%6#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "tmp%8#0"
      ]
    },
    "3154": {
      "error": "Manager account must be sole active player in game.",
      "op": "assert // Manager account must be sole active player in game.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0"
      ]
    },
    "3155": {
      "op": "txn Sender",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%6#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "tmp%9#0"
      ]
    },
    "3157": {
      "op": "frame_dig 2",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "tmp%9#0",
        "game_state#0"
      ]
    },
    "3159": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%6#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "tmp%9#0",
        "game_state#0",
        "16"
      ]
    },
    "3161": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%11#0",
        "tmp%6#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "tmp%9#0",
        "tmp%11#0"
      ]
    },
    "3162": {
      "op": "pushbytes \"sender:app_address,receiver:manager_address,concern:prize_pool_payout\"",
      "defined_out": [
        "\"sender:app_address,receiver:manager_address,concern:prize_pool_payout\"",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%11#0",
        "tmp%6#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "tmp%9#0",
        "tmp%11#0",
        "\"sender:app_address,receiver:manager_address,concern:prize_pool_payout\""
      ]
    },
    "3233": {
      "callsub": "smart_contracts.pieout.subroutines.payout_itxn",
      "op": "callsub payout_itxn",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0"
      ]
    },
    "3236": {
      "block": "delete_game_after_if_else@3",
      "stack_in": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "box_prefixed_key%0#0"
      ]
    },
    "3238": {
      "op": "box_del",
      "defined_out": [
        "box_prefixed_key%0#0",
        "{box_del}"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "{box_del}"
      ]
    },
    "3239": {
      "op": "pop",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0"
      ]
    },
    "3240": {
      "op": "bytec_1 // \"p_\"",
      "defined_out": [
        "\"p_\"",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "\"p_\""
      ]
    },
    "3241": {
      "op": "frame_dig 0",
      "defined_out": [
        "\"p_\"",
        "box_prefixed_key%0#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "\"p_\"",
        "encoded_value%0#0"
      ]
    },
    "3243": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%3#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "box_prefixed_key%3#0"
      ]
    },
    "3244": {
      "op": "box_del",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "{box_del}"
      ]
    },
    "3245": {
      "op": "pop",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0"
      ]
    },
    "3246": {
      "op": "frame_dig 2",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "game_state#0"
      ]
    },
    "3248": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "game_state#0",
        "1"
      ]
    },
    "3249": {
      "op": "getbyte",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "tmp%19#0"
      ]
    },
    "3250": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "tmp%19#0",
        "32"
      ]
    },
    "3251": {
      "op": "*",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "to_encode%0#0"
      ]
    },
    "3252": {
      "op": "itob",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "val_as_bytes%0#0"
      ]
    },
    "3253": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "val_as_bytes%0#0",
        "val_as_bytes%0#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%0#0 (copy)"
      ]
    },
    "3254": {
      "op": "bitlen",
      "defined_out": [
        "bitlen%0#0",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "val_as_bytes%0#0",
        "bitlen%0#0"
      ]
    },
    "3255": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "bitlen%0#0",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "val_as_bytes%0#0",
        "bitlen%0#0",
        "16"
      ]
    },
    "3257": {
      "op": "<=",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "no_overflow%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "val_as_bytes%0#0",
        "no_overflow%0#0"
      ]
    },
    "3258": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "val_as_bytes%0#0"
      ]
    },
    "3259": {
      "op": "extract 6 2",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "uint16%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "uint16%0#0"
      ]
    },
    "3262": {
      "op": "pushbytes 0x0a",
      "defined_out": [
        "0x0a",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "uint16%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "uint16%0#0",
        "0x0a"
      ]
    },
    "3265": {
      "op": "swap",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "0x0a",
        "uint16%0#0"
      ]
    },
    "3266": {
      "callsub": "smart_contracts.pieout.contract.Pieout.calc_single_box_fee",
      "op": "callsub calc_single_box_fee",
      "defined_out": [
        "box_p_fee#0",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "box_p_fee#0"
      ]
    },
    "3269": {
      "op": "txn Sender",
      "defined_out": [
        "box_p_fee#0",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "box_p_fee#0",
        "tmp%20#0"
      ]
    },
    "3271": {
      "op": "intc 10 // 67300",
      "defined_out": [
        "67300",
        "box_p_fee#0",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "box_p_fee#0",
        "tmp%20#0",
        "67300"
      ]
    },
    "3273": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "tmp%20#0",
        "67300",
        "box_p_fee#0"
      ]
    },
    "3275": {
      "op": "+",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%20#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "tmp%20#0",
        "tmp%21#0"
      ]
    },
    "3276": {
      "op": "pushbytes \"sender:app_address,receiver:manager_address,concern:box_s_refund,box_p_refund\"",
      "defined_out": [
        "\"sender:app_address,receiver:manager_address,concern:box_s_refund,box_p_refund\"",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%20#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "tmp%20#0",
        "tmp%21#0",
        "\"sender:app_address,receiver:manager_address,concern:box_s_refund,box_p_refund\""
      ]
    },
    "3355": {
      "callsub": "smart_contracts.pieout.subroutines.payout_itxn",
      "op": "callsub payout_itxn",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0"
      ]
    },
    "3358": {
      "retsub": true,
      "op": "retsub"
    },
    "3359": {
      "block": "delete_game_else_body@2",
      "stack_in": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "tmp%6#0"
      ]
    },
    "3361": {
      "op": "!",
      "defined_out": [
        "tmp%14#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "tmp%14#0"
      ]
    },
    "3362": {
      "error": "Game lobby not empty. Number of active players must be zero.",
      "op": "assert // Game lobby not empty. Number of active players must be zero.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0"
      ]
    },
    "3363": {
      "op": "frame_dig 2",
      "defined_out": [
        "game_state#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "game_state#0"
      ]
    },
    "3365": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "game_state#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "game_state#0",
        "16"
      ]
    },
    "3367": {
      "op": "extract_uint64",
      "defined_out": [
        "game_state#0",
        "tmp%16#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "tmp%16#0"
      ]
    },
    "3368": {
      "op": "!",
      "defined_out": [
        "game_state#0",
        "tmp%17#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "tmp%17#0"
      ]
    },
    "3369": {
      "error": "Prize pool not empty. Amount in prize pool must be zero.",
      "op": "assert // Prize pool not empty. Amount in prize pool must be zero.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0"
      ]
    },
    "3370": {
      "op": "b delete_game_after_if_else@3"
    },
    "3373": {
      "subroutine": "smart_contracts.pieout.contract.Pieout.terminate",
      "params": {},
      "block": "terminate",
      "stack_in": [],
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3375": {
      "op": "global CreatorAddress",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "3377": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "3378": {
      "error": "Transaction sender address must match application creator address.",
      "op": "assert // Transaction sender address must match application creator address.",
      "stack_out": []
    },
    "3379": {
      "op": "intc 13 // TMPL_DELETABLE",
      "defined_out": [
        "TMPL_DELETABLE"
      ],
      "stack_out": [
        "TMPL_DELETABLE"
      ]
    },
    "3381": {
      "error": "Template variable 'DELETABLE' needs to be 'True' at deploy-time.",
      "op": "assert // Template variable 'DELETABLE' needs to be 'True' at deploy-time.",
      "stack_out": []
    },
    "3382": {
      "op": "bytec_2 // 0x745f",
      "defined_out": [
        "0x745f"
      ],
      "stack_out": [
        "0x745f"
      ]
    },
    "3383": {
      "op": "box_del",
      "defined_out": [
        "{box_del}"
      ],
      "stack_out": [
        "{box_del}"
      ]
    },
    "3384": {
      "op": "pop",
      "stack_out": []
    },
    "3385": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "3387": {
      "op": "intc 4 // 19300",
      "defined_out": [
        "19300",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "19300"
      ]
    },
    "3389": {
      "op": "pushbytes \"sender:app_address,receiver:manager_address,concern:box_t_refund\"",
      "defined_out": [
        "\"sender:app_address,receiver:manager_address,concern:box_t_refund\"",
        "19300",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "19300",
        "\"sender:app_address,receiver:manager_address,concern:box_t_refund\""
      ]
    },
    "3455": {
      "callsub": "smart_contracts.pieout.subroutines.payout_itxn",
      "op": "callsub payout_itxn",
      "stack_out": []
    },
    "3458": {
      "retsub": true,
      "op": "retsub"
    }
  }
}