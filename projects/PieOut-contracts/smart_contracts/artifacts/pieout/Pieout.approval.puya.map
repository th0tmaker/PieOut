{
  "version": 3,
  "sources": [
    "../../../.venv/Lib/site-packages/lib_pcg/pcg32.py",
    "../../pieout/contract.py",
    "../../pieout/subroutines.py"
  ],
  "mappings": "AC+BA;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAAA;;AAAA;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AA8vBK;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AA5EA;;AAAA;AAAA;AAAA;;AAAA;AAlrBL;;;AAAA;AAkrBK;;;AAAA;;AArDA;;AAAA;AAAA;AAAA;;AAAA;AA7nBL;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA6nBK;;;AAAA;;AA3DA;;AAAA;AAAA;AAAA;;AAAA;AAlkBL;;;AAAA;AAAA;;;AAkkBK;;;AAAA;;AAnIA;;AAAA;AAAA;AAAA;;AAAA;AA/bL;;;AAAA;AA+bK;;;AAAA;;AAvBA;;AAAA;AAAA;AAAA;;AAAA;AAxaL;;;AAAA;AAwaK;;;AAAA;;AAvCA;;AAAA;AAAA;AAAA;;AAAA;AAjYL;;;AAAA;AAiYK;;;AAAA;;AAzEA;;AAAA;AAAA;AAAA;;AAAA;AAxTL;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAwTK;;;AAAA;;AAjFA;;AAAA;AAAA;AAAA;;AAAA;AAvOL;;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAuOK;;;AAAA;;AApCA;;AAAA;AAAA;AAAA;;AAAA;AAnML;;;AAAA;AAAA;;AAmMK;;;AAAA;;AAtBA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAxBA;;AAAA;AAAA;AAAA;;AAAA;AArJL;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAqJK;;;AAAA;;AApBA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AA/CA;;AAAA;AAAA;AAAA;;AAAA;AAlFL;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAkFK;;;AAAA;;AAXA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAxBA;;AAAA;AAAA;AAAA;;AAAA;AA/CL;;;AAAA;AA+CK;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AALA;;AAAA;AAAA;AAAA;;AAAA;AA1CL;;;AAAA;AA0CK;;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AALA;;AAAA;AAAA;AAAA;;AAAA;AArCL;;;AAAA;AAAA;;AAqCK;;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AALA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AALA;;AAAA;AAAA;AAAA;;AAAA;AAEU;;AAFV;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAdA;;AAAA;AAAA;AAAA;;AAAA;AAbL;;;AAAA;;;AAaK;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;ACQL;;;AAEI;;;;;;;;;;;;;AAAA;;;AAAA;;;AAAA;;AAQJ;;;AAMO;;AAAQ;;AAAR;AAAA;;;AAAgC;;AAAA;;AAAA;;AAAhC;;;AACC;;AAAA;AACC;;AAAQ;;AAAR;AAAA;;;AAAgC;;AAAA;;AAAA;;AAAhC;;;AACD;;AAAA;AACC;;AAAQ;;AAAR;AAAA;;;AAAgC;;AAAA;;AAAA;;AAAhC;;;AACD;;AAAA;AAEA;;AAAc;;AAAd;AAAA;;;AACkC;;AAA9B;;AAAA;;AADJ;;;AAGO;;AAAP;AAEO;;AAAP;AAgBR;;;;;;AASI;;AAAqC;AAAf;AAGR;AAGE;AAAP;;AAAA;;AAAA;;;;;AAAb;;;AAEwD;;AAAA;AAAjB;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAA/B;;AAA6D;AAAzC;AAGjB;;AAAA;AAAX;;;AAC0B;AAAd;;AAGZ;;AAAA;;;AAIgB;;AAAA;;AAA6B;;AAA7B;;;;;;;AAMZ;;AAAA;AAnBS;;AAA+B;AAA/B;AAAA;;;;;AA+Gb;;;;AAIQ;;AAAA;;;AAAuB;;AAAvB;AAAA;AAAA;;;AACG;;AAAA;;;AAA6B;;AAAA;;;AAA7B;;;;;AADH;;;AAIA;;AAAA;AAAA;AAAA;AAAA;;AAII;;AAA0B;;AAA1B;AADmB;AAAvB;;AAAA;AAAA;;AAAA;;AAOI;;AAAA;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AACA;;AAAA;;;AAJJ;;AAAA;AAAA;AAAA;AAAA;;;;;;AAAA;AAAA;AAAA;;;;;;;;;AASR;;;;;;;;;;AASQ;;AAAA;;;AAAuB;;AAAvB;AAAA;AAAA;;;AACD;;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;AADC;;;AAGA;;AAA6B;;AAA7B;;;;;AAAA;;;AACkB;;AAAA;;;AAAd;;AAAA;;;;;AADJ;;;AAEI;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;;;;AAFJ;;;AAM6D;;AAAA;AAAA;AAAA;;AAA7D;;AAAA;AAA+B;AAA/B;AAAA;;AACmB;AAAA;AAAA;;AAAA;AAAH;AAAZ;;AAAK;;AAAA;;AAAA;AAAjB;;;AACY;;AAAA;;AAAiD;AAA7B;AAApB;AAAA;;AACwB;;AAArB;AAAf;;;AAlLI;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAqC;;AAArC;;AAC+C;;AAA/C;;AACsD;;AAsL1B;;AAtL0B;AAAZ;AAA1C;;AAAA;AA8Ka;;AAAoC;AAApC;AAAA;;;;;AAac;;AAAA;AAAA;AAAnB;AAAA;AADwB;AAA5B;;AAAA;AAAA;;AAAA;AAAA;AAKA;;AAA4B;AAA5B;;;AAAA;;AAMI;;;AACA;;AAAA;;;AACA;;AAAA;;;AACA;;AAAA;;;AAAA;AAAA;;AAAA;;AACA;;AAAA;;;AAAA;AAAA;;AAAA;;AACA;;AAAA;;;AAAA;AAAA;;AAAA;;AARJ;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;AAAA;AAAA;AAAA;AAYG;;AAAA;;AAAA;AAAA;AAAA;;AAAgC;;;;AAAhC;AAAX;;;AAEiC;AAArB;;AACoB;AAApB;;AAmBK;;AAAA;;;AACA;;AAHT;;AAAA;;AAAA;;AAAuB;;;AAAvB;;AAQS;;AAHT;;AAAA;;AAAA;;AAAwB;;;AAAxB;;AAQS;;AAHT;;AAAA;;AAAuB;;;AAAvB;;AAOR;;AAAA;;;AACY;;AAAA;;AAGS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAHT;;;AAOZ;;AAAA;;;AACY;;AAAA;;AAGS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAHT;;;AAOZ;;AAAA;;;AACY;;AAAA;;AAGS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAHT;;;AASJ;;AAAwB;;AAAxB;;;AAAA;;;;;;;;;AA1DK;;AAAgC;;;;AAAhC;AAAb;;;AACgC;;AAAA;AAA+B;;AAA/B;AAA6C;;AAA7C;AACpB;AAAA;;AAAqB;AAArB;;AACoB;AAApB;;;;;;;AAGoB;;AAAA;AAA+B;;AAA/B;AAA6C;;AAA7C;AAEhB;;AAA+B;;AAA/B;AAA6C;;AAA7C;AADJ;AAAA;;AAII;;AAAA;;AAAA;AADJ;AACI;AADJ;;;;;;;AD7QZ;;;AAOY;;AAAA;AAAkB;;AAAA;AAAlB;AADQ;;;AAAA;AAKL;;;AAAA;AAAP;AAUO;AAAA;AAAA;;AAAP;AAGR;;;AAEe;AAAA;;AAAA;AAAA;AAAA;;AAAP;AAGR;;;AAE6C;;AAAA;AAA9B;;AAAA;AAAA;AAAA;AAAA;;AAAP;AAGR;;;;;AAGe;;AAAA;AAAW;;AAAX;;AAAA;AAAA;AAAA;;AAAP;AAGgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAGC;;;;AAAA;AAGE;AAAH;AAAP;;AAAA;;AAAA;AAAjB;;;AAEY;;AAAA;;AAAiD;AAA7B;AAApB;AAAA;;AAEwB;;AAArB;;;;;AAAf;;;AAEgB;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;;;;;AANC;;AAAgC;AAAhC;AAAA;;;;;AAST;;AAAA;;AAAA;AAQO;;AAAc;;AAAd;AAAP;AAGA;;AAAe;AAAf;;AAGR;;;AAOe;;AAAqB;;AAArB;AAAP;AACW;AAAJ;AAAA;;AAAA;AAAP;AAEO;;AAAA;;AAAoB;;;;AAApB;AAAP;AACO;;AAAA;;AAAoB;;AAApB;AAAP;AAEI;;AAAA;;AAAsB;;AAAtB;AADJ;AAKI;;AAAA;;AAAmB;;AAAnB;AADJ;AAGO;;AAAA;;AAAmB;;AAAnB;AAAP;AAEI;;AAAA;;AAAqB;;AAArB;AADJ;AAKY;AAMA;;AACA;;AAGH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AALU;;;AADN;;;AADE;;;;;;;;;;;;;;;;;AADD;;;;;;;;AADJ;;;AADE;;;;AAAA;;;AAAA;;;AAcZ;AAAA;;AAAA;;AAEa;AAEgB;;AADf;AAFe;;AAAA;AAAA;AAAA;AAA7B;AAAA;AAAA;;AAUO;;AAAqB;AAArB;AAAP;AAEI;;AAAc;AAAA;AAAA;AAAA;AAAA;;;AAAd;;AAAA;AADJ;AAGO;;AACG;AAAA;AAAA;AADH;AAAA;;AAAA;;AAAA;;AAAP;AAKA;AAEmB;;AAEV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AADQ;;;;;;;AAHjB;;;;AAAA;;;AAAA;;AAQR;;;AAGe;;AAAqB;AAArB;AAAP;AACyB;AAAlB;;AAAA;AAAA;AAAA;;AAAA;AAAP;AACO;AAAA;AAAA;;AAAP;AAGO;;AAAA;;AAAoB;;AAApB;AAAP;AACO;;AAAA;;AAAoB;;AAApB;AAAP;AAEI;;AAAA;;AAAsB;;AAAtB;AADJ;AAU6B;;AAAe;;AAAf;AAAZ;AALoB;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAArC;AAAuB;;AAAvB;AAAA;AAAA;;AAYO;;AAAqB;AAArB;AAAP;AACqB;AAAd;;AAAA;AAAA;AAAA;;AAAP;AAEI;AAAuB;;AAAvB;AAAA;AAAA;AAAA;;AAAA;AAAA;AADJ;AAKI;AAAuB;;AAAvB;AAAJ;;AAIa;;AACF;;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAHT;;;;AASR;;;AAGe;;AAAqB;AAArB;AAAP;AAEiB;AAAV;;AAAA;AAAA;AAAA;AAAA;;AAAP;AACO;;AAAU;;AAAV;AAAP;AAGI;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AADJ;AAKI;;AAAA;AAAqD;;AAArD;AADJ;AAKA;;AAGA;;AAES;;AACA;;AAHE;;;AASA;;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAHT;;;;AASR;;;AASe;;AAAqB;;AAArB;AAAP;AACO;AAAA;AAAA;;AAAP;AACqB;AAAd;;AAAA;AAAA;AAAA;;AAAP;AAGI;AAAuB;;AAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AADJ;AAKI;;AAAe;;AAAf;AAAA;;;AACI;;AAAe;;AAAf;AADJ;;;;AADJ;AAKO;;AAAA;;AAAA;AAAoB;;AAApB;AAAP;AACO;;AAAA;;AAAoB;;AAApB;AAAP;AACO;;AAAA;;AAEoB;AAAA;;AAAA;AAAZ;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AADF;;;AADc;AAAA;;;AAApB;;AAAA;AAAP;AAKO;;AAAA;;AAAoB;;AAApB;AAAP;AACO;;AAAA;;AAAoB;;AAApB;AAAP;AACO;;AAAA;;AAAoB;;AAApB;AAAP;AAGI;;AAAA;;AAAsB;;AAAtB;AADJ;AAII;;AAAA;;AAAsB;;AAAtB;AADJ;AAII;;AAAA;;AAAsB;;AAAtB;AADJ;AAOgB;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAOU;;AAA0B;;AAA1B;AAAZ;AACC;;AAAA;AACgB;;AACM;;AACC;;AAZhB;AADc;;AAAA;AAGjB;;AAHiB;AAId;AAJc;AAKb;AALa;AAMd;AANc;AAOtB;AAPsB;AAQhB;;AARgB;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAhB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAApB;;AAAA;;AAAA;AAAA;;AAAA;AAmBA;AAAuB;;AAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMsC;;AAAA;AAAtC;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAM0B;AAAG;;AAA7B;AAGgB;AAAhB;AAAA;;AAAA;AAAA;;;;;;AAGR;;;AAOe;;AAAqB;AAArB;AAAP;AACO;;AAAA;AAAW;;AAAX;;AAAA;AAAA;AAAA;AAAA;;AAAP;AAGa;AAAA;AAAA;AAKN;AAAA;AAAA;;AAAP;AACqB;AAAd;;AAAA;AAAA;AAAA;;AAAP;AAEO;;AAAA;;AAAA;AAAoB;;AAApB;AAAP;AACO;;AAAA;;AAAoB;;AAApB;AAAP;AAEI;;AAAA;;AAAsB;;AAAtB;AADJ;AAMgB;;AAEK;;AAAA;AAAA;AAJjB;;AAAA;;AAGqB;AAHrB;;AAKiB;AALjB;;;AAAA;AADJ;AAYI;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AADJ;AAII;;AAAA;;;AAAwB;;AAAxB;AAAA;AADJ;AAGO;;AAAA;;;AAA6B;;AAAA;;;AAA7B;AAAP;AAEI;;AAAA;;AAAA;AACqB;;AAAA;AAAA;AAAnB;AAAA;AADF;;AAAA;AADJ;AAOQ;AADR;;AACQ;AAEqD;;AAA7D;AAAA;;AAAA;AAG0E;AAAnC;AAAX;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAA5B;;AAAA;AAAA;;AAII;AAAA;;AAAA;AAAoC;AAApC;AADyB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAA7B;;AAMI;AAAA;;AAAA;AAAA;;AAAA;AADoB;AAAxB;;AAKA;;AAAA;AAAA;;;AAGA;;AAGR;;;AAMe;;AAAqB;AAArB;AAAP;AACO;;AAAA;AAAW;;AAAX;;AAAA;AAAA;AAAA;AAAA;;AAAP;AACqB;AAAd;;AAAA;AAAA;AAAA;;AAAP;AAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAkD;AAAlD;AADJ;AAMgB;;AAEK;AAAA;AAAA;AAJjB;;AAAA;;AAGqB;AAHrB;;AAKiB;AALjB;;;AAOG;AAPH;AADJ;AAYgB;AACZ;;AADY;AAAA;AAAA;AAKT;AAAA;;;AAAmC;;AAAnC;AAAP;AAG8C;;AAAe;;AAAf;AAAZ;AAAlC;;AACA;AAAA;;AAGA;AAAuB;;AAAvB;AAAA;AAAA;;AAGR;;;AAGqB;AAAA;;AAAA;;AAAA;AAAA;AAGN;;AAAqB;AAArB;AAAP;AACO;;AAAA;AAAP;AACO;;AAAA;AAAW;;AAAX;;AAAA;AAAA;AAAA;;AAAP;AALa;AAON;;AAAqB;;AAArB;AAAP;AAPa;AAQN;;AAAqB;;AAArB;AAAP;AARa;AASc;AAApB;;AAA0B;;AAA1B;AAAP;AATa;AAac;AAApB;;AAAA;AAAA;;AAAA;AAAP;AAEI;AAAuB;;AAAvB;AAAA;AAAA;AAAA;AAAA;AAD6B;AAA1B;AAAP;AAGO;AAAuB;;AAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAP;;AAGR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMoB;AAAA;;AAAA;;AAAA;AAAA;AAGL;;AAAqB;AAArB;AAAP;AACO;;AAAmB;AAAnB;AAAP;AAEO;;AAAA;AAAA;AAAA;;AAAW;;AAAX;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAP;AACqB;AAAd;;AAAA;AAAA;AAAA;;AAAP;AACO;AAAA;AAAA;;AAAP;AARY;AAUL;;AAAoB;;AAApB;AAAP;AAVY;AAWL;;AAAoB;;AAApB;AAAP;AAXY;AAYc;AAAnB;;AAAyB;;AAAzB;AAAP;AAZY;AAgBc;AAAnB;;AAAA;AAAyB;;;AAAzB;AAAP;AAEI;AAAuB;;AAAvB;AAAA;AAAA;AAAA;AAAA;AAD4B;AAAzB;AAAP;AAOgB;;AAEK;;AAAA;AAAA;AAAA;AAAA;AAJjB;;AAAA;;AAGqB;AAHrB;;AAKiB;AALjB;;;AAOG;AAPH;AADJ;AAYa;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAKG;AACZ;;AADY;AAAA;AAAA;AAAA;;AAAA;AAMZ;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAgC;AAAhC;AADJ;AAII;;;AAAwB;;AAAxB;AAAA;AADJ;AAII;AAAuB;;AAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AADJ;AAII;;AAAgB;AAAuB;;AAAvB;AAAA;AAAA;AAAA;;AAAA;AAAhB;AADJ;AAKO;AAEH;AAAuB;;AAAvB;AAAA;AAAA;AAAA;;AAAA;AAAA;AACA;;AAAA;;AAAA;AACO;;;;;;;;AAJJ;;;;;;;;;;;;;AAAA;;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAYI;;AAAA;;AC1ZS;AAAA;;;AF3HjB;AAAe;;AAAf;AAAP;;;AAEoB;AAoIC;AAkHe;;AAAf;AAAA;;AAtPc;;AAuPd;AAAA;;AAlHD;AAAA;;AAiHgB;;AAAf;AAAA;;AAtPc;;AAuPd;AAAA;;AAxEX;;;;AAAA;;AA8FqB;;;;;;;;;;;AAAQ;AAAhB;AAAA;;AAQP;;AAAT;AAjFkB;;AAET;AAAZ;;AAES;AAAL;;;;AAAK;;AExEF;;;AFwEE;AAAjB;;;AA8CyB;;AAAA;AAAe;;AAAf;AAAA;;AAfM;;AAgBN;AAAA;;AAAA;AASE;AAAS;;AAAT;AAAD;;AAAA;AAA0B;;AAA3B;AAqBL;;AAAT;AArB8C;AAAS;;AAAT;AAO7C;AAAA;AAMuB;AAAA;AAAQ;AAAhB;AAAA;;AANiD;;AAArB;AAAV;;AAAA;AAAA;AAczB;;AAAT;AAdA;AAAA;AAAA;;AA5DQ;;AAAA;AAAnB;;;AAEiC;;AATJ;;AASI;AE/Eb;AF+EY;AAAR;AADM;;;AAAV;;AAAA;AAAA;AAAA;;AAJH;;AAAA;AAAA;AAAA;;;;;;;;;;;;AEpEL;AAAR;;AAGmB;;AAAA;AAAA;;AAAH;AAAZ;;AAAK;;AAAA;;AAAA;AAAb;;;AAEiC;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAzB;;AAAO;AAGI;;;AAAR;AAAX;;;AAIQ;;AAAS;AAAT;AAAA;;AATK;;AAAiC;AAAjC;AAAA;;;;;AAgBL;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAJJ;;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;;;AAAA;AAAA;AAAA;AAQW;;AAAA;AAAA;;AAAA;AAAR;;AAAA;;;;;;;AAAP;;;AACQ;;AAAA;;AAAA;;AACA;;AAAA;;;;;;;;;;;AAGO;;AAAA;AAAA;AAAA;AAAR;;AAAA;;;;AAAP;;;AACQ;;AAAA;;AAAA;;;;;;;;AAKA;;AAAA;;;AAA+C;;AAA/C;AAAA;;;AACW;;AAAA;;AAAA;AAAR;;AAAA;AADH;;;AAIA;;AAAA;AAA+B;;;AAA/B;;AACA;AAAiC;;;AAAjC;;AAEA;AAAgC;;;AAAhC;;AACA;AAAkC;;;AAAlC;;AAEA;;AAAA;;AACA;;AAAA;;AAAA;;ADuWG;;AAAA;;;AAAA;AAAA;;AAA+B;AAAA;AAAA;AAAA;;;AAA/B;AAAX;;;AAEY;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAGG;;;AAAiD;;AAAjD;AAAf;;;AAGoB;AAAA;AAAA;AAAA;AAAA;;;AACA;AAAA;AAAA;AAF0B;;AAAA;AAAA;;AAM3B;;;AAAiB;;AAAiB;AAAjB;AAAjB;;;AAEc;AAAA;AAAA;AAAA;AAAA;AAAA;AACI;AAAA;;;AACE;;ACrhBnC;ADshByB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClhBR;;;;;;;;;AAJjB;;;;AAAA;;;AAAA;AD4hBQ;AAAA;AAAA;AAAsD;;AAAtD;;AAAA;AAAA;AAAA;AAGmC;;AAAA;AAAA;AAAA;AAAmC;AAAnC;AAAX;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAA5B;;AAGA;;AAAwB;;AAAxB;;AACkC;;AAAlC;;AAEI;;AAAe;;AAAf;AADyB;AAA7B;;AAKA;AAAuB;;AAAvB;AAAA;AAAA;AAGA;;AAAA;AAGsB;AACD;AAJrB;;;AAQA;;AAAA;AAAA;;ACpZA;;AAAA;;;AAAgD;;AAAhD;AAAA;;;AACW;;AAAA;;AAAA;AAAR;;AAAA;AADH;;;AAIA;;AAAA;AAA+B;;;AAA/B;;AACA;AAAiC;;;AAAjC;;AAEA;;AAAA;;AACA;;AAAA;;;;;;;;;;;AAGA;;AAAA;;;AAA+C;;AAA/C;AAAA;;;AACW;;AAAA;;AAAA;AAAR;;AAAA;AADH;;;AAIA;;AAAA;;AAAA;;AACA;;AAAA;;;;;;;ADuYR;;;AAGe;;AAAqB;AAArB;AAAP;AACO;;AAAA;AAAW;;AAAX;AAAA;AAAA;;AAAA;AAAA;;AAAP;AAGa;AAAA;AAKV;;AAAA;AAAA;AAAX;;;AAGgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AADJ;AAII;AAAA;;;AAAuB;;AAAvB;AAAA;AADJ;AAKG;;;AAA4B;;AAA5B;AAAA;;;AAA2C;;AAAA;;;AAA6B;;AAA7B;AAA3C;;;AAEC;;AAAA;;AAGsB;AACD;AAJrB;;;AAAA;;AAgCR;;AAAA;;AAAA;;AAxBQ;;AAAA;;AAAA;;;AAAA;;;;;AAGH;;AAAqB;AAArB;AAAb;AAGgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAgC;AAAhC;AADJ;AAII;AAAA;;;AAAuB;;AAAvB;AAAA;AADJ;AAKA;;AAAA;AAGsB;AACD;AAJrB;;;AAAA;;;;;AAcZ;;;AAOe;;AAAqB;AAArB;AAAP;AACO;;AAAA;AAAW;;AAAX;;AAAA;AAAA;AAAA;AAAA;;AAAP;AAEO;;AAAA;;AAAoB;;AAApB;AAAP;AAEI;;AAAA;;AAAsB;;AAAtB;AADJ;AAGO;;AAAA;;AAAoB;;AAApB;AAAP;AAGa;AAAA;AAAA;AAKN;AAAA;;;AAA4B;;AAA5B;AAAP;AACO;AAAA;;AAAA;AAAA;AAAP;AACO;AAAA;AAAA;AAAA;AAAP;AAIQ;AADR;;AACQ;AAEkB;AAAG;;AAA7B;AAGA;AAAA;AAAA;AAC4B;;AAA5B;;AAC+B;AAA/B;;AACgC;AAAhC;;AAC+B;AAA/B;;AAC6B;;AAA7B;;AAEI;;AAA0B;;AAA1B;AADmB;AAAvB;;AAII;AAAA;;AAAA;AAA+B;;AAA/B;AADoB;AAAxB;;AAG8C;;AAA9C;;AAC+C;;AAA/C;;AAC8C;;AAA9C;;AAGA;;AAGR;;;;;AAMe;;AAAqB;AAArB;AAAP;AACO;;AAAA;AAAA;AAAW;;AAAX;AAAA;AAAA;;AAAA;AAAA;;AAAP;AAGa;AAAA;AAAA;AAAA;;AAAA;AAKL;;;AAAA;AAIJ;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAA8C;AAA9C;AADJ;AAII;;AAAA;AAAA;;;AAAuB;;AAAc;;AAAd;AAAvB;;;;AADJ;AAMG;;AAAA;AAAA;AAAA;AAAA;;AAAoC;AAApC;AAAX;;;AACY;;AAAA;;AAGqB;AACJ;AACA;AALH;;;AASQ;AAAf;AAAP;AAIa;;AACF;;AAAA;;AAAA;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAHT;;;AAcJ;;AAAA;;AACI;AAAA;;AAAA;AAAJ;;AAGA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAK8C;;AAAA;AAAA;AAAnB;AAAA;AAAZ;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AADF;;;AADb;AAAa;;;AAOA;;AACF;;AAAA;;AAAA;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAHT;;;;AAjBW;;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAA;AAAP;;;;;;;;AAyBZ;;;;;AAGe;;AAAP;AACO;;AAAc;;AAAd;AAAP;AAGG;AAAA;AAAA;;AAAX;;;AAGgB;;AACA;AAAA;AAAA;AAAA;AAAA;AAF0B;;AAAA;AAAA;;AAK3B;;;AAAiB;;AAAiB;AAAjB;AAAjB;;;AAEc;AAAA;AAAA;AAAA;AAAA;ACjxBzB;ADkxBqB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClxBrB;;;;AAAA;;;AAAA;ADuxBY;AAAJ;;AAGJ;AACa;;AAEU;AACd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAFE;;;;;AAFX;;;AAAA;;;AAAA;",
  "op_pc_offset": 2,
  "pc_events": {
    "0": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%0#2"
      ]
    },
    "2": {
      "op": "bz main_after_if_else@26",
      "stack_out": []
    },
    "5": {
      "op": "pushbytess 0x6333cd9d 0xb66d2f56 0x1d236a37 0x04b716e1 0xbbfa8e01 0xb16aa971 0x5be219f0 0xb2460ef6 0x3ae74f74 0x1fa065e9 0xf6c91251 0xc1da1bb6 0xda7b6785 0x71af966e 0xdc349707 // method \"calc_single_box_cost(uint8,uint16)uint64\", method \"read_gen_unix()uint64\", method \"does_box_game_trophy_exist()bool\", method \"does_box_game_register_exist(account)bool\", method \"does_box_game_state_exist(uint64)bool\", method \"read_box_game_players(uint64)address[]\", method \"generate()void\", method \"mint_trophy(pay,pay)void\", method \"claim_trophy()void\", method \"get_box_game_register(pay)void\", method \"del_box_game_register_for_self()void\", method \"del_box_game_register_for_other(account)void\", method \"new_game(uint64,pay,pay,pay)void\", method \"join_game(uint64,pay)void\", method \"set_game_commit(uint64)void\"",
      "defined_out": [
        "Method(calc_single_box_cost(uint8,uint16)uint64)",
        "Method(claim_trophy()void)",
        "Method(del_box_game_register_for_other(account)void)",
        "Method(del_box_game_register_for_self()void)",
        "Method(does_box_game_register_exist(account)bool)",
        "Method(does_box_game_state_exist(uint64)bool)",
        "Method(does_box_game_trophy_exist()bool)",
        "Method(generate()void)",
        "Method(get_box_game_register(pay)void)",
        "Method(join_game(uint64,pay)void)",
        "Method(mint_trophy(pay,pay)void)",
        "Method(new_game(uint64,pay,pay,pay)void)",
        "Method(read_box_game_players(uint64)address[])",
        "Method(read_gen_unix()uint64)",
        "Method(set_game_commit(uint64)void)"
      ],
      "stack_out": [
        "Method(calc_single_box_cost(uint8,uint16)uint64)",
        "Method(read_gen_unix()uint64)",
        "Method(does_box_game_trophy_exist()bool)",
        "Method(does_box_game_register_exist(account)bool)",
        "Method(does_box_game_state_exist(uint64)bool)",
        "Method(read_box_game_players(uint64)address[])",
        "Method(generate()void)",
        "Method(mint_trophy(pay,pay)void)",
        "Method(claim_trophy()void)",
        "Method(get_box_game_register(pay)void)",
        "Method(del_box_game_register_for_self()void)",
        "Method(del_box_game_register_for_other(account)void)",
        "Method(new_game(uint64,pay,pay,pay)void)",
        "Method(join_game(uint64,pay)void)",
        "Method(set_game_commit(uint64)void)"
      ]
    },
    "82": {
      "op": "bytec 11 // method \"up_ref_budget_for_play_game(uint64)void\"",
      "defined_out": [
        "Method(calc_single_box_cost(uint8,uint16)uint64)",
        "Method(claim_trophy()void)",
        "Method(del_box_game_register_for_other(account)void)",
        "Method(del_box_game_register_for_self()void)",
        "Method(does_box_game_register_exist(account)bool)",
        "Method(does_box_game_state_exist(uint64)bool)",
        "Method(does_box_game_trophy_exist()bool)",
        "Method(generate()void)",
        "Method(get_box_game_register(pay)void)",
        "Method(join_game(uint64,pay)void)",
        "Method(mint_trophy(pay,pay)void)",
        "Method(new_game(uint64,pay,pay,pay)void)",
        "Method(read_box_game_players(uint64)address[])",
        "Method(read_gen_unix()uint64)",
        "Method(set_game_commit(uint64)void)",
        "Method(up_ref_budget_for_play_game(uint64)void)"
      ],
      "stack_out": [
        "Method(calc_single_box_cost(uint8,uint16)uint64)",
        "Method(read_gen_unix()uint64)",
        "Method(does_box_game_trophy_exist()bool)",
        "Method(does_box_game_register_exist(account)bool)",
        "Method(does_box_game_state_exist(uint64)bool)",
        "Method(read_box_game_players(uint64)address[])",
        "Method(generate()void)",
        "Method(mint_trophy(pay,pay)void)",
        "Method(claim_trophy()void)",
        "Method(get_box_game_register(pay)void)",
        "Method(del_box_game_register_for_self()void)",
        "Method(del_box_game_register_for_other(account)void)",
        "Method(new_game(uint64,pay,pay,pay)void)",
        "Method(join_game(uint64,pay)void)",
        "Method(set_game_commit(uint64)void)",
        "Method(up_ref_budget_for_play_game(uint64)void)"
      ]
    },
    "84": {
      "op": "bytec 12 // method \"play_game(uint64)void\"",
      "defined_out": [
        "Method(calc_single_box_cost(uint8,uint16)uint64)",
        "Method(claim_trophy()void)",
        "Method(del_box_game_register_for_other(account)void)",
        "Method(del_box_game_register_for_self()void)",
        "Method(does_box_game_register_exist(account)bool)",
        "Method(does_box_game_state_exist(uint64)bool)",
        "Method(does_box_game_trophy_exist()bool)",
        "Method(generate()void)",
        "Method(get_box_game_register(pay)void)",
        "Method(join_game(uint64,pay)void)",
        "Method(mint_trophy(pay,pay)void)",
        "Method(new_game(uint64,pay,pay,pay)void)",
        "Method(play_game(uint64)void)",
        "Method(read_box_game_players(uint64)address[])",
        "Method(read_gen_unix()uint64)",
        "Method(set_game_commit(uint64)void)",
        "Method(up_ref_budget_for_play_game(uint64)void)"
      ],
      "stack_out": [
        "Method(calc_single_box_cost(uint8,uint16)uint64)",
        "Method(read_gen_unix()uint64)",
        "Method(does_box_game_trophy_exist()bool)",
        "Method(does_box_game_register_exist(account)bool)",
        "Method(does_box_game_state_exist(uint64)bool)",
        "Method(read_box_game_players(uint64)address[])",
        "Method(generate()void)",
        "Method(mint_trophy(pay,pay)void)",
        "Method(claim_trophy()void)",
        "Method(get_box_game_register(pay)void)",
        "Method(del_box_game_register_for_self()void)",
        "Method(del_box_game_register_for_other(account)void)",
        "Method(new_game(uint64,pay,pay,pay)void)",
        "Method(join_game(uint64,pay)void)",
        "Method(set_game_commit(uint64)void)",
        "Method(up_ref_budget_for_play_game(uint64)void)",
        "Method(play_game(uint64)void)"
      ]
    },
    "86": {
      "op": "pushbytess 0x9eee9c18 0x102875e7 0x1898a02e 0x5ff16da4 // method \"trigger_game_event(uint64,uint8)void\", method \"reset_game(uint64,pay)void\", method \"delete_game(uint64)void\", method \"terminate()void\"",
      "defined_out": [
        "Method(calc_single_box_cost(uint8,uint16)uint64)",
        "Method(claim_trophy()void)",
        "Method(del_box_game_register_for_other(account)void)",
        "Method(del_box_game_register_for_self()void)",
        "Method(delete_game(uint64)void)",
        "Method(does_box_game_register_exist(account)bool)",
        "Method(does_box_game_state_exist(uint64)bool)",
        "Method(does_box_game_trophy_exist()bool)",
        "Method(generate()void)",
        "Method(get_box_game_register(pay)void)",
        "Method(join_game(uint64,pay)void)",
        "Method(mint_trophy(pay,pay)void)",
        "Method(new_game(uint64,pay,pay,pay)void)",
        "Method(play_game(uint64)void)",
        "Method(read_box_game_players(uint64)address[])",
        "Method(read_gen_unix()uint64)",
        "Method(reset_game(uint64,pay)void)",
        "Method(set_game_commit(uint64)void)",
        "Method(terminate()void)",
        "Method(trigger_game_event(uint64,uint8)void)",
        "Method(up_ref_budget_for_play_game(uint64)void)"
      ],
      "stack_out": [
        "Method(calc_single_box_cost(uint8,uint16)uint64)",
        "Method(read_gen_unix()uint64)",
        "Method(does_box_game_trophy_exist()bool)",
        "Method(does_box_game_register_exist(account)bool)",
        "Method(does_box_game_state_exist(uint64)bool)",
        "Method(read_box_game_players(uint64)address[])",
        "Method(generate()void)",
        "Method(mint_trophy(pay,pay)void)",
        "Method(claim_trophy()void)",
        "Method(get_box_game_register(pay)void)",
        "Method(del_box_game_register_for_self()void)",
        "Method(del_box_game_register_for_other(account)void)",
        "Method(new_game(uint64,pay,pay,pay)void)",
        "Method(join_game(uint64,pay)void)",
        "Method(set_game_commit(uint64)void)",
        "Method(up_ref_budget_for_play_game(uint64)void)",
        "Method(play_game(uint64)void)",
        "Method(trigger_game_event(uint64,uint8)void)",
        "Method(reset_game(uint64,pay)void)",
        "Method(delete_game(uint64)void)",
        "Method(terminate()void)"
      ]
    },
    "108": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(calc_single_box_cost(uint8,uint16)uint64)",
        "Method(claim_trophy()void)",
        "Method(del_box_game_register_for_other(account)void)",
        "Method(del_box_game_register_for_self()void)",
        "Method(delete_game(uint64)void)",
        "Method(does_box_game_register_exist(account)bool)",
        "Method(does_box_game_state_exist(uint64)bool)",
        "Method(does_box_game_trophy_exist()bool)",
        "Method(generate()void)",
        "Method(get_box_game_register(pay)void)",
        "Method(join_game(uint64,pay)void)",
        "Method(mint_trophy(pay,pay)void)",
        "Method(new_game(uint64,pay,pay,pay)void)",
        "Method(play_game(uint64)void)",
        "Method(read_box_game_players(uint64)address[])",
        "Method(read_gen_unix()uint64)",
        "Method(reset_game(uint64,pay)void)",
        "Method(set_game_commit(uint64)void)",
        "Method(terminate()void)",
        "Method(trigger_game_event(uint64,uint8)void)",
        "Method(up_ref_budget_for_play_game(uint64)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(calc_single_box_cost(uint8,uint16)uint64)",
        "Method(read_gen_unix()uint64)",
        "Method(does_box_game_trophy_exist()bool)",
        "Method(does_box_game_register_exist(account)bool)",
        "Method(does_box_game_state_exist(uint64)bool)",
        "Method(read_box_game_players(uint64)address[])",
        "Method(generate()void)",
        "Method(mint_trophy(pay,pay)void)",
        "Method(claim_trophy()void)",
        "Method(get_box_game_register(pay)void)",
        "Method(del_box_game_register_for_self()void)",
        "Method(del_box_game_register_for_other(account)void)",
        "Method(new_game(uint64,pay,pay,pay)void)",
        "Method(join_game(uint64,pay)void)",
        "Method(set_game_commit(uint64)void)",
        "Method(up_ref_budget_for_play_game(uint64)void)",
        "Method(play_game(uint64)void)",
        "Method(trigger_game_event(uint64,uint8)void)",
        "Method(reset_game(uint64,pay)void)",
        "Method(delete_game(uint64)void)",
        "Method(terminate()void)",
        "tmp%2#0"
      ]
    },
    "111": {
      "op": "match main_calc_single_box_cost_route@5 main_read_gen_unix_route@6 main_does_box_game_trophy_exist_route@7 main_does_box_game_register_exist_route@8 main_does_box_game_state_exist_route@9 main_read_box_game_players_route@10 main_generate_route@11 main_mint_trophy_route@12 main_claim_trophy_route@13 main_get_box_game_register_route@14 main_del_box_game_register_for_self_route@15 main_del_box_game_register_for_other_route@16 main_new_game_route@17 main_join_game_route@18 main_set_game_commit_route@19 main_up_ref_budget_for_play_game_route@20 main_play_game_route@21 main_trigger_game_event_route@22 main_reset_game_route@23 main_delete_game_route@24 main_terminate_route@25",
      "stack_out": []
    },
    "155": {
      "block": "main_after_if_else@26",
      "stack_in": [],
      "op": "intc_1 // 0",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "156": {
      "op": "return",
      "stack_out": []
    },
    "157": {
      "block": "main_terminate_route@25",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%112#0"
      ],
      "stack_out": [
        "tmp%112#0"
      ]
    },
    "159": {
      "op": "pushint 5 // DeleteApplication",
      "defined_out": [
        "DeleteApplication",
        "tmp%112#0"
      ],
      "stack_out": [
        "tmp%112#0",
        "DeleteApplication"
      ]
    },
    "161": {
      "op": "==",
      "defined_out": [
        "tmp%113#0"
      ],
      "stack_out": [
        "tmp%113#0"
      ]
    },
    "162": {
      "error": "OnCompletion is not DeleteApplication",
      "op": "assert // OnCompletion is not DeleteApplication",
      "stack_out": []
    },
    "163": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%114#0"
      ],
      "stack_out": [
        "tmp%114#0"
      ]
    },
    "165": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "166": {
      "callsub": "smart_contracts.pieout.contract.Pieout.terminate",
      "op": "callsub terminate"
    },
    "169": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "170": {
      "op": "return",
      "stack_out": []
    },
    "171": {
      "block": "main_delete_game_route@24",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%107#0"
      ],
      "stack_out": [
        "tmp%107#0"
      ]
    },
    "173": {
      "op": "!",
      "defined_out": [
        "tmp%108#0"
      ],
      "stack_out": [
        "tmp%108#0"
      ]
    },
    "174": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "175": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%109#0"
      ],
      "stack_out": [
        "tmp%109#0"
      ]
    },
    "177": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "178": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%9#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%9#0"
      ]
    },
    "181": {
      "op": "btoi",
      "defined_out": [
        "tmp%111#0"
      ],
      "stack_out": [
        "tmp%111#0"
      ]
    },
    "182": {
      "callsub": "smart_contracts.pieout.contract.Pieout.delete_game",
      "op": "callsub delete_game",
      "stack_out": []
    },
    "185": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "186": {
      "op": "return",
      "stack_out": []
    },
    "187": {
      "block": "main_reset_game_route@23",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%101#0"
      ],
      "stack_out": [
        "tmp%101#0"
      ]
    },
    "189": {
      "op": "!",
      "defined_out": [
        "tmp%102#0"
      ],
      "stack_out": [
        "tmp%102#0"
      ]
    },
    "190": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "191": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%103#0"
      ],
      "stack_out": [
        "tmp%103#0"
      ]
    },
    "193": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "194": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%8#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%8#0"
      ]
    },
    "197": {
      "op": "btoi",
      "defined_out": [
        "tmp%105#0"
      ],
      "stack_out": [
        "tmp%105#0"
      ]
    },
    "198": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%105#0",
        "tmp%106#0"
      ],
      "stack_out": [
        "tmp%105#0",
        "tmp%106#0"
      ]
    },
    "200": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "tmp%105#0",
        "tmp%106#0"
      ],
      "stack_out": [
        "tmp%105#0",
        "tmp%106#0",
        "1"
      ]
    },
    "201": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%7#0",
        "tmp%105#0"
      ],
      "stack_out": [
        "tmp%105#0",
        "gtxn_idx%7#0"
      ]
    },
    "202": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%7#0",
        "gtxn_idx%7#0 (copy)",
        "tmp%105#0"
      ],
      "stack_out": [
        "tmp%105#0",
        "gtxn_idx%7#0",
        "gtxn_idx%7#0 (copy)"
      ]
    },
    "203": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%7#0",
        "gtxn_type%7#0",
        "tmp%105#0"
      ],
      "stack_out": [
        "tmp%105#0",
        "gtxn_idx%7#0",
        "gtxn_type%7#0"
      ]
    },
    "205": {
      "op": "intc_0 // pay",
      "defined_out": [
        "gtxn_idx%7#0",
        "gtxn_type%7#0",
        "pay",
        "tmp%105#0"
      ],
      "stack_out": [
        "tmp%105#0",
        "gtxn_idx%7#0",
        "gtxn_type%7#0",
        "pay"
      ]
    },
    "206": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%7#0",
        "gtxn_type_matches%7#0",
        "tmp%105#0"
      ],
      "stack_out": [
        "tmp%105#0",
        "gtxn_idx%7#0",
        "gtxn_type_matches%7#0"
      ]
    },
    "207": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "tmp%105#0",
        "gtxn_idx%7#0"
      ]
    },
    "208": {
      "callsub": "smart_contracts.pieout.contract.Pieout.reset_game",
      "op": "callsub reset_game",
      "stack_out": []
    },
    "211": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "212": {
      "op": "return",
      "stack_out": []
    },
    "213": {
      "block": "main_trigger_game_event_route@22",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%96#0"
      ],
      "stack_out": [
        "tmp%96#0"
      ]
    },
    "215": {
      "op": "!",
      "defined_out": [
        "tmp%97#0"
      ],
      "stack_out": [
        "tmp%97#0"
      ]
    },
    "216": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "217": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%98#0"
      ],
      "stack_out": [
        "tmp%98#0"
      ]
    },
    "219": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "220": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%7#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%7#0"
      ]
    },
    "223": {
      "op": "btoi",
      "defined_out": [
        "tmp%100#0"
      ],
      "stack_out": [
        "tmp%100#0"
      ]
    },
    "224": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[1]%3#0",
        "tmp%100#0"
      ],
      "stack_out": [
        "tmp%100#0",
        "reinterpret_bytes[1]%3#0"
      ]
    },
    "227": {
      "callsub": "smart_contracts.pieout.contract.Pieout.trigger_game_event",
      "op": "callsub trigger_game_event",
      "stack_out": []
    },
    "230": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "231": {
      "op": "return",
      "stack_out": []
    },
    "232": {
      "block": "main_play_game_route@21",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%91#0"
      ],
      "stack_out": [
        "tmp%91#0"
      ]
    },
    "234": {
      "op": "!",
      "defined_out": [
        "tmp%92#0"
      ],
      "stack_out": [
        "tmp%92#0"
      ]
    },
    "235": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "236": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%93#0"
      ],
      "stack_out": [
        "tmp%93#0"
      ]
    },
    "238": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "239": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%6#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%6#0"
      ]
    },
    "242": {
      "op": "btoi",
      "defined_out": [
        "tmp%95#0"
      ],
      "stack_out": [
        "tmp%95#0"
      ]
    },
    "243": {
      "callsub": "smart_contracts.pieout.contract.Pieout.play_game",
      "op": "callsub play_game",
      "stack_out": []
    },
    "246": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "247": {
      "op": "return",
      "stack_out": []
    },
    "248": {
      "block": "main_up_ref_budget_for_play_game_route@20",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%86#0"
      ],
      "stack_out": [
        "tmp%86#0"
      ]
    },
    "250": {
      "op": "!",
      "defined_out": [
        "tmp%87#0"
      ],
      "stack_out": [
        "tmp%87#0"
      ]
    },
    "251": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "252": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%88#0"
      ],
      "stack_out": [
        "tmp%88#0"
      ]
    },
    "254": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "255": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%5#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%5#0"
      ]
    },
    "258": {
      "op": "btoi",
      "defined_out": [
        "tmp%90#0"
      ],
      "stack_out": [
        "tmp%90#0"
      ]
    },
    "259": {
      "callsub": "smart_contracts.pieout.contract.Pieout.up_ref_budget_for_play_game",
      "op": "callsub up_ref_budget_for_play_game",
      "stack_out": []
    },
    "262": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "263": {
      "op": "return",
      "stack_out": []
    },
    "264": {
      "block": "main_set_game_commit_route@19",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%81#0"
      ],
      "stack_out": [
        "tmp%81#0"
      ]
    },
    "266": {
      "op": "!",
      "defined_out": [
        "tmp%82#0"
      ],
      "stack_out": [
        "tmp%82#0"
      ]
    },
    "267": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "268": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%83#0"
      ],
      "stack_out": [
        "tmp%83#0"
      ]
    },
    "270": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "271": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%4#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%4#0"
      ]
    },
    "274": {
      "op": "btoi",
      "defined_out": [
        "tmp%85#0"
      ],
      "stack_out": [
        "tmp%85#0"
      ]
    },
    "275": {
      "callsub": "smart_contracts.pieout.contract.Pieout.set_game_commit",
      "op": "callsub set_game_commit",
      "stack_out": []
    },
    "278": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "279": {
      "op": "return",
      "stack_out": []
    },
    "280": {
      "block": "main_join_game_route@18",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%75#0"
      ],
      "stack_out": [
        "tmp%75#0"
      ]
    },
    "282": {
      "op": "!",
      "defined_out": [
        "tmp%76#0"
      ],
      "stack_out": [
        "tmp%76#0"
      ]
    },
    "283": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "284": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%77#0"
      ],
      "stack_out": [
        "tmp%77#0"
      ]
    },
    "286": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "287": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%3#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%3#0"
      ]
    },
    "290": {
      "op": "btoi",
      "defined_out": [
        "tmp%79#0"
      ],
      "stack_out": [
        "tmp%79#0"
      ]
    },
    "291": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%79#0",
        "tmp%80#0"
      ],
      "stack_out": [
        "tmp%79#0",
        "tmp%80#0"
      ]
    },
    "293": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "tmp%79#0",
        "tmp%80#0"
      ],
      "stack_out": [
        "tmp%79#0",
        "tmp%80#0",
        "1"
      ]
    },
    "294": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%6#0",
        "tmp%79#0"
      ],
      "stack_out": [
        "tmp%79#0",
        "gtxn_idx%6#0"
      ]
    },
    "295": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%6#0",
        "gtxn_idx%6#0 (copy)",
        "tmp%79#0"
      ],
      "stack_out": [
        "tmp%79#0",
        "gtxn_idx%6#0",
        "gtxn_idx%6#0 (copy)"
      ]
    },
    "296": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%6#0",
        "gtxn_type%6#0",
        "tmp%79#0"
      ],
      "stack_out": [
        "tmp%79#0",
        "gtxn_idx%6#0",
        "gtxn_type%6#0"
      ]
    },
    "298": {
      "op": "intc_0 // pay",
      "defined_out": [
        "gtxn_idx%6#0",
        "gtxn_type%6#0",
        "pay",
        "tmp%79#0"
      ],
      "stack_out": [
        "tmp%79#0",
        "gtxn_idx%6#0",
        "gtxn_type%6#0",
        "pay"
      ]
    },
    "299": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%6#0",
        "gtxn_type_matches%6#0",
        "tmp%79#0"
      ],
      "stack_out": [
        "tmp%79#0",
        "gtxn_idx%6#0",
        "gtxn_type_matches%6#0"
      ]
    },
    "300": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "tmp%79#0",
        "gtxn_idx%6#0"
      ]
    },
    "301": {
      "callsub": "smart_contracts.pieout.contract.Pieout.join_game",
      "op": "callsub join_game",
      "stack_out": []
    },
    "304": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "305": {
      "op": "return",
      "stack_out": []
    },
    "306": {
      "block": "main_new_game_route@17",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%67#0"
      ],
      "stack_out": [
        "tmp%67#0"
      ]
    },
    "308": {
      "op": "!",
      "defined_out": [
        "tmp%68#0"
      ],
      "stack_out": [
        "tmp%68#0"
      ]
    },
    "309": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "310": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%69#0"
      ],
      "stack_out": [
        "tmp%69#0"
      ]
    },
    "312": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "313": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%2#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%2#0"
      ]
    },
    "316": {
      "op": "btoi",
      "defined_out": [
        "tmp%71#0"
      ],
      "stack_out": [
        "tmp%71#0"
      ]
    },
    "317": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%71#0",
        "tmp%72#0"
      ],
      "stack_out": [
        "tmp%71#0",
        "tmp%72#0"
      ]
    },
    "319": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "tmp%71#0",
        "tmp%72#0"
      ],
      "stack_out": [
        "tmp%71#0",
        "tmp%72#0",
        "3"
      ]
    },
    "321": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%3#0",
        "tmp%71#0"
      ],
      "stack_out": [
        "tmp%71#0",
        "gtxn_idx%3#0"
      ]
    },
    "322": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%3#0",
        "gtxn_idx%3#0 (copy)",
        "tmp%71#0"
      ],
      "stack_out": [
        "tmp%71#0",
        "gtxn_idx%3#0",
        "gtxn_idx%3#0 (copy)"
      ]
    },
    "323": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%3#0",
        "gtxn_type%3#0",
        "tmp%71#0"
      ],
      "stack_out": [
        "tmp%71#0",
        "gtxn_idx%3#0",
        "gtxn_type%3#0"
      ]
    },
    "325": {
      "op": "intc_0 // pay",
      "defined_out": [
        "gtxn_idx%3#0",
        "gtxn_type%3#0",
        "pay",
        "tmp%71#0"
      ],
      "stack_out": [
        "tmp%71#0",
        "gtxn_idx%3#0",
        "gtxn_type%3#0",
        "pay"
      ]
    },
    "326": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%3#0",
        "gtxn_type_matches%3#0",
        "tmp%71#0"
      ],
      "stack_out": [
        "tmp%71#0",
        "gtxn_idx%3#0",
        "gtxn_type_matches%3#0"
      ]
    },
    "327": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "tmp%71#0",
        "gtxn_idx%3#0"
      ]
    },
    "328": {
      "op": "txn GroupIndex",
      "defined_out": [
        "gtxn_idx%3#0",
        "tmp%71#0",
        "tmp%73#0"
      ],
      "stack_out": [
        "tmp%71#0",
        "gtxn_idx%3#0",
        "tmp%73#0"
      ]
    },
    "330": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "gtxn_idx%3#0",
        "tmp%71#0",
        "tmp%73#0"
      ],
      "stack_out": [
        "tmp%71#0",
        "gtxn_idx%3#0",
        "tmp%73#0",
        "2"
      ]
    },
    "331": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "tmp%71#0"
      ],
      "stack_out": [
        "tmp%71#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0"
      ]
    },
    "332": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "gtxn_idx%4#0 (copy)",
        "tmp%71#0"
      ],
      "stack_out": [
        "tmp%71#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "gtxn_idx%4#0 (copy)"
      ]
    },
    "333": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "gtxn_type%4#0",
        "tmp%71#0"
      ],
      "stack_out": [
        "tmp%71#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "gtxn_type%4#0"
      ]
    },
    "335": {
      "op": "intc_0 // pay",
      "stack_out": [
        "tmp%71#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "gtxn_type%4#0",
        "pay"
      ]
    },
    "336": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "gtxn_type_matches%4#0",
        "tmp%71#0"
      ],
      "stack_out": [
        "tmp%71#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "gtxn_type_matches%4#0"
      ]
    },
    "337": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "tmp%71#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0"
      ]
    },
    "338": {
      "op": "txn GroupIndex",
      "defined_out": [
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "tmp%71#0",
        "tmp%74#0"
      ],
      "stack_out": [
        "tmp%71#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "tmp%74#0"
      ]
    },
    "340": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "tmp%71#0",
        "tmp%74#0"
      ],
      "stack_out": [
        "tmp%71#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "tmp%74#0",
        "1"
      ]
    },
    "341": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "gtxn_idx%5#0",
        "tmp%71#0"
      ],
      "stack_out": [
        "tmp%71#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "gtxn_idx%5#0"
      ]
    },
    "342": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "gtxn_idx%5#0",
        "gtxn_idx%5#0 (copy)",
        "tmp%71#0"
      ],
      "stack_out": [
        "tmp%71#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "gtxn_idx%5#0",
        "gtxn_idx%5#0 (copy)"
      ]
    },
    "343": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "gtxn_idx%5#0",
        "gtxn_type%5#0",
        "tmp%71#0"
      ],
      "stack_out": [
        "tmp%71#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "gtxn_idx%5#0",
        "gtxn_type%5#0"
      ]
    },
    "345": {
      "op": "intc_0 // pay",
      "stack_out": [
        "tmp%71#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "gtxn_idx%5#0",
        "gtxn_type%5#0",
        "pay"
      ]
    },
    "346": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "gtxn_idx%5#0",
        "gtxn_type_matches%5#0",
        "tmp%71#0"
      ],
      "stack_out": [
        "tmp%71#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "gtxn_idx%5#0",
        "gtxn_type_matches%5#0"
      ]
    },
    "347": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "tmp%71#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "gtxn_idx%5#0"
      ]
    },
    "348": {
      "callsub": "smart_contracts.pieout.contract.Pieout.new_game",
      "op": "callsub new_game",
      "stack_out": []
    },
    "351": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "352": {
      "op": "return",
      "stack_out": []
    },
    "353": {
      "block": "main_del_box_game_register_for_other_route@16",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%61#0"
      ],
      "stack_out": [
        "tmp%61#0"
      ]
    },
    "355": {
      "op": "!",
      "defined_out": [
        "tmp%62#0"
      ],
      "stack_out": [
        "tmp%62#0"
      ]
    },
    "356": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "357": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%63#0"
      ],
      "stack_out": [
        "tmp%63#0"
      ]
    },
    "359": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "360": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%2#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%2#0"
      ]
    },
    "363": {
      "op": "btoi",
      "defined_out": [
        "tmp%65#0"
      ],
      "stack_out": [
        "tmp%65#0"
      ]
    },
    "364": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%66#0"
      ],
      "stack_out": [
        "tmp%66#0"
      ]
    },
    "366": {
      "callsub": "smart_contracts.pieout.contract.Pieout.del_box_game_register_for_other",
      "op": "callsub del_box_game_register_for_other",
      "stack_out": []
    },
    "369": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "370": {
      "op": "return",
      "stack_out": []
    },
    "371": {
      "block": "main_del_box_game_register_for_self_route@15",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%57#0"
      ],
      "stack_out": [
        "tmp%57#0"
      ]
    },
    "373": {
      "op": "!",
      "defined_out": [
        "tmp%58#0"
      ],
      "stack_out": [
        "tmp%58#0"
      ]
    },
    "374": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "375": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%59#0"
      ],
      "stack_out": [
        "tmp%59#0"
      ]
    },
    "377": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "378": {
      "callsub": "smart_contracts.pieout.contract.Pieout.del_box_game_register_for_self",
      "op": "callsub del_box_game_register_for_self"
    },
    "381": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "382": {
      "op": "return",
      "stack_out": []
    },
    "383": {
      "block": "main_get_box_game_register_route@14",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%52#0"
      ],
      "stack_out": [
        "tmp%52#0"
      ]
    },
    "385": {
      "op": "!",
      "defined_out": [
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%53#0"
      ]
    },
    "386": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "387": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%54#0"
      ],
      "stack_out": [
        "tmp%54#0"
      ]
    },
    "389": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "390": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%56#0"
      ],
      "stack_out": [
        "tmp%56#0"
      ]
    },
    "392": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "tmp%56#0"
      ],
      "stack_out": [
        "tmp%56#0",
        "1"
      ]
    },
    "393": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%2#0"
      ],
      "stack_out": [
        "gtxn_idx%2#0"
      ]
    },
    "394": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_idx%2#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%2#0",
        "gtxn_idx%2#0 (copy)"
      ]
    },
    "395": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_type%2#0"
      ],
      "stack_out": [
        "gtxn_idx%2#0",
        "gtxn_type%2#0"
      ]
    },
    "397": {
      "op": "intc_0 // pay",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_type%2#0",
        "pay"
      ],
      "stack_out": [
        "gtxn_idx%2#0",
        "gtxn_type%2#0",
        "pay"
      ]
    },
    "398": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_type_matches%2#0"
      ],
      "stack_out": [
        "gtxn_idx%2#0",
        "gtxn_type_matches%2#0"
      ]
    },
    "399": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "gtxn_idx%2#0"
      ]
    },
    "400": {
      "callsub": "smart_contracts.pieout.contract.Pieout.get_box_game_register",
      "op": "callsub get_box_game_register",
      "stack_out": []
    },
    "403": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "404": {
      "op": "return",
      "stack_out": []
    },
    "405": {
      "block": "main_claim_trophy_route@13",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%48#0"
      ]
    },
    "407": {
      "op": "!",
      "defined_out": [
        "tmp%49#0"
      ],
      "stack_out": [
        "tmp%49#0"
      ]
    },
    "408": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "409": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%50#0"
      ],
      "stack_out": [
        "tmp%50#0"
      ]
    },
    "411": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "412": {
      "callsub": "smart_contracts.pieout.contract.Pieout.claim_trophy",
      "op": "callsub claim_trophy"
    },
    "415": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "416": {
      "op": "return",
      "stack_out": []
    },
    "417": {
      "block": "main_mint_trophy_route@12",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%42#0"
      ]
    },
    "419": {
      "op": "!",
      "defined_out": [
        "tmp%43#0"
      ],
      "stack_out": [
        "tmp%43#0"
      ]
    },
    "420": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "421": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%44#0"
      ]
    },
    "423": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "424": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%46#0"
      ],
      "stack_out": [
        "tmp%46#0"
      ]
    },
    "426": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "tmp%46#0"
      ],
      "stack_out": [
        "tmp%46#0",
        "2"
      ]
    },
    "427": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "428": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ]
    },
    "429": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ]
    },
    "431": {
      "op": "intc_0 // pay",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay"
      ]
    },
    "432": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ]
    },
    "433": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "434": {
      "op": "txn GroupIndex",
      "defined_out": [
        "gtxn_idx%0#0",
        "tmp%47#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%47#0"
      ]
    },
    "436": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "gtxn_idx%0#0",
        "tmp%47#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%47#0",
        "1"
      ]
    },
    "437": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0"
      ]
    },
    "438": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0",
        "gtxn_idx%1#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0",
        "gtxn_idx%1#0 (copy)"
      ]
    },
    "439": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0",
        "gtxn_type%1#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0",
        "gtxn_type%1#0"
      ]
    },
    "441": {
      "op": "intc_0 // pay",
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0",
        "gtxn_type%1#0",
        "pay"
      ]
    },
    "442": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0",
        "gtxn_type_matches%1#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0",
        "gtxn_type_matches%1#0"
      ]
    },
    "443": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0"
      ]
    },
    "444": {
      "callsub": "smart_contracts.pieout.contract.Pieout.mint_trophy",
      "op": "callsub mint_trophy",
      "stack_out": []
    },
    "447": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "448": {
      "op": "return",
      "stack_out": []
    },
    "449": {
      "block": "main_generate_route@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%38#0"
      ]
    },
    "451": {
      "op": "!",
      "defined_out": [
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%39#0"
      ]
    },
    "452": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "453": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%40#0"
      ]
    },
    "455": {
      "op": "!",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0"
      ]
    },
    "456": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "457": {
      "callsub": "smart_contracts.pieout.contract.Pieout.generate",
      "op": "callsub generate"
    },
    "460": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "461": {
      "op": "return",
      "stack_out": []
    },
    "462": {
      "block": "main_read_box_game_players_route@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "464": {
      "op": "!",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0"
      ]
    },
    "465": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "466": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "468": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "469": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%1#0"
      ]
    },
    "472": {
      "op": "btoi",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0"
      ]
    },
    "473": {
      "callsub": "smart_contracts.pieout.contract.Pieout.read_box_game_players",
      "op": "callsub read_box_game_players",
      "defined_out": [
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0"
      ]
    },
    "476": {
      "op": "bytec 5 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0",
        "0x151f7c75"
      ]
    },
    "478": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%36#0"
      ]
    },
    "479": {
      "op": "concat",
      "defined_out": [
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0"
      ]
    },
    "480": {
      "op": "log",
      "stack_out": []
    },
    "481": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "482": {
      "op": "return",
      "stack_out": []
    },
    "483": {
      "block": "main_does_box_game_state_exist_route@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "485": {
      "op": "!",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "486": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "487": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "489": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "490": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%0#0"
      ]
    },
    "493": {
      "op": "btoi",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "494": {
      "callsub": "smart_contracts.pieout.contract.Pieout.does_box_game_state_exist",
      "op": "callsub does_box_game_state_exist",
      "defined_out": [
        "to_encode%4#0"
      ],
      "stack_out": [
        "to_encode%4#0"
      ]
    },
    "497": {
      "op": "bytec_1 // 0x00",
      "defined_out": [
        "0x00",
        "to_encode%4#0"
      ],
      "stack_out": [
        "to_encode%4#0",
        "0x00"
      ]
    },
    "498": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "0x00",
        "to_encode%4#0"
      ],
      "stack_out": [
        "to_encode%4#0",
        "0x00",
        "0"
      ]
    },
    "499": {
      "op": "uncover 2",
      "stack_out": [
        "0x00",
        "0",
        "to_encode%4#0"
      ]
    },
    "501": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%2#0"
      ],
      "stack_out": [
        "encoded_bool%2#0"
      ]
    },
    "502": {
      "op": "bytec 5 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_bool%2#0"
      ],
      "stack_out": [
        "encoded_bool%2#0",
        "0x151f7c75"
      ]
    },
    "504": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_bool%2#0"
      ]
    },
    "505": {
      "op": "concat",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0"
      ]
    },
    "506": {
      "op": "log",
      "stack_out": []
    },
    "507": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "508": {
      "op": "return",
      "stack_out": []
    },
    "509": {
      "block": "main_does_box_game_register_exist_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "511": {
      "op": "!",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "512": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "513": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "515": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "516": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%1#0"
      ]
    },
    "519": {
      "op": "btoi",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "520": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "522": {
      "callsub": "smart_contracts.pieout.contract.Pieout.does_box_game_register_exist",
      "op": "callsub does_box_game_register_exist",
      "defined_out": [
        "to_encode%3#0"
      ],
      "stack_out": [
        "to_encode%3#0"
      ]
    },
    "525": {
      "op": "bytec_1 // 0x00",
      "defined_out": [
        "0x00",
        "to_encode%3#0"
      ],
      "stack_out": [
        "to_encode%3#0",
        "0x00"
      ]
    },
    "526": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "0x00",
        "to_encode%3#0"
      ],
      "stack_out": [
        "to_encode%3#0",
        "0x00",
        "0"
      ]
    },
    "527": {
      "op": "uncover 2",
      "stack_out": [
        "0x00",
        "0",
        "to_encode%3#0"
      ]
    },
    "529": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%1#0"
      ],
      "stack_out": [
        "encoded_bool%1#0"
      ]
    },
    "530": {
      "op": "bytec 5 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_bool%1#0"
      ],
      "stack_out": [
        "encoded_bool%1#0",
        "0x151f7c75"
      ]
    },
    "532": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_bool%1#0"
      ]
    },
    "533": {
      "op": "concat",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "534": {
      "op": "log",
      "stack_out": []
    },
    "535": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "536": {
      "op": "return",
      "stack_out": []
    },
    "537": {
      "block": "main_does_box_game_trophy_exist_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "539": {
      "op": "!",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "540": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "541": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "543": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "544": {
      "callsub": "smart_contracts.pieout.contract.Pieout.does_box_game_trophy_exist",
      "op": "callsub does_box_game_trophy_exist",
      "defined_out": [
        "to_encode%2#0"
      ],
      "stack_out": [
        "to_encode%2#0"
      ]
    },
    "547": {
      "op": "bytec_1 // 0x00",
      "defined_out": [
        "0x00",
        "to_encode%2#0"
      ],
      "stack_out": [
        "to_encode%2#0",
        "0x00"
      ]
    },
    "548": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "0x00",
        "to_encode%2#0"
      ],
      "stack_out": [
        "to_encode%2#0",
        "0x00",
        "0"
      ]
    },
    "549": {
      "op": "uncover 2",
      "stack_out": [
        "0x00",
        "0",
        "to_encode%2#0"
      ]
    },
    "551": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%0#0"
      ],
      "stack_out": [
        "encoded_bool%0#0"
      ]
    },
    "552": {
      "op": "bytec 5 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_bool%0#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "0x151f7c75"
      ]
    },
    "554": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_bool%0#0"
      ]
    },
    "555": {
      "op": "concat",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "556": {
      "op": "log",
      "stack_out": []
    },
    "557": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "558": {
      "op": "return",
      "stack_out": []
    },
    "559": {
      "block": "main_read_gen_unix_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "561": {
      "op": "!",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "562": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "563": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "565": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "566": {
      "op": "intc 12 // TMPL_GEN_UNIX",
      "defined_out": [
        "to_encode%1#0"
      ],
      "stack_out": [
        "to_encode%1#0"
      ]
    },
    "568": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0"
      ]
    },
    "569": {
      "op": "bytec 5 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0",
        "0x151f7c75"
      ]
    },
    "571": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%1#0"
      ]
    },
    "572": {
      "op": "concat",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "573": {
      "op": "log",
      "stack_out": []
    },
    "574": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "575": {
      "op": "return",
      "stack_out": []
    },
    "576": {
      "block": "main_calc_single_box_cost_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "578": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "579": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "580": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "582": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "583": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%0#0"
      ]
    },
    "586": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[1]%0#0",
        "reinterpret_bytes[2]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%0#0",
        "reinterpret_bytes[2]%0#0"
      ]
    },
    "589": {
      "callsub": "smart_contracts.pieout.contract.Pieout.calc_single_box_cost",
      "op": "callsub calc_single_box_cost",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "592": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "593": {
      "op": "bytec 5 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "0x151f7c75"
      ]
    },
    "595": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ]
    },
    "596": {
      "op": "concat",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "597": {
      "op": "log",
      "stack_out": []
    },
    "598": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "599": {
      "op": "return",
      "stack_out": []
    },
    "600": {
      "subroutine": "smart_contracts.pieout.subroutines.payout_itxn",
      "params": {
        "receiver#0": "bytes",
        "amount#0": "uint64",
        "note#0": "bytes"
      },
      "block": "payout_itxn",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "603": {
      "op": "itxn_begin"
    },
    "604": {
      "op": "frame_dig -1",
      "defined_out": [
        "note#0 (copy)"
      ],
      "stack_out": [
        "note#0 (copy)"
      ]
    },
    "606": {
      "op": "itxn_field Note",
      "stack_out": []
    },
    "608": {
      "op": "frame_dig -2",
      "defined_out": [
        "amount#0 (copy)"
      ],
      "stack_out": [
        "amount#0 (copy)"
      ]
    },
    "610": {
      "op": "itxn_field Amount",
      "stack_out": []
    },
    "612": {
      "op": "frame_dig -3",
      "defined_out": [
        "receiver#0 (copy)"
      ],
      "stack_out": [
        "receiver#0 (copy)"
      ]
    },
    "614": {
      "op": "itxn_field Receiver",
      "stack_out": []
    },
    "616": {
      "op": "intc_0 // pay",
      "defined_out": [
        "pay"
      ],
      "stack_out": [
        "pay"
      ]
    },
    "617": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "619": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "620": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "622": {
      "op": "itxn_submit"
    },
    "623": {
      "retsub": true,
      "op": "retsub"
    },
    "624": {
      "subroutine": "smart_contracts.pieout.subroutines.resolve_receiver_by_prio",
      "params": {
        "acc1#0": "bytes",
        "acc2#0": "bytes",
        "acc3#0": "bytes"
      },
      "block": "resolve_receiver_by_prio",
      "stack_in": [],
      "op": "proto 3 1"
    },
    "627": {
      "op": "frame_dig -3",
      "defined_out": [
        "acc1#0 (copy)"
      ],
      "stack_out": [
        "acc1#0 (copy)"
      ]
    },
    "629": {
      "op": "global ZeroAddress",
      "defined_out": [
        "acc1#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "acc1#0 (copy)",
        "tmp%0#0"
      ]
    },
    "631": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "632": {
      "op": "bz resolve_receiver_by_prio_else_body@3",
      "stack_out": []
    },
    "635": {
      "op": "frame_dig -3",
      "stack_out": [
        "acc1#0 (copy)"
      ]
    },
    "637": {
      "op": "acct_params_get AcctBalance",
      "defined_out": [
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "639": {
      "op": "bury 1",
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "641": {
      "op": "bz resolve_receiver_by_prio_else_body@3",
      "stack_out": []
    },
    "644": {
      "op": "frame_dig -3",
      "stack_out": [
        "acc1#0 (copy)"
      ]
    },
    "646": {
      "retsub": true,
      "op": "retsub"
    },
    "647": {
      "block": "resolve_receiver_by_prio_else_body@3",
      "stack_in": [],
      "op": "frame_dig -2",
      "defined_out": [
        "acc2#0 (copy)"
      ],
      "stack_out": [
        "acc2#0 (copy)"
      ]
    },
    "649": {
      "op": "global ZeroAddress",
      "defined_out": [
        "acc2#0 (copy)",
        "tmp%4#0"
      ],
      "stack_out": [
        "acc2#0 (copy)",
        "tmp%4#0"
      ]
    },
    "651": {
      "op": "!=",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "652": {
      "op": "bz resolve_receiver_by_prio_else_body@6",
      "stack_out": []
    },
    "655": {
      "op": "frame_dig -2",
      "stack_out": [
        "acc2#0 (copy)"
      ]
    },
    "657": {
      "op": "acct_params_get AcctBalance",
      "defined_out": [
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "659": {
      "op": "bury 1",
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "661": {
      "op": "bz resolve_receiver_by_prio_else_body@6",
      "stack_out": []
    },
    "664": {
      "op": "frame_dig -2",
      "stack_out": [
        "acc2#0 (copy)"
      ]
    },
    "666": {
      "retsub": true,
      "op": "retsub"
    },
    "667": {
      "block": "resolve_receiver_by_prio_else_body@6",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "acc3#0 (copy)"
      ],
      "stack_out": [
        "acc3#0 (copy)"
      ]
    },
    "669": {
      "op": "global ZeroAddress",
      "defined_out": [
        "acc3#0 (copy)",
        "tmp%8#0"
      ],
      "stack_out": [
        "acc3#0 (copy)",
        "tmp%8#0"
      ]
    },
    "671": {
      "op": "!=",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "672": {
      "op": "bz resolve_receiver_by_prio_else_body@9",
      "stack_out": []
    },
    "675": {
      "op": "frame_dig -1",
      "stack_out": [
        "acc3#0 (copy)"
      ]
    },
    "677": {
      "op": "acct_params_get AcctBalance",
      "defined_out": [
        "tmp%10#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "tmp%11#0"
      ]
    },
    "679": {
      "op": "bury 1",
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "681": {
      "op": "bz resolve_receiver_by_prio_else_body@9",
      "stack_out": []
    },
    "684": {
      "op": "frame_dig -1",
      "stack_out": [
        "acc3#0 (copy)"
      ]
    },
    "686": {
      "retsub": true,
      "op": "retsub"
    },
    "687": {
      "block": "resolve_receiver_by_prio_else_body@9",
      "stack_in": [],
      "op": "txn Sender",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "689": {
      "op": "global ZeroAddress",
      "defined_out": [
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "tmp%13#0"
      ]
    },
    "691": {
      "op": "!=",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "692": {
      "op": "bz resolve_receiver_by_prio_else_body@12",
      "stack_out": []
    },
    "695": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "697": {
      "op": "acct_params_get AcctBalance",
      "defined_out": [
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "tmp%17#0"
      ]
    },
    "699": {
      "op": "bury 1",
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "701": {
      "op": "bz resolve_receiver_by_prio_else_body@12",
      "stack_out": []
    },
    "704": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "706": {
      "retsub": true,
      "op": "retsub"
    },
    "707": {
      "block": "resolve_receiver_by_prio_else_body@12",
      "stack_in": [],
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "709": {
      "retsub": true,
      "op": "retsub"
    },
    "710": {
      "subroutine": "smart_contracts.pieout.subroutines.check_acc_in_game",
      "params": {
        "game_id#0": "uint64",
        "account#0": "bytes",
        "box_game_players#0": "bytes",
        "player_count#0": "uint64",
        "clear_player#0": "uint64"
      },
      "block": "check_acc_in_game",
      "stack_in": [],
      "op": "proto 5 1"
    },
    "713": {
      "op": "intc_1 // 0",
      "stack_out": [
        "game_players_bref#0"
      ]
    },
    "714": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5"
      ]
    },
    "716": {
      "op": "frame_dig -2",
      "defined_out": [
        "player_count#0 (copy)"
      ],
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "player_count#0 (copy)"
      ]
    },
    "718": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "player_count#0 (copy)"
      ],
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "player_count#0 (copy)",
        "32"
      ]
    },
    "719": {
      "op": "*",
      "defined_out": [
        "game_players_length#0"
      ],
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0"
      ]
    },
    "720": {
      "op": "intc_1 // 0"
    },
    "721": {
      "op": "dup",
      "defined_out": [
        "acc_in_game#0",
        "game_players_length#0",
        "i#0"
      ],
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0"
      ]
    },
    "722": {
      "block": "check_acc_in_game_for_header@1",
      "stack_in": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0",
        "i#0"
      ]
    },
    "724": {
      "op": "frame_dig 2",
      "defined_out": [
        "game_players_length#0",
        "i#0"
      ],
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0",
        "i#0",
        "game_players_length#0"
      ]
    },
    "726": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "game_players_length#0",
        "i#0"
      ],
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "727": {
      "op": "frame_dig 3",
      "defined_out": [
        "acc_in_game#5",
        "continue_looping%0#0",
        "game_players_length#0",
        "i#0"
      ],
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0",
        "continue_looping%0#0",
        "acc_in_game#5"
      ]
    },
    "729": {
      "op": "frame_bury 1",
      "defined_out": [
        "acc_in_game#5",
        "continue_looping%0#0",
        "game_players_length#0",
        "i#0"
      ],
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "731": {
      "op": "bz check_acc_in_game_after_for@8",
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0"
      ]
    },
    "734": {
      "op": "frame_dig -5",
      "defined_out": [
        "acc_in_game#5",
        "game_id#0 (copy)",
        "game_players_length#0",
        "i#0"
      ],
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0",
        "game_id#0 (copy)"
      ]
    },
    "736": {
      "op": "itob",
      "defined_out": [
        "acc_in_game#5",
        "encoded_value%0#0",
        "game_players_length#0",
        "i#0"
      ],
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0",
        "encoded_value%0#0"
      ]
    },
    "737": {
      "op": "frame_dig -3",
      "defined_out": [
        "acc_in_game#5",
        "box_game_players#0 (copy)",
        "encoded_value%0#0",
        "game_players_length#0",
        "i#0"
      ],
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0",
        "encoded_value%0#0",
        "box_game_players#0 (copy)"
      ]
    },
    "739": {
      "op": "swap",
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0",
        "box_game_players#0 (copy)",
        "encoded_value%0#0"
      ]
    },
    "740": {
      "op": "concat",
      "defined_out": [
        "acc_in_game#5",
        "game_players_bref#0",
        "game_players_length#0",
        "i#0"
      ],
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0",
        "game_players_bref#0"
      ]
    },
    "741": {
      "op": "dup",
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0",
        "game_players_bref#0",
        "game_players_bref#0"
      ]
    },
    "742": {
      "op": "frame_bury 0",
      "defined_out": [
        "acc_in_game#5",
        "game_players_bref#0",
        "game_players_length#0",
        "i#0"
      ],
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0",
        "game_players_bref#0"
      ]
    },
    "744": {
      "op": "box_get",
      "defined_out": [
        "acc_in_game#5",
        "game_players_bref#0",
        "game_players_length#0",
        "i#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "745": {
      "error": "check BoxMap entry exists",
      "op": "assert // check BoxMap entry exists",
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0",
        "maybe_value%0#0"
      ]
    },
    "746": {
      "op": "frame_dig 4",
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0",
        "maybe_value%0#0",
        "i#0"
      ]
    },
    "748": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "acc_in_game#5",
        "game_players_bref#0",
        "game_players_length#0",
        "i#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0",
        "maybe_value%0#0",
        "i#0",
        "32"
      ]
    },
    "749": {
      "op": "extract3",
      "defined_out": [
        "acc_in_game#5",
        "game_players_bref#0",
        "game_players_length#0",
        "i#0",
        "player_addr_bytes#0"
      ],
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0",
        "player_addr_bytes#0"
      ]
    },
    "750": {
      "op": "frame_dig -4",
      "defined_out": [
        "acc_in_game#5",
        "account#0 (copy)",
        "game_players_bref#0",
        "game_players_length#0",
        "i#0",
        "player_addr_bytes#0"
      ],
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0",
        "player_addr_bytes#0",
        "account#0 (copy)"
      ]
    },
    "752": {
      "op": "==",
      "defined_out": [
        "acc_in_game#5",
        "game_players_bref#0",
        "game_players_length#0",
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0",
        "tmp%0#0"
      ]
    },
    "753": {
      "op": "bz check_acc_in_game_after_if_else@6",
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0"
      ]
    },
    "756": {
      "op": "intc_0 // 1",
      "defined_out": [
        "acc_in_game#0",
        "acc_in_game#5",
        "game_players_bref#0",
        "game_players_length#0",
        "i#0"
      ],
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0",
        "acc_in_game#0"
      ]
    },
    "757": {
      "op": "frame_bury 3",
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0"
      ]
    },
    "759": {
      "op": "frame_dig -1",
      "defined_out": [
        "acc_in_game#0",
        "acc_in_game#5",
        "clear_player#0 (copy)",
        "game_players_bref#0",
        "game_players_length#0",
        "i#0"
      ],
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0",
        "clear_player#0 (copy)"
      ]
    },
    "761": {
      "op": "bz check_acc_in_game_after_if_else@5",
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0"
      ]
    },
    "764": {
      "op": "frame_dig 0",
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0",
        "game_players_bref#0"
      ]
    },
    "766": {
      "op": "frame_dig 4",
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0",
        "game_players_bref#0",
        "i#0"
      ]
    },
    "768": {
      "op": "bytec 8 // 0x0000000000000000000000000000000000000000000000000000000000000000",
      "defined_out": [
        "0x0000000000000000000000000000000000000000000000000000000000000000",
        "acc_in_game#0",
        "acc_in_game#5",
        "game_players_bref#0",
        "game_players_length#0",
        "i#0"
      ],
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0",
        "game_players_bref#0",
        "i#0",
        "0x0000000000000000000000000000000000000000000000000000000000000000"
      ]
    },
    "770": {
      "op": "box_replace",
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0"
      ]
    },
    "771": {
      "block": "check_acc_in_game_after_if_else@5",
      "stack_in": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "acc_in_game#5"
      ],
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0",
        "acc_in_game#5"
      ]
    },
    "773": {
      "op": "frame_bury 1",
      "defined_out": [
        "acc_in_game#5"
      ],
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0"
      ]
    },
    "775": {
      "block": "check_acc_in_game_after_for@8",
      "stack_in": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "acc_in_game#0"
      ],
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0",
        "acc_in_game#0"
      ]
    },
    "777": {
      "op": "frame_bury 0"
    },
    "779": {
      "retsub": true,
      "op": "retsub"
    },
    "780": {
      "block": "check_acc_in_game_after_if_else@6",
      "stack_in": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0",
        "i#0"
      ]
    },
    "782": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "i#0"
      ],
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0",
        "i#0",
        "32"
      ]
    },
    "783": {
      "op": "+",
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0",
        "i#0"
      ]
    },
    "784": {
      "op": "frame_bury 4",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0"
      ]
    },
    "786": {
      "op": "b check_acc_in_game_for_header@1"
    },
    "789": {
      "subroutine": "smart_contracts.pieout.subroutines.is_game_live",
      "params": {
        "game_id#0": "uint64",
        "game_state#0": "bytes"
      },
      "block": "is_game_live",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "792": {
      "op": "intc_1 // 0",
      "stack_out": [
        "game_state%out#3"
      ]
    },
    "793": {
      "op": "frame_dig -1",
      "defined_out": [
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "game_state%out#3",
        "game_state#0 (copy)"
      ]
    },
    "795": {
      "error": "Index access is out of bounds",
      "op": "extract 9 8 // on error: Index access is out of bounds",
      "defined_out": [
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "game_state%out#3",
        "reinterpret_biguint%0#0"
      ]
    },
    "798": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "reinterpret_biguint%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "game_state%out#3",
        "reinterpret_biguint%0#0",
        "tmp%0#0"
      ]
    },
    "800": {
      "op": "itob",
      "defined_out": [
        "reinterpret_biguint%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "game_state%out#3",
        "reinterpret_biguint%0#0",
        "tmp%1#0"
      ]
    },
    "801": {
      "op": "b<",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "game_state%out#3",
        "tmp%2#0"
      ]
    },
    "802": {
      "op": "bnz is_game_live_if_body@2",
      "stack_out": [
        "game_state%out#3"
      ]
    },
    "805": {
      "op": "frame_dig -1",
      "stack_out": [
        "game_state%out#3",
        "game_state#0 (copy)"
      ]
    },
    "807": {
      "error": "Index access is out of bounds",
      "op": "extract 2 1 // on error: Index access is out of bounds",
      "defined_out": [
        "reinterpret_biguint%1#0"
      ],
      "stack_out": [
        "game_state%out#3",
        "reinterpret_biguint%1#0"
      ]
    },
    "810": {
      "op": "frame_dig -1",
      "stack_out": [
        "game_state%out#3",
        "reinterpret_biguint%1#0",
        "game_state#0 (copy)"
      ]
    },
    "812": {
      "error": "Index access is out of bounds",
      "op": "extract 1 1 // on error: Index access is out of bounds",
      "defined_out": [
        "reinterpret_biguint%1#0",
        "reinterpret_biguint%2#0"
      ],
      "stack_out": [
        "game_state%out#3",
        "reinterpret_biguint%1#0",
        "reinterpret_biguint%2#0"
      ]
    },
    "815": {
      "op": "b==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "game_state%out#3",
        "tmp%3#0"
      ]
    },
    "816": {
      "op": "frame_dig -1",
      "defined_out": [
        "game_state%out#3",
        "tmp%3#0"
      ],
      "stack_out": [
        "game_state%out#3",
        "tmp%3#0",
        "game_state%out#3"
      ]
    },
    "818": {
      "op": "frame_bury 0",
      "defined_out": [
        "game_state%out#3",
        "tmp%3#0"
      ],
      "stack_out": [
        "game_state%out#3",
        "tmp%3#0"
      ]
    },
    "820": {
      "op": "bz is_game_live_after_if_else@7",
      "stack_out": [
        "game_state%out#3"
      ]
    },
    "823": {
      "block": "is_game_live_if_body@2",
      "stack_in": [
        "game_state%out#3"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "game_state%out#3",
        "game_state#0 (copy)"
      ]
    },
    "825": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "game_state%out#3",
        "game_state#0 (copy)",
        "0"
      ]
    },
    "826": {
      "op": "intc_0 // 1",
      "defined_out": [
        "0",
        "1",
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "game_state%out#3",
        "game_state#0 (copy)",
        "0",
        "1"
      ]
    },
    "827": {
      "op": "setbit",
      "defined_out": [
        "game_state#0"
      ],
      "stack_out": [
        "game_state%out#3",
        "game_state#0"
      ]
    },
    "828": {
      "op": "frame_bury -1",
      "stack_out": [
        "game_state%out#3"
      ]
    },
    "830": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "game_state%out#3",
        "tmp%4#0"
      ]
    },
    "832": {
      "op": "intc 5 // 300",
      "defined_out": [
        "300",
        "tmp%4#0"
      ],
      "stack_out": [
        "game_state%out#3",
        "tmp%4#0",
        "300"
      ]
    },
    "834": {
      "op": "+",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "game_state%out#3",
        "to_encode%0#0"
      ]
    },
    "835": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "game_state%out#3",
        "val_as_bytes%0#0"
      ]
    },
    "836": {
      "op": "frame_dig -1",
      "stack_out": [
        "game_state%out#3",
        "val_as_bytes%0#0",
        "game_state#0 (copy)"
      ]
    },
    "838": {
      "op": "swap",
      "stack_out": [
        "game_state%out#3",
        "game_state#0 (copy)",
        "val_as_bytes%0#0"
      ]
    },
    "839": {
      "op": "replace2 9",
      "stack_out": [
        "game_state%out#3",
        "game_state#0"
      ]
    },
    "841": {
      "op": "frame_bury -1",
      "stack_out": [
        "game_state%out#3"
      ]
    },
    "843": {
      "op": "frame_dig -2",
      "defined_out": [
        "game_id#0 (copy)"
      ],
      "stack_out": [
        "game_state%out#3",
        "game_id#0 (copy)"
      ]
    },
    "845": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "game_state%out#3",
        "val_as_bytes%1#0"
      ]
    },
    "846": {
      "op": "frame_dig -1",
      "stack_out": [
        "game_state%out#3",
        "val_as_bytes%1#0",
        "game_state#0 (copy)"
      ]
    },
    "848": {
      "op": "intc_1 // 0",
      "stack_out": [
        "game_state%out#3",
        "val_as_bytes%1#0",
        "game_state#0 (copy)",
        "0"
      ]
    },
    "849": {
      "op": "getbit",
      "defined_out": [
        "is_true%1#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "game_state%out#3",
        "val_as_bytes%1#0",
        "is_true%1#0"
      ]
    },
    "850": {
      "op": "bytec_1 // 0x00",
      "defined_out": [
        "0x00",
        "is_true%1#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "game_state%out#3",
        "val_as_bytes%1#0",
        "is_true%1#0",
        "0x00"
      ]
    },
    "851": {
      "op": "intc_1 // 0",
      "stack_out": [
        "game_state%out#3",
        "val_as_bytes%1#0",
        "is_true%1#0",
        "0x00",
        "0"
      ]
    },
    "852": {
      "op": "uncover 2",
      "stack_out": [
        "game_state%out#3",
        "val_as_bytes%1#0",
        "0x00",
        "0",
        "is_true%1#0"
      ]
    },
    "854": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%1#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "game_state%out#3",
        "val_as_bytes%1#0",
        "encoded_bool%1#0"
      ]
    },
    "855": {
      "op": "frame_dig -1",
      "stack_out": [
        "game_state%out#3",
        "val_as_bytes%1#0",
        "encoded_bool%1#0",
        "game_state#0 (copy)"
      ]
    },
    "857": {
      "error": "Index access is out of bounds",
      "op": "extract 9 8 // on error: Index access is out of bounds",
      "defined_out": [
        "encoded_bool%1#0",
        "tmp%5#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "game_state%out#3",
        "val_as_bytes%1#0",
        "encoded_bool%1#0",
        "tmp%5#0"
      ]
    },
    "860": {
      "op": "cover 2",
      "stack_out": [
        "game_state%out#3",
        "tmp%5#0",
        "val_as_bytes%1#0",
        "encoded_bool%1#0"
      ]
    },
    "862": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "game_state%out#3",
        "tmp%5#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "863": {
      "op": "swap",
      "stack_out": [
        "game_state%out#3",
        "encoded_tuple_buffer%2#0",
        "tmp%5#0"
      ]
    },
    "864": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%3#0"
      ],
      "stack_out": [
        "game_state%out#3",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "865": {
      "op": "pushbytes 0x93617d24 // method \"game_live(uint64,bool,uint64)\"",
      "defined_out": [
        "Method(game_live(uint64,bool,uint64))",
        "encoded_tuple_buffer%3#0"
      ],
      "stack_out": [
        "game_state%out#3",
        "encoded_tuple_buffer%3#0",
        "Method(game_live(uint64,bool,uint64))"
      ]
    },
    "871": {
      "op": "swap",
      "stack_out": [
        "game_state%out#3",
        "Method(game_live(uint64,bool,uint64))",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "872": {
      "op": "concat",
      "defined_out": [
        "event%0#0"
      ],
      "stack_out": [
        "game_state%out#3",
        "event%0#0"
      ]
    },
    "873": {
      "op": "log",
      "stack_out": [
        "game_state%out#3"
      ]
    },
    "874": {
      "op": "frame_dig -1",
      "defined_out": [
        "game_state%out#3"
      ],
      "stack_out": [
        "game_state%out#3",
        "game_state%out#3"
      ]
    },
    "876": {
      "op": "frame_bury 0",
      "defined_out": [
        "game_state%out#3"
      ],
      "stack_out": [
        "game_state%out#3"
      ]
    },
    "878": {
      "block": "is_game_live_after_if_else@7",
      "stack_in": [
        "game_state%out#3"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "game_state%out#3"
      ],
      "stack_out": [
        "game_state%out#3",
        "game_state%out#3"
      ]
    },
    "880": {
      "op": "swap"
    },
    "881": {
      "retsub": true,
      "op": "retsub"
    },
    "882": {
      "subroutine": "smart_contracts.pieout.subroutines.is_game_over",
      "params": {
        "game_id#0": "uint64",
        "game_state#0": "bytes",
        "box_game_register#0": "bytes",
        "box_game_players#0": "bytes"
      },
      "block": "is_game_over",
      "stack_in": [],
      "op": "proto 4 1"
    },
    "885": {
      "op": "intc_1 // 0",
      "stack_out": [
        "first_place_receiver#0"
      ]
    },
    "886": {
      "op": "dupn 10",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0"
      ]
    },
    "888": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0"
      ]
    },
    "890": {
      "op": "dupn 4",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ]
    },
    "892": {
      "op": "frame_dig -3",
      "defined_out": [
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "game_state#0 (copy)"
      ]
    },
    "894": {
      "error": "Index access is out of bounds",
      "op": "extract 9 8 // on error: Index access is out of bounds",
      "defined_out": [
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "897": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "reinterpret_biguint%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "reinterpret_biguint%0#0",
        "tmp%0#0"
      ]
    },
    "899": {
      "op": "itob",
      "defined_out": [
        "reinterpret_biguint%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "reinterpret_biguint%0#0",
        "tmp%1#0"
      ]
    },
    "900": {
      "op": "b<",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%2#0"
      ]
    },
    "901": {
      "op": "bnz is_game_over_if_body@5",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ]
    },
    "904": {
      "op": "frame_dig -3",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "game_state#0 (copy)"
      ]
    },
    "906": {
      "error": "Index access is out of bounds",
      "op": "extract 2 1 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%3#0"
      ]
    },
    "909": {
      "op": "frame_bury 10",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ]
    },
    "911": {
      "op": "frame_dig -3",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "game_state#0 (copy)"
      ]
    },
    "913": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "game_state#0 (copy)",
        "tmp%3#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "game_state#0 (copy)",
        "2"
      ]
    },
    "914": {
      "op": "getbyte",
      "defined_out": [
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%4#0"
      ]
    },
    "915": {
      "op": "bz is_game_over_if_body@5",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ]
    },
    "918": {
      "op": "frame_dig 10",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%3#0"
      ]
    },
    "920": {
      "op": "bytec 7 // 0x01",
      "defined_out": [
        "0x01",
        "tmp%3#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%3#0",
        "0x01"
      ]
    },
    "922": {
      "op": "b==",
      "defined_out": [
        "tmp%3#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%6#0"
      ]
    },
    "923": {
      "op": "frame_dig -3",
      "defined_out": [
        "game_state%out#3",
        "tmp%3#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%6#0",
        "game_state%out#3"
      ]
    },
    "925": {
      "op": "frame_bury 2",
      "defined_out": [
        "game_state%out#3",
        "tmp%3#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%6#0"
      ]
    },
    "927": {
      "op": "bz is_game_over_after_if_else@28",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ]
    },
    "930": {
      "op": "frame_dig -3",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "game_state#0 (copy)"
      ]
    },
    "932": {
      "error": "Index access is out of bounds",
      "op": "extract 25 32 // on error: Index access is out of bounds",
      "defined_out": [
        "game_state%out#3",
        "tmp%3#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%7#0"
      ]
    },
    "935": {
      "op": "txn Sender",
      "defined_out": [
        "game_state%out#3",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "937": {
      "op": "==",
      "defined_out": [
        "game_state%out#3",
        "tmp%3#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%9#0"
      ]
    },
    "938": {
      "op": "frame_dig -3",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%9#0",
        "game_state%out#3"
      ]
    },
    "940": {
      "op": "frame_bury 2",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%9#0"
      ]
    },
    "942": {
      "op": "bz is_game_over_after_if_else@28",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ]
    },
    "945": {
      "op": "frame_dig -3",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "game_state#0 (copy)"
      ]
    },
    "947": {
      "op": "intc_1 // 0",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "game_state#0 (copy)",
        "0"
      ]
    },
    "948": {
      "op": "getbit",
      "defined_out": [
        "game_state%out#3",
        "is_true%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "is_true%0#0"
      ]
    },
    "949": {
      "op": "bytec_1 // 0x00",
      "defined_out": [
        "0x00",
        "game_state%out#3",
        "is_true%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "is_true%0#0",
        "0x00"
      ]
    },
    "950": {
      "op": "intc_1 // 0",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "is_true%0#0",
        "0x00",
        "0"
      ]
    },
    "951": {
      "op": "uncover 2",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "0x00",
        "0",
        "is_true%0#0"
      ]
    },
    "953": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%0#0",
        "game_state%out#3",
        "tmp%3#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "encoded_bool%0#0"
      ]
    },
    "954": {
      "op": "intc_1 // 0",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "encoded_bool%0#0",
        "0"
      ]
    },
    "955": {
      "op": "getbit",
      "defined_out": [
        "game_state%out#3",
        "tmp%10#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%10#0"
      ]
    },
    "956": {
      "op": "frame_dig -3",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%10#0",
        "game_state%out#3"
      ]
    },
    "958": {
      "op": "frame_bury 2",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%10#0"
      ]
    },
    "960": {
      "op": "bnz is_game_over_after_if_else@28",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ]
    },
    "963": {
      "block": "is_game_over_if_body@5",
      "stack_in": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ],
      "op": "frame_dig -4",
      "defined_out": [
        "game_id#0 (copy)"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "game_id#0 (copy)"
      ]
    },
    "965": {
      "op": "itob",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%12#0"
      ]
    },
    "966": {
      "op": "dup",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%12#0",
        "tmp%12#0"
      ]
    },
    "967": {
      "op": "frame_bury 6",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%12#0"
      ]
    },
    "969": {
      "op": "frame_dig -1",
      "defined_out": [
        "box_game_players#0 (copy)",
        "tmp%12#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%12#0",
        "box_game_players#0 (copy)"
      ]
    },
    "971": {
      "op": "swap",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "box_game_players#0 (copy)",
        "tmp%12#0"
      ]
    },
    "972": {
      "op": "concat",
      "defined_out": [
        "game_players_bref#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "game_players_bref#0"
      ]
    },
    "973": {
      "op": "dup",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "game_players_bref#0",
        "game_players_bref#0"
      ]
    },
    "974": {
      "op": "frame_bury 1",
      "defined_out": [
        "game_players_bref#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "game_players_bref#0"
      ]
    },
    "976": {
      "op": "box_len",
      "defined_out": [
        "check%0#0",
        "game_players_bref#0",
        "tmp%12#0",
        "value%0#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "value%0#0",
        "check%0#0"
      ]
    },
    "977": {
      "op": "swap",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "check%0#0",
        "value%0#0"
      ]
    },
    "978": {
      "op": "frame_bury 15",
      "defined_out": [
        "check%0#0",
        "game_players_bref#0",
        "tmp%12#0",
        "value%0#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "check%0#0"
      ]
    },
    "980": {
      "error": "check BoxRef exists",
      "op": "assert // check BoxRef exists",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ]
    },
    "981": {
      "op": "intc_1 // 0",
      "defined_out": [
        "game_players_bref#0",
        "i#0",
        "tmp%12#0",
        "value%0#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "i#0"
      ]
    },
    "982": {
      "op": "frame_bury 12",
      "defined_out": [
        "game_players_bref#0",
        "i#0",
        "tmp%12#0",
        "value%0#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ]
    },
    "984": {
      "block": "is_game_over_for_header@6",
      "stack_in": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ],
      "op": "frame_dig 12",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "i#0"
      ]
    },
    "986": {
      "op": "frame_dig 15",
      "defined_out": [
        "i#0",
        "value%0#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "i#0",
        "value%0#0"
      ]
    },
    "988": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0",
        "value%0#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "continue_looping%0#0"
      ]
    },
    "989": {
      "op": "bz is_game_over_after_for@11",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ]
    },
    "992": {
      "op": "frame_dig 1",
      "defined_out": [
        "game_players_bref#0",
        "i#0",
        "value%0#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "game_players_bref#0"
      ]
    },
    "994": {
      "op": "frame_dig 12",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "game_players_bref#0",
        "i#0"
      ]
    },
    "996": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "game_players_bref#0",
        "i#0",
        "value%0#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "game_players_bref#0",
        "i#0",
        "32"
      ]
    },
    "997": {
      "op": "box_extract",
      "defined_out": [
        "game_players_bref#0",
        "i#0",
        "player_addr_bytes#0",
        "value%0#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "player_addr_bytes#0"
      ]
    },
    "998": {
      "op": "dup",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "player_addr_bytes#0",
        "player_addr_bytes#0"
      ]
    },
    "999": {
      "op": "frame_bury 3",
      "defined_out": [
        "game_players_bref#0",
        "i#0",
        "player_addr_bytes#0",
        "value%0#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "player_addr_bytes#0"
      ]
    },
    "1001": {
      "op": "bytec 8 // 0x0000000000000000000000000000000000000000000000000000000000000000",
      "defined_out": [
        "0x0000000000000000000000000000000000000000000000000000000000000000",
        "game_players_bref#0",
        "i#0",
        "player_addr_bytes#0",
        "value%0#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "player_addr_bytes#0",
        "0x0000000000000000000000000000000000000000000000000000000000000000"
      ]
    },
    "1003": {
      "op": "!=",
      "defined_out": [
        "game_players_bref#0",
        "i#0",
        "player_addr_bytes#0",
        "tmp%13#0",
        "value%0#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%13#0"
      ]
    },
    "1004": {
      "op": "bz is_game_over_after_if_else@9",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ]
    },
    "1007": {
      "op": "frame_dig -2",
      "defined_out": [
        "box_game_register#0 (copy)",
        "game_players_bref#0",
        "i#0",
        "player_addr_bytes#0",
        "value%0#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "box_game_register#0 (copy)"
      ]
    },
    "1009": {
      "op": "frame_dig 3",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "box_game_register#0 (copy)",
        "player_addr_bytes#0"
      ]
    },
    "1011": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#1",
        "game_players_bref#0",
        "i#0",
        "player_addr_bytes#0",
        "value%0#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "box_prefixed_key%0#1"
      ]
    },
    "1012": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#1",
        "box_prefixed_key%0#1 (copy)",
        "game_players_bref#0",
        "i#0",
        "player_addr_bytes#0",
        "value%0#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "box_prefixed_key%0#1",
        "box_prefixed_key%0#1 (copy)"
      ]
    },
    "1013": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#1",
        "game_players_bref#0",
        "i#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "player_addr_bytes#0",
        "value%0#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "box_prefixed_key%0#1",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1014": {
      "error": "check BoxMap entry exists",
      "op": "assert // check BoxMap entry exists",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "box_prefixed_key%0#1",
        "maybe_value%0#0"
      ]
    },
    "1015": {
      "op": "bytec 6 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "box_prefixed_key%0#1",
        "game_players_bref#0",
        "i#0",
        "maybe_value%0#0",
        "player_addr_bytes#0",
        "value%0#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "box_prefixed_key%0#1",
        "maybe_value%0#0",
        "0x0000000000000000"
      ]
    },
    "1017": {
      "op": "replace2 2",
      "defined_out": [
        "box_prefixed_key%0#1",
        "game_players_bref#0",
        "i#0",
        "player_addr_bytes#0",
        "updated_data%0#1",
        "value%0#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "box_prefixed_key%0#1",
        "updated_data%0#1"
      ]
    },
    "1019": {
      "op": "bytec 6 // 0x0000000000000000",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "box_prefixed_key%0#1",
        "updated_data%0#1",
        "0x0000000000000000"
      ]
    },
    "1021": {
      "op": "replace2 10",
      "defined_out": [
        "box_prefixed_key%0#1",
        "game_players_bref#0",
        "i#0",
        "player_addr_bytes#0",
        "updated_data%1#1",
        "value%0#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "box_prefixed_key%0#1",
        "updated_data%1#1"
      ]
    },
    "1023": {
      "op": "global Round",
      "defined_out": [
        "box_prefixed_key%0#1",
        "game_players_bref#0",
        "i#0",
        "player_addr_bytes#0",
        "tmp%0#0",
        "updated_data%1#1",
        "value%0#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "box_prefixed_key%0#1",
        "updated_data%1#1",
        "tmp%0#0"
      ]
    },
    "1025": {
      "op": "pushint 30 // 30",
      "defined_out": [
        "30",
        "box_prefixed_key%0#1",
        "game_players_bref#0",
        "i#0",
        "player_addr_bytes#0",
        "tmp%0#0",
        "updated_data%1#1",
        "value%0#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "box_prefixed_key%0#1",
        "updated_data%1#1",
        "tmp%0#0",
        "30"
      ]
    },
    "1027": {
      "op": "+",
      "defined_out": [
        "box_prefixed_key%0#1",
        "game_players_bref#0",
        "i#0",
        "player_addr_bytes#0",
        "to_encode%0#0",
        "updated_data%1#1",
        "value%0#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "box_prefixed_key%0#1",
        "updated_data%1#1",
        "to_encode%0#0"
      ]
    },
    "1028": {
      "op": "itob",
      "defined_out": [
        "box_prefixed_key%0#1",
        "game_players_bref#0",
        "i#0",
        "player_addr_bytes#0",
        "updated_data%1#1",
        "val_as_bytes%0#1",
        "value%0#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "box_prefixed_key%0#1",
        "updated_data%1#1",
        "val_as_bytes%0#1"
      ]
    },
    "1029": {
      "op": "replace2 18",
      "defined_out": [
        "box_prefixed_key%0#1",
        "game_players_bref#0",
        "i#0",
        "player_addr_bytes#0",
        "updated_data%2#0",
        "value%0#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "box_prefixed_key%0#1",
        "updated_data%2#0"
      ]
    },
    "1031": {
      "op": "box_put",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ]
    },
    "1032": {
      "block": "is_game_over_after_if_else@9",
      "stack_in": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ],
      "op": "frame_dig 12",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "i#0"
      ]
    },
    "1034": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "i#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "i#0",
        "32"
      ]
    },
    "1035": {
      "op": "+",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "i#0"
      ]
    },
    "1036": {
      "op": "frame_bury 12",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ]
    },
    "1038": {
      "op": "b is_game_over_for_header@6"
    },
    "1041": {
      "block": "is_game_over_after_for@11",
      "stack_in": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "game_state#0 (copy)"
      ]
    },
    "1043": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "game_state#0 (copy)",
        "1"
      ]
    },
    "1044": {
      "op": "getbyte",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%15#0"
      ]
    },
    "1045": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "tmp%15#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%15#0",
        "32"
      ]
    },
    "1046": {
      "op": "*",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%16#0"
      ]
    },
    "1047": {
      "op": "bzero",
      "defined_out": [
        "materialized_values%0#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "materialized_values%0#0"
      ]
    },
    "1048": {
      "op": "frame_dig 1",
      "defined_out": [
        "game_players_bref#0",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "materialized_values%0#0",
        "game_players_bref#0"
      ]
    },
    "1050": {
      "op": "dup",
      "defined_out": [
        "game_players_bref#0",
        "game_players_bref#0 (copy)",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "materialized_values%0#0",
        "game_players_bref#0",
        "game_players_bref#0 (copy)"
      ]
    },
    "1051": {
      "op": "box_del",
      "defined_out": [
        "game_players_bref#0",
        "materialized_values%0#0",
        "{box_del}"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "materialized_values%0#0",
        "game_players_bref#0",
        "{box_del}"
      ]
    },
    "1052": {
      "op": "pop",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "materialized_values%0#0",
        "game_players_bref#0"
      ]
    },
    "1053": {
      "op": "swap",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "game_players_bref#0",
        "materialized_values%0#0"
      ]
    },
    "1054": {
      "op": "box_put",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ]
    },
    "1055": {
      "op": "frame_dig -3",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "game_state#0 (copy)"
      ]
    },
    "1057": {
      "op": "bytec_1 // 0x00",
      "defined_out": [
        "0x00",
        "game_players_bref#0",
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "game_state#0 (copy)",
        "0x00"
      ]
    },
    "1058": {
      "op": "replace2 2",
      "defined_out": [
        "game_players_bref#0",
        "game_state#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "game_state#0"
      ]
    },
    "1060": {
      "op": "dup"
    },
    "1061": {
      "op": "frame_bury -3",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "game_state#0 (copy)"
      ]
    },
    "1063": {
      "error": "Index access is out of bounds",
      "op": "extract 3 1 // on error: Index access is out of bounds",
      "defined_out": [
        "game_players_bref#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%17#0"
      ]
    },
    "1066": {
      "op": "frame_dig -3",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%17#0",
        "game_state#0 (copy)"
      ]
    },
    "1068": {
      "error": "Index access is out of bounds",
      "op": "extract 4 1 // on error: Index access is out of bounds",
      "defined_out": [
        "game_players_bref#0",
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%17#0",
        "tmp%18#0"
      ]
    },
    "1071": {
      "op": "frame_dig -3",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%17#0",
        "tmp%18#0",
        "game_state#0 (copy)"
      ]
    },
    "1073": {
      "error": "Index access is out of bounds",
      "op": "extract 5 1 // on error: Index access is out of bounds",
      "defined_out": [
        "game_players_bref#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0"
      ]
    },
    "1076": {
      "op": "frame_dig -3",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0",
        "game_state#0 (copy)"
      ]
    },
    "1078": {
      "error": "Index access is out of bounds",
      "op": "extract 57 32 // on error: Index access is out of bounds",
      "defined_out": [
        "game_players_bref#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0"
      ]
    },
    "1081": {
      "op": "dup",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%20#0 (copy)"
      ]
    },
    "1082": {
      "op": "cover 4",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%20#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0"
      ]
    },
    "1084": {
      "op": "frame_bury 7",
      "defined_out": [
        "game_players_bref#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%20#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0"
      ]
    },
    "1086": {
      "op": "frame_dig -3",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%20#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0",
        "game_state#0 (copy)"
      ]
    },
    "1088": {
      "error": "Index access is out of bounds",
      "op": "extract 89 32 // on error: Index access is out of bounds",
      "defined_out": [
        "game_players_bref#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%20#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%21#0"
      ]
    },
    "1091": {
      "op": "dup",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%20#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%21#0 (copy)"
      ]
    },
    "1092": {
      "op": "cover 5",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%21#0"
      ]
    },
    "1094": {
      "op": "frame_bury 8",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0"
      ]
    },
    "1096": {
      "op": "frame_dig -3",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0",
        "game_state#0 (copy)"
      ]
    },
    "1098": {
      "error": "Index access is out of bounds",
      "op": "extract 121 32 // on error: Index access is out of bounds",
      "defined_out": [
        "game_players_bref#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%22#0"
      ]
    },
    "1101": {
      "op": "dup",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%22#0",
        "tmp%22#0 (copy)"
      ]
    },
    "1102": {
      "op": "cover 6",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%22#0"
      ]
    },
    "1104": {
      "op": "frame_bury 9",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0"
      ]
    },
    "1106": {
      "op": "frame_dig 6",
      "defined_out": [
        "game_players_bref#0",
        "tmp%12#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%12#0"
      ]
    },
    "1108": {
      "op": "uncover 3",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%12#0",
        "tmp%17#0"
      ]
    },
    "1110": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "game_players_bref#0",
        "tmp%12#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%18#0",
        "tmp%19#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "1111": {
      "op": "uncover 2",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "encoded_tuple_buffer%2#0",
        "tmp%18#0"
      ]
    },
    "1113": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "game_players_bref#0",
        "tmp%12#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "1114": {
      "op": "swap",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "encoded_tuple_buffer%3#0",
        "tmp%19#0"
      ]
    },
    "1115": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%4#0",
        "game_players_bref#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "1116": {
      "op": "swap",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%22#0",
        "tmp%21#0",
        "encoded_tuple_buffer%4#0",
        "tmp%20#0"
      ]
    },
    "1117": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%5#0",
        "game_players_bref#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%22#0",
        "tmp%21#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "1118": {
      "op": "swap",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%22#0",
        "encoded_tuple_buffer%5#0",
        "tmp%21#0"
      ]
    },
    "1119": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%6#0",
        "game_players_bref#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%22#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "1120": {
      "op": "swap",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "encoded_tuple_buffer%6#0",
        "tmp%22#0"
      ]
    },
    "1121": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%7#0",
        "game_players_bref#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "encoded_tuple_buffer%7#0"
      ]
    },
    "1122": {
      "op": "pushbytes 0x5fa5bdd3 // method \"game_over(uint64,uint8,uint8,uint8,address,address,address)\"",
      "defined_out": [
        "Method(game_over(uint64,uint8,uint8,uint8,address,address,address))",
        "encoded_tuple_buffer%7#0",
        "game_players_bref#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "encoded_tuple_buffer%7#0",
        "Method(game_over(uint64,uint8,uint8,uint8,address,address,address))"
      ]
    },
    "1128": {
      "op": "swap",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "Method(game_over(uint64,uint8,uint8,uint8,address,address,address))",
        "encoded_tuple_buffer%7#0"
      ]
    },
    "1129": {
      "op": "concat",
      "defined_out": [
        "event%0#0",
        "game_players_bref#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "event%0#0"
      ]
    },
    "1130": {
      "op": "log",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ]
    },
    "1131": {
      "op": "frame_dig -3",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "game_state#0 (copy)"
      ]
    },
    "1133": {
      "op": "pushint 17 // 17",
      "defined_out": [
        "17",
        "game_players_bref#0",
        "game_state#0 (copy)",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "game_state#0 (copy)",
        "17"
      ]
    },
    "1135": {
      "op": "extract_uint64",
      "defined_out": [
        "first_prize_share#0",
        "game_players_bref#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#0"
      ]
    },
    "1136": {
      "op": "dup",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#0",
        "first_prize_share#0"
      ]
    },
    "1137": {
      "op": "frame_bury 11",
      "defined_out": [
        "first_prize_share#0",
        "game_players_bref#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#0"
      ]
    },
    "1139": {
      "op": "pushint 258400 // 258400",
      "defined_out": [
        "258400",
        "first_prize_share#0",
        "game_players_bref#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#0",
        "258400"
      ]
    },
    "1143": {
      "op": "==",
      "defined_out": [
        "first_prize_share#0",
        "game_players_bref#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%25#0"
      ]
    },
    "1144": {
      "op": "bz is_game_over_else_body@15",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ]
    },
    "1147": {
      "op": "intc_1 // 0",
      "defined_out": [
        "first_prize_share#0",
        "game_players_bref#0",
        "second_prize_share#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "second_prize_share#0"
      ]
    },
    "1148": {
      "op": "frame_bury 13",
      "defined_out": [
        "first_prize_share#0",
        "game_players_bref#0",
        "second_prize_share#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ]
    },
    "1150": {
      "op": "intc_1 // 0",
      "defined_out": [
        "first_prize_share#0",
        "game_players_bref#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "third_prize_share#0"
      ]
    },
    "1151": {
      "op": "frame_bury 14",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ]
    },
    "1153": {
      "block": "is_game_over_after_if_else@19",
      "stack_in": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "game_state#0 (copy)"
      ]
    },
    "1155": {
      "error": "Index access is out of bounds",
      "op": "extract 25 32 // on error: Index access is out of bounds",
      "defined_out": [
        "reinterpret_bytes[32]%2#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "reinterpret_bytes[32]%2#0"
      ]
    },
    "1158": {
      "op": "global CreatorAddress",
      "defined_out": [
        "reinterpret_bytes[32]%2#0",
        "tmp%44#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "reinterpret_bytes[32]%2#0",
        "tmp%44#0"
      ]
    },
    "1160": {
      "op": "frame_dig 7",
      "defined_out": [
        "reinterpret_bytes[32]%2#0",
        "tmp%20#0",
        "tmp%44#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "reinterpret_bytes[32]%2#0",
        "tmp%44#0",
        "tmp%20#0"
      ]
    },
    "1162": {
      "op": "dig 2",
      "defined_out": [
        "reinterpret_bytes[32]%2#0",
        "reinterpret_bytes[32]%2#0 (copy)",
        "tmp%20#0",
        "tmp%44#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "reinterpret_bytes[32]%2#0",
        "tmp%44#0",
        "tmp%20#0",
        "reinterpret_bytes[32]%2#0 (copy)"
      ]
    },
    "1164": {
      "op": "uncover 2",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "reinterpret_bytes[32]%2#0",
        "tmp%20#0",
        "reinterpret_bytes[32]%2#0 (copy)",
        "tmp%44#0"
      ]
    },
    "1166": {
      "callsub": "smart_contracts.pieout.subroutines.resolve_receiver_by_prio",
      "op": "callsub resolve_receiver_by_prio",
      "defined_out": [
        "first_place_receiver#0",
        "reinterpret_bytes[32]%2#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "reinterpret_bytes[32]%2#0",
        "first_place_receiver#0"
      ]
    },
    "1169": {
      "op": "frame_bury 0",
      "defined_out": [
        "first_place_receiver#0",
        "reinterpret_bytes[32]%2#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "reinterpret_bytes[32]%2#0"
      ]
    },
    "1171": {
      "op": "global CreatorAddress",
      "defined_out": [
        "first_place_receiver#0",
        "reinterpret_bytes[32]%2#0",
        "tmp%20#0",
        "tmp%45#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "reinterpret_bytes[32]%2#0",
        "tmp%45#0"
      ]
    },
    "1173": {
      "op": "frame_dig 8",
      "defined_out": [
        "first_place_receiver#0",
        "reinterpret_bytes[32]%2#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%45#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "reinterpret_bytes[32]%2#0",
        "tmp%45#0",
        "tmp%21#0"
      ]
    },
    "1175": {
      "op": "dig 2",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "reinterpret_bytes[32]%2#0",
        "tmp%45#0",
        "tmp%21#0",
        "reinterpret_bytes[32]%2#0 (copy)"
      ]
    },
    "1177": {
      "op": "uncover 2",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "reinterpret_bytes[32]%2#0",
        "tmp%21#0",
        "reinterpret_bytes[32]%2#0 (copy)",
        "tmp%45#0"
      ]
    },
    "1179": {
      "callsub": "smart_contracts.pieout.subroutines.resolve_receiver_by_prio",
      "op": "callsub resolve_receiver_by_prio",
      "defined_out": [
        "first_place_receiver#0",
        "reinterpret_bytes[32]%2#0",
        "second_place_receiver#0",
        "tmp%20#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "reinterpret_bytes[32]%2#0",
        "second_place_receiver#0"
      ]
    },
    "1182": {
      "op": "frame_bury 4",
      "defined_out": [
        "first_place_receiver#0",
        "reinterpret_bytes[32]%2#0",
        "second_place_receiver#0",
        "tmp%20#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "reinterpret_bytes[32]%2#0"
      ]
    },
    "1184": {
      "op": "global CreatorAddress",
      "defined_out": [
        "first_place_receiver#0",
        "reinterpret_bytes[32]%2#0",
        "second_place_receiver#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%46#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "reinterpret_bytes[32]%2#0",
        "tmp%46#0"
      ]
    },
    "1186": {
      "op": "frame_dig 9",
      "defined_out": [
        "first_place_receiver#0",
        "reinterpret_bytes[32]%2#0",
        "second_place_receiver#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%46#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "reinterpret_bytes[32]%2#0",
        "tmp%46#0",
        "tmp%22#0"
      ]
    },
    "1188": {
      "op": "cover 2",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%22#0",
        "reinterpret_bytes[32]%2#0",
        "tmp%46#0"
      ]
    },
    "1190": {
      "callsub": "smart_contracts.pieout.subroutines.resolve_receiver_by_prio",
      "op": "callsub resolve_receiver_by_prio",
      "defined_out": [
        "first_place_receiver#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "third_place_receiver#0"
      ]
    },
    "1193": {
      "op": "frame_bury 5",
      "defined_out": [
        "first_place_receiver#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ]
    },
    "1195": {
      "op": "frame_dig 11",
      "defined_out": [
        "first_place_receiver#0",
        "first_prize_share#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#0"
      ]
    },
    "1197": {
      "op": "bz is_game_over_after_if_else@21",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ]
    },
    "1200": {
      "op": "frame_dig 0",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_place_receiver#0"
      ]
    },
    "1202": {
      "op": "frame_dig 11",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_place_receiver#0",
        "first_prize_share#0"
      ]
    },
    "1204": {
      "op": "pushbytes \"pieout:j{\\\"method\\\":\\\"play_game\\\",\\\"subroutine:\\\"is_game_over\\\",\\\"concern\\\":\\\"itxn.pay;first_prize_share\\\"}\"",
      "defined_out": [
        "\"pieout:j{\\\"method\\\":\\\"play_game\\\",\\\"subroutine:\\\"is_game_over\\\",\\\"concern\\\":\\\"itxn.pay;first_prize_share\\\"}\"",
        "first_place_receiver#0",
        "first_prize_share#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_place_receiver#0",
        "first_prize_share#0",
        "\"pieout:j{\\\"method\\\":\\\"play_game\\\",\\\"subroutine:\\\"is_game_over\\\",\\\"concern\\\":\\\"itxn.pay;first_prize_share\\\"}\""
      ]
    },
    "1302": {
      "callsub": "smart_contracts.pieout.subroutines.payout_itxn",
      "op": "callsub payout_itxn",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ]
    },
    "1305": {
      "block": "is_game_over_after_if_else@21",
      "stack_in": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ],
      "op": "frame_dig 13",
      "defined_out": [
        "second_prize_share#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "second_prize_share#0"
      ]
    },
    "1307": {
      "op": "bz is_game_over_after_if_else@23",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ]
    },
    "1310": {
      "op": "frame_dig 4",
      "defined_out": [
        "second_place_receiver#0",
        "second_prize_share#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "second_place_receiver#0"
      ]
    },
    "1312": {
      "op": "frame_dig 13",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "second_place_receiver#0",
        "second_prize_share#0"
      ]
    },
    "1314": {
      "op": "pushbytes \"pieout:j{\\\"method\\\":\\\"play_game\\\",\\\"subroutine:\\\"is_game_over\\\",\\\"concern\\\":\\\"itxn.pay;second_prize_share\\\"}\"",
      "defined_out": [
        "\"pieout:j{\\\"method\\\":\\\"play_game\\\",\\\"subroutine:\\\"is_game_over\\\",\\\"concern\\\":\\\"itxn.pay;second_prize_share\\\"}\"",
        "second_place_receiver#0",
        "second_prize_share#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "second_place_receiver#0",
        "second_prize_share#0",
        "\"pieout:j{\\\"method\\\":\\\"play_game\\\",\\\"subroutine:\\\"is_game_over\\\",\\\"concern\\\":\\\"itxn.pay;second_prize_share\\\"}\""
      ]
    },
    "1413": {
      "callsub": "smart_contracts.pieout.subroutines.payout_itxn",
      "op": "callsub payout_itxn",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ]
    },
    "1416": {
      "block": "is_game_over_after_if_else@23",
      "stack_in": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ],
      "op": "frame_dig 14",
      "defined_out": [
        "third_prize_share#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "third_prize_share#0"
      ]
    },
    "1418": {
      "op": "bz is_game_over_after_if_else@25",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ]
    },
    "1421": {
      "op": "frame_dig 5",
      "defined_out": [
        "third_place_receiver#0",
        "third_prize_share#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "third_place_receiver#0"
      ]
    },
    "1423": {
      "op": "frame_dig 14",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "third_place_receiver#0",
        "third_prize_share#0"
      ]
    },
    "1425": {
      "op": "pushbytes \"pieout:j{\\\"method\\\":\\\"play_game\\\",\\\"subroutine:\\\"is_game_over\\\",\\\"concern\\\":\\\"itxn.pay;third_prize_share\\\"}\"",
      "defined_out": [
        "\"pieout:j{\\\"method\\\":\\\"play_game\\\",\\\"subroutine:\\\"is_game_over\\\",\\\"concern\\\":\\\"itxn.pay;third_prize_share\\\"}\"",
        "third_place_receiver#0",
        "third_prize_share#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "third_place_receiver#0",
        "third_prize_share#0",
        "\"pieout:j{\\\"method\\\":\\\"play_game\\\",\\\"subroutine:\\\"is_game_over\\\",\\\"concern\\\":\\\"itxn.pay;third_prize_share\\\"}\""
      ]
    },
    "1523": {
      "callsub": "smart_contracts.pieout.subroutines.payout_itxn",
      "op": "callsub payout_itxn",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ]
    },
    "1526": {
      "block": "is_game_over_after_if_else@25",
      "stack_in": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "game_state#0 (copy)"
      ]
    },
    "1528": {
      "op": "bytec 6 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "game_state#0 (copy)",
        "0x0000000000000000"
      ]
    },
    "1530": {
      "op": "replace2 17",
      "defined_out": [
        "game_state#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "game_state#0"
      ]
    },
    "1532": {
      "op": "dup"
    },
    "1533": {
      "op": "frame_bury -3",
      "defined_out": [
        "game_state%out#3"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "game_state%out#3"
      ]
    },
    "1535": {
      "op": "frame_bury 2",
      "defined_out": [
        "game_state%out#3"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ]
    },
    "1537": {
      "block": "is_game_over_after_if_else@28",
      "stack_in": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "game_state%out#3"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "game_state%out#3"
      ]
    },
    "1539": {
      "op": "frame_bury 0"
    },
    "1541": {
      "retsub": true,
      "op": "retsub"
    },
    "1542": {
      "block": "is_game_over_else_body@15",
      "stack_in": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ],
      "op": "frame_dig 11",
      "defined_out": [
        "first_prize_share#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#0"
      ]
    },
    "1544": {
      "op": "pushint 516800 // 516800",
      "defined_out": [
        "516800",
        "first_prize_share#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#0",
        "516800"
      ]
    },
    "1548": {
      "op": "==",
      "defined_out": [
        "first_prize_share#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%29#0"
      ]
    },
    "1549": {
      "op": "bz is_game_over_else_body@17",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ]
    },
    "1552": {
      "op": "frame_dig 11",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#0"
      ]
    },
    "1554": {
      "op": "dup",
      "defined_out": [
        "first_prize_share#0",
        "first_prize_share#0 (copy)"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#0",
        "first_prize_share#0 (copy)"
      ]
    },
    "1555": {
      "op": "pushint 60 // 60",
      "defined_out": [
        "60",
        "first_prize_share#0",
        "first_prize_share#0 (copy)"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#0",
        "first_prize_share#0 (copy)",
        "60"
      ]
    },
    "1557": {
      "op": "*",
      "defined_out": [
        "first_prize_share#0",
        "tmp%32#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#0",
        "tmp%32#0"
      ]
    },
    "1558": {
      "op": "pushint 100 // 100",
      "defined_out": [
        "100",
        "first_prize_share#0",
        "tmp%32#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#0",
        "tmp%32#0",
        "100"
      ]
    },
    "1560": {
      "op": "/",
      "defined_out": [
        "first_prize_share#0",
        "first_prize_share#1"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#0",
        "first_prize_share#1"
      ]
    },
    "1561": {
      "op": "swap",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#1",
        "first_prize_share#0"
      ]
    },
    "1562": {
      "op": "dig 1",
      "defined_out": [
        "first_prize_share#0",
        "first_prize_share#1",
        "first_prize_share#1 (copy)"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#1",
        "first_prize_share#0",
        "first_prize_share#1 (copy)"
      ]
    },
    "1564": {
      "op": "-",
      "defined_out": [
        "first_prize_share#0",
        "first_prize_share#1",
        "second_prize_share#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#1",
        "second_prize_share#0"
      ]
    },
    "1565": {
      "op": "frame_bury 13",
      "defined_out": [
        "first_prize_share#0",
        "first_prize_share#1",
        "second_prize_share#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#1"
      ]
    },
    "1567": {
      "op": "intc_1 // 0",
      "defined_out": [
        "first_prize_share#0",
        "first_prize_share#1",
        "second_prize_share#0",
        "third_prize_share#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#1",
        "third_prize_share#0"
      ]
    },
    "1568": {
      "op": "frame_bury 14",
      "defined_out": [
        "first_prize_share#0",
        "second_prize_share#0",
        "third_prize_share#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#0"
      ]
    },
    "1570": {
      "op": "frame_bury 11",
      "defined_out": [
        "first_prize_share#0",
        "second_prize_share#0",
        "third_prize_share#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ]
    },
    "1572": {
      "op": "b is_game_over_after_if_else@19"
    },
    "1575": {
      "block": "is_game_over_else_body@17",
      "stack_in": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ],
      "op": "frame_dig 11",
      "defined_out": [
        "first_prize_share#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#0"
      ]
    },
    "1577": {
      "op": "dup",
      "defined_out": [
        "first_prize_share#0",
        "first_prize_share#0 (copy)"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#0",
        "first_prize_share#0 (copy)"
      ]
    },
    "1578": {
      "op": "pushint 50 // 50",
      "defined_out": [
        "50",
        "first_prize_share#0",
        "first_prize_share#0 (copy)"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#0",
        "first_prize_share#0 (copy)",
        "50"
      ]
    },
    "1580": {
      "op": "*",
      "defined_out": [
        "first_prize_share#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#0",
        "tmp%37#0"
      ]
    },
    "1581": {
      "op": "pushint 100 // 100",
      "defined_out": [
        "100",
        "first_prize_share#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#0",
        "tmp%37#0",
        "100"
      ]
    },
    "1583": {
      "op": "/",
      "defined_out": [
        "first_prize_share#0",
        "first_prize_share#1"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#0",
        "first_prize_share#1"
      ]
    },
    "1584": {
      "op": "dig 1",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#0",
        "first_prize_share#1",
        "first_prize_share#0 (copy)"
      ]
    },
    "1586": {
      "op": "pushint 30 // 30",
      "defined_out": [
        "30",
        "first_prize_share#0",
        "first_prize_share#0 (copy)",
        "first_prize_share#1"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#0",
        "first_prize_share#1",
        "first_prize_share#0 (copy)",
        "30"
      ]
    },
    "1588": {
      "op": "*",
      "defined_out": [
        "first_prize_share#0",
        "first_prize_share#1",
        "tmp%40#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#0",
        "first_prize_share#1",
        "tmp%40#0"
      ]
    },
    "1589": {
      "op": "pushint 100 // 100",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#0",
        "first_prize_share#1",
        "tmp%40#0",
        "100"
      ]
    },
    "1591": {
      "op": "/",
      "defined_out": [
        "first_prize_share#0",
        "first_prize_share#1",
        "second_prize_share#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#0",
        "first_prize_share#1",
        "second_prize_share#0"
      ]
    },
    "1592": {
      "op": "dup",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#0",
        "first_prize_share#1",
        "second_prize_share#0",
        "second_prize_share#0"
      ]
    },
    "1593": {
      "op": "frame_bury 13",
      "defined_out": [
        "first_prize_share#0",
        "first_prize_share#1",
        "second_prize_share#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#0",
        "first_prize_share#1",
        "second_prize_share#0"
      ]
    },
    "1595": {
      "op": "uncover 2",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#1",
        "second_prize_share#0",
        "first_prize_share#0"
      ]
    },
    "1597": {
      "op": "dig 2",
      "defined_out": [
        "first_prize_share#0",
        "first_prize_share#1",
        "first_prize_share#1 (copy)",
        "second_prize_share#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#1",
        "second_prize_share#0",
        "first_prize_share#0",
        "first_prize_share#1 (copy)"
      ]
    },
    "1599": {
      "op": "-",
      "defined_out": [
        "first_prize_share#0",
        "first_prize_share#1",
        "second_prize_share#0",
        "tmp%43#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#1",
        "second_prize_share#0",
        "tmp%43#0"
      ]
    },
    "1600": {
      "op": "swap",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#1",
        "tmp%43#0",
        "second_prize_share#0"
      ]
    },
    "1601": {
      "op": "-",
      "defined_out": [
        "first_prize_share#0",
        "first_prize_share#1",
        "second_prize_share#0",
        "third_prize_share#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#1",
        "third_prize_share#0"
      ]
    },
    "1602": {
      "op": "frame_bury 14",
      "defined_out": [
        "first_prize_share#0",
        "second_prize_share#0",
        "third_prize_share#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#0"
      ]
    },
    "1604": {
      "op": "frame_bury 11",
      "defined_out": [
        "first_prize_share#0",
        "second_prize_share#0",
        "third_prize_share#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "game_state%out#3",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ]
    },
    "1606": {
      "op": "b is_game_over_after_if_else@19"
    },
    "1609": {
      "subroutine": "smart_contracts.pieout.contract.Pieout.calc_single_box_cost",
      "params": {
        "key_size#0": "bytes",
        "value_size#0": "bytes"
      },
      "block": "calc_single_box_cost",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "1612": {
      "op": "frame_dig -2",
      "defined_out": [
        "key_size#0 (copy)"
      ],
      "stack_out": [
        "key_size#0 (copy)"
      ]
    },
    "1614": {
      "op": "btoi",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1615": {
      "op": "frame_dig -1",
      "defined_out": [
        "tmp%1#0",
        "value_size#0 (copy)"
      ],
      "stack_out": [
        "tmp%1#0",
        "value_size#0 (copy)"
      ]
    },
    "1617": {
      "op": "btoi",
      "defined_out": [
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "1618": {
      "op": "+",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1619": {
      "op": "pushint 400 // 400",
      "defined_out": [
        "400",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "400"
      ]
    },
    "1622": {
      "op": "*",
      "defined_out": [
        "size_cost#0"
      ],
      "stack_out": [
        "size_cost#0"
      ]
    },
    "1623": {
      "op": "pushint 2500 // 2500",
      "defined_out": [
        "2500",
        "size_cost#0"
      ],
      "stack_out": [
        "size_cost#0",
        "2500"
      ]
    },
    "1626": {
      "op": "+",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "1627": {
      "retsub": true,
      "op": "retsub"
    },
    "1628": {
      "subroutine": "smart_contracts.pieout.contract.Pieout.does_box_game_trophy_exist",
      "params": {},
      "block": "does_box_game_trophy_exist",
      "stack_in": [],
      "op": "bytec_2 // \"t_\"",
      "defined_out": [
        "\"t_\""
      ],
      "stack_out": [
        "\"t_\""
      ]
    },
    "1629": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1630": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%0#0"
      ]
    },
    "1632": {
      "retsub": true,
      "op": "retsub"
    },
    "1633": {
      "subroutine": "smart_contracts.pieout.contract.Pieout.does_box_game_register_exist",
      "params": {
        "player#0": "bytes"
      },
      "block": "does_box_game_register_exist",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1636": {
      "op": "bytec_0 // \"r_\"",
      "defined_out": [
        "\"r_\""
      ],
      "stack_out": [
        "\"r_\""
      ]
    },
    "1637": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"r_\"",
        "player#0 (copy)"
      ],
      "stack_out": [
        "\"r_\"",
        "player#0 (copy)"
      ]
    },
    "1639": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "1640": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1641": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%0#0"
      ]
    },
    "1643": {
      "retsub": true,
      "op": "retsub"
    },
    "1644": {
      "subroutine": "smart_contracts.pieout.contract.Pieout.does_box_game_state_exist",
      "params": {
        "game_id#0": "uint64"
      },
      "block": "does_box_game_state_exist",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1647": {
      "op": "frame_dig -1",
      "defined_out": [
        "game_id#0 (copy)"
      ],
      "stack_out": [
        "game_id#0 (copy)"
      ]
    },
    "1649": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "1650": {
      "op": "bytec 4 // \"s_\"",
      "defined_out": [
        "\"s_\"",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "\"s_\""
      ]
    },
    "1652": {
      "op": "swap",
      "stack_out": [
        "\"s_\"",
        "encoded_value%0#0"
      ]
    },
    "1653": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "1654": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1655": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%0#0"
      ]
    },
    "1657": {
      "retsub": true,
      "op": "retsub"
    },
    "1658": {
      "subroutine": "smart_contracts.pieout.contract.Pieout.read_box_game_players",
      "params": {
        "game_id#0": "uint64"
      },
      "block": "read_box_game_players",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1661": {
      "op": "intc_1 // 0",
      "stack_out": [
        "active_players#9"
      ]
    },
    "1662": {
      "op": "dup",
      "stack_out": [
        "active_players#9",
        "player_addr_bytes#0"
      ]
    },
    "1663": {
      "op": "frame_dig -1",
      "defined_out": [
        "game_id#0 (copy)"
      ],
      "stack_out": [
        "active_players#9",
        "player_addr_bytes#0",
        "game_id#0 (copy)"
      ]
    },
    "1665": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "active_players#9",
        "player_addr_bytes#0",
        "encoded_value%0#0"
      ]
    },
    "1666": {
      "op": "bytec 4 // \"s_\"",
      "defined_out": [
        "\"s_\"",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "active_players#9",
        "player_addr_bytes#0",
        "encoded_value%0#0",
        "\"s_\""
      ]
    },
    "1668": {
      "op": "dig 1",
      "defined_out": [
        "\"s_\"",
        "encoded_value%0#0",
        "encoded_value%0#0 (copy)"
      ],
      "stack_out": [
        "active_players#9",
        "player_addr_bytes#0",
        "encoded_value%0#0",
        "\"s_\"",
        "encoded_value%0#0 (copy)"
      ]
    },
    "1670": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "active_players#9",
        "player_addr_bytes#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1671": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "encoded_value%0#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "active_players#9",
        "player_addr_bytes#0",
        "encoded_value%0#0",
        "_%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1672": {
      "op": "bury 1",
      "stack_out": [
        "active_players#9",
        "player_addr_bytes#0",
        "encoded_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1674": {
      "error": "Box game state not found. Check if game ID exists.",
      "op": "assert // Box game state not found. Check if game ID exists.",
      "stack_out": [
        "active_players#9",
        "player_addr_bytes#0",
        "encoded_value%0#0"
      ]
    },
    "1675": {
      "op": "bytec_3 // \"p_\"",
      "defined_out": [
        "\"p_\"",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "active_players#9",
        "player_addr_bytes#0",
        "encoded_value%0#0",
        "\"p_\""
      ]
    },
    "1676": {
      "op": "swap",
      "stack_out": [
        "active_players#9",
        "player_addr_bytes#0",
        "\"p_\"",
        "encoded_value%0#0"
      ]
    },
    "1677": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%1#0"
      ],
      "stack_out": [
        "active_players#9",
        "player_addr_bytes#0",
        "box_prefixed_key%1#0"
      ]
    },
    "1678": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "players_b_arr#0"
      ],
      "stack_out": [
        "active_players#9",
        "player_addr_bytes#0",
        "players_b_arr#0",
        "maybe_exists%1#0"
      ]
    },
    "1679": {
      "op": "swap",
      "stack_out": [
        "active_players#9",
        "player_addr_bytes#0",
        "maybe_exists%1#0",
        "players_b_arr#0"
      ]
    },
    "1680": {
      "op": "dup",
      "stack_out": [
        "active_players#9",
        "player_addr_bytes#0",
        "maybe_exists%1#0",
        "players_b_arr#0",
        "players_b_arr#0 (copy)"
      ]
    },
    "1681": {
      "op": "uncover 2",
      "defined_out": [
        "maybe_exists%1#0",
        "players_b_arr#0"
      ],
      "stack_out": [
        "active_players#9",
        "player_addr_bytes#0",
        "players_b_arr#0",
        "players_b_arr#0",
        "maybe_exists%1#0"
      ]
    },
    "1683": {
      "error": "check self.box_game_players entry exists",
      "op": "assert // check self.box_game_players entry exists",
      "stack_out": [
        "active_players#9",
        "player_addr_bytes#0",
        "players_b_arr#0",
        "players_b_arr#0"
      ]
    },
    "1684": {
      "op": "pushbytes 0x0000",
      "defined_out": [
        "active_players#0",
        "players_b_arr#0"
      ],
      "stack_out": [
        "active_players#9",
        "player_addr_bytes#0",
        "players_b_arr#0",
        "players_b_arr#0",
        "active_players#0"
      ]
    },
    "1688": {
      "op": "swap",
      "defined_out": [
        "active_players#0",
        "players_b_arr#0"
      ],
      "stack_out": [
        "active_players#9",
        "player_addr_bytes#0",
        "players_b_arr#0",
        "active_players#0",
        "players_b_arr#0"
      ]
    },
    "1689": {
      "op": "len",
      "defined_out": [
        "active_players#0",
        "players_b_arr#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "active_players#9",
        "player_addr_bytes#0",
        "players_b_arr#0",
        "active_players#0",
        "tmp%0#0"
      ]
    },
    "1690": {
      "op": "intc_1 // 0",
      "defined_out": [
        "active_players#0",
        "i#0",
        "players_b_arr#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "active_players#9",
        "player_addr_bytes#0",
        "players_b_arr#0",
        "active_players#0",
        "tmp%0#0",
        "i#0"
      ]
    },
    "1691": {
      "block": "read_box_game_players_for_header@1",
      "stack_in": [
        "active_players#9",
        "player_addr_bytes#0",
        "players_b_arr#0",
        "active_players#0",
        "tmp%0#0",
        "i#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "active_players#9",
        "player_addr_bytes#0",
        "players_b_arr#0",
        "active_players#0",
        "tmp%0#0",
        "i#0",
        "i#0"
      ]
    },
    "1693": {
      "op": "frame_dig 4",
      "defined_out": [
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "active_players#9",
        "player_addr_bytes#0",
        "players_b_arr#0",
        "active_players#0",
        "tmp%0#0",
        "i#0",
        "i#0",
        "tmp%0#0"
      ]
    },
    "1695": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "active_players#9",
        "player_addr_bytes#0",
        "players_b_arr#0",
        "active_players#0",
        "tmp%0#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "1696": {
      "op": "bz read_box_game_players_after_for@6",
      "stack_out": [
        "active_players#9",
        "player_addr_bytes#0",
        "players_b_arr#0",
        "active_players#0",
        "tmp%0#0",
        "i#0"
      ]
    },
    "1699": {
      "op": "frame_dig 2",
      "defined_out": [
        "i#0",
        "players_b_arr#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "active_players#9",
        "player_addr_bytes#0",
        "players_b_arr#0",
        "active_players#0",
        "tmp%0#0",
        "i#0",
        "players_b_arr#0"
      ]
    },
    "1701": {
      "op": "frame_dig 5",
      "stack_out": [
        "active_players#9",
        "player_addr_bytes#0",
        "players_b_arr#0",
        "active_players#0",
        "tmp%0#0",
        "i#0",
        "players_b_arr#0",
        "i#0"
      ]
    },
    "1703": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "i#0",
        "players_b_arr#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "active_players#9",
        "player_addr_bytes#0",
        "players_b_arr#0",
        "active_players#0",
        "tmp%0#0",
        "i#0",
        "players_b_arr#0",
        "i#0",
        "32"
      ]
    },
    "1704": {
      "op": "extract3",
      "defined_out": [
        "i#0",
        "player_addr_bytes#0",
        "players_b_arr#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "active_players#9",
        "player_addr_bytes#0",
        "players_b_arr#0",
        "active_players#0",
        "tmp%0#0",
        "i#0",
        "player_addr_bytes#0"
      ]
    },
    "1705": {
      "op": "dup",
      "stack_out": [
        "active_players#9",
        "player_addr_bytes#0",
        "players_b_arr#0",
        "active_players#0",
        "tmp%0#0",
        "i#0",
        "player_addr_bytes#0",
        "player_addr_bytes#0"
      ]
    },
    "1706": {
      "op": "frame_bury 1",
      "defined_out": [
        "i#0",
        "player_addr_bytes#0",
        "players_b_arr#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "active_players#9",
        "player_addr_bytes#0",
        "players_b_arr#0",
        "active_players#0",
        "tmp%0#0",
        "i#0",
        "player_addr_bytes#0"
      ]
    },
    "1708": {
      "op": "bytec 8 // 0x0000000000000000000000000000000000000000000000000000000000000000",
      "defined_out": [
        "0x0000000000000000000000000000000000000000000000000000000000000000",
        "i#0",
        "player_addr_bytes#0",
        "players_b_arr#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "active_players#9",
        "player_addr_bytes#0",
        "players_b_arr#0",
        "active_players#0",
        "tmp%0#0",
        "i#0",
        "player_addr_bytes#0",
        "0x0000000000000000000000000000000000000000000000000000000000000000"
      ]
    },
    "1710": {
      "op": "!=",
      "defined_out": [
        "i#0",
        "player_addr_bytes#0",
        "players_b_arr#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "active_players#9",
        "player_addr_bytes#0",
        "players_b_arr#0",
        "active_players#0",
        "tmp%0#0",
        "i#0",
        "tmp%1#0"
      ]
    },
    "1711": {
      "op": "frame_dig 3",
      "defined_out": [
        "active_players#9",
        "i#0",
        "player_addr_bytes#0",
        "players_b_arr#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "active_players#9",
        "player_addr_bytes#0",
        "players_b_arr#0",
        "active_players#0",
        "tmp%0#0",
        "i#0",
        "tmp%1#0",
        "active_players#9"
      ]
    },
    "1713": {
      "op": "frame_bury 0",
      "defined_out": [
        "active_players#9",
        "i#0",
        "player_addr_bytes#0",
        "players_b_arr#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "active_players#9",
        "player_addr_bytes#0",
        "players_b_arr#0",
        "active_players#0",
        "tmp%0#0",
        "i#0",
        "tmp%1#0"
      ]
    },
    "1715": {
      "op": "bz read_box_game_players_after_if_else@4",
      "stack_out": [
        "active_players#9",
        "player_addr_bytes#0",
        "players_b_arr#0",
        "active_players#0",
        "tmp%0#0",
        "i#0"
      ]
    },
    "1718": {
      "op": "frame_dig 3",
      "defined_out": [
        "active_players#0",
        "active_players#9",
        "i#0",
        "player_addr_bytes#0",
        "players_b_arr#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "active_players#9",
        "player_addr_bytes#0",
        "players_b_arr#0",
        "active_players#0",
        "tmp%0#0",
        "i#0",
        "active_players#0"
      ]
    },
    "1720": {
      "op": "extract 2 0",
      "defined_out": [
        "active_players#0",
        "active_players#9",
        "expr_value_trimmed%0#0",
        "i#0",
        "player_addr_bytes#0",
        "players_b_arr#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "active_players#9",
        "player_addr_bytes#0",
        "players_b_arr#0",
        "active_players#0",
        "tmp%0#0",
        "i#0",
        "expr_value_trimmed%0#0"
      ]
    },
    "1723": {
      "op": "frame_dig 1",
      "stack_out": [
        "active_players#9",
        "player_addr_bytes#0",
        "players_b_arr#0",
        "active_players#0",
        "tmp%0#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "player_addr_bytes#0"
      ]
    },
    "1725": {
      "op": "concat",
      "defined_out": [
        "active_players#0",
        "active_players#9",
        "concatenated%0#0",
        "i#0",
        "player_addr_bytes#0",
        "players_b_arr#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "active_players#9",
        "player_addr_bytes#0",
        "players_b_arr#0",
        "active_players#0",
        "tmp%0#0",
        "i#0",
        "concatenated%0#0"
      ]
    },
    "1726": {
      "op": "dup",
      "defined_out": [
        "active_players#0",
        "active_players#9",
        "concatenated%0#0",
        "concatenated%0#0 (copy)",
        "i#0",
        "player_addr_bytes#0",
        "players_b_arr#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "active_players#9",
        "player_addr_bytes#0",
        "players_b_arr#0",
        "active_players#0",
        "tmp%0#0",
        "i#0",
        "concatenated%0#0",
        "concatenated%0#0 (copy)"
      ]
    },
    "1727": {
      "op": "len",
      "defined_out": [
        "active_players#0",
        "active_players#9",
        "byte_len%0#0",
        "concatenated%0#0",
        "i#0",
        "player_addr_bytes#0",
        "players_b_arr#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "active_players#9",
        "player_addr_bytes#0",
        "players_b_arr#0",
        "active_players#0",
        "tmp%0#0",
        "i#0",
        "concatenated%0#0",
        "byte_len%0#0"
      ]
    },
    "1728": {
      "op": "intc_3 // 32",
      "stack_out": [
        "active_players#9",
        "player_addr_bytes#0",
        "players_b_arr#0",
        "active_players#0",
        "tmp%0#0",
        "i#0",
        "concatenated%0#0",
        "byte_len%0#0",
        "32"
      ]
    },
    "1729": {
      "op": "/",
      "defined_out": [
        "active_players#0",
        "active_players#9",
        "concatenated%0#0",
        "i#0",
        "len_%0#0",
        "player_addr_bytes#0",
        "players_b_arr#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "active_players#9",
        "player_addr_bytes#0",
        "players_b_arr#0",
        "active_players#0",
        "tmp%0#0",
        "i#0",
        "concatenated%0#0",
        "len_%0#0"
      ]
    },
    "1730": {
      "op": "itob",
      "defined_out": [
        "active_players#0",
        "active_players#9",
        "as_bytes%0#0",
        "concatenated%0#0",
        "i#0",
        "player_addr_bytes#0",
        "players_b_arr#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "active_players#9",
        "player_addr_bytes#0",
        "players_b_arr#0",
        "active_players#0",
        "tmp%0#0",
        "i#0",
        "concatenated%0#0",
        "as_bytes%0#0"
      ]
    },
    "1731": {
      "op": "extract 6 2",
      "defined_out": [
        "active_players#0",
        "active_players#9",
        "concatenated%0#0",
        "i#0",
        "len_16_bit%0#0",
        "player_addr_bytes#0",
        "players_b_arr#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "active_players#9",
        "player_addr_bytes#0",
        "players_b_arr#0",
        "active_players#0",
        "tmp%0#0",
        "i#0",
        "concatenated%0#0",
        "len_16_bit%0#0"
      ]
    },
    "1734": {
      "op": "swap",
      "stack_out": [
        "active_players#9",
        "player_addr_bytes#0",
        "players_b_arr#0",
        "active_players#0",
        "tmp%0#0",
        "i#0",
        "len_16_bit%0#0",
        "concatenated%0#0"
      ]
    },
    "1735": {
      "op": "concat",
      "stack_out": [
        "active_players#9",
        "player_addr_bytes#0",
        "players_b_arr#0",
        "active_players#0",
        "tmp%0#0",
        "i#0",
        "active_players#9"
      ]
    },
    "1736": {
      "op": "frame_bury 0",
      "stack_out": [
        "active_players#9",
        "player_addr_bytes#0",
        "players_b_arr#0",
        "active_players#0",
        "tmp%0#0",
        "i#0"
      ]
    },
    "1738": {
      "block": "read_box_game_players_after_if_else@4",
      "stack_in": [
        "active_players#9",
        "player_addr_bytes#0",
        "players_b_arr#0",
        "active_players#0",
        "tmp%0#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "active_players#0"
      ],
      "stack_out": [
        "active_players#9",
        "player_addr_bytes#0",
        "players_b_arr#0",
        "active_players#0",
        "tmp%0#0",
        "i#0",
        "active_players#0"
      ]
    },
    "1740": {
      "op": "frame_bury 3",
      "defined_out": [
        "active_players#0"
      ],
      "stack_out": [
        "active_players#9",
        "player_addr_bytes#0",
        "players_b_arr#0",
        "active_players#0",
        "tmp%0#0",
        "i#0"
      ]
    },
    "1742": {
      "op": "frame_dig 5",
      "defined_out": [
        "active_players#0",
        "i#0"
      ],
      "stack_out": [
        "active_players#9",
        "player_addr_bytes#0",
        "players_b_arr#0",
        "active_players#0",
        "tmp%0#0",
        "i#0",
        "i#0"
      ]
    },
    "1744": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "active_players#0",
        "i#0"
      ],
      "stack_out": [
        "active_players#9",
        "player_addr_bytes#0",
        "players_b_arr#0",
        "active_players#0",
        "tmp%0#0",
        "i#0",
        "i#0",
        "32"
      ]
    },
    "1745": {
      "op": "+",
      "stack_out": [
        "active_players#9",
        "player_addr_bytes#0",
        "players_b_arr#0",
        "active_players#0",
        "tmp%0#0",
        "i#0",
        "i#0"
      ]
    },
    "1746": {
      "op": "frame_bury 5",
      "stack_out": [
        "active_players#9",
        "player_addr_bytes#0",
        "players_b_arr#0",
        "active_players#0",
        "tmp%0#0",
        "i#0"
      ]
    },
    "1748": {
      "op": "b read_box_game_players_for_header@1"
    },
    "1751": {
      "block": "read_box_game_players_after_for@6",
      "stack_in": [
        "active_players#9",
        "player_addr_bytes#0",
        "players_b_arr#0",
        "active_players#0",
        "tmp%0#0",
        "i#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "active_players#0"
      ],
      "stack_out": [
        "active_players#9",
        "player_addr_bytes#0",
        "players_b_arr#0",
        "active_players#0",
        "tmp%0#0",
        "i#0",
        "active_players#0"
      ]
    },
    "1753": {
      "op": "frame_bury 0"
    },
    "1755": {
      "retsub": true,
      "op": "retsub"
    },
    "1756": {
      "subroutine": "smart_contracts.pieout.contract.Pieout.generate",
      "params": {},
      "block": "generate",
      "stack_in": [],
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1758": {
      "op": "global CreatorAddress",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "1760": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1761": {
      "error": "Account must match application creator address.",
      "op": "assert // Account must match application creator address.",
      "stack_out": []
    },
    "1762": {
      "op": "bytec 9 // \"game_id\"",
      "defined_out": [
        "\"game_id\""
      ],
      "stack_out": [
        "\"game_id\""
      ]
    },
    "1764": {
      "op": "intc_0 // 1",
      "defined_out": [
        "\"game_id\"",
        "1"
      ],
      "stack_out": [
        "\"game_id\"",
        "1"
      ]
    },
    "1765": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1766": {
      "retsub": true,
      "op": "retsub"
    },
    "1767": {
      "subroutine": "smart_contracts.pieout.contract.Pieout.mint_trophy",
      "params": {
        "box_t_pay#0": "uint64",
        "mint_pay#0": "uint64"
      },
      "block": "mint_trophy",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "1770": {
      "op": "global GroupSize",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1772": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "3"
      ]
    },
    "1774": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1775": {
      "error": "Invalid group size. Ensure number of transaction in group is within valid bounds.",
      "op": "assert // Invalid group size. Ensure number of transaction in group is within valid bounds.",
      "stack_out": []
    },
    "1776": {
      "op": "bytec_2 // \"t_\"",
      "defined_out": [
        "\"t_\""
      ],
      "stack_out": [
        "\"t_\""
      ]
    },
    "1777": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "_%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1778": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%0#0"
      ]
    },
    "1780": {
      "op": "!",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1781": {
      "error": "Box found. Ensure the box you are trying to access does not exist already.",
      "op": "assert // Box found. Ensure the box you are trying to access does not exist already.",
      "stack_out": []
    },
    "1782": {
      "op": "frame_dig -2",
      "defined_out": [
        "box_t_pay#0 (copy)"
      ],
      "stack_out": [
        "box_t_pay#0 (copy)"
      ]
    },
    "1784": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1786": {
      "op": "pushint 19700 // 19700",
      "defined_out": [
        "19700",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "19700"
      ]
    },
    "1790": {
      "op": ">=",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "1791": {
      "error": "Insufficient funds. Box pay amount is not enough to cover application MBR.",
      "op": "assert // Insufficient funds. Box pay amount is not enough to cover application MBR.",
      "stack_out": []
    },
    "1792": {
      "op": "frame_dig -2",
      "stack_out": [
        "box_t_pay#0 (copy)"
      ]
    },
    "1794": {
      "op": "gtxns Sender",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "1796": {
      "op": "global CreatorAddress",
      "defined_out": [
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "tmp%6#0"
      ]
    },
    "1798": {
      "op": "==",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "1799": {
      "error": "Box payment sender address must match transaction sender address.",
      "op": "assert // Box payment sender address must match transaction sender address.",
      "stack_out": []
    },
    "1800": {
      "op": "frame_dig -2",
      "stack_out": [
        "box_t_pay#0 (copy)"
      ]
    },
    "1802": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "1804": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "1806": {
      "op": "==",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "1807": {
      "error": "Box payment receiver address must match application address.",
      "op": "assert // Box payment receiver address must match application address.",
      "stack_out": []
    },
    "1808": {
      "op": "frame_dig -1",
      "defined_out": [
        "mint_pay#0 (copy)"
      ],
      "stack_out": [
        "mint_pay#0 (copy)"
      ]
    },
    "1810": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "1812": {
      "op": "global AssetCreateMinBalance",
      "defined_out": [
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%12#0"
      ]
    },
    "1814": {
      "op": ">=",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "1815": {
      "error": "Insufficient funds. Mint pay amount is not enough to cover asset creation cost.",
      "op": "assert // Insufficient funds. Mint pay amount is not enough to cover asset creation cost.",
      "stack_out": []
    },
    "1816": {
      "op": "frame_dig -1",
      "stack_out": [
        "mint_pay#0 (copy)"
      ]
    },
    "1818": {
      "op": "gtxns Sender",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "1820": {
      "op": "global CreatorAddress",
      "defined_out": [
        "tmp%14#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%15#0"
      ]
    },
    "1822": {
      "op": "==",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "1823": {
      "error": "Mint payment sender address must match transaction sender address.",
      "op": "assert // Mint payment sender address must match transaction sender address.",
      "stack_out": []
    },
    "1824": {
      "op": "frame_dig -1",
      "stack_out": [
        "mint_pay#0 (copy)"
      ]
    },
    "1826": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "1828": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%18#0"
      ]
    },
    "1830": {
      "op": "==",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "1831": {
      "error": "Mint payment receiver address must match application address.",
      "op": "assert // Mint payment receiver address must match application address.",
      "stack_out": []
    },
    "1832": {
      "op": "itxn_begin"
    },
    "1833": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0"
      ]
    },
    "1835": {
      "op": "dupn 3",
      "defined_out": [
        "inner_txn_params%0%%param_ConfigAssetClawback_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetClawback_idx_0#0"
      ]
    },
    "1837": {
      "op": "pushbytes 0x7069656f75743a6a7b226d6574686f64223a226d696e745f74726f706879222c22636f6e6365726e223a226974786e2e61737365745f636f6e6669673b6372656174655f74726f7068795f6173736574227d",
      "defined_out": [
        "0x7069656f75743a6a7b226d6574686f64223a226d696e745f74726f706879222c22636f6e6365726e223a226974786e2e61737365745f636f6e6669673b6372656174655f74726f7068795f6173736574227d",
        "inner_txn_params%0%%param_ConfigAssetClawback_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetClawback_idx_0#0",
        "0x7069656f75743a6a7b226d6574686f64223a226d696e745f74726f706879222c22636f6e6365726e223a226974786e2e61737365745f636f6e6669673b6372656174655f74726f7068795f6173736574227d"
      ]
    },
    "1921": {
      "op": "itxn_field Note",
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetClawback_idx_0#0"
      ]
    },
    "1923": {
      "op": "itxn_field ConfigAssetClawback",
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0"
      ]
    },
    "1925": {
      "op": "itxn_field ConfigAssetFreeze",
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0"
      ]
    },
    "1927": {
      "op": "itxn_field ConfigAssetReserve",
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0"
      ]
    },
    "1929": {
      "op": "itxn_field ConfigAssetManager",
      "stack_out": []
    },
    "1931": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1932": {
      "op": "itxn_field ConfigAssetDefaultFrozen",
      "stack_out": []
    },
    "1934": {
      "op": "intc_1 // 0",
      "stack_out": [
        "0"
      ]
    },
    "1935": {
      "op": "itxn_field ConfigAssetDecimals",
      "stack_out": []
    },
    "1937": {
      "op": "pushbytes \"Pieout_Trophy\"",
      "defined_out": [
        "\"Pieout_Trophy\""
      ],
      "stack_out": [
        "\"Pieout_Trophy\""
      ]
    },
    "1952": {
      "op": "itxn_field ConfigAssetName",
      "stack_out": []
    },
    "1954": {
      "op": "pushbytes \"TRFY\"",
      "defined_out": [
        "\"TRFY\""
      ],
      "stack_out": [
        "\"TRFY\""
      ]
    },
    "1960": {
      "op": "itxn_field ConfigAssetUnitName",
      "stack_out": []
    },
    "1962": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1963": {
      "op": "itxn_field ConfigAssetTotal",
      "stack_out": []
    },
    "1965": {
      "op": "pushint 3 // acfg",
      "defined_out": [
        "acfg"
      ],
      "stack_out": [
        "acfg"
      ]
    },
    "1967": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "1969": {
      "op": "intc_1 // 0",
      "stack_out": [
        "0"
      ]
    },
    "1970": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1972": {
      "op": "itxn_submit"
    },
    "1973": {
      "op": "itxn CreatedAssetID",
      "defined_out": [
        "acfg_itxn.CreatedAssetID#0"
      ],
      "stack_out": [
        "acfg_itxn.CreatedAssetID#0"
      ]
    },
    "1975": {
      "op": "bytec_2 // \"t_\"",
      "stack_out": [
        "acfg_itxn.CreatedAssetID#0",
        "\"t_\""
      ]
    },
    "1976": {
      "op": "pushint 41 // 41",
      "defined_out": [
        "\"t_\"",
        "41",
        "acfg_itxn.CreatedAssetID#0"
      ],
      "stack_out": [
        "acfg_itxn.CreatedAssetID#0",
        "\"t_\"",
        "41"
      ]
    },
    "1978": {
      "op": "box_create",
      "defined_out": [
        "acfg_itxn.CreatedAssetID#0",
        "{box_create}"
      ],
      "stack_out": [
        "acfg_itxn.CreatedAssetID#0",
        "{box_create}"
      ]
    },
    "1979": {
      "op": "pop",
      "stack_out": [
        "acfg_itxn.CreatedAssetID#0"
      ]
    },
    "1980": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "1981": {
      "op": "global ZeroAddress",
      "defined_out": [
        "tmp%20#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "tmp%20#0"
      ]
    },
    "1983": {
      "op": "bytec_1 // 0x00",
      "defined_out": [
        "0x00",
        "tmp%20#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "tmp%20#0",
        "0x00"
      ]
    },
    "1984": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%20#0",
        "0x00",
        "val_as_bytes%0#0"
      ]
    },
    "1986": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "1987": {
      "op": "swap",
      "stack_out": [
        "encoded_tuple_buffer%2#0",
        "tmp%20#0"
      ]
    },
    "1988": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%3#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%3#0"
      ]
    },
    "1989": {
      "op": "bytec_2 // \"t_\"",
      "stack_out": [
        "encoded_tuple_buffer%3#0",
        "\"t_\""
      ]
    },
    "1990": {
      "op": "swap",
      "stack_out": [
        "\"t_\"",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "1991": {
      "op": "box_put",
      "stack_out": []
    },
    "1992": {
      "retsub": true,
      "op": "retsub"
    },
    "1993": {
      "subroutine": "smart_contracts.pieout.contract.Pieout.claim_trophy",
      "params": {},
      "block": "claim_trophy",
      "stack_in": [],
      "op": "global GroupSize",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1995": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "1"
      ]
    },
    "1996": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1997": {
      "error": "Invalid group size. This app call can only take standalone transactions.",
      "op": "assert // Invalid group size. This app call can only take standalone transactions.",
      "stack_out": []
    },
    "1998": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "2000": {
      "op": "bytec_2 // \"t_\"",
      "defined_out": [
        "\"t_\"",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "\"t_\""
      ]
    },
    "2001": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2002": {
      "error": "check self.box_game_trophy exists",
      "op": "assert // check self.box_game_trophy exists",
      "stack_out": [
        "tmp%2#0",
        "maybe_value%0#0"
      ]
    },
    "2003": {
      "op": "dup",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "2004": {
      "error": "Index access is out of bounds",
      "op": "extract 9 32 // on error: Index access is out of bounds",
      "defined_out": [
        "maybe_value%0#0",
        "reinterpret_bytes[32]%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "maybe_value%0#0",
        "reinterpret_bytes[32]%0#0"
      ]
    },
    "2007": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "reinterpret_bytes[32]%0#0",
        "tmp%2#0"
      ]
    },
    "2009": {
      "op": "==",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%3#0"
      ]
    },
    "2010": {
      "error": "Asset trophy receiver must match application ATH address.",
      "op": "assert // Asset trophy receiver must match application ATH address.",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "2011": {
      "op": "txn Sender",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%4#0"
      ]
    },
    "2013": {
      "op": "swap",
      "stack_out": [
        "tmp%4#0",
        "maybe_value%0#0"
      ]
    },
    "2014": {
      "op": "intc_0 // 1",
      "stack_out": [
        "tmp%4#0",
        "maybe_value%0#0",
        "1"
      ]
    },
    "2015": {
      "op": "extract_uint64",
      "defined_out": [
        "tmp%4#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%6#0"
      ]
    },
    "2016": {
      "op": "swap",
      "stack_out": [
        "tmp%6#0",
        "tmp%4#0"
      ]
    },
    "2017": {
      "op": "dig 1",
      "defined_out": [
        "tmp%4#0",
        "tmp%6#0",
        "tmp%6#0 (copy)"
      ],
      "stack_out": [
        "tmp%6#0",
        "tmp%4#0",
        "tmp%6#0 (copy)"
      ]
    },
    "2019": {
      "op": "asset_holding_get AssetBalance",
      "defined_out": [
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "2021": {
      "op": "bury 1",
      "stack_out": [
        "tmp%6#0",
        "tmp%8#0"
      ]
    },
    "2023": {
      "error": "Account must be opted in to asset in order to perform this action.",
      "op": "assert // Account must be opted in to asset in order to perform this action.",
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "2024": {
      "op": "itxn_begin"
    },
    "2025": {
      "op": "txn Sender",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "2027": {
      "op": "pushbytes 0x7069656f75743a6a7b226d6574686f64223a22636c61696d5f74726f706879222c22636f6e6365726e223a226974786e2e61737365745f7472616e736665723b7472616e736665725f74726f7068795f6173736574227d",
      "defined_out": [
        "0x7069656f75743a6a7b226d6574686f64223a22636c61696d5f74726f706879222c22636f6e6365726e223a226974786e2e61737365745f7472616e736665723b7472616e736665725f74726f7068795f6173736574227d",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "0x7069656f75743a6a7b226d6574686f64223a22636c61696d5f74726f706879222c22636f6e6365726e223a226974786e2e61737365745f7472616e736665723b7472616e736665725f74726f7068795f6173736574227d"
      ]
    },
    "2116": {
      "op": "itxn_field Note",
      "stack_out": [
        "tmp%6#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "2118": {
      "op": "intc_0 // 1",
      "stack_out": [
        "tmp%6#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "1"
      ]
    },
    "2119": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "tmp%6#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "2121": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "2123": {
      "op": "itxn_field XferAsset",
      "stack_out": []
    },
    "2125": {
      "op": "pushint 4 // axfer",
      "defined_out": [
        "axfer"
      ],
      "stack_out": [
        "axfer"
      ]
    },
    "2127": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "2129": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "2130": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "2132": {
      "op": "itxn_submit"
    },
    "2133": {
      "retsub": true,
      "op": "retsub"
    },
    "2134": {
      "subroutine": "smart_contracts.pieout.contract.Pieout.get_box_game_register",
      "params": {
        "box_r_pay#0": "uint64"
      },
      "block": "get_box_game_register",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "2137": {
      "op": "global GroupSize",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2139": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "2"
      ]
    },
    "2140": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2141": {
      "error": "Invalid group size. Ensure number of transaction in group is within valid bounds.",
      "op": "assert // Invalid group size. Ensure number of transaction in group is within valid bounds.",
      "stack_out": []
    },
    "2142": {
      "op": "bytec_0 // \"r_\"",
      "defined_out": [
        "\"r_\""
      ],
      "stack_out": [
        "\"r_\""
      ]
    },
    "2143": {
      "op": "txn Sender",
      "defined_out": [
        "\"r_\"",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "\"r_\"",
        "materialized_values%0#0"
      ]
    },
    "2145": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "2146": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "_%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2147": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%0#0"
      ]
    },
    "2149": {
      "op": "!",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "2150": {
      "error": "Box found. Ensure the box you are trying to access does not exist already.",
      "op": "assert // Box found. Ensure the box you are trying to access does not exist already.",
      "stack_out": []
    },
    "2151": {
      "op": "bytec_2 // \"t_\"",
      "defined_out": [
        "\"t_\""
      ],
      "stack_out": [
        "\"t_\""
      ]
    },
    "2152": {
      "op": "box_len",
      "defined_out": [
        "_%1#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "_%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2153": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%1#0"
      ]
    },
    "2155": {
      "error": "Box not found. Ensure the box you are trying to access was created and still exists.",
      "op": "assert // Box not found. Ensure the box you are trying to access was created and still exists.",
      "stack_out": []
    },
    "2156": {
      "op": "frame_dig -1",
      "defined_out": [
        "box_r_pay#0 (copy)"
      ],
      "stack_out": [
        "box_r_pay#0 (copy)"
      ]
    },
    "2158": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "2160": {
      "op": "intc 6 // 29700",
      "defined_out": [
        "29700",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "29700"
      ]
    },
    "2162": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "2163": {
      "error": "Insufficient funds. Box pay amount is not enough to cover application MBR.",
      "op": "assert // Insufficient funds. Box pay amount is not enough to cover application MBR.",
      "stack_out": []
    },
    "2164": {
      "op": "frame_dig -1",
      "stack_out": [
        "box_r_pay#0 (copy)"
      ]
    },
    "2166": {
      "op": "gtxns Sender",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "2168": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "tmp%6#0"
      ]
    },
    "2170": {
      "op": "==",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "2171": {
      "error": "Box payment sender address must match transaction sender address.",
      "op": "assert // Box payment sender address must match transaction sender address.",
      "stack_out": []
    },
    "2172": {
      "op": "frame_dig -1",
      "stack_out": [
        "box_r_pay#0 (copy)"
      ]
    },
    "2174": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "2176": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "2178": {
      "op": "==",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "2179": {
      "error": "Box payment receiver address must match application address.",
      "op": "assert // Box payment receiver address must match application address.",
      "stack_out": []
    },
    "2180": {
      "op": "global Round",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "2182": {
      "op": "pushint 30 // 30",
      "defined_out": [
        "30",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "30"
      ]
    },
    "2184": {
      "op": "+",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "2185": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "2186": {
      "op": "pushbytes 0x000000000000000000000000000000000000",
      "defined_out": [
        "0x000000000000000000000000000000000000",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "0x000000000000000000000000000000000000"
      ]
    },
    "2206": {
      "op": "swap",
      "stack_out": [
        "0x000000000000000000000000000000000000",
        "val_as_bytes%0#0"
      ]
    },
    "2207": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%5#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%5#0"
      ]
    },
    "2208": {
      "op": "bytec_0 // \"r_\"",
      "stack_out": [
        "encoded_tuple_buffer%5#0",
        "\"r_\""
      ]
    },
    "2209": {
      "op": "txn Sender",
      "defined_out": [
        "\"r_\"",
        "encoded_tuple_buffer%5#0",
        "materialized_values%1#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%5#0",
        "\"r_\"",
        "materialized_values%1#0"
      ]
    },
    "2211": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%1#0",
        "encoded_tuple_buffer%5#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%5#0",
        "box_prefixed_key%1#0"
      ]
    },
    "2212": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "2213": {
      "op": "box_put",
      "stack_out": []
    },
    "2214": {
      "retsub": true,
      "op": "retsub"
    },
    "2215": {
      "subroutine": "smart_contracts.pieout.contract.Pieout.del_box_game_register_for_self",
      "params": {},
      "block": "del_box_game_register_for_self",
      "stack_in": [],
      "op": "global GroupSize",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2217": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "1"
      ]
    },
    "2218": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2219": {
      "error": "Invalid group size. This app call can only take standalone transactions.",
      "op": "assert // Invalid group size. This app call can only take standalone transactions.",
      "stack_out": []
    },
    "2220": {
      "op": "bytec_0 // \"r_\"",
      "defined_out": [
        "\"r_\""
      ],
      "stack_out": [
        "\"r_\""
      ]
    },
    "2221": {
      "op": "txn Sender",
      "defined_out": [
        "\"r_\"",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "\"r_\"",
        "materialized_values%0#0"
      ]
    },
    "2223": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "2224": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "_%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2225": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%0#0"
      ]
    },
    "2227": {
      "error": "Box not found. Ensure the box you are trying to access was created and still exists.",
      "op": "assert // Box not found. Ensure the box you are trying to access was created and still exists.",
      "stack_out": []
    },
    "2228": {
      "op": "bytec_0 // \"r_\"",
      "stack_out": [
        "\"r_\""
      ]
    },
    "2229": {
      "op": "txn Sender",
      "defined_out": [
        "\"r_\"",
        "materialized_values%1#0"
      ],
      "stack_out": [
        "\"r_\"",
        "materialized_values%1#0"
      ]
    },
    "2231": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0"
      ]
    },
    "2232": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%1#0"
      ]
    },
    "2233": {
      "error": "check self.box_game_register entry exists",
      "op": "assert // check self.box_game_register entry exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "2234": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "10"
      ]
    },
    "2236": {
      "op": "extract_uint64",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "2237": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "2238": {
      "error": "Commit Rand Round not empty. Value must be zero to obtain a valid one.",
      "op": "assert // Commit Rand Round not empty. Value must be zero to obtain a valid one.",
      "stack_out": []
    },
    "2239": {
      "op": "bytec_0 // \"r_\"",
      "stack_out": [
        "\"r_\""
      ]
    },
    "2240": {
      "op": "txn Sender",
      "defined_out": [
        "\"r_\"",
        "materialized_values%2#0"
      ],
      "stack_out": [
        "\"r_\"",
        "materialized_values%2#0"
      ]
    },
    "2242": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0"
      ]
    },
    "2243": {
      "op": "box_del",
      "defined_out": [
        "{box_del}"
      ],
      "stack_out": [
        "{box_del}"
      ]
    },
    "2244": {
      "op": "pop",
      "stack_out": []
    },
    "2245": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "2247": {
      "op": "intc 6 // 29700",
      "defined_out": [
        "29700",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "29700"
      ]
    },
    "2249": {
      "op": "pushbytes \"pieout:j{\\\"method\\\":\\\"del_box_game_register_for_self\\\",\\\"concern\\\":\\\"txn.app_c;mbr_box_r_refund\\\"}\"",
      "defined_out": [
        "\"pieout:j{\\\"method\\\":\\\"del_box_game_register_for_self\\\",\\\"concern\\\":\\\"txn.app_c;mbr_box_r_refund\\\"}\"",
        "29700",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "29700",
        "\"pieout:j{\\\"method\\\":\\\"del_box_game_register_for_self\\\",\\\"concern\\\":\\\"txn.app_c;mbr_box_r_refund\\\"}\""
      ]
    },
    "2341": {
      "callsub": "smart_contracts.pieout.subroutines.payout_itxn",
      "op": "callsub payout_itxn",
      "stack_out": []
    },
    "2344": {
      "retsub": true,
      "op": "retsub"
    },
    "2345": {
      "subroutine": "smart_contracts.pieout.contract.Pieout.del_box_game_register_for_other",
      "params": {
        "player#0": "bytes"
      },
      "block": "del_box_game_register_for_other",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "2348": {
      "op": "global GroupSize",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2350": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "1"
      ]
    },
    "2351": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2352": {
      "error": "Invalid group size. This app call can only take standalone transactions.",
      "op": "assert // Invalid group size. This app call can only take standalone transactions.",
      "stack_out": []
    },
    "2353": {
      "op": "bytec_0 // \"r_\"",
      "defined_out": [
        "\"r_\""
      ],
      "stack_out": [
        "\"r_\""
      ]
    },
    "2354": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"r_\"",
        "player#0 (copy)"
      ],
      "stack_out": [
        "\"r_\"",
        "player#0 (copy)"
      ]
    },
    "2356": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "2357": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "2358": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "box_prefixed_key%0#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "_%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2359": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2361": {
      "error": "Box not found. Ensure the box you are trying to access was created and still exists.",
      "op": "assert // Box not found. Ensure the box you are trying to access was created and still exists.",
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "2362": {
      "op": "frame_dig -1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "player#0 (copy)"
      ]
    },
    "2364": {
      "op": "txn Sender",
      "defined_out": [
        "box_prefixed_key%0#0",
        "player#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "player#0 (copy)",
        "tmp%2#0"
      ]
    },
    "2366": {
      "op": "!=",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%3#0"
      ]
    },
    "2367": {
      "error": "Account is not authorized to make this call.",
      "op": "assert // Account is not authorized to make this call.",
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "2368": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "2369": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%1#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_exists%1#0"
      ]
    },
    "2370": {
      "error": "check self.box_game_register entry exists",
      "op": "assert // check self.box_game_register entry exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0"
      ]
    },
    "2371": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "2372": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "10"
      ]
    },
    "2374": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "tmp%5#0"
      ]
    },
    "2375": {
      "op": "!",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "tmp%6#0"
      ]
    },
    "2376": {
      "error": "Commit Rand Round not empty. Value must be zero to obtain a valid one.",
      "op": "assert // Commit Rand Round not empty. Value must be zero to obtain a valid one.",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0"
      ]
    },
    "2377": {
      "op": "pushint 18 // 18",
      "defined_out": [
        "18",
        "box_prefixed_key%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "18"
      ]
    },
    "2379": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%8#0"
      ]
    },
    "2380": {
      "op": "global Round",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "2382": {
      "op": "<",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%10#0"
      ]
    },
    "2383": {
      "error": "Invalid time frame. Call made outside the permitted block or timestamp range.",
      "op": "assert // Invalid time frame. Call made outside the permitted block or timestamp range.",
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "2384": {
      "op": "box_del",
      "defined_out": [
        "{box_del}"
      ],
      "stack_out": [
        "{box_del}"
      ]
    },
    "2385": {
      "op": "pop",
      "stack_out": []
    },
    "2386": {
      "op": "frame_dig -1",
      "stack_out": [
        "player#0 (copy)"
      ]
    },
    "2388": {
      "op": "txn Sender",
      "defined_out": [
        "player#0 (copy)",
        "tmp%11#0"
      ],
      "stack_out": [
        "player#0 (copy)",
        "tmp%11#0"
      ]
    },
    "2390": {
      "op": "global CreatorAddress",
      "defined_out": [
        "player#0 (copy)",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "player#0 (copy)",
        "tmp%11#0",
        "tmp%12#0"
      ]
    },
    "2392": {
      "callsub": "smart_contracts.pieout.subroutines.resolve_receiver_by_prio",
      "op": "callsub resolve_receiver_by_prio",
      "defined_out": [
        "receiver#0"
      ],
      "stack_out": [
        "receiver#0"
      ]
    },
    "2395": {
      "op": "intc 6 // 29700",
      "defined_out": [
        "29700",
        "receiver#0"
      ],
      "stack_out": [
        "receiver#0",
        "29700"
      ]
    },
    "2397": {
      "op": "pushbytes \"pieout:j{\\\"method\\\":\\\"del_box_game_register_for_other\\\",\\\"concern\\\":\\\"itxn.pay;mbr_box_c_refund\\\"}\"",
      "defined_out": [
        "\"pieout:j{\\\"method\\\":\\\"del_box_game_register_for_other\\\",\\\"concern\\\":\\\"itxn.pay;mbr_box_c_refund\\\"}\"",
        "29700",
        "receiver#0"
      ],
      "stack_out": [
        "receiver#0",
        "29700",
        "\"pieout:j{\\\"method\\\":\\\"del_box_game_register_for_other\\\",\\\"concern\\\":\\\"itxn.pay;mbr_box_c_refund\\\"}\""
      ]
    },
    "2489": {
      "callsub": "smart_contracts.pieout.subroutines.payout_itxn",
      "op": "callsub payout_itxn",
      "stack_out": []
    },
    "2492": {
      "retsub": true,
      "op": "retsub"
    },
    "2493": {
      "subroutine": "smart_contracts.pieout.contract.Pieout.new_game",
      "params": {
        "max_players#0": "uint64",
        "box_s_pay#0": "uint64",
        "box_p_pay#0": "uint64",
        "stake_pay#0": "uint64"
      },
      "block": "new_game",
      "stack_in": [],
      "op": "proto 4 0"
    },
    "2496": {
      "op": "global GroupSize",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2498": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "4"
      ]
    },
    "2500": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2501": {
      "error": "Invalid group size. Ensure number of transaction in group is within valid bounds.",
      "op": "assert // Invalid group size. Ensure number of transaction in group is within valid bounds.",
      "stack_out": []
    },
    "2502": {
      "op": "bytec_2 // \"t_\"",
      "defined_out": [
        "\"t_\""
      ],
      "stack_out": [
        "\"t_\""
      ]
    },
    "2503": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "_%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2504": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%0#0"
      ]
    },
    "2506": {
      "error": "Box not found. Ensure the box you are trying to access was created and still exists.",
      "op": "assert // Box not found. Ensure the box you are trying to access was created and still exists.",
      "stack_out": []
    },
    "2507": {
      "op": "bytec_0 // \"r_\"",
      "defined_out": [
        "\"r_\""
      ],
      "stack_out": [
        "\"r_\""
      ]
    },
    "2508": {
      "op": "txn Sender",
      "defined_out": [
        "\"r_\"",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "\"r_\"",
        "materialized_values%0#0"
      ]
    },
    "2510": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "2511": {
      "op": "box_len",
      "defined_out": [
        "_%1#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "_%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2512": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%1#0"
      ]
    },
    "2514": {
      "error": "Box not found. Ensure the box you are trying to access was created and still exists.",
      "op": "assert // Box not found. Ensure the box you are trying to access was created and still exists.",
      "stack_out": []
    },
    "2515": {
      "op": "bytec_0 // \"r_\"",
      "stack_out": [
        "\"r_\""
      ]
    },
    "2516": {
      "op": "txn Sender",
      "defined_out": [
        "\"r_\"",
        "materialized_values%1#0"
      ],
      "stack_out": [
        "\"r_\"",
        "materialized_values%1#0"
      ]
    },
    "2518": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0"
      ]
    },
    "2519": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%2#0"
      ]
    },
    "2520": {
      "error": "check self.box_game_register entry exists",
      "op": "assert // check self.box_game_register entry exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "2521": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "0"
      ]
    },
    "2522": {
      "op": "getbit",
      "defined_out": [
        "is_true%0#0"
      ],
      "stack_out": [
        "is_true%0#0"
      ]
    },
    "2523": {
      "op": "bytec_1 // 0x00",
      "defined_out": [
        "0x00",
        "is_true%0#0"
      ],
      "stack_out": [
        "is_true%0#0",
        "0x00"
      ]
    },
    "2524": {
      "op": "intc_1 // 0",
      "stack_out": [
        "is_true%0#0",
        "0x00",
        "0"
      ]
    },
    "2525": {
      "op": "uncover 2",
      "stack_out": [
        "0x00",
        "0",
        "is_true%0#0"
      ]
    },
    "2527": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%0#0"
      ],
      "stack_out": [
        "encoded_bool%0#0"
      ]
    },
    "2528": {
      "op": "intc_1 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "0"
      ]
    },
    "2529": {
      "op": "getbit",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "2530": {
      "op": "!",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "2531": {
      "error": "Game register hosting game boolean value mismatch.",
      "op": "assert // Game register hosting game boolean value mismatch.",
      "stack_out": []
    },
    "2532": {
      "op": "frame_dig -4",
      "defined_out": [
        "max_players#0 (copy)"
      ],
      "stack_out": [
        "max_players#0 (copy)"
      ]
    },
    "2534": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "max_players#0 (copy)"
      ],
      "stack_out": [
        "max_players#0 (copy)",
        "3"
      ]
    },
    "2536": {
      "op": ">=",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "2537": {
      "op": "bz new_game_bool_false@3",
      "stack_out": []
    },
    "2540": {
      "op": "frame_dig -4",
      "stack_out": [
        "max_players#0 (copy)"
      ]
    },
    "2542": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "max_players#0 (copy)"
      ],
      "stack_out": [
        "max_players#0 (copy)",
        "16"
      ]
    },
    "2544": {
      "op": "<=",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "2545": {
      "op": "bz new_game_bool_false@3",
      "stack_out": []
    },
    "2548": {
      "op": "intc_0 // 1",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0"
      ]
    },
    "2549": {
      "block": "new_game_bool_merge@4",
      "stack_in": [
        "and_result%0#0"
      ],
      "error": "The number of max players must be within bounds.",
      "op": "assert // The number of max players must be within bounds.",
      "defined_out": [],
      "stack_out": []
    },
    "2550": {
      "op": "frame_dig -1",
      "defined_out": [
        "stake_pay#0 (copy)"
      ],
      "stack_out": [
        "stake_pay#0 (copy)"
      ]
    },
    "2552": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "2554": {
      "op": "dup",
      "defined_out": [
        "tmp%6#0",
        "tmp%6#0 (copy)"
      ],
      "stack_out": [
        "tmp%6#0",
        "tmp%6#0 (copy)"
      ]
    },
    "2555": {
      "op": "intc 4 // 11000",
      "defined_out": [
        "11000",
        "tmp%6#0",
        "tmp%6#0 (copy)"
      ],
      "stack_out": [
        "tmp%6#0",
        "tmp%6#0 (copy)",
        "11000"
      ]
    },
    "2557": {
      "op": "==",
      "defined_out": [
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "2558": {
      "error": "Insufficient funds. Stake pay amount is not enough to cover staking requirements.",
      "op": "assert // Insufficient funds. Stake pay amount is not enough to cover staking requirements.",
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "2559": {
      "op": "frame_dig -3",
      "defined_out": [
        "box_s_pay#0 (copy)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "box_s_pay#0 (copy)"
      ]
    },
    "2561": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%6#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "tmp%8#0"
      ]
    },
    "2563": {
      "op": "intc 10 // 80500",
      "defined_out": [
        "80500",
        "tmp%6#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "tmp%8#0",
        "80500"
      ]
    },
    "2565": {
      "op": "==",
      "defined_out": [
        "tmp%6#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "tmp%9#0"
      ]
    },
    "2566": {
      "error": "Insufficient funds. Box pay amount is not enough to cover application MBR.",
      "op": "assert // Insufficient funds. Box pay amount is not enough to cover application MBR.",
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "2567": {
      "op": "frame_dig -2",
      "defined_out": [
        "box_p_pay#0 (copy)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "box_p_pay#0 (copy)"
      ]
    },
    "2569": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%10#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "tmp%10#0"
      ]
    },
    "2571": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "tmp%10#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "tmp%10#0",
        "32"
      ]
    },
    "2572": {
      "op": "frame_dig -4",
      "defined_out": [
        "32",
        "max_players#0 (copy)",
        "tmp%10#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "tmp%10#0",
        "32",
        "max_players#0 (copy)"
      ]
    },
    "2574": {
      "op": "*",
      "defined_out": [
        "tmp%10#0",
        "tmp%6#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "tmp%10#0",
        "to_encode%0#0"
      ]
    },
    "2575": {
      "op": "dup",
      "defined_out": [
        "tmp%10#0",
        "tmp%6#0",
        "to_encode%0#0",
        "to_encode%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%6#0",
        "tmp%10#0",
        "to_encode%0#0",
        "to_encode%0#0 (copy)"
      ]
    },
    "2576": {
      "op": "itob",
      "defined_out": [
        "tmp%10#0",
        "tmp%6#0",
        "to_encode%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "tmp%10#0",
        "to_encode%0#0",
        "val_as_bytes%0#0"
      ]
    },
    "2577": {
      "op": "dup",
      "defined_out": [
        "tmp%10#0",
        "tmp%6#0",
        "to_encode%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%6#0",
        "tmp%10#0",
        "to_encode%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%0#0 (copy)"
      ]
    },
    "2578": {
      "op": "bitlen",
      "defined_out": [
        "bitlen%0#0",
        "tmp%10#0",
        "tmp%6#0",
        "to_encode%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "tmp%10#0",
        "to_encode%0#0",
        "val_as_bytes%0#0",
        "bitlen%0#0"
      ]
    },
    "2579": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "bitlen%0#0",
        "tmp%10#0",
        "tmp%6#0",
        "to_encode%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "tmp%10#0",
        "to_encode%0#0",
        "val_as_bytes%0#0",
        "bitlen%0#0",
        "16"
      ]
    },
    "2581": {
      "op": "<=",
      "defined_out": [
        "no_overflow%0#0",
        "tmp%10#0",
        "tmp%6#0",
        "to_encode%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "tmp%10#0",
        "to_encode%0#0",
        "val_as_bytes%0#0",
        "no_overflow%0#0"
      ]
    },
    "2582": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "tmp%6#0",
        "tmp%10#0",
        "to_encode%0#0",
        "val_as_bytes%0#0"
      ]
    },
    "2583": {
      "op": "extract 6 2",
      "defined_out": [
        "tmp%10#0",
        "tmp%6#0",
        "to_encode%0#0",
        "uint16%0#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "tmp%10#0",
        "to_encode%0#0",
        "uint16%0#0"
      ]
    },
    "2586": {
      "op": "pushbytes 0x0a",
      "defined_out": [
        "0x0a",
        "tmp%10#0",
        "tmp%6#0",
        "to_encode%0#0",
        "uint16%0#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "tmp%10#0",
        "to_encode%0#0",
        "uint16%0#0",
        "0x0a"
      ]
    },
    "2589": {
      "op": "swap",
      "stack_out": [
        "tmp%6#0",
        "tmp%10#0",
        "to_encode%0#0",
        "0x0a",
        "uint16%0#0"
      ]
    },
    "2590": {
      "callsub": "smart_contracts.pieout.contract.Pieout.calc_single_box_cost",
      "op": "callsub calc_single_box_cost",
      "defined_out": [
        "tmp%10#0",
        "tmp%11#0",
        "tmp%6#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "tmp%10#0",
        "to_encode%0#0",
        "tmp%11#0"
      ]
    },
    "2593": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%6#0",
        "to_encode%0#0",
        "tmp%11#0",
        "tmp%10#0"
      ]
    },
    "2595": {
      "op": "==",
      "defined_out": [
        "tmp%12#0",
        "tmp%6#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "to_encode%0#0",
        "tmp%12#0"
      ]
    },
    "2596": {
      "error": "Insufficient funds. Box pay amount is not enough to cover application MBR.",
      "op": "assert // Insufficient funds. Box pay amount is not enough to cover application MBR.",
      "stack_out": [
        "tmp%6#0",
        "to_encode%0#0"
      ]
    },
    "2597": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%6#0",
        "to_encode%0#0",
        "stake_pay#0 (copy)"
      ]
    },
    "2599": {
      "op": "gtxns Sender",
      "defined_out": [
        "tmp%13#0",
        "tmp%6#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "to_encode%0#0",
        "tmp%13#0"
      ]
    },
    "2601": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%13#0",
        "tmp%14#0",
        "tmp%6#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "to_encode%0#0",
        "tmp%13#0",
        "tmp%14#0"
      ]
    },
    "2603": {
      "op": "==",
      "defined_out": [
        "tmp%15#0",
        "tmp%6#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "to_encode%0#0",
        "tmp%15#0"
      ]
    },
    "2604": {
      "error": "Stake payment sender address must match transaction sender address.",
      "op": "assert // Stake payment sender address must match transaction sender address.",
      "stack_out": [
        "tmp%6#0",
        "to_encode%0#0"
      ]
    },
    "2605": {
      "op": "frame_dig -3",
      "stack_out": [
        "tmp%6#0",
        "to_encode%0#0",
        "box_s_pay#0 (copy)"
      ]
    },
    "2607": {
      "op": "gtxns Sender",
      "defined_out": [
        "tmp%16#0",
        "tmp%6#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "to_encode%0#0",
        "tmp%16#0"
      ]
    },
    "2609": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%16#0",
        "tmp%17#0",
        "tmp%6#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "to_encode%0#0",
        "tmp%16#0",
        "tmp%17#0"
      ]
    },
    "2611": {
      "op": "==",
      "defined_out": [
        "tmp%18#0",
        "tmp%6#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "to_encode%0#0",
        "tmp%18#0"
      ]
    },
    "2612": {
      "error": "Box payment sender address must match transaction sender address.",
      "op": "assert // Box payment sender address must match transaction sender address.",
      "stack_out": [
        "tmp%6#0",
        "to_encode%0#0"
      ]
    },
    "2613": {
      "op": "frame_dig -2",
      "stack_out": [
        "tmp%6#0",
        "to_encode%0#0",
        "box_p_pay#0 (copy)"
      ]
    },
    "2615": {
      "op": "gtxns Sender",
      "defined_out": [
        "tmp%19#0",
        "tmp%6#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "to_encode%0#0",
        "tmp%19#0"
      ]
    },
    "2617": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%19#0",
        "tmp%20#0",
        "tmp%6#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "to_encode%0#0",
        "tmp%19#0",
        "tmp%20#0"
      ]
    },
    "2619": {
      "op": "==",
      "defined_out": [
        "tmp%21#0",
        "tmp%6#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "to_encode%0#0",
        "tmp%21#0"
      ]
    },
    "2620": {
      "error": "Box payment sender address must match transaction sender address.",
      "op": "assert // Box payment sender address must match transaction sender address.",
      "stack_out": [
        "tmp%6#0",
        "to_encode%0#0"
      ]
    },
    "2621": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%6#0",
        "to_encode%0#0",
        "stake_pay#0 (copy)"
      ]
    },
    "2623": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%22#0",
        "tmp%6#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "to_encode%0#0",
        "tmp%22#0"
      ]
    },
    "2625": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%22#0",
        "tmp%23#0",
        "tmp%6#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "to_encode%0#0",
        "tmp%22#0",
        "tmp%23#0"
      ]
    },
    "2627": {
      "op": "==",
      "defined_out": [
        "tmp%24#0",
        "tmp%6#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "to_encode%0#0",
        "tmp%24#0"
      ]
    },
    "2628": {
      "error": "Stake payment receiver address must match application address.",
      "op": "assert // Stake payment receiver address must match application address.",
      "stack_out": [
        "tmp%6#0",
        "to_encode%0#0"
      ]
    },
    "2629": {
      "op": "frame_dig -3",
      "stack_out": [
        "tmp%6#0",
        "to_encode%0#0",
        "box_s_pay#0 (copy)"
      ]
    },
    "2631": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%25#0",
        "tmp%6#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "to_encode%0#0",
        "tmp%25#0"
      ]
    },
    "2633": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%25#0",
        "tmp%26#0",
        "tmp%6#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "to_encode%0#0",
        "tmp%25#0",
        "tmp%26#0"
      ]
    },
    "2635": {
      "op": "==",
      "defined_out": [
        "tmp%27#0",
        "tmp%6#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "to_encode%0#0",
        "tmp%27#0"
      ]
    },
    "2636": {
      "error": "Box payment receiver address must match application address.",
      "op": "assert // Box payment receiver address must match application address.",
      "stack_out": [
        "tmp%6#0",
        "to_encode%0#0"
      ]
    },
    "2637": {
      "op": "frame_dig -2",
      "stack_out": [
        "tmp%6#0",
        "to_encode%0#0",
        "box_p_pay#0 (copy)"
      ]
    },
    "2639": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%28#0",
        "tmp%6#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "to_encode%0#0",
        "tmp%28#0"
      ]
    },
    "2641": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%28#0",
        "tmp%29#0",
        "tmp%6#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "to_encode%0#0",
        "tmp%28#0",
        "tmp%29#0"
      ]
    },
    "2643": {
      "op": "==",
      "defined_out": [
        "tmp%30#0",
        "tmp%6#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "to_encode%0#0",
        "tmp%30#0"
      ]
    },
    "2644": {
      "error": "Box payment receiver address must match application address.",
      "op": "assert // Box payment receiver address must match application address.",
      "stack_out": [
        "tmp%6#0",
        "to_encode%0#0"
      ]
    },
    "2645": {
      "op": "frame_dig -4",
      "stack_out": [
        "tmp%6#0",
        "to_encode%0#0",
        "max_players#0 (copy)"
      ]
    },
    "2647": {
      "op": "itob",
      "defined_out": [
        "tmp%6#0",
        "to_encode%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "to_encode%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "2648": {
      "op": "dup",
      "defined_out": [
        "tmp%6#0",
        "to_encode%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%1#0 (copy)"
      ],
      "stack_out": [
        "tmp%6#0",
        "to_encode%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%1#0 (copy)"
      ]
    },
    "2649": {
      "op": "bitlen",
      "defined_out": [
        "bitlen%1#0",
        "tmp%6#0",
        "to_encode%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "to_encode%0#0",
        "val_as_bytes%1#0",
        "bitlen%1#0"
      ]
    },
    "2650": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "bitlen%1#0",
        "tmp%6#0",
        "to_encode%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "to_encode%0#0",
        "val_as_bytes%1#0",
        "bitlen%1#0",
        "8"
      ]
    },
    "2652": {
      "op": "<=",
      "defined_out": [
        "no_overflow%1#0",
        "tmp%6#0",
        "to_encode%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "to_encode%0#0",
        "val_as_bytes%1#0",
        "no_overflow%1#0"
      ]
    },
    "2653": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "tmp%6#0",
        "to_encode%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "2654": {
      "op": "extract 7 1",
      "defined_out": [
        "tmp%6#0",
        "to_encode%0#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "to_encode%0#0",
        "uint8%0#0"
      ]
    },
    "2657": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "tmp%31#0",
        "tmp%6#0",
        "to_encode%0#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "to_encode%0#0",
        "uint8%0#0",
        "tmp%31#0"
      ]
    },
    "2659": {
      "op": "intc 5 // 300",
      "defined_out": [
        "300",
        "tmp%31#0",
        "tmp%6#0",
        "to_encode%0#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "to_encode%0#0",
        "uint8%0#0",
        "tmp%31#0",
        "300"
      ]
    },
    "2661": {
      "op": "+",
      "defined_out": [
        "tmp%6#0",
        "to_encode%0#0",
        "to_encode%1#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "to_encode%0#0",
        "uint8%0#0",
        "to_encode%1#0"
      ]
    },
    "2662": {
      "op": "itob",
      "defined_out": [
        "tmp%6#0",
        "to_encode%0#0",
        "uint8%0#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "to_encode%0#0",
        "uint8%0#0",
        "val_as_bytes%2#0"
      ]
    },
    "2663": {
      "op": "uncover 3",
      "stack_out": [
        "to_encode%0#0",
        "uint8%0#0",
        "val_as_bytes%2#0",
        "tmp%6#0"
      ]
    },
    "2665": {
      "op": "itob",
      "defined_out": [
        "to_encode%0#0",
        "uint8%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "uint8%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ]
    },
    "2666": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%32#0",
        "to_encode%0#0",
        "uint8%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "uint8%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "tmp%32#0"
      ]
    },
    "2668": {
      "op": "global ZeroAddress",
      "defined_out": [
        "tmp%32#0",
        "tmp%33#0",
        "to_encode%0#0",
        "uint8%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "uint8%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "tmp%32#0",
        "tmp%33#0"
      ]
    },
    "2670": {
      "op": "dupn 3",
      "defined_out": [
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "to_encode%0#0",
        "uint8%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "uint8%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0"
      ]
    },
    "2672": {
      "op": "bytec_1 // 0x00",
      "defined_out": [
        "0x00",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "to_encode%0#0",
        "uint8%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "uint8%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "0x00"
      ]
    },
    "2673": {
      "op": "uncover 8",
      "stack_out": [
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "0x00",
        "uint8%0#0"
      ]
    },
    "2675": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "2676": {
      "op": "bytec 7 // 0x01",
      "defined_out": [
        "0x01",
        "encoded_tuple_buffer%2#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "encoded_tuple_buffer%2#0",
        "0x01"
      ]
    },
    "2678": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "2679": {
      "op": "bytec_1 // 0x00",
      "stack_out": [
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "encoded_tuple_buffer%3#0",
        "0x00"
      ]
    },
    "2680": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%4#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "2681": {
      "op": "bytec_1 // 0x00",
      "stack_out": [
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "encoded_tuple_buffer%4#0",
        "0x00"
      ]
    },
    "2682": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%5#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "2683": {
      "op": "bytec_1 // 0x00",
      "stack_out": [
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "encoded_tuple_buffer%5#0",
        "0x00"
      ]
    },
    "2684": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%6#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "2685": {
      "op": "bytec_1 // 0x00",
      "stack_out": [
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "encoded_tuple_buffer%6#0",
        "0x00"
      ]
    },
    "2686": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%7#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "encoded_tuple_buffer%7#0"
      ]
    },
    "2687": {
      "op": "bytec 10 // 0x0020",
      "defined_out": [
        "0x0020",
        "encoded_tuple_buffer%7#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "encoded_tuple_buffer%7#0",
        "0x0020"
      ]
    },
    "2689": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%8#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "encoded_tuple_buffer%8#0"
      ]
    },
    "2690": {
      "op": "uncover 7",
      "stack_out": [
        "to_encode%0#0",
        "val_as_bytes%3#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "encoded_tuple_buffer%8#0",
        "val_as_bytes%2#0"
      ]
    },
    "2692": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%9#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "to_encode%0#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "val_as_bytes%3#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "encoded_tuple_buffer%9#0"
      ]
    },
    "2693": {
      "op": "uncover 6",
      "stack_out": [
        "to_encode%0#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "encoded_tuple_buffer%9#0",
        "val_as_bytes%3#0"
      ]
    },
    "2695": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%10#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "encoded_tuple_buffer%10#0"
      ]
    },
    "2696": {
      "op": "uncover 5",
      "stack_out": [
        "to_encode%0#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "encoded_tuple_buffer%10#0",
        "tmp%32#0"
      ]
    },
    "2698": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%11#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "encoded_tuple_buffer%11#0"
      ]
    },
    "2699": {
      "op": "uncover 4",
      "stack_out": [
        "to_encode%0#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "encoded_tuple_buffer%11#0",
        "tmp%33#0"
      ]
    },
    "2701": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%12#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "encoded_tuple_buffer%12#0"
      ]
    },
    "2702": {
      "op": "uncover 3",
      "stack_out": [
        "to_encode%0#0",
        "tmp%35#0",
        "tmp%36#0",
        "encoded_tuple_buffer%12#0",
        "tmp%34#0"
      ]
    },
    "2704": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%13#0",
        "tmp%35#0",
        "tmp%36#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "tmp%35#0",
        "tmp%36#0",
        "encoded_tuple_buffer%13#0"
      ]
    },
    "2705": {
      "op": "uncover 2",
      "stack_out": [
        "to_encode%0#0",
        "tmp%36#0",
        "encoded_tuple_buffer%13#0",
        "tmp%35#0"
      ]
    },
    "2707": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%14#0",
        "tmp%36#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "tmp%36#0",
        "encoded_tuple_buffer%14#0"
      ]
    },
    "2708": {
      "op": "swap",
      "stack_out": [
        "to_encode%0#0",
        "encoded_tuple_buffer%14#0",
        "tmp%36#0"
      ]
    },
    "2709": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%15#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "encoded_tuple_buffer%15#0"
      ]
    },
    "2710": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "encoded_tuple_buffer%15#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "encoded_tuple_buffer%15#0",
        "0"
      ]
    },
    "2711": {
      "op": "bytec 9 // \"game_id\"",
      "defined_out": [
        "\"game_id\"",
        "0",
        "encoded_tuple_buffer%15#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "encoded_tuple_buffer%15#0",
        "0",
        "\"game_id\""
      ]
    },
    "2713": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_tuple_buffer%15#0",
        "maybe_exists%3#0",
        "maybe_value%1#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "encoded_tuple_buffer%15#0",
        "maybe_value%1#0",
        "maybe_exists%3#0"
      ]
    },
    "2714": {
      "error": "check self.game_id exists",
      "op": "assert // check self.game_id exists",
      "stack_out": [
        "to_encode%0#0",
        "encoded_tuple_buffer%15#0",
        "maybe_value%1#0"
      ]
    },
    "2715": {
      "op": "dup",
      "defined_out": [
        "encoded_tuple_buffer%15#0",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "encoded_tuple_buffer%15#0",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)"
      ]
    },
    "2716": {
      "op": "itob",
      "defined_out": [
        "encoded_tuple_buffer%15#0",
        "encoded_value%0#0",
        "maybe_value%1#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "encoded_tuple_buffer%15#0",
        "maybe_value%1#0",
        "encoded_value%0#0"
      ]
    },
    "2717": {
      "op": "bytec 4 // \"s_\"",
      "defined_out": [
        "\"s_\"",
        "encoded_tuple_buffer%15#0",
        "encoded_value%0#0",
        "maybe_value%1#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "encoded_tuple_buffer%15#0",
        "maybe_value%1#0",
        "encoded_value%0#0",
        "\"s_\""
      ]
    },
    "2719": {
      "op": "dig 1",
      "defined_out": [
        "\"s_\"",
        "encoded_tuple_buffer%15#0",
        "encoded_value%0#0",
        "encoded_value%0#0 (copy)",
        "maybe_value%1#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "encoded_tuple_buffer%15#0",
        "maybe_value%1#0",
        "encoded_value%0#0",
        "\"s_\"",
        "encoded_value%0#0 (copy)"
      ]
    },
    "2721": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%2#0",
        "encoded_tuple_buffer%15#0",
        "encoded_value%0#0",
        "maybe_value%1#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "encoded_tuple_buffer%15#0",
        "maybe_value%1#0",
        "encoded_value%0#0",
        "box_prefixed_key%2#0"
      ]
    },
    "2722": {
      "op": "uncover 3",
      "stack_out": [
        "to_encode%0#0",
        "maybe_value%1#0",
        "encoded_value%0#0",
        "box_prefixed_key%2#0",
        "encoded_tuple_buffer%15#0"
      ]
    },
    "2724": {
      "op": "box_put",
      "stack_out": [
        "to_encode%0#0",
        "maybe_value%1#0",
        "encoded_value%0#0"
      ]
    },
    "2725": {
      "op": "bytec_0 // \"r_\"",
      "defined_out": [
        "\"r_\"",
        "encoded_value%0#0",
        "maybe_value%1#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "maybe_value%1#0",
        "encoded_value%0#0",
        "\"r_\""
      ]
    },
    "2726": {
      "op": "txn Sender",
      "defined_out": [
        "\"r_\"",
        "encoded_value%0#0",
        "materialized_values%2#0",
        "maybe_value%1#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "maybe_value%1#0",
        "encoded_value%0#0",
        "\"r_\"",
        "materialized_values%2#0"
      ]
    },
    "2728": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%3#0",
        "encoded_value%0#0",
        "maybe_value%1#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "maybe_value%1#0",
        "encoded_value%0#0",
        "box_prefixed_key%3#0"
      ]
    },
    "2729": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%3#0",
        "box_prefixed_key%3#0 (copy)",
        "encoded_value%0#0",
        "maybe_value%1#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "maybe_value%1#0",
        "encoded_value%0#0",
        "box_prefixed_key%3#0",
        "box_prefixed_key%3#0 (copy)"
      ]
    },
    "2730": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%3#0",
        "encoded_value%0#0",
        "maybe_exists%4#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "maybe_value%1#0",
        "encoded_value%0#0",
        "box_prefixed_key%3#0",
        "maybe_value%2#0",
        "maybe_exists%4#0"
      ]
    },
    "2731": {
      "error": "check self.box_game_register entry exists",
      "op": "assert // check self.box_game_register entry exists",
      "stack_out": [
        "to_encode%0#0",
        "maybe_value%1#0",
        "encoded_value%0#0",
        "box_prefixed_key%3#0",
        "maybe_value%2#0"
      ]
    },
    "2732": {
      "op": "intc_1 // 0",
      "stack_out": [
        "to_encode%0#0",
        "maybe_value%1#0",
        "encoded_value%0#0",
        "box_prefixed_key%3#0",
        "maybe_value%2#0",
        "0"
      ]
    },
    "2733": {
      "op": "intc_0 // 1",
      "defined_out": [
        "0",
        "1",
        "box_prefixed_key%3#0",
        "encoded_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "maybe_value%1#0",
        "encoded_value%0#0",
        "box_prefixed_key%3#0",
        "maybe_value%2#0",
        "0",
        "1"
      ]
    },
    "2734": {
      "op": "setbit",
      "defined_out": [
        "box_prefixed_key%3#0",
        "encoded_value%0#0",
        "maybe_value%1#0",
        "to_encode%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "maybe_value%1#0",
        "encoded_value%0#0",
        "box_prefixed_key%3#0",
        "updated_data%0#0"
      ]
    },
    "2735": {
      "op": "box_put",
      "stack_out": [
        "to_encode%0#0",
        "maybe_value%1#0",
        "encoded_value%0#0"
      ]
    },
    "2736": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%1#0",
        "encoded_value%0#0",
        "to_encode%0#0"
      ]
    },
    "2738": {
      "op": "bzero",
      "defined_out": [
        "encoded_value%0#0",
        "materialized_values%3#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "encoded_value%0#0",
        "materialized_values%3#0"
      ]
    },
    "2739": {
      "op": "bytec_3 // \"p_\"",
      "defined_out": [
        "\"p_\"",
        "encoded_value%0#0",
        "materialized_values%3#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "encoded_value%0#0",
        "materialized_values%3#0",
        "\"p_\""
      ]
    },
    "2740": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%1#0",
        "materialized_values%3#0",
        "\"p_\"",
        "encoded_value%0#0"
      ]
    },
    "2742": {
      "op": "concat",
      "defined_out": [
        "game_players_bref#0",
        "materialized_values%3#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "materialized_values%3#0",
        "game_players_bref#0"
      ]
    },
    "2743": {
      "op": "dup",
      "defined_out": [
        "game_players_bref#0",
        "game_players_bref#0 (copy)",
        "materialized_values%3#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "materialized_values%3#0",
        "game_players_bref#0",
        "game_players_bref#0 (copy)"
      ]
    },
    "2744": {
      "op": "box_del",
      "defined_out": [
        "game_players_bref#0",
        "materialized_values%3#0",
        "maybe_value%1#0",
        "{box_del}"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "materialized_values%3#0",
        "game_players_bref#0",
        "{box_del}"
      ]
    },
    "2745": {
      "op": "pop",
      "stack_out": [
        "maybe_value%1#0",
        "materialized_values%3#0",
        "game_players_bref#0"
      ]
    },
    "2746": {
      "op": "dup",
      "stack_out": [
        "maybe_value%1#0",
        "materialized_values%3#0",
        "game_players_bref#0",
        "game_players_bref#0 (copy)"
      ]
    },
    "2747": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%1#0",
        "game_players_bref#0",
        "game_players_bref#0 (copy)",
        "materialized_values%3#0"
      ]
    },
    "2749": {
      "op": "box_put",
      "stack_out": [
        "maybe_value%1#0",
        "game_players_bref#0"
      ]
    },
    "2750": {
      "op": "intc_1 // 0"
    },
    "2751": {
      "op": "txn Sender",
      "defined_out": [
        "0",
        "game_players_bref#0",
        "maybe_value%1#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "game_players_bref#0",
        "0",
        "tmp%39#0"
      ]
    },
    "2753": {
      "op": "box_replace",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "2754": {
      "op": "intc_0 // 1",
      "stack_out": [
        "maybe_value%1#0",
        "1"
      ]
    },
    "2755": {
      "op": "+",
      "defined_out": [
        "materialized_values%4#0"
      ],
      "stack_out": [
        "materialized_values%4#0"
      ]
    },
    "2756": {
      "op": "bytec 9 // \"game_id\"",
      "stack_out": [
        "materialized_values%4#0",
        "\"game_id\""
      ]
    },
    "2758": {
      "op": "swap",
      "stack_out": [
        "\"game_id\"",
        "materialized_values%4#0"
      ]
    },
    "2759": {
      "op": "app_global_put",
      "stack_out": []
    },
    "2760": {
      "retsub": true,
      "op": "retsub"
    },
    "2761": {
      "block": "new_game_bool_false@3",
      "stack_in": [],
      "op": "intc_1 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0"
      ]
    },
    "2762": {
      "op": "b new_game_bool_merge@4"
    },
    "2765": {
      "subroutine": "smart_contracts.pieout.contract.Pieout.join_game",
      "params": {
        "game_id#0": "uint64",
        "stake_pay#0": "uint64"
      },
      "block": "join_game",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "2768": {
      "op": "global GroupSize",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2770": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "2"
      ]
    },
    "2771": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2772": {
      "error": "Invalid group size. Ensure number of transaction in group is within valid bounds.",
      "op": "assert // Invalid group size. Ensure number of transaction in group is within valid bounds.",
      "stack_out": []
    },
    "2773": {
      "op": "frame_dig -2",
      "defined_out": [
        "game_id#0 (copy)"
      ],
      "stack_out": [
        "game_id#0 (copy)"
      ]
    },
    "2775": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "2776": {
      "op": "bytec 4 // \"s_\"",
      "defined_out": [
        "\"s_\"",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "\"s_\""
      ]
    },
    "2778": {
      "op": "dig 1",
      "defined_out": [
        "\"s_\"",
        "encoded_value%0#0",
        "encoded_value%0#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "\"s_\"",
        "encoded_value%0#0 (copy)"
      ]
    },
    "2780": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "2781": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "2782": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "_%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2783": {
      "op": "bury 1",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2785": {
      "error": "Box game state not found. Check if game ID exists.",
      "op": "assert // Box game state not found. Check if game ID exists.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "2786": {
      "op": "dup",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "2787": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "maybe_exists%1#0"
      ]
    },
    "2788": {
      "error": "check self.box_game_state entry exists",
      "op": "assert // check self.box_game_state entry exists",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "2789": {
      "op": "bytec_2 // \"t_\"",
      "defined_out": [
        "\"t_\"",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "\"t_\""
      ]
    },
    "2790": {
      "op": "box_len",
      "defined_out": [
        "_%1#0",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "maybe_exists%2#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "_%1#0",
        "maybe_exists%2#0"
      ]
    },
    "2791": {
      "op": "bury 1",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "maybe_exists%2#0"
      ]
    },
    "2793": {
      "error": "Box not found. Ensure the box you are trying to access was created and still exists.",
      "op": "assert // Box not found. Ensure the box you are trying to access was created and still exists.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "2794": {
      "op": "bytec_0 // \"r_\"",
      "defined_out": [
        "\"r_\"",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "\"r_\""
      ]
    },
    "2795": {
      "op": "txn Sender",
      "defined_out": [
        "\"r_\"",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "\"r_\"",
        "materialized_values%0#0"
      ]
    },
    "2797": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%2#0",
        "encoded_value%0#0",
        "game_state#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "box_prefixed_key%2#0"
      ]
    },
    "2798": {
      "op": "box_len",
      "defined_out": [
        "_%2#0",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "maybe_exists%3#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "_%2#0",
        "maybe_exists%3#0"
      ]
    },
    "2799": {
      "op": "bury 1",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "maybe_exists%3#0"
      ]
    },
    "2801": {
      "error": "Box not found. Ensure the box you are trying to access was created and still exists.",
      "op": "assert // Box not found. Ensure the box you are trying to access was created and still exists.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "2802": {
      "op": "frame_dig -1",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "stake_pay#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "stake_pay#0 (copy)"
      ]
    },
    "2804": {
      "op": "gtxns Amount",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0"
      ]
    },
    "2806": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ]
    },
    "2807": {
      "op": "intc 4 // 11000",
      "defined_out": [
        "11000",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%2#0 (copy)",
        "11000"
      ]
    },
    "2809": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "2810": {
      "error": "Insufficient funds. Stake pay amount is not enough to cover staking requirements.",
      "op": "assert // Insufficient funds. Stake pay amount is not enough to cover staking requirements.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0"
      ]
    },
    "2811": {
      "op": "frame_dig -1",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "stake_pay#0 (copy)"
      ]
    },
    "2813": {
      "op": "gtxns Sender",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%4#0"
      ]
    },
    "2815": {
      "op": "txn Sender",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "2817": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%6#0"
      ]
    },
    "2818": {
      "error": "Stake payment sender address must match transaction sender address.",
      "op": "assert // Stake payment sender address must match transaction sender address.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0"
      ]
    },
    "2819": {
      "op": "frame_dig -1",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "stake_pay#0 (copy)"
      ]
    },
    "2821": {
      "op": "gtxns Receiver",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%7#0"
      ]
    },
    "2823": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "2825": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%9#0"
      ]
    },
    "2826": {
      "error": "Stake payment receiver address must match application address.",
      "op": "assert // Stake payment receiver address must match application address.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0"
      ]
    },
    "2827": {
      "op": "txn Sender",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%10#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%10#0"
      ]
    },
    "2829": {
      "op": "dig 2",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state#0 (copy)",
        "tmp%10#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%10#0",
        "game_state#0 (copy)"
      ]
    },
    "2831": {
      "op": "intc_2 // 2",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%10#0",
        "game_state#0 (copy)",
        "2"
      ]
    },
    "2832": {
      "op": "getbyte",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%10#0",
        "tmp%12#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%10#0",
        "tmp%12#0"
      ]
    },
    "2833": {
      "op": "frame_dig -2",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%10#0",
        "tmp%12#0",
        "game_id#0 (copy)"
      ]
    },
    "2835": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "game_id#0 (copy)",
        "tmp%10#0"
      ]
    },
    "2837": {
      "op": "bytec_3 // \"p_\"",
      "defined_out": [
        "\"p_\"",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_id#0 (copy)",
        "game_state#0",
        "tmp%10#0",
        "tmp%12#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "game_id#0 (copy)",
        "tmp%10#0",
        "\"p_\""
      ]
    },
    "2838": {
      "op": "dig 3",
      "defined_out": [
        "\"p_\"",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_id#0 (copy)",
        "game_state#0",
        "tmp%10#0",
        "tmp%12#0",
        "tmp%12#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "game_id#0 (copy)",
        "tmp%10#0",
        "\"p_\"",
        "tmp%12#0 (copy)"
      ]
    },
    "2840": {
      "op": "intc_1 // 0",
      "defined_out": [
        "\"p_\"",
        "0",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_id#0 (copy)",
        "game_state#0",
        "tmp%10#0",
        "tmp%12#0",
        "tmp%12#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "game_id#0 (copy)",
        "tmp%10#0",
        "\"p_\"",
        "tmp%12#0 (copy)",
        "0"
      ]
    },
    "2841": {
      "callsub": "smart_contracts.pieout.subroutines.check_acc_in_game",
      "op": "callsub check_acc_in_game",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "tmp%13#0"
      ]
    },
    "2844": {
      "op": "!",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "tmp%14#0"
      ]
    },
    "2845": {
      "error": "Player with this address must not be an active game participant in the game.",
      "op": "assert // Player with this address must not be an active game participant in the game.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0"
      ]
    },
    "2846": {
      "op": "dig 2",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "game_state#0 (copy)"
      ]
    },
    "2848": {
      "op": "intc_1 // 0",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "game_state#0 (copy)",
        "0"
      ]
    },
    "2849": {
      "op": "getbit",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "is_true%0#0",
        "tmp%12#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "is_true%0#0"
      ]
    },
    "2850": {
      "op": "bytec_1 // 0x00",
      "defined_out": [
        "0x00",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "is_true%0#0",
        "tmp%12#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "is_true%0#0",
        "0x00"
      ]
    },
    "2851": {
      "op": "intc_1 // 0",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "is_true%0#0",
        "0x00",
        "0"
      ]
    },
    "2852": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "0x00",
        "0",
        "is_true%0#0"
      ]
    },
    "2854": {
      "op": "setbit",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%12#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "encoded_bool%0#0"
      ]
    },
    "2855": {
      "op": "intc_1 // 0",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "encoded_bool%0#0",
        "0"
      ]
    },
    "2856": {
      "op": "getbit",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "tmp%15#0"
      ]
    },
    "2857": {
      "op": "!",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%12#0",
        "tmp%16#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "tmp%16#0"
      ]
    },
    "2858": {
      "error": "Game state staking finalized boolean value mismatch.",
      "op": "assert // Game state staking finalized boolean value mismatch.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0"
      ]
    },
    "2859": {
      "op": "dig 2",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "game_state#0 (copy)"
      ]
    },
    "2861": {
      "error": "Index access is out of bounds",
      "op": "extract 9 8 // on error: Index access is out of bounds",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "reinterpret_biguint%0#0",
        "tmp%12#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "2864": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "reinterpret_biguint%0#0",
        "tmp%12#0",
        "tmp%17#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "reinterpret_biguint%0#0",
        "tmp%17#0"
      ]
    },
    "2866": {
      "op": "itob",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "reinterpret_biguint%0#0",
        "tmp%12#0",
        "tmp%18#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "reinterpret_biguint%0#0",
        "tmp%18#0"
      ]
    },
    "2867": {
      "op": "b>=",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%12#0",
        "tmp%19#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "tmp%19#0"
      ]
    },
    "2868": {
      "error": "Invalid time frame. Call made outside the permitted block or timestamp range.",
      "op": "assert // Invalid time frame. Call made outside the permitted block or timestamp range.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0"
      ]
    },
    "2869": {
      "op": "dig 2",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "game_state#0 (copy)"
      ]
    },
    "2871": {
      "error": "Index access is out of bounds",
      "op": "extract 2 1 // on error: Index access is out of bounds",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "reinterpret_biguint%1#0",
        "tmp%12#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "reinterpret_biguint%1#0"
      ]
    },
    "2874": {
      "op": "dig 3",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "reinterpret_biguint%1#0",
        "game_state#0 (copy)"
      ]
    },
    "2876": {
      "error": "Index access is out of bounds",
      "op": "extract 1 1 // on error: Index access is out of bounds",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "reinterpret_biguint%1#0",
        "reinterpret_biguint%2#0",
        "tmp%12#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "reinterpret_biguint%1#0",
        "reinterpret_biguint%2#0"
      ]
    },
    "2879": {
      "op": "b<=",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%12#0",
        "tmp%2#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "tmp%20#0"
      ]
    },
    "2880": {
      "error": "Number of active players must not exceed number of max players.",
      "op": "assert // Number of active players must not exceed number of max players.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0"
      ]
    },
    "2881": {
      "op": "dig 2",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "game_state#0 (copy)"
      ]
    },
    "2883": {
      "op": "pushint 7 // 7",
      "defined_out": [
        "7",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state#0 (copy)",
        "tmp%12#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "game_state#0 (copy)",
        "7"
      ]
    },
    "2885": {
      "op": "extract_uint16",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%12#0",
        "tmp%2#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "tmp%22#0"
      ]
    },
    "2886": {
      "op": "dig 3",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "tmp%22#0",
        "game_state#0 (copy)"
      ]
    },
    "2888": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state#0 (copy)",
        "tmp%12#0",
        "tmp%2#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "tmp%22#0",
        "game_state#0 (copy)",
        "1"
      ]
    },
    "2889": {
      "op": "getbyte",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%12#0",
        "tmp%2#0",
        "tmp%22#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "tmp%22#0",
        "tmp%24#0"
      ]
    },
    "2890": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%12#0",
        "tmp%2#0",
        "tmp%22#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "tmp%22#0",
        "tmp%24#0",
        "32"
      ]
    },
    "2891": {
      "op": "*",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%12#0",
        "tmp%2#0",
        "tmp%22#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "tmp%22#0",
        "tmp%25#0"
      ]
    },
    "2892": {
      "op": "dig 1",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%12#0",
        "tmp%2#0",
        "tmp%22#0",
        "tmp%22#0 (copy)",
        "tmp%25#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "tmp%22#0",
        "tmp%25#0",
        "tmp%22#0 (copy)"
      ]
    },
    "2894": {
      "op": ">",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%12#0",
        "tmp%2#0",
        "tmp%22#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "tmp%22#0",
        "tmp%26#0"
      ]
    },
    "2895": {
      "error": "Players box start position index overflow. Can not store more addresses.",
      "op": "assert // Players box start position index overflow. Can not store more addresses.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "tmp%22#0"
      ]
    },
    "2896": {
      "op": "bytec_3 // \"p_\"",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "tmp%22#0",
        "\"p_\""
      ]
    },
    "2897": {
      "op": "uncover 6",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "tmp%22#0",
        "\"p_\"",
        "encoded_value%0#0"
      ]
    },
    "2899": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_players_bref#0",
        "game_state#0",
        "tmp%12#0",
        "tmp%2#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "tmp%22#0",
        "game_players_bref#0"
      ]
    },
    "2900": {
      "op": "txn Sender",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_players_bref#0",
        "game_state#0",
        "tmp%12#0",
        "tmp%2#0",
        "tmp%22#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "tmp%22#0",
        "game_players_bref#0",
        "tmp%30#0"
      ]
    },
    "2902": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "tmp%22#0",
        "tmp%30#0",
        "game_players_bref#0"
      ]
    },
    "2903": {
      "op": "cover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "game_players_bref#0",
        "tmp%22#0",
        "tmp%30#0"
      ]
    },
    "2905": {
      "op": "box_replace",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0"
      ]
    },
    "2906": {
      "op": "intc_0 // 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "1"
      ]
    },
    "2907": {
      "op": "+",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "to_encode%0#0"
      ]
    },
    "2908": {
      "op": "itob",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "val_as_bytes%0#0"
      ]
    },
    "2909": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%0#0 (copy)"
      ]
    },
    "2910": {
      "op": "bitlen",
      "defined_out": [
        "bitlen%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "val_as_bytes%0#0",
        "bitlen%0#0"
      ]
    },
    "2911": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "bitlen%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "val_as_bytes%0#0",
        "bitlen%0#0",
        "8"
      ]
    },
    "2913": {
      "op": "<=",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "no_overflow%0#0",
        "tmp%2#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "val_as_bytes%0#0",
        "no_overflow%0#0"
      ]
    },
    "2914": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "val_as_bytes%0#0"
      ]
    },
    "2915": {
      "op": "extract 7 1",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "uint8%0#0"
      ]
    },
    "2918": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%2#0",
        "uint8%0#0",
        "game_state#0"
      ]
    },
    "2920": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%2#0",
        "game_state#0",
        "uint8%0#0"
      ]
    },
    "2921": {
      "op": "replace2 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%2#0",
        "game_state#0"
      ]
    },
    "2923": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%2#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "2924": {
      "op": "pushint 7 // 7",
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%2#0",
        "game_state#0",
        "game_state#0 (copy)",
        "7"
      ]
    },
    "2926": {
      "op": "extract_uint16",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%34#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%2#0",
        "game_state#0",
        "tmp%34#0"
      ]
    },
    "2927": {
      "op": "intc_3 // 32",
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%2#0",
        "game_state#0",
        "tmp%34#0",
        "32"
      ]
    },
    "2928": {
      "op": "+",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%2#0",
        "game_state#0",
        "to_encode%1#0"
      ]
    },
    "2929": {
      "op": "itob",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%2#0",
        "game_state#0",
        "val_as_bytes%1#0"
      ]
    },
    "2930": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "val_as_bytes%1#0",
        "val_as_bytes%1#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%2#0",
        "game_state#0",
        "val_as_bytes%1#0",
        "val_as_bytes%1#0 (copy)"
      ]
    },
    "2931": {
      "op": "bitlen",
      "defined_out": [
        "bitlen%1#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%2#0",
        "game_state#0",
        "val_as_bytes%1#0",
        "bitlen%1#0"
      ]
    },
    "2932": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "bitlen%1#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%2#0",
        "game_state#0",
        "val_as_bytes%1#0",
        "bitlen%1#0",
        "16"
      ]
    },
    "2934": {
      "op": "<=",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "no_overflow%1#0",
        "tmp%2#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%2#0",
        "game_state#0",
        "val_as_bytes%1#0",
        "no_overflow%1#0"
      ]
    },
    "2935": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%2#0",
        "game_state#0",
        "val_as_bytes%1#0"
      ]
    },
    "2936": {
      "op": "extract 6 2",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "uint16%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%2#0",
        "game_state#0",
        "uint16%0#0"
      ]
    },
    "2939": {
      "op": "replace2 7",
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%2#0",
        "game_state#0"
      ]
    },
    "2941": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%2#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "2942": {
      "op": "pushint 17 // 17",
      "defined_out": [
        "17",
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_state#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%2#0",
        "game_state#0",
        "game_state#0 (copy)",
        "17"
      ]
    },
    "2944": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%2#0",
        "game_state#0",
        "tmp%36#0"
      ]
    },
    "2945": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%36#0",
        "tmp%2#0"
      ]
    },
    "2947": {
      "op": "+",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "to_encode%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "to_encode%2#0"
      ]
    },
    "2948": {
      "op": "itob",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "val_as_bytes%2#0"
      ]
    },
    "2949": {
      "op": "replace2 17",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "2951": {
      "op": "frame_dig -2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_id#0 (copy)"
      ]
    },
    "2953": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_id#0 (copy)",
        "game_state#0"
      ]
    },
    "2954": {
      "callsub": "smart_contracts.pieout.subroutines.is_game_live",
      "op": "callsub is_game_live",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "2957": {
      "op": "box_put",
      "stack_out": []
    },
    "2958": {
      "retsub": true,
      "op": "retsub"
    },
    "2959": {
      "subroutine": "smart_contracts.pieout.contract.Pieout.set_game_commit",
      "params": {
        "game_id#0": "uint64"
      },
      "block": "set_game_commit",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "2962": {
      "op": "global GroupSize",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2964": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "1"
      ]
    },
    "2965": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2966": {
      "error": "Invalid group size. This app call can only take standalone transactions.",
      "op": "assert // Invalid group size. This app call can only take standalone transactions.",
      "stack_out": []
    },
    "2967": {
      "op": "frame_dig -1",
      "defined_out": [
        "game_id#0 (copy)"
      ],
      "stack_out": [
        "game_id#0 (copy)"
      ]
    },
    "2969": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "2970": {
      "op": "bytec 4 // \"s_\"",
      "defined_out": [
        "\"s_\"",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "\"s_\""
      ]
    },
    "2972": {
      "op": "dig 1",
      "defined_out": [
        "\"s_\"",
        "encoded_value%0#0",
        "encoded_value%0#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "\"s_\"",
        "encoded_value%0#0 (copy)"
      ]
    },
    "2974": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "2975": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "2976": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "_%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2977": {
      "op": "bury 1",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2979": {
      "error": "Box game state not found. Check if game ID exists.",
      "op": "assert // Box game state not found. Check if game ID exists.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "2980": {
      "op": "bytec_0 // \"r_\"",
      "defined_out": [
        "\"r_\"",
        "box_prefixed_key%0#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "\"r_\""
      ]
    },
    "2981": {
      "op": "txn Sender",
      "defined_out": [
        "\"r_\"",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "\"r_\"",
        "materialized_values%0#0"
      ]
    },
    "2983": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%1#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%1#0"
      ]
    },
    "2984": {
      "op": "box_len",
      "defined_out": [
        "_%1#0",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "_%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2985": {
      "op": "bury 1",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "maybe_exists%1#0"
      ]
    },
    "2987": {
      "error": "Box not found. Ensure the box you are trying to access was created and still exists.",
      "op": "assert // Box not found. Ensure the box you are trying to access was created and still exists.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "2988": {
      "op": "box_get",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_exists%2#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_exists%2#0"
      ]
    },
    "2989": {
      "error": "check self.box_game_state entry exists",
      "op": "assert // check self.box_game_state entry exists",
      "stack_out": [
        "encoded_value%0#0",
        "maybe_value%0#0"
      ]
    },
    "2990": {
      "op": "dup",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "2991": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "0"
      ]
    },
    "2992": {
      "op": "getbit",
      "defined_out": [
        "encoded_value%0#0",
        "is_true%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "is_true%0#0"
      ]
    },
    "2993": {
      "op": "bytec_1 // 0x00",
      "defined_out": [
        "0x00",
        "encoded_value%0#0",
        "is_true%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "is_true%0#0",
        "0x00"
      ]
    },
    "2994": {
      "op": "intc_1 // 0",
      "stack_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "is_true%0#0",
        "0x00",
        "0"
      ]
    },
    "2995": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "0x00",
        "0",
        "is_true%0#0"
      ]
    },
    "2997": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "encoded_bool%0#0"
      ]
    },
    "2998": {
      "op": "intc_1 // 0",
      "stack_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "encoded_bool%0#0",
        "0"
      ]
    },
    "2999": {
      "op": "getbit",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "tmp%2#0"
      ]
    },
    "3000": {
      "op": "intc_0 // 1",
      "stack_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "tmp%2#0",
        "1"
      ]
    },
    "3001": {
      "op": "==",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "tmp%3#0"
      ]
    },
    "3002": {
      "error": "Game state staking finalized boolean value mismatch.",
      "op": "assert // Game state staking finalized boolean value mismatch.",
      "stack_out": [
        "encoded_value%0#0",
        "maybe_value%0#0"
      ]
    },
    "3003": {
      "op": "txn Sender",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "tmp%4#0"
      ]
    },
    "3005": {
      "op": "swap",
      "stack_out": [
        "encoded_value%0#0",
        "tmp%4#0",
        "maybe_value%0#0"
      ]
    },
    "3006": {
      "op": "intc_0 // 1",
      "stack_out": [
        "encoded_value%0#0",
        "tmp%4#0",
        "maybe_value%0#0",
        "1"
      ]
    },
    "3007": {
      "op": "getbyte",
      "defined_out": [
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%6#0"
      ]
    },
    "3008": {
      "op": "frame_dig -1",
      "stack_out": [
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%6#0",
        "game_id#0 (copy)"
      ]
    },
    "3010": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_value%0#0",
        "tmp%6#0",
        "game_id#0 (copy)",
        "tmp%4#0"
      ]
    },
    "3012": {
      "op": "bytec_3 // \"p_\"",
      "defined_out": [
        "\"p_\"",
        "encoded_value%0#0",
        "game_id#0 (copy)",
        "tmp%4#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "tmp%6#0",
        "game_id#0 (copy)",
        "tmp%4#0",
        "\"p_\""
      ]
    },
    "3013": {
      "op": "uncover 3",
      "stack_out": [
        "encoded_value%0#0",
        "game_id#0 (copy)",
        "tmp%4#0",
        "\"p_\"",
        "tmp%6#0"
      ]
    },
    "3015": {
      "op": "intc_1 // 0",
      "stack_out": [
        "encoded_value%0#0",
        "game_id#0 (copy)",
        "tmp%4#0",
        "\"p_\"",
        "tmp%6#0",
        "0"
      ]
    },
    "3016": {
      "callsub": "smart_contracts.pieout.subroutines.check_acc_in_game",
      "op": "callsub check_acc_in_game",
      "defined_out": [
        "encoded_value%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "tmp%7#0"
      ]
    },
    "3019": {
      "op": "intc_0 // 1",
      "stack_out": [
        "encoded_value%0#0",
        "tmp%7#0",
        "1"
      ]
    },
    "3020": {
      "op": "==",
      "defined_out": [
        "encoded_value%0#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "tmp%8#0"
      ]
    },
    "3021": {
      "error": "Account is not recognized as an active player for this game.",
      "op": "assert // Account is not recognized as an active player for this game.",
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "3022": {
      "op": "bytec_0 // \"r_\"",
      "stack_out": [
        "encoded_value%0#0",
        "\"r_\""
      ]
    },
    "3023": {
      "op": "txn Sender",
      "defined_out": [
        "\"r_\"",
        "encoded_value%0#0",
        "materialized_values%1#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "\"r_\"",
        "materialized_values%1#0"
      ]
    },
    "3025": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%4#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%4#0"
      ]
    },
    "3026": {
      "op": "box_get",
      "defined_out": [
        "encoded_value%0#0",
        "game_register#0",
        "maybe_exists%4#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "game_register#0",
        "maybe_exists%4#0"
      ]
    },
    "3027": {
      "error": "check self.box_game_register entry exists",
      "op": "assert // check self.box_game_register entry exists",
      "stack_out": [
        "encoded_value%0#0",
        "game_register#0"
      ]
    },
    "3028": {
      "op": "dup",
      "defined_out": [
        "encoded_value%0#0",
        "game_register#0",
        "game_register#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "game_register#0",
        "game_register#0 (copy)"
      ]
    },
    "3029": {
      "error": "Index access is out of bounds",
      "op": "extract 10 8 // on error: Index access is out of bounds",
      "defined_out": [
        "encoded_value%0#0",
        "game_register#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "game_register#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "3032": {
      "op": "bytec 6 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "encoded_value%0#0",
        "game_register#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "game_register#0",
        "reinterpret_biguint%0#0",
        "0x0000000000000000"
      ]
    },
    "3034": {
      "op": "b==",
      "defined_out": [
        "encoded_value%0#0",
        "game_register#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "game_register#0",
        "tmp%9#0"
      ]
    },
    "3035": {
      "error": "Commit Rand Round not empty. Value must be zero to obtain a valid one.",
      "op": "assert // Commit Rand Round not empty. Value must be zero to obtain a valid one.",
      "stack_out": [
        "encoded_value%0#0",
        "game_register#0"
      ]
    },
    "3036": {
      "op": "global Round",
      "defined_out": [
        "encoded_value%0#0",
        "game_register#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "game_register#0",
        "tmp%10#0"
      ]
    },
    "3038": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "encoded_value%0#0",
        "game_register#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "game_register#0",
        "tmp%10#0",
        "4"
      ]
    },
    "3040": {
      "op": "+",
      "defined_out": [
        "encoded_value%0#0",
        "game_register#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "game_register#0",
        "to_encode%0#0"
      ]
    },
    "3041": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0",
        "game_register#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "game_register#0",
        "val_as_bytes%0#0"
      ]
    },
    "3042": {
      "op": "replace2 10",
      "stack_out": [
        "encoded_value%0#0",
        "game_register#0"
      ]
    },
    "3044": {
      "op": "swap",
      "stack_out": [
        "game_register#0",
        "encoded_value%0#0"
      ]
    },
    "3045": {
      "op": "replace2 2",
      "stack_out": [
        "game_register#0"
      ]
    },
    "3047": {
      "op": "bytec_0 // \"r_\"",
      "stack_out": [
        "game_register#0",
        "\"r_\""
      ]
    },
    "3048": {
      "op": "txn Sender",
      "defined_out": [
        "\"r_\"",
        "game_register#0",
        "materialized_values%2#0"
      ],
      "stack_out": [
        "game_register#0",
        "\"r_\"",
        "materialized_values%2#0"
      ]
    },
    "3050": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%5#0",
        "game_register#0"
      ],
      "stack_out": [
        "game_register#0",
        "box_prefixed_key%5#0"
      ]
    },
    "3051": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%5#0",
        "game_register#0"
      ]
    },
    "3052": {
      "op": "box_put",
      "stack_out": []
    },
    "3053": {
      "retsub": true,
      "op": "retsub"
    },
    "3054": {
      "subroutine": "smart_contracts.pieout.contract.Pieout.up_ref_budget_for_play_game",
      "params": {
        "game_id#0": "uint64"
      },
      "block": "up_ref_budget_for_play_game",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "3057": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "3058": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_type%0#0"
      ],
      "stack_out": [
        "gtxn_type%0#0"
      ]
    },
    "3060": {
      "op": "pushint 6 // appl",
      "defined_out": [
        "appl",
        "gtxn_type%0#0"
      ],
      "stack_out": [
        "gtxn_type%0#0",
        "appl"
      ]
    },
    "3062": {
      "op": "==",
      "defined_out": [
        "gtxn_type_matches%0#0"
      ],
      "stack_out": [
        "gtxn_type_matches%0#0"
      ]
    },
    "3063": {
      "error": "transaction type is appl",
      "op": "assert // transaction type is appl",
      "stack_out": []
    },
    "3064": {
      "op": "global GroupSize",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3066": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "2"
      ]
    },
    "3067": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "3068": {
      "error": "Invalid group size. Ensure number of transaction in group is within valid bounds.",
      "op": "assert // Invalid group size. Ensure number of transaction in group is within valid bounds.",
      "stack_out": []
    },
    "3069": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "3071": {
      "op": "!",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "3072": {
      "error": "Invalid group index. Ensure transaction group index matches the expected value. ",
      "op": "assert // Invalid group index. Ensure transaction group index matches the expected value. ",
      "stack_out": []
    },
    "3073": {
      "op": "frame_dig -1",
      "defined_out": [
        "game_id#0 (copy)"
      ],
      "stack_out": [
        "game_id#0 (copy)"
      ]
    },
    "3075": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "3076": {
      "op": "bytec 4 // \"s_\"",
      "defined_out": [
        "\"s_\"",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "\"s_\""
      ]
    },
    "3078": {
      "op": "dig 1",
      "defined_out": [
        "\"s_\"",
        "encoded_value%0#0",
        "encoded_value%0#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "\"s_\"",
        "encoded_value%0#0 (copy)"
      ]
    },
    "3080": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "3081": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "encoded_value%0#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "_%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3082": {
      "op": "bury 1",
      "stack_out": [
        "encoded_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3084": {
      "error": "Box game state not found. Check if game ID exists.",
      "op": "assert // Box game state not found. Check if game ID exists.",
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "3085": {
      "op": "intc_0 // 1",
      "stack_out": [
        "encoded_value%0#0",
        "1"
      ]
    },
    "3086": {
      "op": "gtxns ApplicationID",
      "defined_out": [
        "encoded_value%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "tmp%4#0"
      ]
    },
    "3088": {
      "op": "global CurrentApplicationID",
      "defined_out": [
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "3090": {
      "op": "==",
      "defined_out": [
        "encoded_value%0#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "tmp%6#0"
      ]
    },
    "3091": {
      "error": "Application ID mismatch. App ID must be same across all transactions in group.",
      "op": "assert // Application ID mismatch. App ID must be same across all transactions in group.",
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "3092": {
      "op": "intc_0 // 1",
      "stack_out": [
        "encoded_value%0#0",
        "1"
      ]
    },
    "3093": {
      "op": "gtxns Sender",
      "defined_out": [
        "encoded_value%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "tmp%7#0"
      ]
    },
    "3095": {
      "op": "txn Sender",
      "defined_out": [
        "encoded_value%0#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "3097": {
      "op": "==",
      "defined_out": [
        "encoded_value%0#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "tmp%9#0"
      ]
    },
    "3098": {
      "error": "Sender mismatch. Sender must be same address across all transactions in group.",
      "op": "assert // Sender mismatch. Sender must be same address across all transactions in group.",
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "3099": {
      "op": "intc_0 // 1",
      "stack_out": [
        "encoded_value%0#0",
        "1"
      ]
    },
    "3100": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "1",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "1",
        "0"
      ]
    },
    "3101": {
      "op": "gtxnsas ApplicationArgs",
      "defined_out": [
        "encoded_value%0#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "tmp%10#0"
      ]
    },
    "3103": {
      "op": "bytec 12 // method \"play_game(uint64)void\"",
      "defined_out": [
        "Method(play_game(uint64)void)",
        "encoded_value%0#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "tmp%10#0",
        "Method(play_game(uint64)void)"
      ]
    },
    "3105": {
      "op": "==",
      "defined_out": [
        "encoded_value%0#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "tmp%11#0"
      ]
    },
    "3106": {
      "error": "Transaction at this group index must have exact required method selector.",
      "op": "assert // Transaction at this group index must have exact required method selector.",
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "3107": {
      "op": "intc_0 // 1",
      "stack_out": [
        "encoded_value%0#0",
        "1"
      ]
    },
    "3108": {
      "op": "dup",
      "stack_out": [
        "encoded_value%0#0",
        "1",
        "1"
      ]
    },
    "3109": {
      "op": "gtxnsas ApplicationArgs",
      "defined_out": [
        "encoded_value%0#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "tmp%12#0"
      ]
    },
    "3111": {
      "op": "dup",
      "defined_out": [
        "encoded_value%0#0",
        "tmp%12#0",
        "tmp%12#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "tmp%12#0",
        "tmp%12#0 (copy)"
      ]
    },
    "3112": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%12#0",
        "tmp%12#0 (copy)",
        "encoded_value%0#0"
      ]
    },
    "3114": {
      "op": "==",
      "defined_out": [
        "tmp%12#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "tmp%14#0"
      ]
    },
    "3115": {
      "error": "Invalid Game ID. Box Game Register Game ID must be a certain value or match Game ID arg.",
      "op": "assert // Invalid Game ID. Box Game Register Game ID must be a certain value or match Game ID arg.",
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "3116": {
      "op": "bytec_0 // \"r_\"",
      "defined_out": [
        "\"r_\"",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "\"r_\""
      ]
    },
    "3117": {
      "op": "txn Sender",
      "defined_out": [
        "\"r_\"",
        "materialized_values%0#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "\"r_\"",
        "materialized_values%0#0"
      ]
    },
    "3119": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%1#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "box_prefixed_key%1#0"
      ]
    },
    "3120": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%0#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "maybe_value%0#0",
        "maybe_exists%1#0"
      ]
    },
    "3121": {
      "error": "check self.box_game_register entry exists",
      "op": "assert // check self.box_game_register entry exists",
      "stack_out": [
        "tmp%12#0",
        "maybe_value%0#0"
      ]
    },
    "3122": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%12#0",
        "maybe_value%0#0",
        "2"
      ]
    },
    "3123": {
      "op": "extract_uint64",
      "defined_out": [
        "tmp%12#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "tmp%17#0"
      ]
    },
    "3124": {
      "op": "itob",
      "defined_out": [
        "tmp%12#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "tmp%18#0"
      ]
    },
    "3125": {
      "op": "==",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "3126": {
      "op": "assert",
      "stack_out": []
    },
    "3127": {
      "op": "bytec_0 // \"r_\"",
      "stack_out": [
        "\"r_\""
      ]
    },
    "3128": {
      "op": "txn Sender",
      "defined_out": [
        "\"r_\"",
        "materialized_values%1#0"
      ],
      "stack_out": [
        "\"r_\"",
        "materialized_values%1#0"
      ]
    },
    "3130": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0"
      ]
    },
    "3131": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%2#0"
      ]
    },
    "3132": {
      "error": "check self.box_game_register entry exists",
      "op": "assert // check self.box_game_register entry exists",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "3133": {
      "op": "intc_2 // 2",
      "stack_out": [
        "maybe_value%1#0",
        "2"
      ]
    },
    "3134": {
      "op": "extract_uint64",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "3135": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%21#0",
        "game_id#0 (copy)"
      ]
    },
    "3137": {
      "op": "==",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "3138": {
      "op": "assert",
      "stack_out": []
    },
    "3139": {
      "retsub": true,
      "op": "retsub"
    },
    "3140": {
      "subroutine": "smart_contracts.pieout.contract.Pieout.play_game",
      "params": {
        "game_id#0": "uint64"
      },
      "block": "play_game",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "3143": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "3144": {
      "op": "dupn 10",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0"
      ]
    },
    "3146": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0"
      ]
    },
    "3148": {
      "op": "dupn 6",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1"
      ]
    },
    "3150": {
      "block": "play_game_while_top@41",
      "stack_in": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1"
      ],
      "op": "pushint 19610 // 19610",
      "defined_out": [
        "19610"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "19610"
      ]
    },
    "3154": {
      "op": "global OpcodeBudget",
      "defined_out": [
        "19610",
        "tmp%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "19610",
        "tmp%0#0"
      ]
    },
    "3156": {
      "op": ">",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%1#0"
      ]
    },
    "3157": {
      "op": "bz play_game_after_while@46",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1"
      ]
    },
    "3160": {
      "op": "itxn_begin"
    },
    "3161": {
      "op": "pushint 6 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "appl"
      ]
    },
    "3163": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1"
      ]
    },
    "3165": {
      "op": "pushint 5 // DeleteApplication",
      "defined_out": [
        "DeleteApplication"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "DeleteApplication"
      ]
    },
    "3167": {
      "op": "itxn_field OnCompletion",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1"
      ]
    },
    "3169": {
      "op": "bytec 13 // 0x068101",
      "defined_out": [
        "0x068101"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "0x068101"
      ]
    },
    "3171": {
      "op": "itxn_field ApprovalProgram",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1"
      ]
    },
    "3173": {
      "op": "bytec 13 // 0x068101",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "0x068101"
      ]
    },
    "3175": {
      "op": "itxn_field ClearStateProgram",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1"
      ]
    },
    "3177": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "0"
      ]
    },
    "3178": {
      "op": "itxn_field Fee",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1"
      ]
    },
    "3180": {
      "op": "itxn_submit"
    },
    "3181": {
      "op": "b play_game_while_top@41"
    },
    "3184": {
      "block": "play_game_after_while@46",
      "stack_in": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1"
      ],
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "0"
      ]
    },
    "3185": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_type%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "gtxn_type%0#0"
      ]
    },
    "3187": {
      "op": "pushint 6 // appl",
      "defined_out": [
        "appl",
        "gtxn_type%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "gtxn_type%0#0",
        "appl"
      ]
    },
    "3189": {
      "op": "==",
      "defined_out": [
        "gtxn_type_matches%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "gtxn_type_matches%0#0"
      ]
    },
    "3190": {
      "error": "transaction type is appl",
      "op": "assert // transaction type is appl",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1"
      ]
    },
    "3191": {
      "op": "global GroupSize",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%0#0"
      ]
    },
    "3193": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "tmp%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%0#0",
        "2"
      ]
    },
    "3194": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%1#0"
      ]
    },
    "3195": {
      "error": "Invalid group size. Ensure number of transaction in group is within valid bounds.",
      "op": "assert // Invalid group size. Ensure number of transaction in group is within valid bounds.",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1"
      ]
    },
    "3196": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%2#0"
      ]
    },
    "3198": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%2#0",
        "1"
      ]
    },
    "3199": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%3#0"
      ]
    },
    "3200": {
      "error": "Invalid group index. Ensure transaction group index matches the expected value. ",
      "op": "assert // Invalid group index. Ensure transaction group index matches the expected value. ",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1"
      ]
    },
    "3201": {
      "op": "frame_dig -1",
      "defined_out": [
        "game_id#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_id#0 (copy)"
      ]
    },
    "3203": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "encoded_value%0#0"
      ]
    },
    "3204": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "encoded_value%0#0",
        "encoded_value%0#0"
      ]
    },
    "3205": {
      "op": "frame_bury 1",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "encoded_value%0#0"
      ]
    },
    "3207": {
      "op": "bytec 4 // \"s_\"",
      "defined_out": [
        "\"s_\"",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "encoded_value%0#0",
        "\"s_\""
      ]
    },
    "3209": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "\"s_\"",
        "encoded_value%0#0"
      ]
    },
    "3210": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "box_prefixed_key%0#0"
      ]
    },
    "3211": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "3212": {
      "op": "frame_bury 0",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "box_prefixed_key%0#0"
      ]
    },
    "3214": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "3215": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "_%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3216": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3218": {
      "error": "Box game state not found. Check if game ID exists.",
      "op": "assert // Box game state not found. Check if game ID exists.",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "box_prefixed_key%0#0"
      ]
    },
    "3219": {
      "op": "bytec_0 // \"r_\"",
      "defined_out": [
        "\"r_\"",
        "box_prefixed_key%0#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "\"r_\""
      ]
    },
    "3220": {
      "op": "txn Sender",
      "defined_out": [
        "\"r_\"",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "\"r_\"",
        "materialized_values%0#0"
      ]
    },
    "3222": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%1#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "box_prefixed_key%1#0"
      ]
    },
    "3223": {
      "op": "box_len",
      "defined_out": [
        "_%1#0",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "_%1#0",
        "maybe_exists%1#0"
      ]
    },
    "3224": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "maybe_exists%1#0"
      ]
    },
    "3226": {
      "error": "Box not found. Ensure the box you are trying to access was created and still exists.",
      "op": "assert // Box not found. Ensure the box you are trying to access was created and still exists.",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "box_prefixed_key%0#0"
      ]
    },
    "3227": {
      "op": "bytec_2 // \"t_\"",
      "defined_out": [
        "\"t_\"",
        "box_prefixed_key%0#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "\"t_\""
      ]
    },
    "3228": {
      "op": "box_len",
      "defined_out": [
        "_%2#0",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "maybe_exists%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "_%2#0",
        "maybe_exists%2#0"
      ]
    },
    "3229": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "maybe_exists%2#0"
      ]
    },
    "3231": {
      "error": "Box not found. Ensure the box you are trying to access was created and still exists.",
      "op": "assert // Box not found. Ensure the box you are trying to access was created and still exists.",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "box_prefixed_key%0#0"
      ]
    },
    "3232": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "0"
      ]
    },
    "3233": {
      "op": "gtxns ApplicationID",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "tmp%4#0"
      ]
    },
    "3235": {
      "op": "global CurrentApplicationID",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "3237": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "tmp%6#0"
      ]
    },
    "3238": {
      "error": "Application ID mismatch. App ID must be same across all transactions in group.",
      "op": "assert // Application ID mismatch. App ID must be same across all transactions in group.",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "box_prefixed_key%0#0"
      ]
    },
    "3239": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "0"
      ]
    },
    "3240": {
      "op": "gtxns Sender",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "tmp%7#0"
      ]
    },
    "3242": {
      "op": "txn Sender",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "3244": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "tmp%9#0"
      ]
    },
    "3245": {
      "error": "Sender mismatch. Sender must be same address across all transactions in group.",
      "op": "assert // Sender mismatch. Sender must be same address across all transactions in group.",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "box_prefixed_key%0#0"
      ]
    },
    "3246": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "0"
      ]
    },
    "3247": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "0",
        "0"
      ]
    },
    "3248": {
      "op": "gtxnsas ApplicationArgs",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "tmp%10#0"
      ]
    },
    "3250": {
      "op": "bytec 11 // method \"up_ref_budget_for_play_game(uint64)void\"",
      "defined_out": [
        "Method(up_ref_budget_for_play_game(uint64)void)",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "Method(up_ref_budget_for_play_game(uint64)void)"
      ]
    },
    "3252": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "tmp%11#0"
      ]
    },
    "3253": {
      "error": "Transaction at this group index must have exact required method selector.",
      "op": "assert // Transaction at this group index must have exact required method selector.",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "box_prefixed_key%0#0"
      ]
    },
    "3254": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "0"
      ]
    },
    "3255": {
      "op": "intc_0 // 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "0",
        "1"
      ]
    },
    "3256": {
      "op": "gtxnsas ApplicationArgs",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "tmp%12#0"
      ]
    },
    "3258": {
      "op": "dup"
    },
    "3259": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%12#0",
        "tmp%12#0 (copy)",
        "tmp%13#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "tmp%12#0",
        "tmp%12#0 (copy)",
        "tmp%13#0"
      ]
    },
    "3262": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%12#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "tmp%12#0",
        "tmp%14#0"
      ]
    },
    "3263": {
      "error": "Invalid Game ID. Box Game Register Game ID must be a certain value or match Game ID arg.",
      "op": "assert // Invalid Game ID. Box Game Register Game ID must be a certain value or match Game ID arg.",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "tmp%12#0"
      ]
    },
    "3264": {
      "op": "bytec_0 // \"r_\"",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "tmp%12#0",
        "\"r_\""
      ]
    },
    "3265": {
      "op": "txn Sender",
      "defined_out": [
        "\"r_\"",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "materialized_values%1#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "tmp%12#0",
        "\"r_\"",
        "materialized_values%1#0"
      ]
    },
    "3267": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%2#0",
        "encoded_value%0#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "tmp%12#0",
        "box_prefixed_key%2#0"
      ]
    },
    "3268": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "maybe_exists%3#0",
        "maybe_value%0#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "tmp%12#0",
        "maybe_value%0#0",
        "maybe_exists%3#0"
      ]
    },
    "3269": {
      "error": "check self.box_game_register entry exists",
      "op": "assert // check self.box_game_register entry exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "tmp%12#0",
        "maybe_value%0#0"
      ]
    },
    "3270": {
      "op": "intc_2 // 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "tmp%12#0",
        "maybe_value%0#0",
        "2"
      ]
    },
    "3271": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%12#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "tmp%12#0",
        "tmp%17#0"
      ]
    },
    "3272": {
      "op": "itob",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%12#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "tmp%12#0",
        "tmp%18#0"
      ]
    },
    "3273": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "tmp%19#0"
      ]
    },
    "3274": {
      "op": "assert",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "box_prefixed_key%0#0"
      ]
    },
    "3275": {
      "op": "txn Sender",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "tmp%20#0"
      ]
    },
    "3277": {
      "op": "dig 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "tmp%20#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "3279": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "maybe_exists%4#0",
        "maybe_value%1#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "tmp%20#0",
        "maybe_value%1#0",
        "maybe_exists%4#0"
      ]
    },
    "3280": {
      "error": "check self.box_game_state entry exists",
      "op": "assert // check self.box_game_state entry exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "tmp%20#0",
        "maybe_value%1#0"
      ]
    },
    "3281": {
      "op": "intc_0 // 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "tmp%20#0",
        "maybe_value%1#0",
        "1"
      ]
    },
    "3282": {
      "op": "getbyte",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%20#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "tmp%20#0",
        "tmp%22#0"
      ]
    },
    "3283": {
      "op": "frame_dig -1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "tmp%20#0",
        "tmp%22#0",
        "game_id#0 (copy)"
      ]
    },
    "3285": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "tmp%22#0",
        "game_id#0 (copy)",
        "tmp%20#0"
      ]
    },
    "3287": {
      "op": "bytec_3 // \"p_\"",
      "defined_out": [
        "\"p_\"",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_id#0 (copy)",
        "tmp%20#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "tmp%22#0",
        "game_id#0 (copy)",
        "tmp%20#0",
        "\"p_\""
      ]
    },
    "3288": {
      "op": "uncover 3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "game_id#0 (copy)",
        "tmp%20#0",
        "\"p_\"",
        "tmp%22#0"
      ]
    },
    "3290": {
      "op": "intc_0 // 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "game_id#0 (copy)",
        "tmp%20#0",
        "\"p_\"",
        "tmp%22#0",
        "1"
      ]
    },
    "3291": {
      "callsub": "smart_contracts.pieout.subroutines.check_acc_in_game",
      "op": "callsub check_acc_in_game",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "tmp%23#0"
      ]
    },
    "3294": {
      "op": "intc_0 // 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "tmp%23#0",
        "1"
      ]
    },
    "3295": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "tmp%24#0"
      ]
    },
    "3296": {
      "error": "Account is not recognized as an active player for this game.",
      "op": "assert // Account is not recognized as an active player for this game.",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "box_prefixed_key%0#0"
      ]
    },
    "3297": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "maybe_exists%5#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0",
        "maybe_exists%5#0"
      ]
    },
    "3298": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "maybe_exists%5#0",
        "game_state#0"
      ]
    },
    "3299": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "maybe_exists%5#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "3300": {
      "op": "cover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0",
        "maybe_exists%5#0",
        "game_state#0"
      ]
    },
    "3302": {
      "op": "frame_bury 4",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "maybe_exists%5#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0",
        "maybe_exists%5#0"
      ]
    },
    "3304": {
      "error": "check self.box_game_state entry exists",
      "op": "assert // check self.box_game_state entry exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0"
      ]
    },
    "3305": {
      "op": "bytec_0 // \"r_\"",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0",
        "\"r_\""
      ]
    },
    "3306": {
      "op": "txn Sender",
      "defined_out": [
        "\"r_\"",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "materialized_values%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0",
        "\"r_\"",
        "materialized_values%2#0"
      ]
    },
    "3308": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%5#0",
        "encoded_value%0#0",
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0",
        "box_prefixed_key%5#0"
      ]
    },
    "3309": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_state#0",
        "maybe_exists%6#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0",
        "game_register#0",
        "maybe_exists%6#0"
      ]
    },
    "3310": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0",
        "maybe_exists%6#0",
        "game_register#0"
      ]
    },
    "3311": {
      "op": "frame_bury 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0",
        "maybe_exists%6#0"
      ]
    },
    "3313": {
      "error": "check self.box_game_register entry exists",
      "op": "assert // check self.box_game_register entry exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0"
      ]
    },
    "3314": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_state#0",
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "3315": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0",
        "game_state#0 (copy)",
        "0"
      ]
    },
    "3316": {
      "op": "getbit",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_state#0",
        "is_true%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0",
        "is_true%0#0"
      ]
    },
    "3317": {
      "op": "bytec_1 // 0x00",
      "defined_out": [
        "0x00",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_state#0",
        "is_true%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0",
        "is_true%0#0",
        "0x00"
      ]
    },
    "3318": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0",
        "is_true%0#0",
        "0x00",
        "0"
      ]
    },
    "3319": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0",
        "0x00",
        "0",
        "is_true%0#0"
      ]
    },
    "3321": {
      "op": "setbit",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0",
        "encoded_bool%0#0"
      ]
    },
    "3322": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0",
        "encoded_bool%0#0",
        "0"
      ]
    },
    "3323": {
      "op": "getbit",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_state#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0",
        "tmp%25#0"
      ]
    },
    "3324": {
      "op": "intc_0 // 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0",
        "tmp%25#0",
        "1"
      ]
    },
    "3325": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_state#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0",
        "tmp%26#0"
      ]
    },
    "3326": {
      "error": "Game state staking finalized boolean value mismatch.",
      "op": "assert // Game state staking finalized boolean value mismatch.",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0"
      ]
    },
    "3327": {
      "error": "Index access is out of bounds",
      "op": "extract 9 8 // on error: Index access is out of bounds",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_state#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "reinterpret_biguint%0#0"
      ]
    },
    "3330": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_state#0",
        "reinterpret_biguint%0#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "reinterpret_biguint%0#0",
        "tmp%27#0"
      ]
    },
    "3332": {
      "op": "itob",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_state#0",
        "reinterpret_biguint%0#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "reinterpret_biguint%0#0",
        "tmp%28#0"
      ]
    },
    "3333": {
      "op": "b>=",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_state#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%29#0"
      ]
    },
    "3334": {
      "error": "Invalid time frame. Call made outside the permitted block or timestamp range.",
      "op": "assert // Invalid time frame. Call made outside the permitted block or timestamp range.",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1"
      ]
    },
    "3335": {
      "op": "bytec_0 // \"r_\"",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "\"r_\""
      ]
    },
    "3336": {
      "op": "txn Sender",
      "defined_out": [
        "\"r_\"",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_state#0",
        "materialized_values%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "\"r_\"",
        "materialized_values%3#0"
      ]
    },
    "3338": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%6#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "box_prefixed_key%6#0"
      ]
    },
    "3339": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_state#0",
        "maybe_exists%7#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "maybe_value%4#0",
        "maybe_exists%7#0"
      ]
    },
    "3340": {
      "error": "check self.box_game_register entry exists",
      "op": "assert // check self.box_game_register entry exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "maybe_value%4#0"
      ]
    },
    "3341": {
      "op": "intc_2 // 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "maybe_value%4#0",
        "2"
      ]
    },
    "3342": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_state#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%31#0"
      ]
    },
    "3343": {
      "op": "frame_dig -1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%31#0",
        "game_id#0 (copy)"
      ]
    },
    "3345": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_state#0",
        "tmp%32#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%32#0"
      ]
    },
    "3346": {
      "error": "Invalid Game ID. Box Game Register Game ID must be a certain value or match Game ID arg.",
      "op": "assert // Invalid Game ID. Box Game Register Game ID must be a certain value or match Game ID arg.",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1"
      ]
    },
    "3347": {
      "op": "global Round",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_state#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%33#0"
      ]
    },
    "3349": {
      "op": "bytec_0 // \"r_\"",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%33#0",
        "\"r_\""
      ]
    },
    "3350": {
      "op": "txn Sender",
      "defined_out": [
        "\"r_\"",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_state#0",
        "materialized_values%4#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%33#0",
        "\"r_\"",
        "materialized_values%4#0"
      ]
    },
    "3352": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%7#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_state#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%33#0",
        "box_prefixed_key%7#0"
      ]
    },
    "3353": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_state#0",
        "maybe_exists%8#0",
        "maybe_value%5#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%33#0",
        "maybe_value%5#0",
        "maybe_exists%8#0"
      ]
    },
    "3354": {
      "error": "check self.box_game_register entry exists",
      "op": "assert // check self.box_game_register entry exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%33#0",
        "maybe_value%5#0"
      ]
    },
    "3355": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_state#0",
        "maybe_value%5#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%33#0",
        "maybe_value%5#0",
        "10"
      ]
    },
    "3357": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_state#0",
        "tmp%33#0",
        "tmp%35#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%33#0",
        "tmp%35#0"
      ]
    },
    "3358": {
      "op": ">=",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_state#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%36#0"
      ]
    },
    "3359": {
      "error": "Randomness commit round not reached yet.",
      "op": "assert // Randomness commit round not reached yet.",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1"
      ]
    },
    "3360": {
      "op": "itxn_begin"
    },
    "3361": {
      "op": "bytec_0 // \"r_\"",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "\"r_\""
      ]
    },
    "3362": {
      "op": "txn Sender",
      "defined_out": [
        "\"r_\"",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_state#0",
        "materialized_values%5#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "\"r_\"",
        "materialized_values%5#0"
      ]
    },
    "3364": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%8#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "box_prefixed_key%8#0"
      ]
    },
    "3365": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_state#0",
        "maybe_exists%9#0",
        "maybe_value%6#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "maybe_value%6#0",
        "maybe_exists%9#0"
      ]
    },
    "3366": {
      "error": "check self.box_game_register entry exists",
      "op": "assert // check self.box_game_register entry exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "maybe_value%6#0"
      ]
    },
    "3367": {
      "op": "pushint 10 // 10",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "maybe_value%6#0",
        "10"
      ]
    },
    "3369": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_state#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "to_encode%0#0"
      ]
    },
    "3370": {
      "op": "itob",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_state#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "val_as_bytes%0#0"
      ]
    },
    "3371": {
      "op": "bytec 10 // 0x0020",
      "defined_out": [
        "0x0020",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_state#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "val_as_bytes%0#0",
        "0x0020"
      ]
    },
    "3373": {
      "op": "txn Sender",
      "defined_out": [
        "0x0020",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_state#0",
        "to_encode%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "val_as_bytes%0#0",
        "0x0020",
        "to_encode%1#0"
      ]
    },
    "3375": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "encoded_value%3#0",
        "game_register#0",
        "game_state#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "val_as_bytes%0#0",
        "encoded_value%3#0"
      ]
    },
    "3376": {
      "op": "pushint 600011887 // 600011887",
      "defined_out": [
        "600011887",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "encoded_value%3#0",
        "game_register#0",
        "game_state#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "val_as_bytes%0#0",
        "encoded_value%3#0",
        "600011887"
      ]
    },
    "3382": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "val_as_bytes%0#0",
        "encoded_value%3#0"
      ]
    },
    "3384": {
      "op": "pushbytes 0x47c20c23 // method \"must_get(uint64,byte[])byte[]\"",
      "defined_out": [
        "Method(must_get(uint64,byte[])byte[])",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "encoded_value%3#0",
        "game_register#0",
        "game_state#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "val_as_bytes%0#0",
        "encoded_value%3#0",
        "Method(must_get(uint64,byte[])byte[])"
      ]
    },
    "3390": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "val_as_bytes%0#0",
        "encoded_value%3#0"
      ]
    },
    "3392": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "encoded_value%3#0",
        "val_as_bytes%0#0"
      ]
    },
    "3393": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "encoded_value%3#0"
      ]
    },
    "3395": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1"
      ]
    },
    "3397": {
      "op": "pushint 6 // appl",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "appl"
      ]
    },
    "3399": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1"
      ]
    },
    "3401": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "0"
      ]
    },
    "3402": {
      "op": "itxn_field Fee",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1"
      ]
    },
    "3404": {
      "op": "itxn_submit"
    },
    "3405": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%0#0",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "awst_tmp%0#0"
      ]
    },
    "3407": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "3408": {
      "op": "extract 0 4",
      "defined_out": [
        "awst_tmp%0#0",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_state#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "awst_tmp%0#0",
        "tmp%39#0"
      ]
    },
    "3411": {
      "op": "bytec 5 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "awst_tmp%0#0",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_state#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "awst_tmp%0#0",
        "tmp%39#0",
        "0x151f7c75"
      ]
    },
    "3413": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_state#0",
        "tmp%40#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "awst_tmp%0#0",
        "tmp%40#0"
      ]
    },
    "3414": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "awst_tmp%0#0"
      ]
    },
    "3415": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "3416": {
      "op": "extract 6 0",
      "defined_out": [
        "awst_tmp%0#0",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_state#0",
        "seed#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "awst_tmp%0#0",
        "seed#0"
      ]
    },
    "3419": {
      "op": "txn Sender",
      "defined_out": [
        "awst_tmp%0#0",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_state#0",
        "player#0",
        "seed#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "awst_tmp%0#0",
        "seed#0",
        "player#0"
      ]
    },
    "3421": {
      "op": "frame_bury 7",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "awst_tmp%0#0",
        "seed#0"
      ]
    },
    "3423": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "seed#0",
        "awst_tmp%0#0"
      ]
    },
    "3424": {
      "op": "extract 22 8",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_state#0",
        "player#0",
        "seed#0",
        "seed#2"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "seed#0",
        "seed#2"
      ]
    },
    "3427": {
      "op": "len",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "seed#0",
        "tmp%0#0"
      ]
    },
    "3428": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_state#0",
        "player#0",
        "seed#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "seed#0",
        "tmp%0#0",
        "8"
      ]
    },
    "3430": {
      "op": "==",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "seed#0",
        "tmp%1#0"
      ]
    },
    "3431": {
      "op": "assert",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "seed#0"
      ]
    },
    "3432": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_state#0",
        "player#0",
        "seed#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "seed#0",
        "16"
      ]
    },
    "3434": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_state#0",
        "initial_state#0",
        "player#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "initial_state#0"
      ]
    },
    "3435": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "initial_state#0",
        "0"
      ]
    },
    "3436": {
      "op": "intc 7 // 6364136223846793005",
      "defined_out": [
        "0",
        "6364136223846793005",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_state#0",
        "initial_state#0",
        "player#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "initial_state#0",
        "0",
        "6364136223846793005"
      ]
    },
    "3438": {
      "op": "mulw",
      "defined_out": [
        "_high_mul#0",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_state#0",
        "initial_state#0",
        "low_mul#0",
        "player#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "initial_state#0",
        "_high_mul#0",
        "low_mul#0"
      ]
    },
    "3439": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "initial_state#0",
        "low_mul#0"
      ]
    },
    "3441": {
      "op": "intc 8 // 1442695040888963407",
      "defined_out": [
        "1442695040888963407",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_state#0",
        "initial_state#0",
        "low_mul#0",
        "player#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "initial_state#0",
        "low_mul#0",
        "1442695040888963407"
      ]
    },
    "3443": {
      "op": "addw",
      "defined_out": [
        "_high_add#0",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_state#0",
        "initial_state#0",
        "low_add#0",
        "player#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "initial_state#0",
        "_high_add#0",
        "low_add#0"
      ]
    },
    "3444": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "initial_state#0",
        "low_add#0"
      ]
    },
    "3446": {
      "op": "addw",
      "defined_out": [
        "_high_addw#0",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_state#0",
        "player#0",
        "state#2"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "_high_addw#0",
        "state#2"
      ]
    },
    "3447": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "state#2"
      ]
    },
    "3449": {
      "op": "intc 7 // 6364136223846793005",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "state#2",
        "6364136223846793005"
      ]
    },
    "3451": {
      "op": "mulw",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "_high_mul#0",
        "low_mul#0"
      ]
    },
    "3452": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "low_mul#0"
      ]
    },
    "3454": {
      "op": "intc 8 // 1442695040888963407",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "low_mul#0",
        "1442695040888963407"
      ]
    },
    "3456": {
      "op": "addw",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "_high_add#0",
        "low_add#0"
      ]
    },
    "3457": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "low_add#0"
      ]
    },
    "3459": {
      "op": "pushbytes 0x00ff",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_state#0",
        "low_add#0",
        "player#0",
        "result#1",
        "state#2"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "low_add#0",
        "result#1"
      ]
    },
    "3463": {
      "op": "frame_bury 9",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "low_add#0"
      ]
    },
    "3465": {
      "op": "pushint 18446744073709486080 // 18446744073709486080",
      "defined_out": [
        "18446744073709486080",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_state#0",
        "low_add#0",
        "player#0",
        "result#1",
        "state#2"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "low_add#0",
        "18446744073709486080"
      ]
    },
    "3476": {
      "op": "intc_0 // 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "low_add#0",
        "18446744073709486080",
        "1"
      ]
    },
    "3477": {
      "op": "addw",
      "defined_out": [
        "_addw_high#0",
        "addw_low#0",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_state#0",
        "low_add#0",
        "player#0",
        "result#1",
        "state#2"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "low_add#0",
        "_addw_high#0",
        "addw_low#0"
      ]
    },
    "3478": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "low_add#0",
        "addw_low#0"
      ]
    },
    "3480": {
      "op": "intc 9 // 4294967295",
      "defined_out": [
        "4294967295",
        "addw_low#0",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_state#0",
        "low_add#0",
        "player#0",
        "result#1",
        "state#2"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "low_add#0",
        "addw_low#0",
        "4294967295"
      ]
    },
    "3482": {
      "op": "&",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "low_add#0",
        "tmp%0#0"
      ]
    },
    "3483": {
      "op": "intc 11 // 65535",
      "defined_out": [
        "65535",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_state#0",
        "low_add#0",
        "player#0",
        "result#1",
        "state#2",
        "tmp%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "low_add#0",
        "tmp%0#0",
        "65535"
      ]
    },
    "3485": {
      "op": "%",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_state#0",
        "low_add#0",
        "player#0",
        "result#1",
        "state#2",
        "threshold#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "low_add#0",
        "threshold#0"
      ]
    },
    "3486": {
      "op": "frame_bury 16",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_state#0",
        "low_add#0",
        "player#0",
        "result#1",
        "state#2",
        "threshold#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "low_add#0"
      ]
    },
    "3488": {
      "op": "intc_1 // 0",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_state#0",
        "i#0",
        "low_add#0",
        "player#0",
        "result#1",
        "state#2",
        "threshold#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "low_add#0",
        "i#0"
      ]
    },
    "3489": {
      "op": "frame_bury 13",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "state#2"
      ]
    },
    "3491": {
      "op": "frame_bury 15",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1"
      ]
    },
    "3493": {
      "block": "play_game_for_header@13",
      "stack_in": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1"
      ],
      "op": "frame_dig 13",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "i#0"
      ]
    },
    "3495": {
      "op": "pushint 255 // 255",
      "defined_out": [
        "255",
        "i#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "i#0",
        "255"
      ]
    },
    "3498": {
      "op": "<",
      "defined_out": [
        "continue_looping%1#0",
        "i#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "continue_looping%1#0"
      ]
    },
    "3499": {
      "op": "bz play_game_after_for@18",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1"
      ]
    },
    "3502": {
      "block": "play_game_while_top@15",
      "stack_in": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1"
      ],
      "op": "frame_dig 15",
      "defined_out": [
        "state#2"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "state#2"
      ]
    },
    "3504": {
      "op": "dup",
      "defined_out": [
        "state#2",
        "state#2 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "state#2",
        "state#2 (copy)"
      ]
    },
    "3505": {
      "op": "intc 7 // 6364136223846793005",
      "defined_out": [
        "6364136223846793005",
        "state#2",
        "state#2 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "state#2",
        "state#2 (copy)",
        "6364136223846793005"
      ]
    },
    "3507": {
      "op": "mulw",
      "defined_out": [
        "_high_mul#0",
        "low_mul#0",
        "state#2"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "state#2",
        "_high_mul#0",
        "low_mul#0"
      ]
    },
    "3508": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "state#2",
        "low_mul#0"
      ]
    },
    "3510": {
      "op": "intc 8 // 1442695040888963407",
      "defined_out": [
        "1442695040888963407",
        "low_mul#0",
        "state#2"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "state#2",
        "low_mul#0",
        "1442695040888963407"
      ]
    },
    "3512": {
      "op": "addw",
      "defined_out": [
        "_high_add#0",
        "low_add#0",
        "state#2"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "state#2",
        "_high_add#0",
        "low_add#0"
      ]
    },
    "3513": {
      "op": "cover 2",
      "defined_out": [
        "_high_add#0",
        "low_add#0",
        "state#2"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "low_add#0",
        "state#2",
        "_high_add#0"
      ]
    },
    "3515": {
      "op": "pop",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "low_add#0",
        "state#2"
      ]
    },
    "3516": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "low_add#0",
        "state#2",
        "state#2 (copy)"
      ]
    },
    "3517": {
      "op": "pushint 18 // 18",
      "defined_out": [
        "18",
        "low_add#0",
        "state#2",
        "state#2 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "low_add#0",
        "state#2",
        "state#2 (copy)",
        "18"
      ]
    },
    "3519": {
      "op": "shr",
      "defined_out": [
        "low_add#0",
        "state#2",
        "tmp%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "low_add#0",
        "state#2",
        "tmp%0#0"
      ]
    },
    "3520": {
      "op": "dig 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "low_add#0",
        "state#2",
        "tmp%0#0",
        "state#2 (copy)"
      ]
    },
    "3522": {
      "op": "^",
      "defined_out": [
        "low_add#0",
        "state#2",
        "tmp%1#5"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "low_add#0",
        "state#2",
        "tmp%1#5"
      ]
    },
    "3523": {
      "op": "pushint 27 // 27",
      "defined_out": [
        "27",
        "low_add#0",
        "state#2",
        "tmp%1#5"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "low_add#0",
        "state#2",
        "tmp%1#5",
        "27"
      ]
    },
    "3525": {
      "op": "shr",
      "defined_out": [
        "low_add#0",
        "state#2",
        "value#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "low_add#0",
        "state#2",
        "value#0"
      ]
    },
    "3526": {
      "op": "intc 9 // 4294967295",
      "defined_out": [
        "4294967295",
        "low_add#0",
        "state#2",
        "value#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "low_add#0",
        "state#2",
        "value#0",
        "4294967295"
      ]
    },
    "3528": {
      "op": "&",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "low_add#0",
        "state#2",
        "value#0"
      ]
    },
    "3529": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "low_add#0",
        "value#0",
        "state#2"
      ]
    },
    "3530": {
      "op": "pushint 59 // 59",
      "defined_out": [
        "59",
        "low_add#0",
        "state#2",
        "value#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "low_add#0",
        "value#0",
        "state#2",
        "59"
      ]
    },
    "3532": {
      "op": "shr",
      "defined_out": [
        "low_add#0",
        "rot#0",
        "state#2",
        "value#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "low_add#0",
        "value#0",
        "rot#0"
      ]
    },
    "3533": {
      "op": "dup2",
      "defined_out": [
        "low_add#0",
        "rot#0",
        "rot#0 (copy)",
        "state#2",
        "value#0",
        "value#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "low_add#0",
        "value#0",
        "rot#0",
        "value#0 (copy)",
        "rot#0 (copy)"
      ]
    },
    "3534": {
      "op": "shr",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "low_add#0",
        "value#0",
        "rot#0",
        "tmp%0#0"
      ]
    },
    "3535": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "low_add#0",
        "value#0",
        "tmp%0#0",
        "rot#0"
      ]
    },
    "3536": {
      "op": "~",
      "defined_out": [
        "low_add#0",
        "state#2",
        "tmp%0#0",
        "tmp%0#11",
        "value#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "low_add#0",
        "value#0",
        "tmp%0#0",
        "tmp%0#11"
      ]
    },
    "3537": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "low_add#0",
        "state#2",
        "tmp%0#0",
        "tmp%0#11",
        "value#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "low_add#0",
        "value#0",
        "tmp%0#0",
        "tmp%0#11",
        "1"
      ]
    },
    "3538": {
      "op": "addw",
      "defined_out": [
        "_addw_high#0",
        "addw_low#0",
        "low_add#0",
        "state#2",
        "tmp%0#0",
        "value#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "low_add#0",
        "value#0",
        "tmp%0#0",
        "_addw_high#0",
        "addw_low#0"
      ]
    },
    "3539": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "low_add#0",
        "value#0",
        "tmp%0#0",
        "addw_low#0"
      ]
    },
    "3541": {
      "op": "pushint 31 // 31",
      "defined_out": [
        "31",
        "addw_low#0",
        "low_add#0",
        "state#2",
        "tmp%0#0",
        "value#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "low_add#0",
        "value#0",
        "tmp%0#0",
        "addw_low#0",
        "31"
      ]
    },
    "3543": {
      "op": "&",
      "defined_out": [
        "low_add#0",
        "state#2",
        "tmp%0#0",
        "tmp%2#0",
        "value#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "low_add#0",
        "value#0",
        "tmp%0#0",
        "tmp%2#0"
      ]
    },
    "3544": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "low_add#0",
        "tmp%0#0",
        "tmp%2#0",
        "value#0"
      ]
    },
    "3546": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "low_add#0",
        "tmp%0#0",
        "value#0",
        "tmp%2#0"
      ]
    },
    "3547": {
      "op": "shl",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "low_add#0",
        "tmp%0#0",
        "value#0"
      ]
    },
    "3548": {
      "op": "intc 9 // 4294967295",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "low_add#0",
        "tmp%0#0",
        "value#0",
        "4294967295"
      ]
    },
    "3550": {
      "op": "&",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "low_add#0",
        "tmp%0#0",
        "tmp%0#11"
      ]
    },
    "3551": {
      "op": "|",
      "defined_out": [
        "candidate#0",
        "low_add#0",
        "state#2"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "low_add#0",
        "candidate#0"
      ]
    },
    "3552": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "low_add#0",
        "candidate#0",
        "candidate#0"
      ]
    },
    "3553": {
      "op": "frame_bury 12",
      "defined_out": [
        "candidate#0",
        "low_add#0",
        "state#2"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "low_add#0",
        "candidate#0"
      ]
    },
    "3555": {
      "op": "frame_dig 16",
      "defined_out": [
        "candidate#0",
        "low_add#0",
        "state#2",
        "threshold#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "low_add#0",
        "candidate#0",
        "threshold#0"
      ]
    },
    "3557": {
      "op": ">=",
      "defined_out": [
        "candidate#0",
        "low_add#0",
        "state#2",
        "threshold#0",
        "tmp%20#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "low_add#0",
        "tmp%20#1"
      ]
    },
    "3558": {
      "op": "bz play_game_after_if_else@17",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "low_add#0"
      ]
    },
    "3561": {
      "op": "frame_dig 12",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "low_add#0",
        "candidate#0"
      ]
    },
    "3563": {
      "op": "intc 11 // 65535",
      "defined_out": [
        "65535",
        "candidate#0",
        "low_add#0",
        "state#2",
        "threshold#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "low_add#0",
        "candidate#0",
        "65535"
      ]
    },
    "3565": {
      "op": "%",
      "defined_out": [
        "candidate#0",
        "low_add#0",
        "state#2",
        "threshold#0",
        "tmp%21#2"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "low_add#0",
        "tmp%21#2"
      ]
    },
    "3566": {
      "op": "intc_0 // 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "low_add#0",
        "tmp%21#2",
        "1"
      ]
    },
    "3567": {
      "op": "+",
      "defined_out": [
        "candidate#0",
        "low_add#0",
        "state#2",
        "threshold#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "low_add#0",
        "tmp%22#0"
      ]
    },
    "3568": {
      "op": "itob",
      "defined_out": [
        "candidate#0",
        "low_add#0",
        "state#2",
        "threshold#0",
        "tmp%23#2"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "low_add#0",
        "tmp%23#2"
      ]
    },
    "3569": {
      "op": "extract 6 2",
      "defined_out": [
        "candidate#0",
        "low_add#0",
        "state#2",
        "threshold#0",
        "tmp%24#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "low_add#0",
        "tmp%24#1"
      ]
    },
    "3572": {
      "op": "frame_dig 9",
      "defined_out": [
        "candidate#0",
        "low_add#0",
        "result#1",
        "state#2",
        "threshold#0",
        "tmp%24#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "low_add#0",
        "tmp%24#1",
        "result#1"
      ]
    },
    "3574": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "low_add#0",
        "result#1",
        "tmp%24#1"
      ]
    },
    "3575": {
      "op": "concat",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "low_add#0",
        "result#1"
      ]
    },
    "3576": {
      "op": "frame_bury 9",
      "defined_out": [
        "candidate#0",
        "low_add#0",
        "result#1",
        "state#2",
        "threshold#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "low_add#0"
      ]
    },
    "3578": {
      "op": "frame_dig 13",
      "defined_out": [
        "candidate#0",
        "i#0",
        "low_add#0",
        "result#1",
        "state#2",
        "threshold#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "low_add#0",
        "i#0"
      ]
    },
    "3580": {
      "op": "intc_0 // 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "low_add#0",
        "i#0",
        "1"
      ]
    },
    "3581": {
      "op": "+",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "low_add#0",
        "i#0"
      ]
    },
    "3582": {
      "op": "frame_bury 13",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "state#2"
      ]
    },
    "3584": {
      "op": "frame_bury 15",
      "defined_out": [
        "candidate#0",
        "i#0",
        "result#1",
        "state#2",
        "threshold#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1"
      ]
    },
    "3586": {
      "op": "b play_game_for_header@13"
    },
    "3589": {
      "block": "play_game_after_if_else@17",
      "stack_in": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "low_add#0"
      ],
      "op": "frame_bury 15",
      "defined_out": [
        "state#2"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1"
      ]
    },
    "3591": {
      "op": "b play_game_while_top@15"
    },
    "3594": {
      "block": "play_game_after_for@18",
      "stack_in": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1"
      ],
      "op": "intc_1 // 0",
      "defined_out": [
        "score#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "score#0"
      ]
    },
    "3595": {
      "op": "frame_bury 14",
      "defined_out": [
        "score#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1"
      ]
    },
    "3597": {
      "op": "frame_dig 9",
      "defined_out": [
        "result#1",
        "score#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "result#1"
      ]
    },
    "3599": {
      "op": "len",
      "defined_out": [
        "result#1",
        "score#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%3#1"
      ]
    },
    "3600": {
      "op": "frame_bury 17",
      "defined_out": [
        "result#1",
        "score#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1"
      ]
    },
    "3602": {
      "op": "intc_2 // 2",
      "defined_out": [
        "i#0",
        "result#1",
        "score#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "i#0"
      ]
    },
    "3603": {
      "op": "frame_bury 13",
      "defined_out": [
        "i#0",
        "result#1",
        "score#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1"
      ]
    },
    "3605": {
      "block": "play_game_for_header@20",
      "stack_in": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1"
      ],
      "op": "frame_dig 13",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "i#0"
      ]
    },
    "3607": {
      "op": "frame_dig 17",
      "defined_out": [
        "i#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "i#0",
        "tmp%3#1"
      ]
    },
    "3609": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "continue_looping%0#0"
      ]
    },
    "3610": {
      "op": "bz play_game_after_for@23",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1"
      ]
    },
    "3613": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "i#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "2"
      ]
    },
    "3614": {
      "op": "frame_dig 17",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "2",
        "tmp%3#1"
      ]
    },
    "3616": {
      "op": "dup",
      "defined_out": [
        "2",
        "i#0",
        "tmp%3#1",
        "tmp%3#1 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "2",
        "tmp%3#1 (copy)",
        "tmp%3#1 (copy)"
      ]
    },
    "3617": {
      "op": "cover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%3#1",
        "2",
        "tmp%3#1 (copy)"
      ]
    },
    "3619": {
      "op": ">=",
      "defined_out": [
        "i#0",
        "is_out_of_bounds%0#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%3#1",
        "is_out_of_bounds%0#0"
      ]
    },
    "3620": {
      "op": "intc_2 // 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%3#1",
        "is_out_of_bounds%0#0",
        "2"
      ]
    },
    "3621": {
      "op": "dig 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%3#1",
        "is_out_of_bounds%0#0",
        "2",
        "tmp%3#1 (copy)"
      ]
    },
    "3623": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%3#1",
        "2",
        "tmp%3#1 (copy)",
        "is_out_of_bounds%0#0"
      ]
    },
    "3625": {
      "op": "select",
      "defined_out": [
        "bounded_index%0#0",
        "i#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%3#1",
        "bounded_index%0#0"
      ]
    },
    "3626": {
      "op": "frame_dig 9",
      "defined_out": [
        "bounded_index%0#0",
        "i#0",
        "result#1",
        "tmp%3#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%3#1",
        "bounded_index%0#0",
        "result#1"
      ]
    },
    "3628": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%3#1",
        "result#1",
        "bounded_index%0#0"
      ]
    },
    "3629": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "result#1",
        "bounded_index%0#0",
        "tmp%3#1"
      ]
    },
    "3631": {
      "op": "substring3",
      "defined_out": [
        "i#0",
        "result#1",
        "tmp%3#1",
        "tmp%4#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%4#1"
      ]
    },
    "3632": {
      "op": "frame_dig 13",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%4#1",
        "i#0"
      ]
    },
    "3634": {
      "op": "extract_uint16",
      "defined_out": [
        "i#0",
        "result#1",
        "roll#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "roll#0"
      ]
    },
    "3635": {
      "op": "pushint 10992 // 10992",
      "defined_out": [
        "10992",
        "i#0",
        "result#1",
        "roll#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "roll#0",
        "10992"
      ]
    },
    "3638": {
      "op": "<=",
      "defined_out": [
        "i#0",
        "result#1",
        "tmp%3#1",
        "tmp%5#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%5#1"
      ]
    },
    "3639": {
      "op": "bnz play_game_after_for@23",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1"
      ]
    },
    "3642": {
      "op": "frame_dig 14",
      "defined_out": [
        "i#0",
        "result#1",
        "score#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "score#0"
      ]
    },
    "3644": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "i#0",
        "result#1",
        "score#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "score#0",
        "1"
      ]
    },
    "3645": {
      "op": "+",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "score#0"
      ]
    },
    "3646": {
      "op": "frame_bury 14",
      "defined_out": [
        "i#0",
        "result#1",
        "score#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1"
      ]
    },
    "3648": {
      "op": "frame_dig 13",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "i#0"
      ]
    },
    "3650": {
      "op": "intc_2 // 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "i#0",
        "2"
      ]
    },
    "3651": {
      "op": "+",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "i#0"
      ]
    },
    "3652": {
      "op": "frame_bury 13",
      "defined_out": [
        "i#0",
        "result#1",
        "score#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1"
      ]
    },
    "3654": {
      "op": "b play_game_for_header@20"
    },
    "3657": {
      "block": "play_game_after_for@23",
      "stack_in": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1"
      ],
      "op": "frame_dig 14",
      "defined_out": [
        "score#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "score#0"
      ]
    },
    "3659": {
      "op": "dup",
      "defined_out": [
        "score#0",
        "score#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "score#0",
        "score#0 (copy)"
      ]
    },
    "3660": {
      "op": "itob",
      "defined_out": [
        "score#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "score#0",
        "val_as_bytes%1#0"
      ]
    },
    "3661": {
      "op": "dup",
      "defined_out": [
        "score#0",
        "val_as_bytes%1#0",
        "val_as_bytes%1#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "score#0",
        "val_as_bytes%1#0",
        "val_as_bytes%1#0 (copy)"
      ]
    },
    "3662": {
      "op": "bitlen",
      "defined_out": [
        "bitlen%0#0",
        "score#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "score#0",
        "val_as_bytes%1#0",
        "bitlen%0#0"
      ]
    },
    "3663": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "bitlen%0#0",
        "score#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "score#0",
        "val_as_bytes%1#0",
        "bitlen%0#0",
        "8"
      ]
    },
    "3665": {
      "op": "<=",
      "defined_out": [
        "no_overflow%0#0",
        "score#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "score#0",
        "val_as_bytes%1#0",
        "no_overflow%0#0"
      ]
    },
    "3666": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "score#0",
        "val_as_bytes%1#0"
      ]
    },
    "3667": {
      "op": "extract 7 1",
      "defined_out": [
        "score#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "score#0",
        "uint8%0#0"
      ]
    },
    "3670": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "score#0",
        "uint8%0#0",
        "uint8%0#0"
      ]
    },
    "3671": {
      "op": "frame_bury 10",
      "defined_out": [
        "score#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "score#0",
        "uint8%0#0"
      ]
    },
    "3673": {
      "op": "frame_dig 1",
      "defined_out": [
        "encoded_value%0#0",
        "score#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "score#0",
        "uint8%0#0",
        "encoded_value%0#0"
      ]
    },
    "3675": {
      "op": "frame_dig 7",
      "defined_out": [
        "encoded_value%0#0",
        "player#0",
        "score#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "score#0",
        "uint8%0#0",
        "encoded_value%0#0",
        "player#0"
      ]
    },
    "3677": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0",
        "player#0",
        "score#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "score#0",
        "uint8%0#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "3678": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "score#0",
        "encoded_tuple_buffer%2#0",
        "uint8%0#0"
      ]
    },
    "3679": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "encoded_value%0#0",
        "player#0",
        "score#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "score#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "3680": {
      "op": "pushbytes 0xde2244d6 // method \"player_score(uint64,address,uint8)\"",
      "defined_out": [
        "Method(player_score(uint64,address,uint8))",
        "encoded_tuple_buffer%3#0",
        "encoded_value%0#0",
        "player#0",
        "score#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "score#0",
        "encoded_tuple_buffer%3#0",
        "Method(player_score(uint64,address,uint8))"
      ]
    },
    "3686": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "score#0",
        "Method(player_score(uint64,address,uint8))",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "3687": {
      "op": "concat",
      "defined_out": [
        "encoded_value%0#0",
        "event%0#0",
        "player#0",
        "score#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "score#0",
        "event%0#0"
      ]
    },
    "3688": {
      "op": "log",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "score#0"
      ]
    },
    "3689": {
      "op": "frame_dig 4",
      "defined_out": [
        "encoded_value%0#0",
        "game_state#0",
        "player#0",
        "score#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "score#0",
        "game_state#0"
      ]
    },
    "3691": {
      "op": "dup",
      "defined_out": [
        "encoded_value%0#0",
        "game_state#0",
        "game_state#0 (copy)",
        "player#0",
        "score#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "score#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "3692": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "encoded_value%0#0",
        "game_state#0",
        "game_state#0 (copy)",
        "player#0",
        "score#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "score#0",
        "game_state#0",
        "game_state#0 (copy)",
        "6"
      ]
    },
    "3694": {
      "op": "getbyte",
      "defined_out": [
        "encoded_value%0#0",
        "game_state#0",
        "player#0",
        "score#0",
        "tmp%7#1",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "score#0",
        "game_state#0",
        "tmp%7#1"
      ]
    },
    "3695": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0",
        "tmp%7#1",
        "score#0"
      ]
    },
    "3697": {
      "op": "<",
      "defined_out": [
        "encoded_value%0#0",
        "game_state#0",
        "player#0",
        "score#0",
        "tmp%8#1",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0",
        "tmp%8#1"
      ]
    },
    "3698": {
      "op": "swap",
      "defined_out": [
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#24",
        "player#0",
        "score#0",
        "tmp%8#1",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%8#1",
        "game_state%out#24"
      ]
    },
    "3699": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%8#1",
        "game_state%out#24",
        "game_state%out#24"
      ]
    },
    "3700": {
      "op": "frame_bury 6",
      "defined_out": [
        "encoded_value%0#0",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "score#0",
        "tmp%8#1",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%8#1",
        "game_state#43"
      ]
    },
    "3702": {
      "op": "frame_bury 5",
      "defined_out": [
        "encoded_value%0#0",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "score#0",
        "tmp%8#1",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%8#1"
      ]
    },
    "3704": {
      "op": "bz play_game_after_if_else@25",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1"
      ]
    },
    "3707": {
      "op": "frame_dig 4",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0"
      ]
    },
    "3709": {
      "op": "frame_dig 10",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0",
        "uint8%0#0"
      ]
    },
    "3711": {
      "op": "replace2 6",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0"
      ]
    },
    "3713": {
      "op": "frame_dig 7",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0",
        "player#0"
      ]
    },
    "3715": {
      "op": "replace2 153",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state%out#24"
      ]
    },
    "3717": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state%out#24",
        "game_state%out#24"
      ]
    },
    "3718": {
      "op": "frame_bury 6",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#43"
      ]
    },
    "3720": {
      "op": "frame_bury 5",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1"
      ]
    },
    "3722": {
      "block": "play_game_after_if_else@25",
      "stack_in": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0"
      ]
    },
    "3724": {
      "op": "frame_bury 4",
      "defined_out": [
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1"
      ]
    },
    "3726": {
      "op": "frame_dig 2",
      "defined_out": [
        "game_register#0",
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_register#0"
      ]
    },
    "3728": {
      "op": "dup",
      "defined_out": [
        "game_register#0",
        "game_register#0 (copy)",
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_register#0",
        "game_register#0 (copy)"
      ]
    },
    "3729": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "game_register#0",
        "game_register#0 (copy)",
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_register#0",
        "game_register#0 (copy)",
        "1"
      ]
    },
    "3730": {
      "op": "getbyte",
      "defined_out": [
        "game_register#0",
        "game_state#0",
        "tmp%10#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_register#0",
        "tmp%10#1"
      ]
    },
    "3731": {
      "op": "frame_dig 14",
      "defined_out": [
        "game_register#0",
        "game_state#0",
        "score#0",
        "tmp%10#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_register#0",
        "tmp%10#1",
        "score#0"
      ]
    },
    "3733": {
      "op": "<",
      "defined_out": [
        "game_register#0",
        "game_state#0",
        "score#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_register#0",
        "tmp%11#0"
      ]
    },
    "3734": {
      "op": "swap",
      "defined_out": [
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "score#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%11#0",
        "game_register#17"
      ]
    },
    "3735": {
      "op": "frame_bury 3",
      "defined_out": [
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "score#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%11#0"
      ]
    },
    "3737": {
      "op": "bz play_game_after_if_else@27",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1"
      ]
    },
    "3740": {
      "op": "frame_dig 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_register#0"
      ]
    },
    "3742": {
      "op": "frame_dig 10",
      "defined_out": [
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "score#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_register#0",
        "uint8%0#0"
      ]
    },
    "3744": {
      "op": "replace2 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_register#17"
      ]
    },
    "3746": {
      "op": "frame_bury 3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1"
      ]
    },
    "3748": {
      "block": "play_game_after_if_else@27",
      "stack_in": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "game_register#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_register#0"
      ]
    },
    "3750": {
      "op": "frame_bury 2",
      "defined_out": [
        "game_register#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1"
      ]
    },
    "3752": {
      "op": "frame_dig 4",
      "defined_out": [
        "game_register#0",
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0"
      ]
    },
    "3754": {
      "error": "Index access is out of bounds",
      "op": "extract 57 32 // on error: Index access is out of bounds",
      "defined_out": [
        "game_register#0",
        "game_state#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%12#0"
      ]
    },
    "3757": {
      "op": "global ZeroAddress",
      "defined_out": [
        "game_register#0",
        "game_state#0",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%12#0",
        "tmp%13#0"
      ]
    },
    "3759": {
      "op": "==",
      "defined_out": [
        "game_register#0",
        "game_state#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%14#0"
      ]
    },
    "3760": {
      "op": "bnz play_game_if_body@29",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1"
      ]
    },
    "3763": {
      "op": "frame_dig 4",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0"
      ]
    },
    "3765": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "game_register#0",
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0",
        "3"
      ]
    },
    "3767": {
      "op": "getbyte",
      "defined_out": [
        "game_register#0",
        "game_state#0",
        "tmp%16#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%16#1"
      ]
    },
    "3768": {
      "op": "frame_dig 14",
      "defined_out": [
        "game_register#0",
        "game_state#0",
        "score#0",
        "tmp%16#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%16#1",
        "score#0"
      ]
    },
    "3770": {
      "op": "<",
      "defined_out": [
        "game_register#0",
        "game_state#0",
        "score#0",
        "tmp%17#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%17#1"
      ]
    },
    "3771": {
      "op": "bz play_game_else_body@30",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1"
      ]
    },
    "3774": {
      "block": "play_game_if_body@29",
      "stack_in": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0"
      ]
    },
    "3776": {
      "op": "dup",
      "defined_out": [
        "game_state#0",
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "3777": {
      "error": "Index access is out of bounds",
      "op": "extract 4 1 // on error: Index access is out of bounds",
      "defined_out": [
        "assigned_value%3#1",
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0",
        "assigned_value%3#1"
      ]
    },
    "3780": {
      "op": "replace2 5",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0"
      ]
    },
    "3782": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "3783": {
      "error": "Index access is out of bounds",
      "op": "extract 89 32 // on error: Index access is out of bounds",
      "defined_out": [
        "assigned_value%4#1",
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0",
        "assigned_value%4#1"
      ]
    },
    "3786": {
      "op": "replace2 121",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0"
      ]
    },
    "3788": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "3789": {
      "error": "Index access is out of bounds",
      "op": "extract 3 1 // on error: Index access is out of bounds",
      "defined_out": [
        "assigned_value%5#1",
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0",
        "assigned_value%5#1"
      ]
    },
    "3792": {
      "op": "replace2 4",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0"
      ]
    },
    "3794": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "3795": {
      "error": "Index access is out of bounds",
      "op": "extract 57 32 // on error: Index access is out of bounds",
      "defined_out": [
        "assigned_value%6#0",
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0",
        "assigned_value%6#0"
      ]
    },
    "3798": {
      "op": "replace2 89",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0"
      ]
    },
    "3800": {
      "op": "frame_dig 10",
      "defined_out": [
        "game_state#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0",
        "uint8%0#0"
      ]
    },
    "3802": {
      "op": "replace2 3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0"
      ]
    },
    "3804": {
      "op": "frame_dig 7",
      "defined_out": [
        "game_state#0",
        "player#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0",
        "player#0"
      ]
    },
    "3806": {
      "op": "replace2 57",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0"
      ]
    },
    "3808": {
      "op": "frame_bury 4",
      "defined_out": [
        "game_state#0",
        "player#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1"
      ]
    },
    "3810": {
      "block": "play_game_after_if_else@38",
      "stack_in": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0"
      ]
    },
    "3812": {
      "error": "Index access is out of bounds",
      "op": "extract 3 1 // on error: Index access is out of bounds",
      "defined_out": [
        "game_state#0",
        "reinterpret_biguint%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "reinterpret_biguint%1#0"
      ]
    },
    "3815": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "reinterpret_biguint%1#0",
        "reinterpret_biguint%1#0"
      ]
    },
    "3816": {
      "op": "frame_bury 8",
      "defined_out": [
        "game_state#0",
        "reinterpret_biguint%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "reinterpret_biguint%1#0"
      ]
    },
    "3818": {
      "op": "bytec_2 // \"t_\"",
      "defined_out": [
        "\"t_\"",
        "game_state#0",
        "reinterpret_biguint%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "reinterpret_biguint%1#0",
        "\"t_\""
      ]
    },
    "3819": {
      "op": "box_get",
      "defined_out": [
        "game_state#0",
        "maybe_exists%10#0",
        "maybe_value%7#0",
        "reinterpret_biguint%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "reinterpret_biguint%1#0",
        "maybe_value%7#0",
        "maybe_exists%10#0"
      ]
    },
    "3820": {
      "error": "check self.box_game_trophy exists",
      "op": "assert // check self.box_game_trophy exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "reinterpret_biguint%1#0",
        "maybe_value%7#0"
      ]
    },
    "3821": {
      "error": "Index access is out of bounds",
      "op": "extract 0 1 // on error: Index access is out of bounds",
      "defined_out": [
        "game_state#0",
        "reinterpret_biguint%1#0",
        "reinterpret_biguint%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "reinterpret_biguint%1#0",
        "reinterpret_biguint%2#0"
      ]
    },
    "3824": {
      "op": "b>",
      "defined_out": [
        "game_state#0",
        "reinterpret_biguint%1#0",
        "tmp%43#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%43#0"
      ]
    },
    "3825": {
      "op": "bz play_game_after_if_else@8",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1"
      ]
    },
    "3828": {
      "op": "bytec_2 // \"t_\"",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "\"t_\""
      ]
    },
    "3829": {
      "op": "box_get",
      "defined_out": [
        "game_state#0",
        "maybe_exists%11#0",
        "maybe_value%8#0",
        "reinterpret_biguint%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "maybe_value%8#0",
        "maybe_exists%11#0"
      ]
    },
    "3830": {
      "error": "check self.box_game_trophy exists",
      "op": "assert // check self.box_game_trophy exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "maybe_value%8#0"
      ]
    },
    "3831": {
      "op": "frame_dig 8",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "maybe_value%8#0",
        "reinterpret_biguint%1#0"
      ]
    },
    "3833": {
      "op": "replace2 0",
      "defined_out": [
        "game_state#0",
        "reinterpret_biguint%1#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "updated_data%0#0"
      ]
    },
    "3835": {
      "op": "bytec_2 // \"t_\"",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "updated_data%0#0",
        "\"t_\""
      ]
    },
    "3836": {
      "op": "dig 1",
      "defined_out": [
        "\"t_\"",
        "game_state#0",
        "reinterpret_biguint%1#0",
        "updated_data%0#0",
        "updated_data%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "updated_data%0#0",
        "\"t_\"",
        "updated_data%0#0 (copy)"
      ]
    },
    "3838": {
      "op": "box_put",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "updated_data%0#0"
      ]
    },
    "3839": {
      "error": "Index access is out of bounds",
      "op": "extract 9 32 // on error: Index access is out of bounds",
      "defined_out": [
        "game_state#0",
        "reinterpret_biguint%1#0",
        "reinterpret_bytes[32]%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "reinterpret_bytes[32]%0#0"
      ]
    },
    "3842": {
      "op": "global ZeroAddress",
      "defined_out": [
        "game_state#0",
        "reinterpret_biguint%1#0",
        "reinterpret_bytes[32]%0#0",
        "tmp%44#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "reinterpret_bytes[32]%0#0",
        "tmp%44#0"
      ]
    },
    "3844": {
      "op": "!=",
      "defined_out": [
        "game_state#0",
        "reinterpret_biguint%1#0",
        "tmp%45#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%45#0"
      ]
    },
    "3845": {
      "op": "bz play_game_after_if_else@7",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1"
      ]
    },
    "3848": {
      "op": "bytec_2 // \"t_\"",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "\"t_\""
      ]
    },
    "3849": {
      "op": "box_get",
      "defined_out": [
        "game_state#0",
        "maybe_exists%13#0",
        "maybe_value%10#0",
        "reinterpret_biguint%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "maybe_value%10#0",
        "maybe_exists%13#0"
      ]
    },
    "3850": {
      "error": "check self.box_game_trophy exists",
      "op": "assert // check self.box_game_trophy exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "maybe_value%10#0"
      ]
    },
    "3851": {
      "op": "dup",
      "defined_out": [
        "game_state#0",
        "maybe_value%10#0",
        "maybe_value%10#0 (copy)",
        "reinterpret_biguint%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "maybe_value%10#0",
        "maybe_value%10#0 (copy)"
      ]
    },
    "3852": {
      "error": "Index access is out of bounds",
      "op": "extract 9 32 // on error: Index access is out of bounds",
      "defined_out": [
        "game_state#0",
        "maybe_value%10#0",
        "reinterpret_biguint%1#0",
        "reinterpret_bytes[32]%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "maybe_value%10#0",
        "reinterpret_bytes[32]%1#0"
      ]
    },
    "3855": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "reinterpret_bytes[32]%1#0",
        "maybe_value%10#0"
      ]
    },
    "3856": {
      "op": "intc_0 // 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "reinterpret_bytes[32]%1#0",
        "maybe_value%10#0",
        "1"
      ]
    },
    "3857": {
      "op": "extract_uint64",
      "defined_out": [
        "game_state#0",
        "reinterpret_biguint%1#0",
        "reinterpret_bytes[32]%1#0",
        "tmp%47#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "reinterpret_bytes[32]%1#0",
        "tmp%47#0"
      ]
    },
    "3858": {
      "op": "asset_holding_get AssetBalance",
      "defined_out": [
        "asset_balance#0",
        "asset_exists#0",
        "game_state#0",
        "reinterpret_biguint%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "asset_balance#0",
        "asset_exists#0"
      ]
    },
    "3860": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "asset_exists#0",
        "asset_balance#0"
      ]
    },
    "3861": {
      "op": "frame_bury 11",
      "defined_out": [
        "asset_balance#0",
        "asset_exists#0",
        "game_state#0",
        "reinterpret_biguint%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "asset_exists#0"
      ]
    },
    "3863": {
      "op": "bz play_game_after_if_else@7",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1"
      ]
    },
    "3866": {
      "op": "frame_dig 11",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "asset_balance#0"
      ]
    },
    "3868": {
      "op": "intc_0 // 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "asset_balance#0",
        "1"
      ]
    },
    "3869": {
      "op": "==",
      "defined_out": [
        "asset_balance#0",
        "game_state#0",
        "reinterpret_biguint%1#0",
        "tmp%48#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%48#0"
      ]
    },
    "3870": {
      "op": "bz play_game_after_if_else@7",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1"
      ]
    },
    "3873": {
      "op": "bytec_2 // \"t_\"",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "\"t_\""
      ]
    },
    "3874": {
      "op": "box_get",
      "defined_out": [
        "asset_balance#0",
        "game_state#0",
        "maybe_exists%15#0",
        "maybe_value%12#0",
        "reinterpret_biguint%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "maybe_value%12#0",
        "maybe_exists%15#0"
      ]
    },
    "3875": {
      "error": "check self.box_game_trophy exists",
      "op": "assert // check self.box_game_trophy exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "maybe_value%12#0"
      ]
    },
    "3876": {
      "op": "dup",
      "defined_out": [
        "asset_balance#0",
        "game_state#0",
        "maybe_value%12#0",
        "maybe_value%12#0 (copy)",
        "reinterpret_biguint%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "maybe_value%12#0",
        "maybe_value%12#0 (copy)"
      ]
    },
    "3877": {
      "op": "intc_0 // 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "maybe_value%12#0",
        "maybe_value%12#0 (copy)",
        "1"
      ]
    },
    "3878": {
      "op": "extract_uint64",
      "defined_out": [
        "asset_balance#0",
        "asset_id#0",
        "game_state#0",
        "maybe_value%12#0",
        "reinterpret_biguint%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "maybe_value%12#0",
        "asset_id#0"
      ]
    },
    "3879": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "asset_id#0",
        "maybe_value%12#0"
      ]
    },
    "3880": {
      "error": "Index access is out of bounds",
      "op": "extract 9 32 // on error: Index access is out of bounds",
      "defined_out": [
        "asset_balance#0",
        "asset_id#0",
        "asset_sender#0",
        "game_state#0",
        "reinterpret_biguint%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "asset_id#0",
        "asset_sender#0"
      ]
    },
    "3883": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "asset_balance#0",
        "asset_id#0",
        "asset_receiver#0",
        "asset_sender#0",
        "game_state#0",
        "reinterpret_biguint%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "asset_id#0",
        "asset_sender#0",
        "asset_receiver#0"
      ]
    },
    "3885": {
      "op": "itxn_begin"
    },
    "3886": {
      "op": "pushbytes \"pieout:j{\\\"method\\\":\\\"play_game\\\",\\\"subroutine:\\\"clawback_itxn\\\",\\\"concern\\\":\\\"itxn.asset_transfer;clawback_trophy_asset\\\"}\"",
      "defined_out": [
        "\"pieout:j{\\\"method\\\":\\\"play_game\\\",\\\"subroutine:\\\"clawback_itxn\\\",\\\"concern\\\":\\\"itxn.asset_transfer;clawback_trophy_asset\\\"}\"",
        "asset_balance#0",
        "asset_id#0",
        "asset_receiver#0",
        "asset_sender#0",
        "game_state#0",
        "reinterpret_biguint%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "asset_id#0",
        "asset_sender#0",
        "asset_receiver#0",
        "\"pieout:j{\\\"method\\\":\\\"play_game\\\",\\\"subroutine:\\\"clawback_itxn\\\",\\\"concern\\\":\\\"itxn.asset_transfer;clawback_trophy_asset\\\"}\""
      ]
    },
    "4000": {
      "op": "itxn_field Note",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "asset_id#0",
        "asset_sender#0",
        "asset_receiver#0"
      ]
    },
    "4002": {
      "op": "intc_0 // 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "asset_id#0",
        "asset_sender#0",
        "asset_receiver#0",
        "1"
      ]
    },
    "4003": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "asset_id#0",
        "asset_sender#0",
        "asset_receiver#0"
      ]
    },
    "4005": {
      "op": "itxn_field AssetReceiver"
    },
    "4007": {
      "op": "itxn_field AssetSender",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "asset_id#0",
        "asset_receiver#0"
      ]
    },
    "4009": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1"
      ]
    },
    "4011": {
      "op": "pushint 4 // axfer",
      "defined_out": [
        "asset_balance#0",
        "axfer",
        "game_state#0",
        "reinterpret_biguint%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "axfer"
      ]
    },
    "4013": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1"
      ]
    },
    "4015": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "0"
      ]
    },
    "4016": {
      "op": "itxn_field Fee",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1"
      ]
    },
    "4018": {
      "op": "itxn_submit"
    },
    "4019": {
      "block": "play_game_after_if_else@7",
      "stack_in": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1"
      ],
      "op": "bytec_2 // \"t_\"",
      "defined_out": [
        "\"t_\""
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "\"t_\""
      ]
    },
    "4020": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%17#0",
        "maybe_value%14#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "maybe_value%14#0",
        "maybe_exists%17#0"
      ]
    },
    "4021": {
      "error": "check self.box_game_trophy exists",
      "op": "assert // check self.box_game_trophy exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "maybe_value%14#0"
      ]
    },
    "4022": {
      "op": "txn Sender",
      "defined_out": [
        "assigned_value%1#0",
        "maybe_value%14#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "maybe_value%14#0",
        "assigned_value%1#0"
      ]
    },
    "4024": {
      "op": "replace2 9",
      "defined_out": [
        "updated_data%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "updated_data%1#0"
      ]
    },
    "4026": {
      "op": "bytec_2 // \"t_\"",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "updated_data%1#0",
        "\"t_\""
      ]
    },
    "4027": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "\"t_\"",
        "updated_data%1#0"
      ]
    },
    "4028": {
      "op": "box_put",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1"
      ]
    },
    "4029": {
      "block": "play_game_after_if_else@8",
      "stack_in": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0"
      ]
    },
    "4031": {
      "op": "dup",
      "defined_out": [
        "game_state#0",
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "4032": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "game_state#0",
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0",
        "game_state#0 (copy)",
        "2"
      ]
    },
    "4033": {
      "op": "getbyte",
      "defined_out": [
        "game_state#0",
        "tmp%53#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0",
        "tmp%53#0"
      ]
    },
    "4034": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "game_state#0",
        "tmp%53#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0",
        "tmp%53#0",
        "1"
      ]
    },
    "4035": {
      "op": "-",
      "defined_out": [
        "game_state#0",
        "to_encode%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0",
        "to_encode%2#0"
      ]
    },
    "4036": {
      "op": "itob",
      "defined_out": [
        "game_state#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0",
        "val_as_bytes%1#0"
      ]
    },
    "4037": {
      "op": "dup",
      "defined_out": [
        "game_state#0",
        "val_as_bytes%1#0",
        "val_as_bytes%1#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0",
        "val_as_bytes%1#0",
        "val_as_bytes%1#0 (copy)"
      ]
    },
    "4038": {
      "op": "bitlen",
      "defined_out": [
        "bitlen%0#0",
        "game_state#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0",
        "val_as_bytes%1#0",
        "bitlen%0#0"
      ]
    },
    "4039": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "bitlen%0#0",
        "game_state#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0",
        "val_as_bytes%1#0",
        "bitlen%0#0",
        "8"
      ]
    },
    "4041": {
      "op": "<=",
      "defined_out": [
        "game_state#0",
        "no_overflow%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0",
        "val_as_bytes%1#0",
        "no_overflow%0#0"
      ]
    },
    "4042": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0",
        "val_as_bytes%1#0"
      ]
    },
    "4043": {
      "op": "extract 7 1",
      "defined_out": [
        "game_state#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0",
        "uint8%0#0"
      ]
    },
    "4046": {
      "op": "replace2 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0"
      ]
    },
    "4048": {
      "op": "frame_dig 2",
      "defined_out": [
        "game_register#0",
        "game_state#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0",
        "game_register#0"
      ]
    },
    "4050": {
      "op": "bytec 6 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "game_register#0",
        "game_state#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0",
        "game_register#0",
        "0x0000000000000000"
      ]
    },
    "4052": {
      "op": "replace2 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0",
        "game_register#0"
      ]
    },
    "4054": {
      "op": "bytec 6 // 0x0000000000000000",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0",
        "game_register#0",
        "0x0000000000000000"
      ]
    },
    "4056": {
      "op": "replace2 10",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0",
        "game_register#0"
      ]
    },
    "4058": {
      "op": "global Round",
      "defined_out": [
        "game_register#0",
        "game_state#0",
        "tmp%54#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0",
        "game_register#0",
        "tmp%54#0"
      ]
    },
    "4060": {
      "op": "pushint 30 // 30",
      "defined_out": [
        "30",
        "game_register#0",
        "game_state#0",
        "tmp%54#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0",
        "game_register#0",
        "tmp%54#0",
        "30"
      ]
    },
    "4062": {
      "op": "+",
      "defined_out": [
        "game_register#0",
        "game_state#0",
        "to_encode%3#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0",
        "game_register#0",
        "to_encode%3#0"
      ]
    },
    "4063": {
      "op": "itob",
      "defined_out": [
        "game_register#0",
        "game_state#0",
        "uint8%0#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0",
        "game_register#0",
        "val_as_bytes%2#0"
      ]
    },
    "4064": {
      "op": "replace2 18",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0",
        "game_register#0"
      ]
    },
    "4066": {
      "op": "bytec_0 // \"r_\"",
      "defined_out": [
        "\"r_\"",
        "game_register#0",
        "game_state#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0",
        "game_register#0",
        "\"r_\""
      ]
    },
    "4067": {
      "op": "txn Sender",
      "defined_out": [
        "\"r_\"",
        "game_register#0",
        "game_state#0",
        "materialized_values%6#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0",
        "game_register#0",
        "\"r_\"",
        "materialized_values%6#0"
      ]
    },
    "4069": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%9#0",
        "game_register#0",
        "game_state#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0",
        "game_register#0",
        "box_prefixed_key%9#0"
      ]
    },
    "4070": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0",
        "box_prefixed_key%9#0",
        "game_register#0"
      ]
    },
    "4071": {
      "op": "box_put",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0"
      ]
    },
    "4072": {
      "op": "frame_dig -1",
      "defined_out": [
        "game_id#0 (copy)",
        "game_register#0",
        "game_state#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0",
        "game_id#0 (copy)"
      ]
    },
    "4074": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_id#0 (copy)",
        "game_state#0"
      ]
    },
    "4075": {
      "op": "bytec_0 // \"r_\"",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_id#0 (copy)",
        "game_state#0",
        "\"r_\""
      ]
    },
    "4076": {
      "op": "bytec_3 // \"p_\"",
      "defined_out": [
        "\"p_\"",
        "\"r_\"",
        "game_id#0 (copy)",
        "game_register#0",
        "game_state#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_id#0 (copy)",
        "game_state#0",
        "\"r_\"",
        "\"p_\""
      ]
    },
    "4077": {
      "callsub": "smart_contracts.pieout.subroutines.is_game_over",
      "op": "callsub is_game_over",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0"
      ]
    },
    "4080": {
      "op": "frame_dig 0",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_register#0",
        "game_state#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0",
        "box_prefixed_key%0#0"
      ]
    },
    "4082": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "4083": {
      "op": "box_put",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1"
      ]
    },
    "4084": {
      "retsub": true,
      "op": "retsub"
    },
    "4085": {
      "block": "play_game_else_body@30",
      "stack_in": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0"
      ]
    },
    "4087": {
      "error": "Index access is out of bounds",
      "op": "extract 89 32 // on error: Index access is out of bounds",
      "defined_out": [
        "game_state#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%18#0"
      ]
    },
    "4090": {
      "op": "global ZeroAddress",
      "defined_out": [
        "game_state#0",
        "tmp%18#0",
        "tmp%19#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%18#0",
        "tmp%19#1"
      ]
    },
    "4092": {
      "op": "==",
      "defined_out": [
        "game_state#0",
        "tmp%20#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%20#1"
      ]
    },
    "4093": {
      "op": "bnz play_game_if_body@32",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1"
      ]
    },
    "4096": {
      "op": "frame_dig 4",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0"
      ]
    },
    "4098": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0",
        "4"
      ]
    },
    "4100": {
      "op": "getbyte",
      "defined_out": [
        "game_state#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%22#0"
      ]
    },
    "4101": {
      "op": "frame_dig 14",
      "defined_out": [
        "game_state#0",
        "score#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%22#0",
        "score#0"
      ]
    },
    "4103": {
      "op": "<",
      "defined_out": [
        "game_state#0",
        "score#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%23#0"
      ]
    },
    "4104": {
      "op": "bz play_game_else_body@33",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1"
      ]
    },
    "4107": {
      "block": "play_game_if_body@32",
      "stack_in": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0"
      ]
    },
    "4109": {
      "op": "dup",
      "defined_out": [
        "game_state#0",
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "4110": {
      "error": "Index access is out of bounds",
      "op": "extract 4 1 // on error: Index access is out of bounds",
      "defined_out": [
        "assigned_value%9#0",
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0",
        "assigned_value%9#0"
      ]
    },
    "4113": {
      "op": "replace2 5",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0"
      ]
    },
    "4115": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "4116": {
      "error": "Index access is out of bounds",
      "op": "extract 89 32 // on error: Index access is out of bounds",
      "defined_out": [
        "assigned_value%10#0",
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0",
        "assigned_value%10#0"
      ]
    },
    "4119": {
      "op": "replace2 121",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0"
      ]
    },
    "4121": {
      "op": "frame_dig 10",
      "defined_out": [
        "game_state#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0",
        "uint8%0#0"
      ]
    },
    "4123": {
      "op": "replace2 4",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0"
      ]
    },
    "4125": {
      "op": "frame_dig 7",
      "defined_out": [
        "game_state#0",
        "player#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0",
        "player#0"
      ]
    },
    "4127": {
      "op": "replace2 89",
      "defined_out": [
        "game_state#0",
        "game_state%out#24",
        "player#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state%out#24"
      ]
    },
    "4129": {
      "op": "frame_bury 6",
      "defined_out": [
        "game_state#0",
        "game_state%out#24",
        "player#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1"
      ]
    },
    "4131": {
      "block": "play_game_after_if_else@37",
      "stack_in": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0"
      ]
    },
    "4133": {
      "op": "frame_bury 4",
      "defined_out": [
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1"
      ]
    },
    "4135": {
      "op": "b play_game_after_if_else@38"
    },
    "4138": {
      "block": "play_game_else_body@33",
      "stack_in": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0"
      ]
    },
    "4140": {
      "error": "Index access is out of bounds",
      "op": "extract 121 32 // on error: Index access is out of bounds",
      "defined_out": [
        "game_state#0",
        "tmp%24#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%24#1"
      ]
    },
    "4143": {
      "op": "global ZeroAddress",
      "defined_out": [
        "game_state#0",
        "tmp%24#1",
        "tmp%25#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%24#1",
        "tmp%25#1"
      ]
    },
    "4145": {
      "op": "==",
      "defined_out": [
        "game_state#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%26#0"
      ]
    },
    "4146": {
      "op": "bnz play_game_if_body@35",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1"
      ]
    },
    "4149": {
      "op": "frame_dig 4",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0"
      ]
    },
    "4151": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0",
        "5"
      ]
    },
    "4153": {
      "op": "getbyte",
      "defined_out": [
        "game_state#0",
        "tmp%28#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%28#1"
      ]
    },
    "4154": {
      "op": "frame_dig 14",
      "defined_out": [
        "game_state#0",
        "score#0",
        "tmp%28#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%28#1",
        "score#0"
      ]
    },
    "4156": {
      "op": "<",
      "defined_out": [
        "game_state#0",
        "score#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%29#0"
      ]
    },
    "4157": {
      "op": "bz play_game_after_if_else@37",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1"
      ]
    },
    "4160": {
      "block": "play_game_if_body@35",
      "stack_in": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0"
      ]
    },
    "4162": {
      "op": "frame_dig 10",
      "defined_out": [
        "game_state#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0",
        "uint8%0#0"
      ]
    },
    "4164": {
      "op": "replace2 5",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0"
      ]
    },
    "4166": {
      "op": "frame_dig 7",
      "defined_out": [
        "game_state#0",
        "player#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state#0",
        "player#0"
      ]
    },
    "4168": {
      "op": "replace2 121",
      "defined_out": [
        "game_state#0",
        "game_state%out#24",
        "player#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "game_state%out#24"
      ]
    },
    "4170": {
      "op": "frame_bury 6",
      "defined_out": [
        "game_state#0",
        "game_state%out#24",
        "player#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_register#0",
        "game_register#17",
        "game_state#0",
        "game_state#43",
        "game_state%out#24",
        "player#0",
        "reinterpret_biguint%1#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%3#1"
      ]
    },
    "4172": {
      "op": "b play_game_after_if_else@37"
    },
    "4175": {
      "subroutine": "smart_contracts.pieout.contract.Pieout.trigger_game_event",
      "params": {
        "game_id#0": "uint64",
        "trigger_id#0": "bytes"
      },
      "block": "trigger_game_event",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "4178": {
      "op": "global GroupSize",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "4180": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "1"
      ]
    },
    "4181": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "4182": {
      "error": "Invalid group size. This app call can only take standalone transactions.",
      "op": "assert // Invalid group size. This app call can only take standalone transactions.",
      "stack_out": []
    },
    "4183": {
      "op": "frame_dig -2",
      "defined_out": [
        "game_id#0 (copy)"
      ],
      "stack_out": [
        "game_id#0 (copy)"
      ]
    },
    "4185": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "4186": {
      "op": "bytec 4 // \"s_\"",
      "defined_out": [
        "\"s_\"",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "\"s_\""
      ]
    },
    "4188": {
      "op": "swap",
      "stack_out": [
        "\"s_\"",
        "encoded_value%0#0"
      ]
    },
    "4189": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "4190": {
      "op": "dupn 2",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "4192": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "box_prefixed_key%0#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0",
        "_%0#0",
        "maybe_exists%0#0"
      ]
    },
    "4193": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0",
        "maybe_exists%0#0"
      ]
    },
    "4195": {
      "error": "Box game state not found. Check if game ID exists.",
      "op": "assert // Box game state not found. Check if game ID exists.",
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "4196": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "maybe_exists%1#0"
      ]
    },
    "4197": {
      "error": "check self.box_game_state entry exists",
      "op": "assert // check self.box_game_state entry exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "4198": {
      "op": "frame_dig -1",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "trigger_id#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "trigger_id#0 (copy)"
      ]
    },
    "4200": {
      "op": "btoi",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0"
      ]
    },
    "4201": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%2#0"
      ]
    },
    "4202": {
      "op": "bnz trigger_game_event_else_body@6",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0"
      ]
    },
    "4205": {
      "op": "frame_dig 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0"
      ]
    },
    "4207": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_state#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "4208": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "game_state#0 (copy)",
        "0"
      ]
    },
    "4209": {
      "op": "getbit",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "is_true%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "is_true%0#0"
      ]
    },
    "4210": {
      "op": "bytec_1 // 0x00",
      "defined_out": [
        "0x00",
        "box_prefixed_key%0#0",
        "game_state#0",
        "is_true%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "is_true%0#0",
        "0x00"
      ]
    },
    "4211": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "is_true%0#0",
        "0x00",
        "0"
      ]
    },
    "4212": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "0x00",
        "0",
        "is_true%0#0"
      ]
    },
    "4214": {
      "op": "setbit",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_bool%0#0",
        "game_state#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "encoded_bool%0#0"
      ]
    },
    "4215": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "encoded_bool%0#0",
        "0"
      ]
    },
    "4216": {
      "op": "getbit",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "tmp%4#0"
      ]
    },
    "4217": {
      "op": "!",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "tmp%5#0"
      ]
    },
    "4218": {
      "error": "Game state staking finalized boolean value mismatch.",
      "op": "assert // Game state staking finalized boolean value mismatch.",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0"
      ]
    },
    "4219": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "4220": {
      "error": "Index access is out of bounds",
      "op": "extract 9 8 // on error: Index access is out of bounds",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "reinterpret_biguint%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "4223": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "reinterpret_biguint%0#0",
        "tmp%2#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "reinterpret_biguint%0#0",
        "tmp%6#0"
      ]
    },
    "4225": {
      "op": "itob",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "reinterpret_biguint%0#0",
        "tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "reinterpret_biguint%0#0",
        "tmp%7#0"
      ]
    },
    "4226": {
      "op": "b<",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "tmp%8#0"
      ]
    },
    "4227": {
      "error": "Invalid time frame. Call made outside the permitted block or timestamp range.",
      "op": "assert // Invalid time frame. Call made outside the permitted block or timestamp range.",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0"
      ]
    },
    "4228": {
      "error": "Index access is out of bounds",
      "op": "extract 25 32 // on error: Index access is out of bounds",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%9#0"
      ]
    },
    "4231": {
      "op": "txn Sender",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%10#0",
        "tmp%2#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%9#0",
        "tmp%10#0"
      ]
    },
    "4233": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%11#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%11#0"
      ]
    },
    "4234": {
      "op": "bz trigger_game_event_else_body@4",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0"
      ]
    },
    "4237": {
      "op": "frame_dig 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0"
      ]
    },
    "4239": {
      "error": "Index access is out of bounds",
      "op": "extract 2 1 // on error: Index access is out of bounds",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "reinterpret_biguint%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "reinterpret_biguint%1#0"
      ]
    },
    "4242": {
      "op": "bytec 7 // 0x01",
      "defined_out": [
        "0x01",
        "box_prefixed_key%0#0",
        "game_state#0",
        "reinterpret_biguint%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "reinterpret_biguint%1#0",
        "0x01"
      ]
    },
    "4244": {
      "op": "b==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%12#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0"
      ]
    },
    "4245": {
      "op": "bz trigger_game_event_else_body@4",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0"
      ]
    },
    "4248": {
      "op": "frame_dig -2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_id#0 (copy)"
      ]
    },
    "4250": {
      "op": "frame_dig 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_id#0 (copy)",
        "game_state#0"
      ]
    },
    "4252": {
      "op": "bytec_0 // \"r_\"",
      "defined_out": [
        "\"r_\"",
        "box_prefixed_key%0#0",
        "game_id#0 (copy)",
        "game_state#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_id#0 (copy)",
        "game_state#0",
        "\"r_\""
      ]
    },
    "4253": {
      "op": "bytec_3 // \"p_\"",
      "defined_out": [
        "\"p_\"",
        "\"r_\"",
        "box_prefixed_key%0#0",
        "game_id#0 (copy)",
        "game_state#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_id#0 (copy)",
        "game_state#0",
        "\"r_\"",
        "\"p_\""
      ]
    },
    "4254": {
      "callsub": "smart_contracts.pieout.subroutines.is_game_over",
      "op": "callsub is_game_over",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0"
      ]
    },
    "4257": {
      "op": "frame_bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0"
      ]
    },
    "4259": {
      "block": "trigger_game_event_after_if_else@10",
      "stack_in": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "box_prefixed_key%0#0"
      ]
    },
    "4261": {
      "op": "frame_dig 1",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "4263": {
      "op": "box_put",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0"
      ]
    },
    "4264": {
      "retsub": true,
      "op": "retsub"
    },
    "4265": {
      "block": "trigger_game_event_else_body@4",
      "stack_in": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "game_id#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_id#0 (copy)"
      ]
    },
    "4267": {
      "op": "frame_dig 1",
      "defined_out": [
        "game_id#0 (copy)",
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_id#0 (copy)",
        "game_state#0"
      ]
    },
    "4269": {
      "callsub": "smart_contracts.pieout.subroutines.is_game_live",
      "op": "callsub is_game_live",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0"
      ]
    },
    "4272": {
      "op": "frame_bury 1",
      "defined_out": [
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0"
      ]
    },
    "4274": {
      "op": "b trigger_game_event_after_if_else@10"
    },
    "4277": {
      "block": "trigger_game_event_else_body@6",
      "stack_in": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%2#0"
      ]
    },
    "4279": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%2#0",
        "2"
      ]
    },
    "4280": {
      "op": "==",
      "defined_out": [
        "tmp%14#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%14#0"
      ]
    },
    "4281": {
      "error": "Game event not found. Check if game event Trigger ID exists",
      "op": "assert // Game event not found. Check if game event Trigger ID exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0"
      ]
    },
    "4282": {
      "op": "frame_dig 1",
      "defined_out": [
        "game_state#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0"
      ]
    },
    "4284": {
      "op": "dup",
      "defined_out": [
        "game_state#0",
        "game_state#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "4285": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "game_state#0",
        "game_state#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "game_state#0 (copy)",
        "0"
      ]
    },
    "4286": {
      "op": "getbit",
      "defined_out": [
        "game_state#0",
        "is_true%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "is_true%1#0"
      ]
    },
    "4287": {
      "op": "bytec_1 // 0x00",
      "defined_out": [
        "0x00",
        "game_state#0",
        "is_true%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "is_true%1#0",
        "0x00"
      ]
    },
    "4288": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "is_true%1#0",
        "0x00",
        "0"
      ]
    },
    "4289": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "0x00",
        "0",
        "is_true%1#0"
      ]
    },
    "4291": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%1#0",
        "game_state#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "encoded_bool%1#0"
      ]
    },
    "4292": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "encoded_bool%1#0",
        "0"
      ]
    },
    "4293": {
      "op": "getbit",
      "defined_out": [
        "game_state#0",
        "tmp%15#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "tmp%15#0"
      ]
    },
    "4294": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "game_state#0",
        "tmp%15#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "tmp%15#0",
        "1"
      ]
    },
    "4295": {
      "op": "==",
      "defined_out": [
        "game_state#0",
        "tmp%16#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "tmp%16#0"
      ]
    },
    "4296": {
      "error": "Game state staking finalized boolean value mismatch.",
      "op": "assert // Game state staking finalized boolean value mismatch.",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0"
      ]
    },
    "4297": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "4298": {
      "error": "Index access is out of bounds",
      "op": "extract 9 8 // on error: Index access is out of bounds",
      "defined_out": [
        "game_state#0",
        "reinterpret_biguint%3#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "reinterpret_biguint%3#0"
      ]
    },
    "4301": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "game_state#0",
        "reinterpret_biguint%3#0",
        "tmp%17#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "reinterpret_biguint%3#0",
        "tmp%17#0"
      ]
    },
    "4303": {
      "op": "itob",
      "defined_out": [
        "game_state#0",
        "reinterpret_biguint%3#0",
        "tmp%18#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "reinterpret_biguint%3#0",
        "tmp%18#0"
      ]
    },
    "4304": {
      "op": "b<",
      "defined_out": [
        "game_state#0",
        "tmp%19#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "tmp%19#0"
      ]
    },
    "4305": {
      "error": "Invalid time frame. Call made outside the permitted block or timestamp range.",
      "op": "assert // Invalid time frame. Call made outside the permitted block or timestamp range.",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0"
      ]
    },
    "4306": {
      "op": "frame_dig -2",
      "defined_out": [
        "game_id#0 (copy)",
        "game_state#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "game_id#0 (copy)"
      ]
    },
    "4308": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_id#0 (copy)",
        "game_state#0"
      ]
    },
    "4309": {
      "op": "bytec_0 // \"r_\"",
      "defined_out": [
        "\"r_\"",
        "game_id#0 (copy)",
        "game_state#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_id#0 (copy)",
        "game_state#0",
        "\"r_\""
      ]
    },
    "4310": {
      "op": "bytec_3 // \"p_\"",
      "defined_out": [
        "\"p_\"",
        "\"r_\"",
        "game_id#0 (copy)",
        "game_state#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_id#0 (copy)",
        "game_state#0",
        "\"r_\"",
        "\"p_\""
      ]
    },
    "4311": {
      "callsub": "smart_contracts.pieout.subroutines.is_game_over",
      "op": "callsub is_game_over",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0"
      ]
    },
    "4314": {
      "op": "frame_bury 1",
      "defined_out": [
        "game_state#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0"
      ]
    },
    "4316": {
      "op": "b trigger_game_event_after_if_else@10"
    },
    "4319": {
      "subroutine": "smart_contracts.pieout.contract.Pieout.reset_game",
      "params": {
        "game_id#0": "uint64",
        "stake_pay#0": "uint64"
      },
      "block": "reset_game",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "4322": {
      "op": "global GroupSize",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "4324": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "2"
      ]
    },
    "4325": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "4326": {
      "error": "Invalid group size. Ensure number of transaction in group is within valid bounds.",
      "op": "assert // Invalid group size. Ensure number of transaction in group is within valid bounds.",
      "stack_out": []
    },
    "4327": {
      "op": "frame_dig -2",
      "defined_out": [
        "game_id#0 (copy)"
      ],
      "stack_out": [
        "game_id#0 (copy)"
      ]
    },
    "4329": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "4330": {
      "op": "bytec 4 // \"s_\"",
      "defined_out": [
        "\"s_\"",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "\"s_\""
      ]
    },
    "4332": {
      "op": "dig 1",
      "defined_out": [
        "\"s_\"",
        "encoded_value%0#0",
        "encoded_value%0#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "\"s_\"",
        "encoded_value%0#0 (copy)"
      ]
    },
    "4334": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "4335": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "4336": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "_%0#0",
        "maybe_exists%0#0"
      ]
    },
    "4337": {
      "op": "bury 1",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "maybe_exists%0#0"
      ]
    },
    "4339": {
      "error": "Box game state not found. Check if game ID exists.",
      "op": "assert // Box game state not found. Check if game ID exists.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "4340": {
      "op": "frame_dig -1",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "stake_pay#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "stake_pay#0 (copy)"
      ]
    },
    "4342": {
      "op": "gtxns Sender",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%2#0"
      ]
    },
    "4344": {
      "op": "txn Sender",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "4346": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%4#0"
      ]
    },
    "4347": {
      "error": "Stake payment sender address must match transaction sender address.",
      "op": "assert // Stake payment sender address must match transaction sender address.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "4348": {
      "op": "frame_dig -1",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "stake_pay#0 (copy)"
      ]
    },
    "4350": {
      "op": "gtxns Receiver",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%5#0"
      ]
    },
    "4352": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%5#0",
        "tmp%6#0"
      ]
    },
    "4354": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%7#0"
      ]
    },
    "4355": {
      "error": "Stake payment receiver address must match application address.",
      "op": "assert // Stake payment receiver address must match application address.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "4356": {
      "op": "frame_dig -1",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "stake_pay#0 (copy)"
      ]
    },
    "4358": {
      "op": "gtxns Amount",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%8#0"
      ]
    },
    "4360": {
      "op": "intc 4 // 11000",
      "defined_out": [
        "11000",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%8#0",
        "11000"
      ]
    },
    "4362": {
      "op": ">=",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%9#0"
      ]
    },
    "4363": {
      "error": "Insufficient funds. Stake pay amount is not enough to cover staking requirements.",
      "op": "assert // Insufficient funds. Stake pay amount is not enough to cover staking requirements.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "4364": {
      "op": "dup",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "4365": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "maybe_exists%1#0"
      ]
    },
    "4366": {
      "error": "check self.box_game_state entry exists",
      "op": "assert // check self.box_game_state entry exists",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "4367": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "4368": {
      "error": "Index access is out of bounds",
      "op": "extract 25 32 // on error: Index access is out of bounds",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%10#0"
      ]
    },
    "4371": {
      "op": "txn Sender",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%10#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%10#0",
        "tmp%11#0"
      ]
    },
    "4373": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%12#0"
      ]
    },
    "4374": {
      "error": "Account is not recognized as the admin address for this game.",
      "op": "assert // Account is not recognized as the admin address for this game.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "4375": {
      "op": "dup",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "4376": {
      "op": "pushint 17 // 17",
      "defined_out": [
        "17",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_state#0 (copy)",
        "17"
      ]
    },
    "4378": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%14#0"
      ]
    },
    "4379": {
      "op": "!",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%15#0"
      ]
    },
    "4380": {
      "error": "Prize pool not empty. Amount in prize pool must be zero.",
      "op": "assert // Prize pool not empty. Amount in prize pool must be zero.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "4381": {
      "op": "dup",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "4382": {
      "op": "intc_2 // 2",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_state#0 (copy)",
        "2"
      ]
    },
    "4383": {
      "op": "getbyte",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%17#0"
      ]
    },
    "4384": {
      "op": "!",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%18#0"
      ]
    },
    "4385": {
      "error": "Game lobby not empty. Number of active players must be zero.",
      "op": "assert // Game lobby not empty. Number of active players must be zero.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "4386": {
      "op": "bytec_3 // \"p_\"",
      "defined_out": [
        "\"p_\"",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "\"p_\""
      ]
    },
    "4387": {
      "op": "uncover 3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "\"p_\"",
        "encoded_value%0#0"
      ]
    },
    "4389": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_players_bref#0",
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_players_bref#0"
      ]
    },
    "4390": {
      "op": "intc_1 // 0"
    },
    "4391": {
      "op": "txn Sender",
      "defined_out": [
        "0",
        "box_prefixed_key%0#0",
        "game_players_bref#0",
        "game_state#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_players_bref#0",
        "0",
        "tmp%20#0"
      ]
    },
    "4393": {
      "op": "box_replace",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "4394": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "0"
      ]
    },
    "4395": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "0",
        "0"
      ]
    },
    "4396": {
      "op": "setbit",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "4397": {
      "op": "bytec 7 // 0x01",
      "defined_out": [
        "0x01",
        "box_prefixed_key%0#0",
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "0x01"
      ]
    },
    "4399": {
      "op": "replace2 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "4401": {
      "op": "bytec_1 // 0x00",
      "defined_out": [
        "0x00",
        "box_prefixed_key%0#0",
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "0x00"
      ]
    },
    "4402": {
      "op": "replace2 3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "4404": {
      "op": "bytec_1 // 0x00",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "0x00"
      ]
    },
    "4405": {
      "op": "replace2 4",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "4407": {
      "op": "bytec_1 // 0x00",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "0x00"
      ]
    },
    "4408": {
      "op": "replace2 5",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "4410": {
      "op": "bytec 10 // 0x0020",
      "defined_out": [
        "0x0020",
        "box_prefixed_key%0#0",
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "0x0020"
      ]
    },
    "4412": {
      "op": "replace2 7",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "4414": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%21#0"
      ]
    },
    "4416": {
      "op": "intc 5 // 300",
      "defined_out": [
        "300",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%21#0",
        "300"
      ]
    },
    "4418": {
      "op": "+",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "to_encode%0#0"
      ]
    },
    "4419": {
      "op": "itob",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "val_as_bytes%0#0"
      ]
    },
    "4420": {
      "op": "replace2 9",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "4422": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "4423": {
      "op": "pushint 17 // 17",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_state#0 (copy)",
        "17"
      ]
    },
    "4425": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%23#0"
      ]
    },
    "4426": {
      "op": "intc 4 // 11000",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%23#0",
        "11000"
      ]
    },
    "4428": {
      "op": "+",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "to_encode%1#0"
      ]
    },
    "4429": {
      "op": "itob",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "val_as_bytes%1#0"
      ]
    },
    "4430": {
      "op": "replace2 17",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "4432": {
      "op": "global ZeroAddress",
      "defined_out": [
        "assigned_value%8#0",
        "box_prefixed_key%0#0",
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "assigned_value%8#0"
      ]
    },
    "4434": {
      "op": "replace2 57",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "4436": {
      "op": "global ZeroAddress",
      "defined_out": [
        "assigned_value%9#0",
        "box_prefixed_key%0#0",
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "assigned_value%9#0"
      ]
    },
    "4438": {
      "op": "replace2 89",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "4440": {
      "op": "global ZeroAddress",
      "defined_out": [
        "assigned_value%10#0",
        "box_prefixed_key%0#0",
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "assigned_value%10#0"
      ]
    },
    "4442": {
      "op": "replace2 121",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "4444": {
      "op": "box_put",
      "stack_out": []
    },
    "4445": {
      "retsub": true,
      "op": "retsub"
    },
    "4446": {
      "subroutine": "smart_contracts.pieout.contract.Pieout.delete_game",
      "params": {
        "game_id#0": "uint64"
      },
      "block": "delete_game",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "4449": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "4451": {
      "op": "global GroupSize",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "tmp%0#0"
      ]
    },
    "4453": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "tmp%0#0",
        "1"
      ]
    },
    "4454": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "tmp%1#0"
      ]
    },
    "4455": {
      "error": "Invalid group size. This app call can only take standalone transactions.",
      "op": "assert // Invalid group size. This app call can only take standalone transactions.",
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "4456": {
      "op": "frame_dig -1",
      "defined_out": [
        "game_id#0 (copy)"
      ],
      "stack_out": [
        "tmp%10#0",
        "game_id#0 (copy)"
      ]
    },
    "4458": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0"
      ]
    },
    "4459": {
      "op": "dup",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "encoded_value%0#0"
      ]
    },
    "4460": {
      "op": "bytec 4 // \"s_\"",
      "defined_out": [
        "\"s_\"",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "encoded_value%0#0",
        "\"s_\""
      ]
    },
    "4462": {
      "op": "swap",
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "\"s_\"",
        "encoded_value%0#0"
      ]
    },
    "4463": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "4464": {
      "op": "dupn 2",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "4466": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0",
        "_%0#0",
        "maybe_exists%0#0"
      ]
    },
    "4467": {
      "op": "bury 1",
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0",
        "maybe_exists%0#0"
      ]
    },
    "4469": {
      "error": "Box game state not found. Check if game ID exists.",
      "op": "assert // Box game state not found. Check if game ID exists.",
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "4470": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "maybe_exists%1#0"
      ]
    },
    "4471": {
      "op": "swap",
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "maybe_exists%1#0",
        "game_state#0"
      ]
    },
    "4472": {
      "op": "dup",
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "maybe_exists%1#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "4473": {
      "op": "uncover 2",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_state#0",
        "maybe_exists%1#0"
      ]
    },
    "4475": {
      "error": "check self.box_game_state entry exists",
      "op": "assert // check self.box_game_state entry exists",
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_state#0"
      ]
    },
    "4476": {
      "error": "Index access is out of bounds",
      "op": "extract 25 32 // on error: Index access is out of bounds",
      "defined_out": [
        "admin#0",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0"
      ]
    },
    "4479": {
      "op": "dup",
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "admin#0"
      ]
    },
    "4480": {
      "op": "bytec_0 // \"r_\"",
      "defined_out": [
        "\"r_\"",
        "admin#0",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "admin#0",
        "\"r_\""
      ]
    },
    "4481": {
      "op": "dig 1",
      "defined_out": [
        "\"r_\"",
        "admin#0",
        "admin#0 (copy)",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "admin#0",
        "\"r_\"",
        "admin#0 (copy)"
      ]
    },
    "4483": {
      "op": "concat",
      "defined_out": [
        "admin#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%3#0",
        "encoded_value%0#0",
        "game_state#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "admin#0",
        "box_prefixed_key%3#0"
      ]
    },
    "4484": {
      "op": "dup",
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "box_prefixed_key%3#0"
      ]
    },
    "4485": {
      "op": "cover 2",
      "defined_out": [
        "admin#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%3#0",
        "encoded_value%0#0",
        "game_state#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "admin#0",
        "box_prefixed_key%3#0"
      ]
    },
    "4487": {
      "op": "box_get",
      "defined_out": [
        "admin#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%3#0",
        "encoded_value%0#0",
        "game_state#0",
        "maybe_exists%3#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "admin#0",
        "maybe_value%2#0",
        "maybe_exists%3#0"
      ]
    },
    "4488": {
      "error": "check self.box_game_register entry exists",
      "op": "assert // check self.box_game_register entry exists",
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "admin#0",
        "maybe_value%2#0"
      ]
    },
    "4489": {
      "op": "intc_1 // 0",
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "admin#0",
        "maybe_value%2#0",
        "0"
      ]
    },
    "4490": {
      "op": "getbit",
      "defined_out": [
        "admin#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%3#0",
        "encoded_value%0#0",
        "game_state#0",
        "is_true%0#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "admin#0",
        "is_true%0#0"
      ]
    },
    "4491": {
      "op": "bytec_1 // 0x00",
      "defined_out": [
        "0x00",
        "admin#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%3#0",
        "encoded_value%0#0",
        "game_state#0",
        "is_true%0#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "admin#0",
        "is_true%0#0",
        "0x00"
      ]
    },
    "4492": {
      "op": "intc_1 // 0",
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "admin#0",
        "is_true%0#0",
        "0x00",
        "0"
      ]
    },
    "4493": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "admin#0",
        "0x00",
        "0",
        "is_true%0#0"
      ]
    },
    "4495": {
      "op": "setbit",
      "defined_out": [
        "admin#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%3#0",
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "game_state#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "admin#0",
        "encoded_bool%0#0"
      ]
    },
    "4496": {
      "op": "intc_1 // 0",
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "admin#0",
        "encoded_bool%0#0",
        "0"
      ]
    },
    "4497": {
      "op": "getbit",
      "defined_out": [
        "admin#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%3#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "admin#0",
        "tmp%2#0"
      ]
    },
    "4498": {
      "op": "intc_0 // 1",
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "admin#0",
        "tmp%2#0",
        "1"
      ]
    },
    "4499": {
      "op": "==",
      "defined_out": [
        "admin#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%3#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "admin#0",
        "tmp%3#0"
      ]
    },
    "4500": {
      "error": "Game register hosting game boolean value mismatch.",
      "op": "assert // Game register hosting game boolean value mismatch.",
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "admin#0"
      ]
    },
    "4501": {
      "op": "txn Sender",
      "defined_out": [
        "admin#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%3#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "admin#0",
        "tmp%4#0"
      ]
    },
    "4503": {
      "op": "==",
      "defined_out": [
        "admin#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%3#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "tmp%5#0"
      ]
    },
    "4504": {
      "op": "bnz delete_game_bool_true@2",
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0"
      ]
    },
    "4507": {
      "op": "txn Sender",
      "defined_out": [
        "admin#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%3#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "tmp%6#0"
      ]
    },
    "4509": {
      "op": "global CreatorAddress",
      "defined_out": [
        "admin#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%3#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "4511": {
      "op": "==",
      "defined_out": [
        "admin#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%3#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "tmp%8#0"
      ]
    },
    "4512": {
      "op": "bz delete_game_bool_false@3",
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0"
      ]
    },
    "4515": {
      "block": "delete_game_bool_true@2",
      "stack_in": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0"
      ],
      "op": "intc_0 // 1",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "or_result%0#0"
      ]
    },
    "4516": {
      "block": "delete_game_bool_merge@4",
      "stack_in": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "or_result%0#0"
      ],
      "error": "Account is not authorized to make this call.",
      "op": "assert // Account is not authorized to make this call.",
      "defined_out": [],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0"
      ]
    },
    "4517": {
      "op": "frame_dig 3",
      "defined_out": [
        "game_state#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "game_state#0"
      ]
    },
    "4519": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "game_state#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "game_state#0",
        "2"
      ]
    },
    "4520": {
      "op": "getbyte",
      "defined_out": [
        "game_state#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "tmp%10#0"
      ]
    },
    "4521": {
      "op": "dup",
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "tmp%10#0",
        "tmp%10#0"
      ]
    },
    "4522": {
      "op": "frame_bury 0",
      "defined_out": [
        "game_state#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "tmp%10#0"
      ]
    },
    "4524": {
      "op": "intc_0 // 1",
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "tmp%10#0",
        "1"
      ]
    },
    "4525": {
      "op": "==",
      "defined_out": [
        "game_state#0",
        "tmp%10#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "tmp%11#0"
      ]
    },
    "4526": {
      "op": "bz delete_game_else_body@6",
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0"
      ]
    },
    "4529": {
      "op": "frame_dig -1",
      "defined_out": [
        "game_id#0 (copy)",
        "game_state#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "game_id#0 (copy)"
      ]
    },
    "4531": {
      "op": "frame_dig 4",
      "defined_out": [
        "admin#0",
        "game_id#0 (copy)",
        "game_state#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "game_id#0 (copy)",
        "admin#0"
      ]
    },
    "4533": {
      "op": "bytec_3 // \"p_\"",
      "defined_out": [
        "\"p_\"",
        "admin#0",
        "game_id#0 (copy)",
        "game_state#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "game_id#0 (copy)",
        "admin#0",
        "\"p_\""
      ]
    },
    "4534": {
      "op": "intc_0 // 1",
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "game_id#0 (copy)",
        "admin#0",
        "\"p_\"",
        "1"
      ]
    },
    "4535": {
      "op": "intc_1 // 0",
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "game_id#0 (copy)",
        "admin#0",
        "\"p_\"",
        "1",
        "0"
      ]
    },
    "4536": {
      "callsub": "smart_contracts.pieout.subroutines.check_acc_in_game",
      "op": "callsub check_acc_in_game",
      "defined_out": [
        "acc_in_game#1",
        "admin#0",
        "game_state#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "acc_in_game#1"
      ]
    },
    "4539": {
      "op": "intc_0 // 1",
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "acc_in_game#1",
        "1"
      ]
    },
    "4540": {
      "op": "==",
      "defined_out": [
        "admin#0",
        "game_state#0",
        "tmp%10#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "tmp%12#0"
      ]
    },
    "4541": {
      "error": "Game admin address must be sole remaining active player in the game.",
      "op": "assert // Game admin address must be sole remaining active player in the game.",
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0"
      ]
    },
    "4542": {
      "op": "txn Sender",
      "defined_out": [
        "admin#0",
        "game_state#0",
        "tmp%10#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "tmp%13#0"
      ]
    },
    "4544": {
      "op": "frame_dig 3",
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "tmp%13#0",
        "game_state#0"
      ]
    },
    "4546": {
      "op": "pushint 17 // 17",
      "defined_out": [
        "17",
        "admin#0",
        "game_state#0",
        "tmp%10#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "tmp%13#0",
        "game_state#0",
        "17"
      ]
    },
    "4548": {
      "op": "extract_uint64",
      "defined_out": [
        "admin#0",
        "game_state#0",
        "tmp%10#0",
        "tmp%13#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "tmp%13#0",
        "tmp%15#0"
      ]
    },
    "4549": {
      "op": "pushbytes \"pieout:j{\\\"method\\\":\\\"delete_game\\\",\\\"concern\\\":\\\"itxn.pay;prize_pool_admin_stake\\\"}\"",
      "defined_out": [
        "\"pieout:j{\\\"method\\\":\\\"delete_game\\\",\\\"concern\\\":\\\"itxn.pay;prize_pool_admin_stake\\\"}\"",
        "admin#0",
        "game_state#0",
        "tmp%10#0",
        "tmp%13#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "tmp%13#0",
        "tmp%15#0",
        "\"pieout:j{\\\"method\\\":\\\"delete_game\\\",\\\"concern\\\":\\\"itxn.pay;prize_pool_admin_stake\\\"}\""
      ]
    },
    "4627": {
      "callsub": "smart_contracts.pieout.subroutines.payout_itxn",
      "op": "callsub payout_itxn",
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0"
      ]
    },
    "4630": {
      "block": "delete_game_after_if_else@7",
      "stack_in": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "box_prefixed_key%0#0"
      ]
    },
    "4632": {
      "op": "box_del",
      "defined_out": [
        "box_prefixed_key%0#0",
        "{box_del}"
      ],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "{box_del}"
      ]
    },
    "4633": {
      "op": "pop",
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0"
      ]
    },
    "4634": {
      "op": "bytec_3 // \"p_\"",
      "defined_out": [
        "\"p_\"",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "\"p_\""
      ]
    },
    "4635": {
      "op": "frame_dig 1",
      "defined_out": [
        "\"p_\"",
        "box_prefixed_key%0#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "\"p_\"",
        "encoded_value%0#0"
      ]
    },
    "4637": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%5#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "box_prefixed_key%5#0"
      ]
    },
    "4638": {
      "op": "box_del",
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "{box_del}"
      ]
    },
    "4639": {
      "op": "pop",
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0"
      ]
    },
    "4640": {
      "op": "frame_dig 5",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%3#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "box_prefixed_key%3#0"
      ]
    },
    "4642": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%3#0",
        "box_prefixed_key%3#0 (copy)",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "box_prefixed_key%3#0",
        "box_prefixed_key%3#0 (copy)"
      ]
    },
    "4643": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%3#0",
        "encoded_value%0#0",
        "maybe_exists%4#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "box_prefixed_key%3#0",
        "maybe_value%3#0",
        "maybe_exists%4#0"
      ]
    },
    "4644": {
      "error": "check self.box_game_register entry exists",
      "op": "assert // check self.box_game_register entry exists",
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "box_prefixed_key%3#0",
        "maybe_value%3#0"
      ]
    },
    "4645": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%3#0",
        "encoded_value%0#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "box_prefixed_key%3#0",
        "maybe_value%3#0",
        "0"
      ]
    },
    "4646": {
      "op": "dup",
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "box_prefixed_key%3#0",
        "maybe_value%3#0",
        "0",
        "0"
      ]
    },
    "4647": {
      "op": "setbit",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%3#0",
        "encoded_value%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "box_prefixed_key%3#0",
        "updated_data%0#0"
      ]
    },
    "4648": {
      "op": "box_put",
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0"
      ]
    },
    "4649": {
      "op": "frame_dig 3",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%3#0",
        "encoded_value%0#0",
        "game_state#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "game_state#0"
      ]
    },
    "4651": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "box_prefixed_key%0#0",
        "box_prefixed_key%3#0",
        "encoded_value%0#0",
        "game_state#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "game_state#0",
        "1"
      ]
    },
    "4652": {
      "op": "getbyte",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%3#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "tmp%23#0"
      ]
    },
    "4653": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "box_prefixed_key%0#0",
        "box_prefixed_key%3#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "tmp%23#0",
        "32"
      ]
    },
    "4654": {
      "op": "*",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%3#0",
        "encoded_value%0#0",
        "game_state#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "to_encode%0#0"
      ]
    },
    "4655": {
      "op": "itob",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%3#0",
        "encoded_value%0#0",
        "game_state#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "val_as_bytes%0#0"
      ]
    },
    "4656": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%3#0",
        "encoded_value%0#0",
        "game_state#0",
        "val_as_bytes%0#0",
        "val_as_bytes%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "val_as_bytes%0#0",
        "val_as_bytes%0#0 (copy)"
      ]
    },
    "4657": {
      "op": "bitlen",
      "defined_out": [
        "bitlen%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%3#0",
        "encoded_value%0#0",
        "game_state#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "val_as_bytes%0#0",
        "bitlen%0#0"
      ]
    },
    "4658": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "bitlen%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%3#0",
        "encoded_value%0#0",
        "game_state#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "val_as_bytes%0#0",
        "bitlen%0#0",
        "16"
      ]
    },
    "4660": {
      "op": "<=",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%3#0",
        "encoded_value%0#0",
        "game_state#0",
        "no_overflow%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "val_as_bytes%0#0",
        "no_overflow%0#0"
      ]
    },
    "4661": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "val_as_bytes%0#0"
      ]
    },
    "4662": {
      "op": "extract 6 2",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%3#0",
        "encoded_value%0#0",
        "game_state#0",
        "uint16%0#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "uint16%0#0"
      ]
    },
    "4665": {
      "op": "pushbytes 0x0a",
      "defined_out": [
        "0x0a",
        "box_prefixed_key%0#0",
        "box_prefixed_key%3#0",
        "encoded_value%0#0",
        "game_state#0",
        "uint16%0#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "uint16%0#0",
        "0x0a"
      ]
    },
    "4668": {
      "op": "swap",
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "0x0a",
        "uint16%0#0"
      ]
    },
    "4669": {
      "callsub": "smart_contracts.pieout.contract.Pieout.calc_single_box_cost",
      "op": "callsub calc_single_box_cost",
      "defined_out": [
        "box_p_cost#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%3#0",
        "encoded_value%0#0",
        "game_state#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "box_p_cost#0"
      ]
    },
    "4672": {
      "op": "txn Sender",
      "defined_out": [
        "box_p_cost#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%3#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "box_p_cost#0",
        "tmp%24#0"
      ]
    },
    "4674": {
      "op": "intc 10 // 80500",
      "defined_out": [
        "80500",
        "box_p_cost#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%3#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "box_p_cost#0",
        "tmp%24#0",
        "80500"
      ]
    },
    "4676": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "tmp%24#0",
        "80500",
        "box_p_cost#0"
      ]
    },
    "4678": {
      "op": "+",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%3#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%24#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "tmp%24#0",
        "tmp%25#0"
      ]
    },
    "4679": {
      "op": "pushbytes \"pieout:j{\\\"method\\\":\\\"delete_game\\\",\\\"concern\\\":\\\"itxn.pay;box_s_mbr_refund+box_p_mbr_refund\\\"}\"",
      "defined_out": [
        "\"pieout:j{\\\"method\\\":\\\"delete_game\\\",\\\"concern\\\":\\\"itxn.pay;box_s_mbr_refund+box_p_mbr_refund\\\"}\"",
        "box_prefixed_key%0#0",
        "box_prefixed_key%3#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%24#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "tmp%24#0",
        "tmp%25#0",
        "\"pieout:j{\\\"method\\\":\\\"delete_game\\\",\\\"concern\\\":\\\"itxn.pay;box_s_mbr_refund+box_p_mbr_refund\\\"}\""
      ]
    },
    "4768": {
      "callsub": "smart_contracts.pieout.subroutines.payout_itxn",
      "op": "callsub payout_itxn",
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0"
      ]
    },
    "4771": {
      "retsub": true,
      "op": "retsub"
    },
    "4772": {
      "block": "delete_game_else_body@6",
      "stack_in": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "tmp%10#0"
      ]
    },
    "4774": {
      "op": "!",
      "defined_out": [
        "tmp%10#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "tmp%18#0"
      ]
    },
    "4775": {
      "error": "Game lobby not empty. Number of active players must be zero.",
      "op": "assert // Game lobby not empty. Number of active players must be zero.",
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0"
      ]
    },
    "4776": {
      "op": "frame_dig 3",
      "defined_out": [
        "game_state#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "game_state#0"
      ]
    },
    "4778": {
      "op": "pushint 17 // 17",
      "defined_out": [
        "17",
        "game_state#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "game_state#0",
        "17"
      ]
    },
    "4780": {
      "op": "extract_uint64",
      "defined_out": [
        "game_state#0",
        "tmp%10#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "tmp%20#0"
      ]
    },
    "4781": {
      "op": "!",
      "defined_out": [
        "game_state#0",
        "tmp%10#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "tmp%21#0"
      ]
    },
    "4782": {
      "error": "Prize pool not empty. Amount in prize pool must be zero.",
      "op": "assert // Prize pool not empty. Amount in prize pool must be zero.",
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0"
      ]
    },
    "4783": {
      "op": "b delete_game_after_if_else@7"
    },
    "4786": {
      "block": "delete_game_bool_false@3",
      "stack_in": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0"
      ],
      "op": "intc_1 // 0",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "admin#0",
        "box_prefixed_key%3#0",
        "or_result%0#0"
      ]
    },
    "4787": {
      "op": "b delete_game_bool_merge@4"
    },
    "4790": {
      "subroutine": "smart_contracts.pieout.contract.Pieout.terminate",
      "params": {},
      "block": "terminate",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "4793": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "asset_balance#0"
      ]
    },
    "4795": {
      "op": "intc 13 // TMPL_DELETABLE",
      "defined_out": [
        "TMPL_DELETABLE"
      ],
      "stack_out": [
        "asset_balance#0",
        "TMPL_DELETABLE"
      ]
    },
    "4797": {
      "error": "Template variable 'DELETABLE' needs to be 'True' at deploy-time.",
      "op": "assert // Template variable 'DELETABLE' needs to be 'True' at deploy-time.",
      "stack_out": [
        "asset_balance#0"
      ]
    },
    "4798": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "asset_balance#0",
        "tmp%0#0"
      ]
    },
    "4800": {
      "op": "global CreatorAddress",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "asset_balance#0",
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "4802": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "asset_balance#0",
        "tmp%2#0"
      ]
    },
    "4803": {
      "error": "Account must match application creator address.",
      "op": "assert // Account must match application creator address.",
      "stack_out": [
        "asset_balance#0"
      ]
    },
    "4804": {
      "op": "bytec_2 // \"t_\"",
      "defined_out": [
        "\"t_\""
      ],
      "stack_out": [
        "asset_balance#0",
        "\"t_\""
      ]
    },
    "4805": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "asset_balance#0",
        "_%0#0",
        "maybe_exists%0#0"
      ]
    },
    "4806": {
      "op": "bury 1",
      "stack_out": [
        "asset_balance#0",
        "maybe_exists%0#0"
      ]
    },
    "4808": {
      "op": "bz terminate_after_if_else@5",
      "stack_out": [
        "asset_balance#0"
      ]
    },
    "4811": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "asset_balance#0",
        "tmp%3#0"
      ]
    },
    "4813": {
      "op": "bytec_2 // \"t_\"",
      "stack_out": [
        "asset_balance#0",
        "tmp%3#0",
        "\"t_\""
      ]
    },
    "4814": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "asset_balance#0",
        "tmp%3#0",
        "maybe_value%0#0",
        "maybe_exists%1#0"
      ]
    },
    "4815": {
      "error": "check self.box_game_trophy exists",
      "op": "assert // check self.box_game_trophy exists",
      "stack_out": [
        "asset_balance#0",
        "tmp%3#0",
        "maybe_value%0#0"
      ]
    },
    "4816": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "maybe_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "asset_balance#0",
        "tmp%3#0",
        "maybe_value%0#0",
        "1"
      ]
    },
    "4817": {
      "op": "extract_uint64",
      "defined_out": [
        "tmp%3#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "asset_balance#0",
        "tmp%3#0",
        "tmp%5#0"
      ]
    },
    "4818": {
      "op": "asset_holding_get AssetBalance",
      "defined_out": [
        "asset_balance#0",
        "asset_exists#0"
      ],
      "stack_out": [
        "asset_balance#0",
        "asset_balance#0",
        "asset_exists#0"
      ]
    },
    "4820": {
      "op": "swap",
      "stack_out": [
        "asset_balance#0",
        "asset_exists#0",
        "asset_balance#0"
      ]
    },
    "4821": {
      "op": "frame_bury 0",
      "defined_out": [
        "asset_balance#0",
        "asset_exists#0"
      ],
      "stack_out": [
        "asset_balance#0",
        "asset_exists#0"
      ]
    },
    "4823": {
      "op": "bz terminate_after_if_else@4",
      "stack_out": [
        "asset_balance#0"
      ]
    },
    "4826": {
      "op": "frame_dig 0",
      "stack_out": [
        "asset_balance#0",
        "asset_balance#0"
      ]
    },
    "4828": {
      "op": "intc_0 // 1",
      "stack_out": [
        "asset_balance#0",
        "asset_balance#0",
        "1"
      ]
    },
    "4829": {
      "op": "==",
      "defined_out": [
        "asset_balance#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "asset_balance#0",
        "tmp%6#0"
      ]
    },
    "4830": {
      "op": "bz terminate_after_if_else@4",
      "stack_out": [
        "asset_balance#0"
      ]
    },
    "4833": {
      "op": "bytec_2 // \"t_\"",
      "stack_out": [
        "asset_balance#0",
        "\"t_\""
      ]
    },
    "4834": {
      "op": "box_get",
      "defined_out": [
        "asset_balance#0",
        "maybe_exists%2#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "asset_balance#0",
        "maybe_value%1#0",
        "maybe_exists%2#0"
      ]
    },
    "4835": {
      "error": "check self.box_game_trophy exists",
      "op": "assert // check self.box_game_trophy exists",
      "stack_out": [
        "asset_balance#0",
        "maybe_value%1#0"
      ]
    },
    "4836": {
      "op": "intc_0 // 1",
      "stack_out": [
        "asset_balance#0",
        "maybe_value%1#0",
        "1"
      ]
    },
    "4837": {
      "op": "extract_uint64",
      "defined_out": [
        "asset_balance#0",
        "asset_id#0"
      ],
      "stack_out": [
        "asset_balance#0",
        "asset_id#0"
      ]
    },
    "4838": {
      "op": "itxn_begin"
    },
    "4839": {
      "op": "pushbytes \"pieout:j{\\\"method\\\":\\\"terminate\\\",\\\"concern\\\":\\\"itxn.asset_config;burn_trophy_asset\\\"}\"",
      "defined_out": [
        "\"pieout:j{\\\"method\\\":\\\"terminate\\\",\\\"concern\\\":\\\"itxn.asset_config;burn_trophy_asset\\\"}\"",
        "asset_balance#0",
        "asset_id#0"
      ],
      "stack_out": [
        "asset_balance#0",
        "asset_id#0",
        "\"pieout:j{\\\"method\\\":\\\"terminate\\\",\\\"concern\\\":\\\"itxn.asset_config;burn_trophy_asset\\\"}\""
      ]
    },
    "4919": {
      "op": "itxn_field Note",
      "stack_out": [
        "asset_balance#0",
        "asset_id#0"
      ]
    },
    "4921": {
      "op": "itxn_field ConfigAsset",
      "stack_out": [
        "asset_balance#0"
      ]
    },
    "4923": {
      "op": "pushint 3 // acfg",
      "defined_out": [
        "acfg",
        "asset_balance#0"
      ],
      "stack_out": [
        "asset_balance#0",
        "acfg"
      ]
    },
    "4925": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "asset_balance#0"
      ]
    },
    "4927": {
      "op": "intc_1 // 0",
      "stack_out": [
        "asset_balance#0",
        "0"
      ]
    },
    "4928": {
      "op": "itxn_field Fee",
      "stack_out": [
        "asset_balance#0"
      ]
    },
    "4930": {
      "op": "itxn_submit"
    },
    "4931": {
      "block": "terminate_after_if_else@4",
      "stack_in": [
        "asset_balance#0"
      ],
      "op": "bytec_2 // \"t_\"",
      "defined_out": [
        "\"t_\""
      ],
      "stack_out": [
        "asset_balance#0",
        "\"t_\""
      ]
    },
    "4932": {
      "op": "box_del",
      "defined_out": [
        "{box_del}"
      ],
      "stack_out": [
        "asset_balance#0",
        "{box_del}"
      ]
    },
    "4933": {
      "op": "pop",
      "stack_out": [
        "asset_balance#0"
      ]
    },
    "4934": {
      "block": "terminate_after_if_else@5",
      "stack_in": [
        "asset_balance#0"
      ],
      "op": "itxn_begin"
    },
    "4935": {
      "op": "txn Sender",
      "defined_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ],
      "stack_out": [
        "asset_balance#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "4937": {
      "op": "dup",
      "defined_out": [
        "inner_txn_params%0%%param_CloseRemainderTo_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ],
      "stack_out": [
        "asset_balance#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_CloseRemainderTo_idx_0#0"
      ]
    },
    "4938": {
      "op": "pushbytes 0x7069656f75743a6a7b226d6574686f64223a227465726d696e617465222c22636f6e6365726e223a226974786e2e7061793b636c6f73655f72656d61696e6465725f746f227d",
      "defined_out": [
        "0x7069656f75743a6a7b226d6574686f64223a227465726d696e617465222c22636f6e6365726e223a226974786e2e7061793b636c6f73655f72656d61696e6465725f746f227d",
        "inner_txn_params%0%%param_CloseRemainderTo_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ],
      "stack_out": [
        "asset_balance#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_CloseRemainderTo_idx_0#0",
        "0x7069656f75743a6a7b226d6574686f64223a227465726d696e617465222c22636f6e6365726e223a226974786e2e7061793b636c6f73655f72656d61696e6465725f746f227d"
      ]
    },
    "5010": {
      "op": "itxn_field Note",
      "stack_out": [
        "asset_balance#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_CloseRemainderTo_idx_0#0"
      ]
    },
    "5012": {
      "op": "itxn_field CloseRemainderTo",
      "stack_out": [
        "asset_balance#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "5014": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ],
      "stack_out": [
        "asset_balance#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "0"
      ]
    },
    "5015": {
      "op": "itxn_field Amount",
      "stack_out": [
        "asset_balance#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "5017": {
      "op": "itxn_field Receiver",
      "stack_out": [
        "asset_balance#0"
      ]
    },
    "5019": {
      "op": "intc_0 // pay",
      "defined_out": [
        "pay"
      ],
      "stack_out": [
        "asset_balance#0",
        "pay"
      ]
    },
    "5020": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "asset_balance#0"
      ]
    },
    "5022": {
      "op": "intc_1 // 0",
      "stack_out": [
        "asset_balance#0",
        "0"
      ]
    },
    "5023": {
      "op": "itxn_field Fee",
      "stack_out": [
        "asset_balance#0"
      ]
    },
    "5025": {
      "op": "itxn_submit"
    },
    "5026": {
      "retsub": true,
      "op": "retsub"
    }
  }
}