{
  "version": 3,
  "sources": [
    "../../../.venv/Lib/site-packages/lib_pcg/pcg32.py",
    "../../pieout/contract.py",
    "../../pieout/subroutines.py"
  ],
  "mappings": "AC+BA;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAAA;;AAAA;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AA4tBK;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAlEA;;AAAA;AAAA;AAAA;;AAAA;AA1pBL;;;AAAA;AA0pBK;;;AAAA;;AAtDA;;AAAA;AAAA;AAAA;;AAAA;AApmBL;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAomBK;;;AAAA;;AAlCA;;AAAA;AAAA;AAAA;;AAAA;AAlkBL;;;AAAA;AAAA;;;AAkkBK;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAzHA;;AAAA;AAAA;AAAA;;AAAA;AAzcL;;;AAAA;AAycK;;;AAAA;;AAlBA;;AAAA;AAAA;AAAA;;AAAA;AAvbL;;;AAAA;AAubK;;;AAAA;;AA/BA;;AAAA;AAAA;AAAA;;AAAA;AAxZL;;;AAAA;AAAA;;AAwZK;;;AAAA;;AAzCA;;AAAA;AAAA;AAAA;;AAAA;AA/WL;;;AAAA;AA+WK;;;AAAA;;AAvCA;;AAAA;AAAA;AAAA;;AAAA;AAxUL;;;AAAA;AAwUK;;;AAAA;;AArBA;;AAAA;AAAA;AAAA;;AAAA;AAnTL;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAmTK;;;AAAA;;AAlEA;;AAAA;AAAA;AAAA;;AAAA;AAjPL;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAiPK;;;AAAA;;AAnEA;;AAAA;AAAA;AAAA;;AAAA;AA9KL;;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA8KK;;;AAAA;;AAlBA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AA9CA;;AAAA;AAAA;AAAA;;AAAA;AA9GL;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA8GK;;;AAAA;;AAdA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAZA;;AAAA;AAAA;AAAA;;AAAA;AApFL;;;AAAA;AAAA;;AAoFK;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AArBA;;AAAA;AAAA;AAAA;;AAAA;AA/DL;;;AAAA;AA+DK;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AA5BA;;AAAA;AAAA;AAAA;;AAAA;AAnCL;;;AAAA;AAmCK;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AALA;;AAAA;AAAA;AAAA;;AAAA;AAEU;;AAFV;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAdA;;AAAA;AAAA;AAAA;;AAAA;AAhBL;;;AAAA;;;AAgBK;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;ACGL;;;AAEI;;;;;;;;;;;;;AAAA;;;AAAA;;;AAAA;;AAOJ;;;AAMO;;AAAQ;;AAAR;AAAA;;;AAAgC;;AAAA;;AAAA;;AAAhC;;;AACC;;AAAA;AACC;;AAAQ;;AAAR;AAAA;;;AAAgC;;AAAA;;AAAA;;AAAhC;;;AACD;;AAAA;AACC;;AAAQ;;AAAR;AAAA;;;AAAgC;;AAAA;;AAAA;;AAAhC;;;AACD;;AAAA;AAEA;;AAAc;;AAAd;AAAA;;;AACkC;;AAA9B;;AAAA;;AADJ;;;AAGO;;AAAP;AAEO;;AAAP;AAGR;;;AASiC;;AAAA;;AAAA;AAAZ;AAHU;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAA3B;;AAAA;;AAAA;AAAA;AAAA;;AAOJ;;;;;;AASI;;AAAqC;AAAf;AAGR;AAGE;AAAP;;AAAA;;AAAA;;;;;AAAb;;;AAEwD;;AAAA;AAAjB;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAA/B;;AAA6D;AAAzC;AAGjB;;AAAA;AAAX;;;AAC0B;AAAd;;AAGZ;;AAAA;;;AAEgB;;AAAA;;AAA6B;;AAA7B;;;;;;;AAMZ;;AAAA;AAjBS;;AAA+B;AAA/B;AAAA;;;;;AAmGb;;;AAIQ;;AAAA;;;AAAuB;;AAAvB;AAAA;AAAA;;;AACG;;AAAA;;;AAA6B;;AAAA;;;AAA7B;AADH;;;AAIA;;AAAA;AAAA;AAAA;AAAA;;AAII;;AAA0B;;AAA1B;AADmB;AAAvB;;AAAA;AAAA;;;AAAA;;AAOI;AAAA;AAAA;AAAA;AAAA;;AAAA;AACA;;AAAA;;;AAHJ;AAAA;;;;;;AAAA;AAAA;AAAA;AAMO;;;AAAP;;AAAA;AAEO;AAAP;;AAAA;AAGR;;;;;;;;;;AASQ;;AAAA;;;AAAuB;;AAAvB;AAAA;AAAA;;;AACG;;AAAA;AAAA;AADH;;;AAI6D;;AAAA;AAA7D;;AAAA;AAA+B;AAA/B;AAAA;;AACmB;AAAA;AAAA;;AAAA;AAAH;AAAZ;;AAAK;;AAAA;;AAAA;AAAjB;;;AACY;;AAAA;;AAAiD;AAA7B;AAApB;AAAA;;AACwB;;AAArB;AAAf;;;AAGgB;;AAAA;;AAGgB;;AAHhB;;;AALC;;AAAoC;AAApC;AAAA;;;;;AAcc;;AAAA;AAAA;AAAnB;AAAA;AADwB;AAA5B;;AAAA;AAAA;;AAAA;AAAA;AAKA;;AAA4B;AAA5B;;;AAAA;;AAKI;;;AACA;;AAAA;;;AAAA;AAAA;;AACA;;AAAA;;;AAAA;AAAA;;AAAA;;AACA;;AAAA;;;AAAA;AAAA;;AAAA;;AALJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;AAAA;AAAA;AAAA;AASG;;AAAA;;AAAA;AAAA;AAAA;;AAAgC;;;;AAAhC;AAAX;;;AAEiC;AAArB;;AACoB;AAApB;;AAmBK;;AAAA;;;AACA;;AAHT;;AAAA;;AAAA;;AAAuB;;;AAAvB;;AAQS;;AAHT;;AAAA;;AAAA;;AAAwB;;;AAAxB;;AAQS;;AAHT;;AAAA;;AAAuB;;;AAAvB;;AAOR;;AAAA;;;AACY;;AAAA;;AAGS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAHT;;;AAOZ;;AAAA;;;AACY;;AAAA;;AAGS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAHT;;;AAOZ;;AAAA;;;AACY;;AAAA;;AAGS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAHT;;;AASJ;;AAAwB;;;;;;;;;;AAAxB;;AAAA;;AAEO;;;AAAP;;AAAA;;AAAA;;AAAA;AA5DK;;AAAgC;;;;AAAhC;AAAb;;;AACgC;;AAAA;AAA+B;;AAA/B;AAA6C;;AAA7C;AACpB;AAAA;;AAAqB;AAArB;;AACoB;AAApB;;;;;;;AAGoB;;AAAA;AAA+B;;AAA/B;AAA6C;;AAA7C;AAEhB;;AAA+B;;AAA/B;AAA6C;;AAA7C;AADJ;AAAA;;AAII;;AAAA;;AAAA;AADJ;AACI;AADJ;;;;;;;AAoDG;AAAP;;AAAA;;AAAA;;AAAA;AD1SR;;;AAOY;;AAAA;AAAkB;;AAAA;AAAlB;AADQ;;;AAAA;AAKL;;;AAAA;AAAP;AAQR;;;AAIY;;AAAA;AADS;;AAAA;;AAAA;AAAA;AAAA;AAQL;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AACA;;AAAA;;;AACA;;AAAA;;;AACA;;AAAA;;;AACA;;AAAA;;;AACA;;AAAA;;;AACA;;AAAA;;;AACA;;AAAA;;;AACA;;AAAA;;;AACA;;AAAA;;;AACA;;AAAA;;;AACA;;AAAA;;;AACA;;AAAA;;;AAfD;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAP;AAoBR;;;;;AAG6C;;AAAA;AAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAGL;;;;AAAA;AAGS;AAAH;AAAP;;AAAA;;AAAA;AAAjB;;;AAEY;;AAAA;;AAAgD;AAA5B;AAApB;AAAA;;AAEwB;;AAArB;;;;;AAAf;;;AAEgB;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;;;;;AANC;;AAA+B;AAA/B;AAAA;;;;;AAST;;AAAA;;AAAA;AAGR;;;AAGyB;AAAV;;AAAA;AAAA;AAAA;AAAA;;AAAP;AAGc;AAAA;AAGa;AAAA;;;AAAqB;;AAAA;;;AAA0B;;AAAA;;;AAAnE;;AAAA;AAAA;AAAA;AAAP;AAQO;;AAAc;;AAAd;AAAP;AAGA;;AAAe;AAAf;AACA;;AAAgB;AAAhB;AACA;;AAAiB;AAAjB;AACA;;AAAmB;;AAAnB;;AAGR;;;AAOe;;AAAqB;;AAArB;AAAP;AACW;AAAJ;AAAA;;AAAA;AAAP;AAEO;;AAAA;;AAAoB;;;;AAApB;AAAP;AACO;;AAAA;;AAAoB;;AAApB;AAAP;AAEI;;AAAA;;AAAsB;;AAAtB;AADJ;AAKI;;AAAA;;AAAmB;;AAAnB;AADJ;AAGO;;AAAA;;AAAmB;;AAAnB;AAAP;AAEI;;AAAA;;AAAqB;;AAArB;AADJ;AAKY;AAMA;;AACA;;AAGH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AALU;;;AADN;;;AADE;;;;;;;;;;;;;;;;;;;;;;;AADD;;;;;;;;AADJ;;;AADE;;;;AAAA;;;AAAA;;;AAcZ;AAAA;;AAAA;;AAEa;AACkB;;AAFF;AAA7B;AAAA;AAAA;;AASO;;AAAqB;AAArB;AAAP;AACO;;AAAc;AAAA;;AAAA;AAAA;AAAd;AAAP;AACO;;AACG;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;;AAAA;;AAAA;;AAAP;AAKA;AAEmB;;AAEV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AADQ;;;;;;;AAHjB;;;;AAAA;;;AAAA;;AAQR;;;AASe;;AAAqB;;AAArB;AAAP;AACO;AAAA;AAAA;;AAAP;AAEI;;AAAe;;AAAf;AAAA;;;AACI;;AAAe;;AAAf;AADJ;;;;AADJ;AAKO;;AAAA;;AAAA;AAAoB;;AAApB;AAAP;AACO;;AAAA;;AAAoB;;AAApB;AAAP;AACO;;AAAA;;AAEoB;AAAA;;AAAA;AAAZ;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AADF;;;AADc;AAAA;;;AAApB;;AAAA;AAAP;AAKO;;AAAA;;AAAoB;;AAApB;AAAP;AACO;;AAAA;;AAAoB;;AAApB;AAAP;AACO;;AAAA;;AAAoB;;AAApB;AAAP;AAGI;;AAAA;;AAAsB;;AAAtB;AADJ;AAII;;AAAA;;AAAsB;;AAAtB;AADJ;AAII;;AAAA;;AAAsB;;AAAtB;AADJ;AAOgB;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAMU;;AAA0B;;AAA1B;AAAZ;AACC;;AAAA;AACgB;;AACM;;AACC;;AAXhB;AADc;;AAAA;AAGjB;;;AAHiB;AAId;AAJc;AAKb;AALa;AAMd;AANc;AAOhB;;AAPgB;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAhB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAApB;;AAAA;;AAAA;AAAA;;AAAA;AAiBsC;;AAAA;AAAtC;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAM0B;AAAG;;AAA7B;AAGgB;AAAhB;AAAA;;AAAA;AAAA;;;;;;AAGR;;;AAQY;;AAAA;AADS;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAKN;;AAAqB;AAArB;AAAP;AACO;;AAAA;AAAA;;AAAP;AACO;AAAA;AAAA;;AAAP;AAEO;;AAAA;;AAAA;AAAoB;;AAApB;AAAP;AACO;;AAAA;;AAAoB;;AAApB;AAAP;AAEI;;AAAA;;AAAsB;;AAAtB;AADJ;AAMgB;;AAEK;;AAAA;AAAA;AAJjB;;AAAA;;AAGqB;AAHrB;;AAKiB;AALjB;;;AAAA;AADJ;AAWO;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAP;AACO;;AAAA;;;AAAwB;;AAAxB;AAAA;AAAP;AACO;;AAAA;;;AAA6B;;AAAA;;;AAA7B;AAAP;AAEI;;AAAA;;AAAA;AACqB;;AAAA;AAAA;AAAnB;AAAA;AADF;;AAAA;AADJ;AAOQ;AADR;;AACQ;AAEqD;;AAA7D;AAAA;;AAAA;AAG0E;AAAnC;AAAX;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAA5B;;AAAA;AAAA;;AAII;AAAA;;AAAA;AAAoC;AAApC;AADyB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAA7B;;AAMI;AAAA;;AAAA;AAAA;;AAAA;AADoB;AAAxB;;AAKA;;;AAAA;;AAGA;;AAGR;;;AAGe;;AAAqB;AAArB;AAAP;AACyB;AAAlB;;AAAA;AAAA;AAAA;;AAAA;AAAP;AACO;AAAA;AAAA;;AAAP;AAEO;;AAAA;;AAAoB;;AAApB;AAAP;AACO;;AAAA;;AAAoB;;AAApB;AAAP;AAEI;;AAAA;;AAAsB;;AAAtB;AADJ;AAMoB;AACR;;AACI;;AAHhB;;;;AAOR;;;AAMe;;AAAqB;AAArB;AAAP;AACO;;AAAA;AAAW;;AAAX;;AAAA;AAAA;AAAA;AAAA;;AAAP;AACqB;AAAd;;AAAA;AAAA;AAAA;;AAAP;AAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAkD;AAAlD;AADJ;AAMgB;;AAEK;AAAA;AAAA;AAJjB;;AAAA;;AAGqB;AAHrB;;AAKiB;AALjB;;;AAOG;AAPH;AADJ;AAYc;AACV;;AADU;AAAA;AAAA;AAKP;AAAA;;AAAA;AAAA;AAAP;AAGuC;;AAAe;;AAAf;AAAZ;AAA3B;;AACA;AAAA;;AAGA;AAAqB;;AAArB;AAAA;AAAA;;AAGR;;;AAMe;;AAAqB;AAArB;AAAP;AACO;;AAAA;AAAW;;AAAX;AAAA;AAAA;AAAA;AAAA;;AAAP;AACqB;AAAd;;AAAA;AAAA;AAAA;;AAAP;AAEQ;AAAqB;;AAArB;AAAA;AAAA;AAAA;AAAA;AAAA;;;AACJ;AAAqB;;AAArB;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AADI;;;;AAAR;AAKG;AAAqB;;AAArB;AAAA;AAAA;AAAA;AAAA;AAAX;;;AAK4B;;AAEK;;AAAA;AAAA;AAAA;AAAA;AAJjB;;AAAA;;AAGqB;AAHrB;;AAKiB;AALjB;;;AAAA;AADJ;AAYA;AAAqB;;AAArB;AAAJ;;AAIa;;AACF;;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAHT;;;;;;;;AASR;;;AAGe;;AAAqB;AAArB;AAAP;AAEiB;AAAV;;AAAA;AAAA;AAAA;AAAA;;AAAP;AACO;;AAAU;;AAAV;AAAP;AAEO;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAP;AACO;;AAAA;AAAmD;;AAAnD;AAAP;AAGA;;AAGA;;AAES;;AACA;;AAHE;;;AASA;;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAHT;;;;AASR;;;AAGqB;AAAA;;AAAA;;AAAA;AAAA;AAGN;;AAAqB;AAArB;AAAP;AACO;;AAAA;AAAP;AAJa;AAMN;;AAAqB;;AAArB;AAAP;AANa;AAON;;AAAqB;;AAArB;AAAP;AAPa;AAQc;AAApB;;AAA0B;;AAA1B;AAAP;AARa;AAUc;AAApB;;AAA0B;;AAAA;AAA1B;;AAAA;AAAP;AACyC;AAAqB;;AAArB;AAAA;AAAA;AAAA;AAAA;AAAR;AAA1B;AAAP;AACO;AAAqB;;AAArB;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAP;;AAGR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMoB;AAAA;;AAAA;;AAAA;AAAA;AAGL;;AAAqB;AAArB;AAAP;AACO;;AAAmB;AAAnB;AAAP;AAJY;AAML;;AAAoB;;AAApB;AAAP;AANY;AAOL;;AAAoB;;AAApB;AAAP;AAPY;AAQc;AAAnB;;AAAyB;;AAAzB;AAAP;AARY;AAWc;AAAnB;;AAAA;AAAyB;;;AAAzB;AAAP;AACwC;AAAqB;;AAArB;AAAA;AAAA;AAAA;AAAA;AAAR;AAAzB;AAAP;AAEO;;AAAA;AAAA;AAAA;;AAAW;;AAAX;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAP;AACqB;AAAd;;AAAA;AAAA;AAAA;;AAAP;AACO;AAAA;AAAA;;AAAP;AAIgB;;AAEK;;AAAA;AAAA;AAAA;AAAA;AAJjB;;AAAA;;AAGqB;AAHrB;;AAKiB;AALjB;;;AAOG;AAPH;AADJ;AAYa;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAKN;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAgC;AAAhC;AAAP;AACO;;;AAAwB;;AAAxB;AAAA;AAAP;AAEI;AAAqB;;AAArB;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AADJ;AAII;;AAAgB;AAAqB;;AAArB;AAAA;AAAA;AAAA;;AAAA;AAAhB;AADJ;AAKO;AAEH;AAAqB;;AAArB;AAAA;AAAA;AAAA;;AAAA;AAAA;AACA;;AAAA;;AAAA;AACO;;;;;;;;AAJJ;;;;;;;;;;;;;AAAA;;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAUM;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAEF;;AAAA;;AC7ZS;AAAA;;;AFrHjB;AAAe;;AAAf;AAAP;;;AAEoB;AAoIC;AAkHe;;AAAf;AAAA;;AAtPc;;AAuPd;AAAA;;AAlHD;AAAA;;AAiHgB;;AAAf;AAAA;;AAtPc;;AAuPd;AAAA;;AAxEX;;;;AAAA;;AA8FqB;;;;;;;;;;;AAAQ;AAAhB;AAAA;;AAQP;;AAAT;AAjFkB;;AAET;AAAZ;;AAES;AAAL;;;;AAAK;;AE9EF;;;AF8EE;AAAjB;;;AA8CyB;;AAAA;AAAe;;AAAf;AAAA;;AAfM;;AAgBN;AAAA;;AAAA;AASE;AAAS;;AAAT;AAAD;;AAAA;AAA0B;;AAA3B;AAqBL;;AAAT;AArB8C;AAAS;;AAAT;AAO7C;AAAA;AAMuB;AAAA;AAAQ;AAAhB;AAAA;;AANiD;;AAArB;AAAV;;AAAA;AAAA;AAczB;;AAAT;AAdA;AAAA;AAAA;;AA5DQ;;AAAA;AAAnB;;;AAEiC;;AATJ;;AASI;AErFb;AFqFY;AAAR;AADM;;;AAAV;;AAAA;AAAA;AAAA;;AAJH;;AAAA;AAAA;AAAA;;;;;;;;;;;;AE1EL;AAAR;;AAGmB;;AAAA;AAAA;;AAAH;AAAZ;;AAAK;;AAAA;;AAAA;AAAb;;;AAEiC;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAzB;;AAAO;AAGI;;;AAAR;AAAX;;;AAIQ;;AAAS;AAAT;AAAA;;AATK;;AAAiC;AAAjC;AAAA;;;;;AAeL;;AAAA;AAEA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AALJ;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;;;AAAA;AAAA;AAAA;AAWI;;AAAA;;;AAA+C;;AAA/C;AAAA;;;AACW;;AAAA;;AAAA;AAAR;;AAAA;AADH;;;AAIA;;AAAA;AAA+B;;;AAA/B;;AACA;AAAiC;;;AAAjC;;AAEA;AAAgC;;;AAAhC;;AACA;AAAkC;;;AAAlC;;AAEA;;AAAA;;AACA;;AAAA;;AAAA;;ADkXA;AAAA;;AAAA;AAAA;AAAiB;AAAjB;AAAA;;AAAA;AAAA;AAGG;;AAAA;;AAAA;AAAA;AAAA;;AAAsC;AAAA;;AAAA;AAAA;AAAtC;AAAX;;;AAEY;;AAAA;;AAAA;AAGG;AAAA;;AAAA;AAAA;AAAoB;;AAApB;AAAf;;;AAGoB;AAAA;AAAA;AAAA;AAAA;;;AACA;AAAA;AAAA;AAF0B;;AAAA;AAAA;;AAM3B;;;AAAiB;;AAAiB;AAAjB;AAAjB;;;AAEc;AAAA;AAAA;AAAA;AAAA;AAAA;AACI;AAAA;;;AACE;;ACthBnC;ADuhByB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnhBR;;;;;;;;;AAJjB;;;;AAAA;;;AAAA;AD6hB2B;;AAAnB;;AAAA;;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAGmC;;AAAA;AAAA;AAAA;AAAmC;AAAnC;AAAX;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAA5B;;AAIoB;AACR;;AACI;;AAHhB;;;AAOA;;AAAA;AAGqB;AACD;AAJpB;;;AAAA;;AAQA;;AAAA;AAAA;;AClaA;;AAAA;;;AAAgD;;AAAhD;AAAA;;;AACW;;AAAA;;AAAA;AAAR;;AAAA;AADH;;;AAIA;;AAAA;AAA+B;;;AAA/B;;AACA;AAAiC;;;AAAjC;;AAEA;;AAAA;;AACA;;AAAA;;;;;;;;;;;AAGA;;AAAA;;;AAA+C;;AAA/C;AAAA;;;AACW;;AAAA;AAAA;;AAAA;AAAR;;AAAA;;;;AADH;;;AAIA;;AAAA;;AAAA;;AACA;;AAAA;;;;;;;ADqZR;;;AAMY;;AAAA;AADS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAKN;;AAAqB;AAArB;AAAP;AACO;AAAA;;AAAP;AAGG;;AAAA;AAAA;AAAA;;AAAX;;;AACmB;AAAA;;;AAAuB;;AAAvB;AAAA;AAAP;AACe;;;AAAA;AACf;AAAA;AAEC;;AAAqB;AAArB;AAAb;AACmB;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAgC;AAAhC;AAAP;AACO;AAAA;;;AAAuB;;AAAvB;AAAA;AAAP;AACe;;AAAA;AAGM;AACD;AAJL;;;AAAA;AAMf;AAAA;AAMZ;;;AAOe;;AAAqB;AAArB;AAAP;AACO;;AAAA;AAAW;;AAAX;;AAAA;AAAA;AAAA;AAAA;;AAAP;AAEO;;AAAA;;AAAoB;;AAApB;AAAP;AAEI;;AAAA;;AAAsB;;AAAtB;AADJ;AAGO;;AAAA;;AAAoB;;AAApB;AAAP;AAGa;AAAA;AAAA;AAKN;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAgC;AAAhC;AAAP;AACO;AAAA;;;AAA4B;;AAA5B;AAAP;AACO;AAAA;;AAAA;AAAA;AAAP;AACO;AAAA;AAAA;AAAA;AAAP;AAIQ;AADR;;AACQ;AAEkB;AAAG;;AAA7B;AAGA;AAAA;AAAA;AAC4B;;;AAA5B;;AAC+B;AAA/B;;AACgC;AAAhC;;AAC+B;AAA/B;;AAC6B;;AAA7B;;AAEI;;AAA0B;;AAA1B;AADmB;AAAvB;;AAII;AAAA;;AAAA;AAA+B;;AAA/B;AADoB;AAAxB;;AAG8C;;AAA9C;;AAC+C;;AAA/C;;AAC8C;;AAA9C;;AAGA;;AAGR;;;;;AAOY;;AAAA;AAAA;AADS;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAKN;;AAAqB;AAArB;AAAP;AACO;AAAA;;AAAP;AAEI;;AAAc;AAAA;;;AAAd;AAAA;;;AACG;;AAAc;;AAAd;AADH;;;;AADJ;AAOG;;AAAA;AAAA;AAAA;AAAA;;AAAoC;AAApC;AAAX;;;AAGwB;;AAAA;AAAA;AAAA;;;AAFZ;;AAAA;AAGqB;AACJ;AACA;AALH;;;AASQ;AAAf;AAAP;AAIa;;AACF;;AAAA;;AAAA;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAHT;;;AAcJ;;AAAA;;AACI;AAAA;;AAAA;AAAJ;;AAK8C;;AAAA;AAAA;AAAnB;AAAA;AAAZ;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AADF;;;AADb;AAAa;;;AAOA;;AACF;;AAAA;;AAAA;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAHT;;;;AAdW;;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAA;AAAP;;;;;;;;AAsBZ;;;;;AAGe;;AAAP;AACO;;AAAc;;AAAd;AAAP;AAGG;AAAA;AAAA;;AAAX;;;AAGgB;;AACA;AAAA;AAAA;AAAA;AAAA;AAF0B;;AAAA;AAAA;;AAK3B;;;AAAiB;;AAAiB;AAAjB;AAAjB;;;AAEc;AAAA;AAAA;AAAA;AAAA;AC/uBzB;ADgvBqB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChvBrB;;;;AAAA;;;AAAA;ADovBY;AAAJ;;AAGJ;AACa;;AAEU;AACd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAFE;;;;;AAFX;;;AAAA;;;AAAA;",
  "op_pc_offset": 2,
  "pc_events": {
    "0": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%0#2"
      ]
    },
    "2": {
      "op": "bz main_after_if_else@25",
      "stack_out": []
    },
    "5": {
      "op": "pushbytess 0x6333cd9d 0xb66d2f56 0x6e760e75 0xb16aa971 0xfff84048 0x5be219f0 0xb2460ef6 0x3ae74f74 0xda7b6785 0x71af966e 0x74c7e053 0x9650d5ce 0x32e16398 0xa0ecbe13 // method \"calc_single_box_cost(uint8,uint16)uint64\", method \"read_gen_unix()uint64\", method \"read_box_game_state(uint64)(uint64,bool,uint8,uint8,uint8,uint8,uint8,uint16,uint64,uint64,address,address,address,address)\", method \"read_box_game_players(uint64)address[]\", method \"read_box_commit_rand(account)(uint64,uint64,uint64)\", method \"generate()void\", method \"mint_trophy(pay,pay)void\", method \"claim_trophy()void\", method \"new_game(uint64,pay,pay,pay)void\", method \"join_game(uint64,pay)void\", method \"get_box_commit_rand(pay)void\", method \"set_box_commit_rand(uint64)void\", method \"del_box_commit_rand_for_self(uint64)void\", method \"del_box_commit_rand_for_other(account)void\"",
      "defined_out": [
        "Method(calc_single_box_cost(uint8,uint16)uint64)",
        "Method(claim_trophy()void)",
        "Method(del_box_commit_rand_for_other(account)void)",
        "Method(del_box_commit_rand_for_self(uint64)void)",
        "Method(generate()void)",
        "Method(get_box_commit_rand(pay)void)",
        "Method(join_game(uint64,pay)void)",
        "Method(mint_trophy(pay,pay)void)",
        "Method(new_game(uint64,pay,pay,pay)void)",
        "Method(read_box_commit_rand(account)(uint64,uint64,uint64))",
        "Method(read_box_game_players(uint64)address[])",
        "Method(read_box_game_state(uint64)(uint64,bool,uint8,uint8,uint8,uint8,uint8,uint16,uint64,uint64,address,address,address,address))",
        "Method(read_gen_unix()uint64)",
        "Method(set_box_commit_rand(uint64)void)"
      ],
      "stack_out": [
        "Method(calc_single_box_cost(uint8,uint16)uint64)",
        "Method(read_gen_unix()uint64)",
        "Method(read_box_game_state(uint64)(uint64,bool,uint8,uint8,uint8,uint8,uint8,uint16,uint64,uint64,address,address,address,address))",
        "Method(read_box_game_players(uint64)address[])",
        "Method(read_box_commit_rand(account)(uint64,uint64,uint64))",
        "Method(generate()void)",
        "Method(mint_trophy(pay,pay)void)",
        "Method(claim_trophy()void)",
        "Method(new_game(uint64,pay,pay,pay)void)",
        "Method(join_game(uint64,pay)void)",
        "Method(get_box_commit_rand(pay)void)",
        "Method(set_box_commit_rand(uint64)void)",
        "Method(del_box_commit_rand_for_self(uint64)void)",
        "Method(del_box_commit_rand_for_other(account)void)"
      ]
    },
    "77": {
      "op": "bytec 12 // method \"up_ref_budget_for_play_game(uint64)void\"",
      "defined_out": [
        "Method(calc_single_box_cost(uint8,uint16)uint64)",
        "Method(claim_trophy()void)",
        "Method(del_box_commit_rand_for_other(account)void)",
        "Method(del_box_commit_rand_for_self(uint64)void)",
        "Method(generate()void)",
        "Method(get_box_commit_rand(pay)void)",
        "Method(join_game(uint64,pay)void)",
        "Method(mint_trophy(pay,pay)void)",
        "Method(new_game(uint64,pay,pay,pay)void)",
        "Method(read_box_commit_rand(account)(uint64,uint64,uint64))",
        "Method(read_box_game_players(uint64)address[])",
        "Method(read_box_game_state(uint64)(uint64,bool,uint8,uint8,uint8,uint8,uint8,uint16,uint64,uint64,address,address,address,address))",
        "Method(read_gen_unix()uint64)",
        "Method(set_box_commit_rand(uint64)void)",
        "Method(up_ref_budget_for_play_game(uint64)void)"
      ],
      "stack_out": [
        "Method(calc_single_box_cost(uint8,uint16)uint64)",
        "Method(read_gen_unix()uint64)",
        "Method(read_box_game_state(uint64)(uint64,bool,uint8,uint8,uint8,uint8,uint8,uint16,uint64,uint64,address,address,address,address))",
        "Method(read_box_game_players(uint64)address[])",
        "Method(read_box_commit_rand(account)(uint64,uint64,uint64))",
        "Method(generate()void)",
        "Method(mint_trophy(pay,pay)void)",
        "Method(claim_trophy()void)",
        "Method(new_game(uint64,pay,pay,pay)void)",
        "Method(join_game(uint64,pay)void)",
        "Method(get_box_commit_rand(pay)void)",
        "Method(set_box_commit_rand(uint64)void)",
        "Method(del_box_commit_rand_for_self(uint64)void)",
        "Method(del_box_commit_rand_for_other(account)void)",
        "Method(up_ref_budget_for_play_game(uint64)void)"
      ]
    },
    "79": {
      "op": "bytec 13 // method \"play_game(uint64)void\"",
      "defined_out": [
        "Method(calc_single_box_cost(uint8,uint16)uint64)",
        "Method(claim_trophy()void)",
        "Method(del_box_commit_rand_for_other(account)void)",
        "Method(del_box_commit_rand_for_self(uint64)void)",
        "Method(generate()void)",
        "Method(get_box_commit_rand(pay)void)",
        "Method(join_game(uint64,pay)void)",
        "Method(mint_trophy(pay,pay)void)",
        "Method(new_game(uint64,pay,pay,pay)void)",
        "Method(play_game(uint64)void)",
        "Method(read_box_commit_rand(account)(uint64,uint64,uint64))",
        "Method(read_box_game_players(uint64)address[])",
        "Method(read_box_game_state(uint64)(uint64,bool,uint8,uint8,uint8,uint8,uint8,uint16,uint64,uint64,address,address,address,address))",
        "Method(read_gen_unix()uint64)",
        "Method(set_box_commit_rand(uint64)void)",
        "Method(up_ref_budget_for_play_game(uint64)void)"
      ],
      "stack_out": [
        "Method(calc_single_box_cost(uint8,uint16)uint64)",
        "Method(read_gen_unix()uint64)",
        "Method(read_box_game_state(uint64)(uint64,bool,uint8,uint8,uint8,uint8,uint8,uint16,uint64,uint64,address,address,address,address))",
        "Method(read_box_game_players(uint64)address[])",
        "Method(read_box_commit_rand(account)(uint64,uint64,uint64))",
        "Method(generate()void)",
        "Method(mint_trophy(pay,pay)void)",
        "Method(claim_trophy()void)",
        "Method(new_game(uint64,pay,pay,pay)void)",
        "Method(join_game(uint64,pay)void)",
        "Method(get_box_commit_rand(pay)void)",
        "Method(set_box_commit_rand(uint64)void)",
        "Method(del_box_commit_rand_for_self(uint64)void)",
        "Method(del_box_commit_rand_for_other(account)void)",
        "Method(up_ref_budget_for_play_game(uint64)void)",
        "Method(play_game(uint64)void)"
      ]
    },
    "81": {
      "op": "pushbytess 0x2c3a2192 0x102875e7 0x1898a02e 0x5ff16da4 // method \"trigger_game_prog(uint64,uint8)bool\", method \"reset_game(uint64,pay)void\", method \"delete_game(uint64)void\", method \"terminate()void\"",
      "defined_out": [
        "Method(calc_single_box_cost(uint8,uint16)uint64)",
        "Method(claim_trophy()void)",
        "Method(del_box_commit_rand_for_other(account)void)",
        "Method(del_box_commit_rand_for_self(uint64)void)",
        "Method(delete_game(uint64)void)",
        "Method(generate()void)",
        "Method(get_box_commit_rand(pay)void)",
        "Method(join_game(uint64,pay)void)",
        "Method(mint_trophy(pay,pay)void)",
        "Method(new_game(uint64,pay,pay,pay)void)",
        "Method(play_game(uint64)void)",
        "Method(read_box_commit_rand(account)(uint64,uint64,uint64))",
        "Method(read_box_game_players(uint64)address[])",
        "Method(read_box_game_state(uint64)(uint64,bool,uint8,uint8,uint8,uint8,uint8,uint16,uint64,uint64,address,address,address,address))",
        "Method(read_gen_unix()uint64)",
        "Method(reset_game(uint64,pay)void)",
        "Method(set_box_commit_rand(uint64)void)",
        "Method(terminate()void)",
        "Method(trigger_game_prog(uint64,uint8)bool)",
        "Method(up_ref_budget_for_play_game(uint64)void)"
      ],
      "stack_out": [
        "Method(calc_single_box_cost(uint8,uint16)uint64)",
        "Method(read_gen_unix()uint64)",
        "Method(read_box_game_state(uint64)(uint64,bool,uint8,uint8,uint8,uint8,uint8,uint16,uint64,uint64,address,address,address,address))",
        "Method(read_box_game_players(uint64)address[])",
        "Method(read_box_commit_rand(account)(uint64,uint64,uint64))",
        "Method(generate()void)",
        "Method(mint_trophy(pay,pay)void)",
        "Method(claim_trophy()void)",
        "Method(new_game(uint64,pay,pay,pay)void)",
        "Method(join_game(uint64,pay)void)",
        "Method(get_box_commit_rand(pay)void)",
        "Method(set_box_commit_rand(uint64)void)",
        "Method(del_box_commit_rand_for_self(uint64)void)",
        "Method(del_box_commit_rand_for_other(account)void)",
        "Method(up_ref_budget_for_play_game(uint64)void)",
        "Method(play_game(uint64)void)",
        "Method(trigger_game_prog(uint64,uint8)bool)",
        "Method(reset_game(uint64,pay)void)",
        "Method(delete_game(uint64)void)",
        "Method(terminate()void)"
      ]
    },
    "103": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(calc_single_box_cost(uint8,uint16)uint64)",
        "Method(claim_trophy()void)",
        "Method(del_box_commit_rand_for_other(account)void)",
        "Method(del_box_commit_rand_for_self(uint64)void)",
        "Method(delete_game(uint64)void)",
        "Method(generate()void)",
        "Method(get_box_commit_rand(pay)void)",
        "Method(join_game(uint64,pay)void)",
        "Method(mint_trophy(pay,pay)void)",
        "Method(new_game(uint64,pay,pay,pay)void)",
        "Method(play_game(uint64)void)",
        "Method(read_box_commit_rand(account)(uint64,uint64,uint64))",
        "Method(read_box_game_players(uint64)address[])",
        "Method(read_box_game_state(uint64)(uint64,bool,uint8,uint8,uint8,uint8,uint8,uint16,uint64,uint64,address,address,address,address))",
        "Method(read_gen_unix()uint64)",
        "Method(reset_game(uint64,pay)void)",
        "Method(set_box_commit_rand(uint64)void)",
        "Method(terminate()void)",
        "Method(trigger_game_prog(uint64,uint8)bool)",
        "Method(up_ref_budget_for_play_game(uint64)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(calc_single_box_cost(uint8,uint16)uint64)",
        "Method(read_gen_unix()uint64)",
        "Method(read_box_game_state(uint64)(uint64,bool,uint8,uint8,uint8,uint8,uint8,uint16,uint64,uint64,address,address,address,address))",
        "Method(read_box_game_players(uint64)address[])",
        "Method(read_box_commit_rand(account)(uint64,uint64,uint64))",
        "Method(generate()void)",
        "Method(mint_trophy(pay,pay)void)",
        "Method(claim_trophy()void)",
        "Method(new_game(uint64,pay,pay,pay)void)",
        "Method(join_game(uint64,pay)void)",
        "Method(get_box_commit_rand(pay)void)",
        "Method(set_box_commit_rand(uint64)void)",
        "Method(del_box_commit_rand_for_self(uint64)void)",
        "Method(del_box_commit_rand_for_other(account)void)",
        "Method(up_ref_budget_for_play_game(uint64)void)",
        "Method(play_game(uint64)void)",
        "Method(trigger_game_prog(uint64,uint8)bool)",
        "Method(reset_game(uint64,pay)void)",
        "Method(delete_game(uint64)void)",
        "Method(terminate()void)",
        "tmp%2#0"
      ]
    },
    "106": {
      "op": "match main_calc_single_box_cost_route@5 main_read_gen_unix_route@6 main_read_box_game_state_route@7 main_read_box_game_players_route@8 main_read_box_commit_rand_route@9 main_generate_route@10 main_mint_trophy_route@11 main_claim_trophy_route@12 main_new_game_route@13 main_join_game_route@14 main_get_box_commit_rand_route@15 main_set_box_commit_rand_route@16 main_del_box_commit_rand_for_self_route@17 main_del_box_commit_rand_for_other_route@18 main_up_ref_budget_for_play_game_route@19 main_play_game_route@20 main_trigger_game_prog_route@21 main_reset_game_route@22 main_delete_game_route@23 main_terminate_route@24",
      "stack_out": []
    },
    "148": {
      "block": "main_after_if_else@25",
      "stack_in": [],
      "op": "intc_1 // 0",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "149": {
      "op": "return",
      "stack_out": []
    },
    "150": {
      "block": "main_terminate_route@24",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%112#0"
      ],
      "stack_out": [
        "tmp%112#0"
      ]
    },
    "152": {
      "op": "pushint 5 // DeleteApplication",
      "defined_out": [
        "DeleteApplication",
        "tmp%112#0"
      ],
      "stack_out": [
        "tmp%112#0",
        "DeleteApplication"
      ]
    },
    "154": {
      "op": "==",
      "defined_out": [
        "tmp%113#0"
      ],
      "stack_out": [
        "tmp%113#0"
      ]
    },
    "155": {
      "error": "OnCompletion is not DeleteApplication",
      "op": "assert // OnCompletion is not DeleteApplication",
      "stack_out": []
    },
    "156": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%114#0"
      ],
      "stack_out": [
        "tmp%114#0"
      ]
    },
    "158": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "159": {
      "callsub": "smart_contracts.pieout.contract.Pieout.terminate",
      "op": "callsub terminate"
    },
    "162": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "163": {
      "op": "return",
      "stack_out": []
    },
    "164": {
      "block": "main_delete_game_route@23",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%107#0"
      ],
      "stack_out": [
        "tmp%107#0"
      ]
    },
    "166": {
      "op": "!",
      "defined_out": [
        "tmp%108#0"
      ],
      "stack_out": [
        "tmp%108#0"
      ]
    },
    "167": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "168": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%109#0"
      ],
      "stack_out": [
        "tmp%109#0"
      ]
    },
    "170": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "171": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%10#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%10#0"
      ]
    },
    "174": {
      "op": "btoi",
      "defined_out": [
        "tmp%111#0"
      ],
      "stack_out": [
        "tmp%111#0"
      ]
    },
    "175": {
      "callsub": "smart_contracts.pieout.contract.Pieout.delete_game",
      "op": "callsub delete_game",
      "stack_out": []
    },
    "178": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "179": {
      "op": "return",
      "stack_out": []
    },
    "180": {
      "block": "main_reset_game_route@22",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%101#0"
      ],
      "stack_out": [
        "tmp%101#0"
      ]
    },
    "182": {
      "op": "!",
      "defined_out": [
        "tmp%102#0"
      ],
      "stack_out": [
        "tmp%102#0"
      ]
    },
    "183": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "184": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%103#0"
      ],
      "stack_out": [
        "tmp%103#0"
      ]
    },
    "186": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "187": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%9#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%9#0"
      ]
    },
    "190": {
      "op": "btoi",
      "defined_out": [
        "tmp%105#0"
      ],
      "stack_out": [
        "tmp%105#0"
      ]
    },
    "191": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%105#0",
        "tmp%106#0"
      ],
      "stack_out": [
        "tmp%105#0",
        "tmp%106#0"
      ]
    },
    "193": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "tmp%105#0",
        "tmp%106#0"
      ],
      "stack_out": [
        "tmp%105#0",
        "tmp%106#0",
        "1"
      ]
    },
    "194": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%7#0",
        "tmp%105#0"
      ],
      "stack_out": [
        "tmp%105#0",
        "gtxn_idx%7#0"
      ]
    },
    "195": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%7#0",
        "gtxn_idx%7#0 (copy)",
        "tmp%105#0"
      ],
      "stack_out": [
        "tmp%105#0",
        "gtxn_idx%7#0",
        "gtxn_idx%7#0 (copy)"
      ]
    },
    "196": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%7#0",
        "gtxn_type%7#0",
        "tmp%105#0"
      ],
      "stack_out": [
        "tmp%105#0",
        "gtxn_idx%7#0",
        "gtxn_type%7#0"
      ]
    },
    "198": {
      "op": "intc_0 // pay",
      "defined_out": [
        "gtxn_idx%7#0",
        "gtxn_type%7#0",
        "pay",
        "tmp%105#0"
      ],
      "stack_out": [
        "tmp%105#0",
        "gtxn_idx%7#0",
        "gtxn_type%7#0",
        "pay"
      ]
    },
    "199": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%7#0",
        "gtxn_type_matches%7#0",
        "tmp%105#0"
      ],
      "stack_out": [
        "tmp%105#0",
        "gtxn_idx%7#0",
        "gtxn_type_matches%7#0"
      ]
    },
    "200": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "tmp%105#0",
        "gtxn_idx%7#0"
      ]
    },
    "201": {
      "callsub": "smart_contracts.pieout.contract.Pieout.reset_game",
      "op": "callsub reset_game",
      "stack_out": []
    },
    "204": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "205": {
      "op": "return",
      "stack_out": []
    },
    "206": {
      "block": "main_trigger_game_prog_route@21",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%94#0"
      ],
      "stack_out": [
        "tmp%94#0"
      ]
    },
    "208": {
      "op": "!",
      "defined_out": [
        "tmp%95#0"
      ],
      "stack_out": [
        "tmp%95#0"
      ]
    },
    "209": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "210": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%96#0"
      ],
      "stack_out": [
        "tmp%96#0"
      ]
    },
    "212": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "213": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%8#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%8#0"
      ]
    },
    "216": {
      "op": "btoi",
      "defined_out": [
        "tmp%98#0"
      ],
      "stack_out": [
        "tmp%98#0"
      ]
    },
    "217": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[1]%3#0",
        "tmp%98#0"
      ],
      "stack_out": [
        "tmp%98#0",
        "reinterpret_bytes[1]%3#0"
      ]
    },
    "220": {
      "callsub": "smart_contracts.pieout.contract.Pieout.trigger_game_prog",
      "op": "callsub trigger_game_prog",
      "defined_out": [
        "tmp%99#0"
      ],
      "stack_out": [
        "tmp%99#0"
      ]
    },
    "223": {
      "op": "bytec 5 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%99#0"
      ],
      "stack_out": [
        "tmp%99#0",
        "0x151f7c75"
      ]
    },
    "225": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%99#0"
      ]
    },
    "226": {
      "op": "concat",
      "defined_out": [
        "tmp%100#0"
      ],
      "stack_out": [
        "tmp%100#0"
      ]
    },
    "227": {
      "op": "log",
      "stack_out": []
    },
    "228": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "229": {
      "op": "return",
      "stack_out": []
    },
    "230": {
      "block": "main_play_game_route@20",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%89#0"
      ],
      "stack_out": [
        "tmp%89#0"
      ]
    },
    "232": {
      "op": "!",
      "defined_out": [
        "tmp%90#0"
      ],
      "stack_out": [
        "tmp%90#0"
      ]
    },
    "233": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "234": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%91#0"
      ],
      "stack_out": [
        "tmp%91#0"
      ]
    },
    "236": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "237": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%7#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%7#0"
      ]
    },
    "240": {
      "op": "btoi",
      "defined_out": [
        "tmp%93#0"
      ],
      "stack_out": [
        "tmp%93#0"
      ]
    },
    "241": {
      "callsub": "smart_contracts.pieout.contract.Pieout.play_game",
      "op": "callsub play_game",
      "stack_out": []
    },
    "244": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "245": {
      "op": "return",
      "stack_out": []
    },
    "246": {
      "block": "main_up_ref_budget_for_play_game_route@19",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%84#0"
      ],
      "stack_out": [
        "tmp%84#0"
      ]
    },
    "248": {
      "op": "!",
      "defined_out": [
        "tmp%85#0"
      ],
      "stack_out": [
        "tmp%85#0"
      ]
    },
    "249": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "250": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%86#0"
      ],
      "stack_out": [
        "tmp%86#0"
      ]
    },
    "252": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "253": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%6#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%6#0"
      ]
    },
    "256": {
      "op": "btoi",
      "defined_out": [
        "tmp%88#0"
      ],
      "stack_out": [
        "tmp%88#0"
      ]
    },
    "257": {
      "callsub": "smart_contracts.pieout.contract.Pieout.up_ref_budget_for_play_game",
      "op": "callsub up_ref_budget_for_play_game",
      "stack_out": []
    },
    "260": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "261": {
      "op": "return",
      "stack_out": []
    },
    "262": {
      "block": "main_del_box_commit_rand_for_other_route@18",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%78#0"
      ],
      "stack_out": [
        "tmp%78#0"
      ]
    },
    "264": {
      "op": "!",
      "defined_out": [
        "tmp%79#0"
      ],
      "stack_out": [
        "tmp%79#0"
      ]
    },
    "265": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "266": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%80#0"
      ],
      "stack_out": [
        "tmp%80#0"
      ]
    },
    "268": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "269": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%2#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%2#0"
      ]
    },
    "272": {
      "op": "btoi",
      "defined_out": [
        "tmp%82#0"
      ],
      "stack_out": [
        "tmp%82#0"
      ]
    },
    "273": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%83#0"
      ],
      "stack_out": [
        "tmp%83#0"
      ]
    },
    "275": {
      "callsub": "smart_contracts.pieout.contract.Pieout.del_box_commit_rand_for_other",
      "op": "callsub del_box_commit_rand_for_other",
      "stack_out": []
    },
    "278": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "279": {
      "op": "return",
      "stack_out": []
    },
    "280": {
      "block": "main_del_box_commit_rand_for_self_route@17",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%73#0"
      ],
      "stack_out": [
        "tmp%73#0"
      ]
    },
    "282": {
      "op": "!",
      "defined_out": [
        "tmp%74#0"
      ],
      "stack_out": [
        "tmp%74#0"
      ]
    },
    "283": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "284": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%75#0"
      ],
      "stack_out": [
        "tmp%75#0"
      ]
    },
    "286": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "287": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%5#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%5#0"
      ]
    },
    "290": {
      "op": "btoi",
      "defined_out": [
        "tmp%77#0"
      ],
      "stack_out": [
        "tmp%77#0"
      ]
    },
    "291": {
      "callsub": "smart_contracts.pieout.contract.Pieout.del_box_commit_rand_for_self",
      "op": "callsub del_box_commit_rand_for_self",
      "stack_out": []
    },
    "294": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "295": {
      "op": "return",
      "stack_out": []
    },
    "296": {
      "block": "main_set_box_commit_rand_route@16",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%68#0"
      ],
      "stack_out": [
        "tmp%68#0"
      ]
    },
    "298": {
      "op": "!",
      "defined_out": [
        "tmp%69#0"
      ],
      "stack_out": [
        "tmp%69#0"
      ]
    },
    "299": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "300": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%70#0"
      ],
      "stack_out": [
        "tmp%70#0"
      ]
    },
    "302": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "303": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%4#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%4#0"
      ]
    },
    "306": {
      "op": "btoi",
      "defined_out": [
        "tmp%72#0"
      ],
      "stack_out": [
        "tmp%72#0"
      ]
    },
    "307": {
      "callsub": "smart_contracts.pieout.contract.Pieout.set_box_commit_rand",
      "op": "callsub set_box_commit_rand",
      "stack_out": []
    },
    "310": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "311": {
      "op": "return",
      "stack_out": []
    },
    "312": {
      "block": "main_get_box_commit_rand_route@15",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%63#0"
      ],
      "stack_out": [
        "tmp%63#0"
      ]
    },
    "314": {
      "op": "!",
      "defined_out": [
        "tmp%64#0"
      ],
      "stack_out": [
        "tmp%64#0"
      ]
    },
    "315": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "316": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%65#0"
      ],
      "stack_out": [
        "tmp%65#0"
      ]
    },
    "318": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "319": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%67#0"
      ],
      "stack_out": [
        "tmp%67#0"
      ]
    },
    "321": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "tmp%67#0"
      ],
      "stack_out": [
        "tmp%67#0",
        "1"
      ]
    },
    "322": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%6#0"
      ],
      "stack_out": [
        "gtxn_idx%6#0"
      ]
    },
    "323": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%6#0",
        "gtxn_idx%6#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%6#0",
        "gtxn_idx%6#0 (copy)"
      ]
    },
    "324": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%6#0",
        "gtxn_type%6#0"
      ],
      "stack_out": [
        "gtxn_idx%6#0",
        "gtxn_type%6#0"
      ]
    },
    "326": {
      "op": "intc_0 // pay",
      "defined_out": [
        "gtxn_idx%6#0",
        "gtxn_type%6#0",
        "pay"
      ],
      "stack_out": [
        "gtxn_idx%6#0",
        "gtxn_type%6#0",
        "pay"
      ]
    },
    "327": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%6#0",
        "gtxn_type_matches%6#0"
      ],
      "stack_out": [
        "gtxn_idx%6#0",
        "gtxn_type_matches%6#0"
      ]
    },
    "328": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "gtxn_idx%6#0"
      ]
    },
    "329": {
      "callsub": "smart_contracts.pieout.contract.Pieout.get_box_commit_rand",
      "op": "callsub get_box_commit_rand",
      "stack_out": []
    },
    "332": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "333": {
      "op": "return",
      "stack_out": []
    },
    "334": {
      "block": "main_join_game_route@14",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%57#0"
      ],
      "stack_out": [
        "tmp%57#0"
      ]
    },
    "336": {
      "op": "!",
      "defined_out": [
        "tmp%58#0"
      ],
      "stack_out": [
        "tmp%58#0"
      ]
    },
    "337": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "338": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%59#0"
      ],
      "stack_out": [
        "tmp%59#0"
      ]
    },
    "340": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "341": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%3#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%3#0"
      ]
    },
    "344": {
      "op": "btoi",
      "defined_out": [
        "tmp%61#0"
      ],
      "stack_out": [
        "tmp%61#0"
      ]
    },
    "345": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%61#0",
        "tmp%62#0"
      ],
      "stack_out": [
        "tmp%61#0",
        "tmp%62#0"
      ]
    },
    "347": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "tmp%61#0",
        "tmp%62#0"
      ],
      "stack_out": [
        "tmp%61#0",
        "tmp%62#0",
        "1"
      ]
    },
    "348": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%5#0",
        "tmp%61#0"
      ],
      "stack_out": [
        "tmp%61#0",
        "gtxn_idx%5#0"
      ]
    },
    "349": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%5#0",
        "gtxn_idx%5#0 (copy)",
        "tmp%61#0"
      ],
      "stack_out": [
        "tmp%61#0",
        "gtxn_idx%5#0",
        "gtxn_idx%5#0 (copy)"
      ]
    },
    "350": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%5#0",
        "gtxn_type%5#0",
        "tmp%61#0"
      ],
      "stack_out": [
        "tmp%61#0",
        "gtxn_idx%5#0",
        "gtxn_type%5#0"
      ]
    },
    "352": {
      "op": "intc_0 // pay",
      "defined_out": [
        "gtxn_idx%5#0",
        "gtxn_type%5#0",
        "pay",
        "tmp%61#0"
      ],
      "stack_out": [
        "tmp%61#0",
        "gtxn_idx%5#0",
        "gtxn_type%5#0",
        "pay"
      ]
    },
    "353": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%5#0",
        "gtxn_type_matches%5#0",
        "tmp%61#0"
      ],
      "stack_out": [
        "tmp%61#0",
        "gtxn_idx%5#0",
        "gtxn_type_matches%5#0"
      ]
    },
    "354": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "tmp%61#0",
        "gtxn_idx%5#0"
      ]
    },
    "355": {
      "callsub": "smart_contracts.pieout.contract.Pieout.join_game",
      "op": "callsub join_game",
      "stack_out": []
    },
    "358": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "359": {
      "op": "return",
      "stack_out": []
    },
    "360": {
      "block": "main_new_game_route@13",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%49#0"
      ],
      "stack_out": [
        "tmp%49#0"
      ]
    },
    "362": {
      "op": "!",
      "defined_out": [
        "tmp%50#0"
      ],
      "stack_out": [
        "tmp%50#0"
      ]
    },
    "363": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "364": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%51#0"
      ],
      "stack_out": [
        "tmp%51#0"
      ]
    },
    "366": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "367": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%2#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%2#0"
      ]
    },
    "370": {
      "op": "btoi",
      "defined_out": [
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%53#0"
      ]
    },
    "371": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%53#0",
        "tmp%54#0"
      ],
      "stack_out": [
        "tmp%53#0",
        "tmp%54#0"
      ]
    },
    "373": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "tmp%53#0",
        "tmp%54#0"
      ],
      "stack_out": [
        "tmp%53#0",
        "tmp%54#0",
        "3"
      ]
    },
    "375": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%2#0",
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%53#0",
        "gtxn_idx%2#0"
      ]
    },
    "376": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_idx%2#0 (copy)",
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%53#0",
        "gtxn_idx%2#0",
        "gtxn_idx%2#0 (copy)"
      ]
    },
    "377": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_type%2#0",
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%53#0",
        "gtxn_idx%2#0",
        "gtxn_type%2#0"
      ]
    },
    "379": {
      "op": "intc_0 // pay",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_type%2#0",
        "pay",
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%53#0",
        "gtxn_idx%2#0",
        "gtxn_type%2#0",
        "pay"
      ]
    },
    "380": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_type_matches%2#0",
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%53#0",
        "gtxn_idx%2#0",
        "gtxn_type_matches%2#0"
      ]
    },
    "381": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "tmp%53#0",
        "gtxn_idx%2#0"
      ]
    },
    "382": {
      "op": "txn GroupIndex",
      "defined_out": [
        "gtxn_idx%2#0",
        "tmp%53#0",
        "tmp%55#0"
      ],
      "stack_out": [
        "tmp%53#0",
        "gtxn_idx%2#0",
        "tmp%55#0"
      ]
    },
    "384": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "gtxn_idx%2#0",
        "tmp%53#0",
        "tmp%55#0"
      ],
      "stack_out": [
        "tmp%53#0",
        "gtxn_idx%2#0",
        "tmp%55#0",
        "2"
      ]
    },
    "385": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%53#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0"
      ]
    },
    "386": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%3#0 (copy)",
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%53#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%3#0 (copy)"
      ]
    },
    "387": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_type%3#0",
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%53#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_type%3#0"
      ]
    },
    "389": {
      "op": "intc_0 // pay",
      "stack_out": [
        "tmp%53#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_type%3#0",
        "pay"
      ]
    },
    "390": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_type_matches%3#0",
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%53#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_type_matches%3#0"
      ]
    },
    "391": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "tmp%53#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0"
      ]
    },
    "392": {
      "op": "txn GroupIndex",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "tmp%53#0",
        "tmp%56#0"
      ],
      "stack_out": [
        "tmp%53#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "tmp%56#0"
      ]
    },
    "394": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "tmp%53#0",
        "tmp%56#0"
      ],
      "stack_out": [
        "tmp%53#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "tmp%56#0",
        "1"
      ]
    },
    "395": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%53#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0"
      ]
    },
    "396": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "gtxn_idx%4#0 (copy)",
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%53#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "gtxn_idx%4#0 (copy)"
      ]
    },
    "397": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "gtxn_type%4#0",
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%53#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "gtxn_type%4#0"
      ]
    },
    "399": {
      "op": "intc_0 // pay",
      "stack_out": [
        "tmp%53#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "gtxn_type%4#0",
        "pay"
      ]
    },
    "400": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "gtxn_type_matches%4#0",
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%53#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "gtxn_type_matches%4#0"
      ]
    },
    "401": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "tmp%53#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0"
      ]
    },
    "402": {
      "callsub": "smart_contracts.pieout.contract.Pieout.new_game",
      "op": "callsub new_game",
      "stack_out": []
    },
    "405": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "406": {
      "op": "return",
      "stack_out": []
    },
    "407": {
      "block": "main_claim_trophy_route@12",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%45#0"
      ]
    },
    "409": {
      "op": "!",
      "defined_out": [
        "tmp%46#0"
      ],
      "stack_out": [
        "tmp%46#0"
      ]
    },
    "410": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "411": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%47#0"
      ]
    },
    "413": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "414": {
      "callsub": "smart_contracts.pieout.contract.Pieout.claim_trophy",
      "op": "callsub claim_trophy"
    },
    "417": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "418": {
      "op": "return",
      "stack_out": []
    },
    "419": {
      "block": "main_mint_trophy_route@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%39#0"
      ]
    },
    "421": {
      "op": "!",
      "defined_out": [
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%40#0"
      ]
    },
    "422": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "423": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0"
      ]
    },
    "425": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "426": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%43#0"
      ],
      "stack_out": [
        "tmp%43#0"
      ]
    },
    "428": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "tmp%43#0"
      ],
      "stack_out": [
        "tmp%43#0",
        "2"
      ]
    },
    "429": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "430": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ]
    },
    "431": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ]
    },
    "433": {
      "op": "intc_0 // pay",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay"
      ]
    },
    "434": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ]
    },
    "435": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "436": {
      "op": "txn GroupIndex",
      "defined_out": [
        "gtxn_idx%0#0",
        "tmp%44#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%44#0"
      ]
    },
    "438": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "gtxn_idx%0#0",
        "tmp%44#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%44#0",
        "1"
      ]
    },
    "439": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0"
      ]
    },
    "440": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0",
        "gtxn_idx%1#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0",
        "gtxn_idx%1#0 (copy)"
      ]
    },
    "441": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0",
        "gtxn_type%1#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0",
        "gtxn_type%1#0"
      ]
    },
    "443": {
      "op": "intc_0 // pay",
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0",
        "gtxn_type%1#0",
        "pay"
      ]
    },
    "444": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0",
        "gtxn_type_matches%1#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0",
        "gtxn_type_matches%1#0"
      ]
    },
    "445": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0"
      ]
    },
    "446": {
      "callsub": "smart_contracts.pieout.contract.Pieout.mint_trophy",
      "op": "callsub mint_trophy",
      "stack_out": []
    },
    "449": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "450": {
      "op": "return",
      "stack_out": []
    },
    "451": {
      "block": "main_generate_route@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0"
      ]
    },
    "453": {
      "op": "!",
      "defined_out": [
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0"
      ]
    },
    "454": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "455": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0"
      ]
    },
    "457": {
      "op": "!",
      "defined_out": [
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%38#0"
      ]
    },
    "458": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "459": {
      "callsub": "smart_contracts.pieout.contract.Pieout.generate",
      "op": "callsub generate"
    },
    "462": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "463": {
      "op": "return",
      "stack_out": []
    },
    "464": {
      "block": "main_read_box_commit_rand_route@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "466": {
      "op": "!",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "467": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "468": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "470": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "471": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%1#0"
      ]
    },
    "474": {
      "op": "btoi",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "475": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0"
      ]
    },
    "477": {
      "callsub": "smart_contracts.pieout.contract.Pieout.read_box_commit_rand",
      "op": "callsub read_box_commit_rand",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "480": {
      "op": "bytec 5 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0",
        "0x151f7c75"
      ]
    },
    "482": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%33#0"
      ]
    },
    "483": {
      "op": "concat",
      "defined_out": [
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%34#0"
      ]
    },
    "484": {
      "op": "log",
      "stack_out": []
    },
    "485": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "486": {
      "op": "return",
      "stack_out": []
    },
    "487": {
      "block": "main_read_box_game_players_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "489": {
      "op": "!",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "490": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "491": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "493": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "494": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%1#0"
      ]
    },
    "497": {
      "op": "btoi",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "498": {
      "callsub": "smart_contracts.pieout.contract.Pieout.read_box_game_players",
      "op": "callsub read_box_game_players",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "501": {
      "op": "bytec 5 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0",
        "0x151f7c75"
      ]
    },
    "503": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%25#0"
      ]
    },
    "504": {
      "op": "concat",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "505": {
      "op": "log",
      "stack_out": []
    },
    "506": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "507": {
      "op": "return",
      "stack_out": []
    },
    "508": {
      "block": "main_read_box_game_state_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "510": {
      "op": "!",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "511": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "512": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "514": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "515": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%0#0"
      ]
    },
    "518": {
      "op": "btoi",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "519": {
      "callsub": "smart_contracts.pieout.contract.Pieout.read_box_game_state",
      "op": "callsub read_box_game_state",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "522": {
      "op": "bytec 5 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0",
        "0x151f7c75"
      ]
    },
    "524": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%18#0"
      ]
    },
    "525": {
      "op": "concat",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "526": {
      "op": "log",
      "stack_out": []
    },
    "527": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "528": {
      "op": "return",
      "stack_out": []
    },
    "529": {
      "block": "main_read_gen_unix_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "531": {
      "op": "!",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "532": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "533": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "535": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "536": {
      "op": "intc 13 // TMPL_GEN_UNIX",
      "defined_out": [
        "to_encode%1#0"
      ],
      "stack_out": [
        "to_encode%1#0"
      ]
    },
    "538": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0"
      ]
    },
    "539": {
      "op": "bytec 5 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0",
        "0x151f7c75"
      ]
    },
    "541": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%1#0"
      ]
    },
    "542": {
      "op": "concat",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "543": {
      "op": "log",
      "stack_out": []
    },
    "544": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "545": {
      "op": "return",
      "stack_out": []
    },
    "546": {
      "block": "main_calc_single_box_cost_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "548": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "549": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "550": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "552": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "553": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%0#0"
      ]
    },
    "556": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[1]%0#0",
        "reinterpret_bytes[2]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%0#0",
        "reinterpret_bytes[2]%0#0"
      ]
    },
    "559": {
      "callsub": "smart_contracts.pieout.contract.Pieout.calc_single_box_cost",
      "op": "callsub calc_single_box_cost",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "562": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "563": {
      "op": "bytec 5 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "0x151f7c75"
      ]
    },
    "565": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ]
    },
    "566": {
      "op": "concat",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "567": {
      "op": "log",
      "stack_out": []
    },
    "568": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "569": {
      "op": "return",
      "stack_out": []
    },
    "570": {
      "subroutine": "smart_contracts.pieout.subroutines.payout_itxn",
      "params": {
        "receiver#0": "bytes",
        "amount#0": "uint64",
        "note#0": "bytes"
      },
      "block": "payout_itxn",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "573": {
      "op": "itxn_begin"
    },
    "574": {
      "op": "frame_dig -1",
      "defined_out": [
        "note#0 (copy)"
      ],
      "stack_out": [
        "note#0 (copy)"
      ]
    },
    "576": {
      "op": "itxn_field Note",
      "stack_out": []
    },
    "578": {
      "op": "frame_dig -2",
      "defined_out": [
        "amount#0 (copy)"
      ],
      "stack_out": [
        "amount#0 (copy)"
      ]
    },
    "580": {
      "op": "itxn_field Amount",
      "stack_out": []
    },
    "582": {
      "op": "frame_dig -3",
      "defined_out": [
        "receiver#0 (copy)"
      ],
      "stack_out": [
        "receiver#0 (copy)"
      ]
    },
    "584": {
      "op": "itxn_field Receiver",
      "stack_out": []
    },
    "586": {
      "op": "intc_0 // pay",
      "defined_out": [
        "pay"
      ],
      "stack_out": [
        "pay"
      ]
    },
    "587": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "589": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "590": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "592": {
      "op": "itxn_submit"
    },
    "593": {
      "retsub": true,
      "op": "retsub"
    },
    "594": {
      "subroutine": "smart_contracts.pieout.subroutines.resolve_receiver_by_prio",
      "params": {
        "acc1#0": "bytes",
        "acc2#0": "bytes",
        "acc3#0": "bytes"
      },
      "block": "resolve_receiver_by_prio",
      "stack_in": [],
      "op": "proto 3 1"
    },
    "597": {
      "op": "frame_dig -3",
      "defined_out": [
        "acc1#0 (copy)"
      ],
      "stack_out": [
        "acc1#0 (copy)"
      ]
    },
    "599": {
      "op": "global ZeroAddress",
      "defined_out": [
        "acc1#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "acc1#0 (copy)",
        "tmp%0#0"
      ]
    },
    "601": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "602": {
      "op": "bz resolve_receiver_by_prio_else_body@3",
      "stack_out": []
    },
    "605": {
      "op": "frame_dig -3",
      "stack_out": [
        "acc1#0 (copy)"
      ]
    },
    "607": {
      "op": "acct_params_get AcctBalance",
      "defined_out": [
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "609": {
      "op": "bury 1",
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "611": {
      "op": "bz resolve_receiver_by_prio_else_body@3",
      "stack_out": []
    },
    "614": {
      "op": "frame_dig -3",
      "stack_out": [
        "acc1#0 (copy)"
      ]
    },
    "616": {
      "retsub": true,
      "op": "retsub"
    },
    "617": {
      "block": "resolve_receiver_by_prio_else_body@3",
      "stack_in": [],
      "op": "frame_dig -2",
      "defined_out": [
        "acc2#0 (copy)"
      ],
      "stack_out": [
        "acc2#0 (copy)"
      ]
    },
    "619": {
      "op": "global ZeroAddress",
      "defined_out": [
        "acc2#0 (copy)",
        "tmp%4#0"
      ],
      "stack_out": [
        "acc2#0 (copy)",
        "tmp%4#0"
      ]
    },
    "621": {
      "op": "!=",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "622": {
      "op": "bz resolve_receiver_by_prio_else_body@6",
      "stack_out": []
    },
    "625": {
      "op": "frame_dig -2",
      "stack_out": [
        "acc2#0 (copy)"
      ]
    },
    "627": {
      "op": "acct_params_get AcctBalance",
      "defined_out": [
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "629": {
      "op": "bury 1",
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "631": {
      "op": "bz resolve_receiver_by_prio_else_body@6",
      "stack_out": []
    },
    "634": {
      "op": "frame_dig -2",
      "stack_out": [
        "acc2#0 (copy)"
      ]
    },
    "636": {
      "retsub": true,
      "op": "retsub"
    },
    "637": {
      "block": "resolve_receiver_by_prio_else_body@6",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "acc3#0 (copy)"
      ],
      "stack_out": [
        "acc3#0 (copy)"
      ]
    },
    "639": {
      "op": "global ZeroAddress",
      "defined_out": [
        "acc3#0 (copy)",
        "tmp%8#0"
      ],
      "stack_out": [
        "acc3#0 (copy)",
        "tmp%8#0"
      ]
    },
    "641": {
      "op": "!=",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "642": {
      "op": "bz resolve_receiver_by_prio_else_body@9",
      "stack_out": []
    },
    "645": {
      "op": "frame_dig -1",
      "stack_out": [
        "acc3#0 (copy)"
      ]
    },
    "647": {
      "op": "acct_params_get AcctBalance",
      "defined_out": [
        "tmp%10#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "tmp%11#0"
      ]
    },
    "649": {
      "op": "bury 1",
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "651": {
      "op": "bz resolve_receiver_by_prio_else_body@9",
      "stack_out": []
    },
    "654": {
      "op": "frame_dig -1",
      "stack_out": [
        "acc3#0 (copy)"
      ]
    },
    "656": {
      "retsub": true,
      "op": "retsub"
    },
    "657": {
      "block": "resolve_receiver_by_prio_else_body@9",
      "stack_in": [],
      "op": "txn Sender",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "659": {
      "op": "global ZeroAddress",
      "defined_out": [
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "tmp%13#0"
      ]
    },
    "661": {
      "op": "!=",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "662": {
      "op": "bz resolve_receiver_by_prio_else_body@12",
      "stack_out": []
    },
    "665": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "667": {
      "op": "acct_params_get AcctBalance",
      "defined_out": [
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "tmp%17#0"
      ]
    },
    "669": {
      "op": "bury 1",
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "671": {
      "op": "bz resolve_receiver_by_prio_else_body@12",
      "stack_out": []
    },
    "674": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "676": {
      "retsub": true,
      "op": "retsub"
    },
    "677": {
      "block": "resolve_receiver_by_prio_else_body@12",
      "stack_in": [],
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "679": {
      "retsub": true,
      "op": "retsub"
    },
    "680": {
      "subroutine": "smart_contracts.pieout.subroutines.reset_box_commit_rand",
      "params": {
        "box_commit_rand#0": "bytes",
        "account#0": "bytes",
        "round_delta#0": "uint64"
      },
      "block": "reset_box_commit_rand",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "683": {
      "op": "global Round",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "685": {
      "op": "frame_dig -1",
      "defined_out": [
        "round_delta#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "round_delta#0 (copy)"
      ]
    },
    "687": {
      "op": "+",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "688": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "689": {
      "op": "pushbytes 0x00000000000000000000000000000000",
      "defined_out": [
        "0x00000000000000000000000000000000",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "0x00000000000000000000000000000000"
      ]
    },
    "707": {
      "op": "swap",
      "stack_out": [
        "0x00000000000000000000000000000000",
        "val_as_bytes%0#0"
      ]
    },
    "708": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%3#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%3#0"
      ]
    },
    "709": {
      "op": "frame_dig -3",
      "defined_out": [
        "box_commit_rand#0 (copy)",
        "encoded_tuple_buffer%3#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%3#0",
        "box_commit_rand#0 (copy)"
      ]
    },
    "711": {
      "op": "frame_dig -2",
      "defined_out": [
        "account#0 (copy)",
        "box_commit_rand#0 (copy)",
        "encoded_tuple_buffer%3#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%3#0",
        "box_commit_rand#0 (copy)",
        "account#0 (copy)"
      ]
    },
    "713": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_tuple_buffer%3#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%3#0",
        "box_prefixed_key%0#0"
      ]
    },
    "714": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "715": {
      "op": "box_put",
      "stack_out": []
    },
    "716": {
      "retsub": true,
      "op": "retsub"
    },
    "717": {
      "subroutine": "smart_contracts.pieout.subroutines.check_acc_in_game",
      "params": {
        "game_id#0": "uint64",
        "account#0": "bytes",
        "box_game_players#0": "bytes",
        "player_count#0": "uint64",
        "clear_player#0": "uint64"
      },
      "block": "check_acc_in_game",
      "stack_in": [],
      "op": "proto 5 1"
    },
    "720": {
      "op": "intc_1 // 0",
      "stack_out": [
        "game_players_bref#0"
      ]
    },
    "721": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5"
      ]
    },
    "723": {
      "op": "frame_dig -2",
      "defined_out": [
        "player_count#0 (copy)"
      ],
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "player_count#0 (copy)"
      ]
    },
    "725": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "player_count#0 (copy)"
      ],
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "player_count#0 (copy)",
        "32"
      ]
    },
    "726": {
      "op": "*",
      "defined_out": [
        "game_players_length#0"
      ],
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0"
      ]
    },
    "727": {
      "op": "intc_1 // 0"
    },
    "728": {
      "op": "dup",
      "defined_out": [
        "acc_in_game#0",
        "game_players_length#0",
        "i#0"
      ],
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0"
      ]
    },
    "729": {
      "block": "check_acc_in_game_for_header@1",
      "stack_in": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0",
        "i#0"
      ]
    },
    "731": {
      "op": "frame_dig 2",
      "defined_out": [
        "game_players_length#0",
        "i#0"
      ],
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0",
        "i#0",
        "game_players_length#0"
      ]
    },
    "733": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "game_players_length#0",
        "i#0"
      ],
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "734": {
      "op": "frame_dig 3",
      "defined_out": [
        "acc_in_game#5",
        "continue_looping%0#0",
        "game_players_length#0",
        "i#0"
      ],
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0",
        "continue_looping%0#0",
        "acc_in_game#5"
      ]
    },
    "736": {
      "op": "frame_bury 1",
      "defined_out": [
        "acc_in_game#5",
        "continue_looping%0#0",
        "game_players_length#0",
        "i#0"
      ],
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "738": {
      "op": "bz check_acc_in_game_after_for@8",
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0"
      ]
    },
    "741": {
      "op": "frame_dig -5",
      "defined_out": [
        "acc_in_game#5",
        "game_id#0 (copy)",
        "game_players_length#0",
        "i#0"
      ],
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0",
        "game_id#0 (copy)"
      ]
    },
    "743": {
      "op": "itob",
      "defined_out": [
        "acc_in_game#5",
        "encoded_value%0#0",
        "game_players_length#0",
        "i#0"
      ],
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0",
        "encoded_value%0#0"
      ]
    },
    "744": {
      "op": "frame_dig -3",
      "defined_out": [
        "acc_in_game#5",
        "box_game_players#0 (copy)",
        "encoded_value%0#0",
        "game_players_length#0",
        "i#0"
      ],
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0",
        "encoded_value%0#0",
        "box_game_players#0 (copy)"
      ]
    },
    "746": {
      "op": "swap",
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0",
        "box_game_players#0 (copy)",
        "encoded_value%0#0"
      ]
    },
    "747": {
      "op": "concat",
      "defined_out": [
        "acc_in_game#5",
        "game_players_bref#0",
        "game_players_length#0",
        "i#0"
      ],
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0",
        "game_players_bref#0"
      ]
    },
    "748": {
      "op": "dup",
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0",
        "game_players_bref#0",
        "game_players_bref#0"
      ]
    },
    "749": {
      "op": "frame_bury 0",
      "defined_out": [
        "acc_in_game#5",
        "game_players_bref#0",
        "game_players_length#0",
        "i#0"
      ],
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0",
        "game_players_bref#0"
      ]
    },
    "751": {
      "op": "box_get",
      "defined_out": [
        "acc_in_game#5",
        "game_players_bref#0",
        "game_players_length#0",
        "i#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "752": {
      "error": "check BoxMap entry exists",
      "op": "assert // check BoxMap entry exists",
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0",
        "maybe_value%0#0"
      ]
    },
    "753": {
      "op": "frame_dig 4",
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0",
        "maybe_value%0#0",
        "i#0"
      ]
    },
    "755": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "acc_in_game#5",
        "game_players_bref#0",
        "game_players_length#0",
        "i#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0",
        "maybe_value%0#0",
        "i#0",
        "32"
      ]
    },
    "756": {
      "op": "extract3",
      "defined_out": [
        "acc_in_game#5",
        "game_players_bref#0",
        "game_players_length#0",
        "i#0",
        "player_addr_bytes#0"
      ],
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0",
        "player_addr_bytes#0"
      ]
    },
    "757": {
      "op": "frame_dig -4",
      "defined_out": [
        "acc_in_game#5",
        "account#0 (copy)",
        "game_players_bref#0",
        "game_players_length#0",
        "i#0",
        "player_addr_bytes#0"
      ],
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0",
        "player_addr_bytes#0",
        "account#0 (copy)"
      ]
    },
    "759": {
      "op": "==",
      "defined_out": [
        "acc_in_game#5",
        "game_players_bref#0",
        "game_players_length#0",
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0",
        "tmp%0#0"
      ]
    },
    "760": {
      "op": "bz check_acc_in_game_after_if_else@6",
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0"
      ]
    },
    "763": {
      "op": "intc_0 // 1",
      "defined_out": [
        "acc_in_game#0",
        "acc_in_game#5",
        "game_players_bref#0",
        "game_players_length#0",
        "i#0"
      ],
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0",
        "acc_in_game#0"
      ]
    },
    "764": {
      "op": "frame_bury 3",
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0"
      ]
    },
    "766": {
      "op": "frame_dig -1",
      "defined_out": [
        "acc_in_game#0",
        "acc_in_game#5",
        "clear_player#0 (copy)",
        "game_players_bref#0",
        "game_players_length#0",
        "i#0"
      ],
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0",
        "clear_player#0 (copy)"
      ]
    },
    "768": {
      "op": "bz check_acc_in_game_after_if_else@5",
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0"
      ]
    },
    "771": {
      "op": "frame_dig 0",
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0",
        "game_players_bref#0"
      ]
    },
    "773": {
      "op": "frame_dig 4",
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0",
        "game_players_bref#0",
        "i#0"
      ]
    },
    "775": {
      "op": "bytec 8 // 0x0000000000000000000000000000000000000000000000000000000000000000",
      "defined_out": [
        "0x0000000000000000000000000000000000000000000000000000000000000000",
        "acc_in_game#0",
        "acc_in_game#5",
        "game_players_bref#0",
        "game_players_length#0",
        "i#0"
      ],
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0",
        "game_players_bref#0",
        "i#0",
        "0x0000000000000000000000000000000000000000000000000000000000000000"
      ]
    },
    "777": {
      "op": "box_replace",
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0"
      ]
    },
    "778": {
      "block": "check_acc_in_game_after_if_else@5",
      "stack_in": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "acc_in_game#5"
      ],
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0",
        "acc_in_game#5"
      ]
    },
    "780": {
      "op": "frame_bury 1",
      "defined_out": [
        "acc_in_game#5"
      ],
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0"
      ]
    },
    "782": {
      "block": "check_acc_in_game_after_for@8",
      "stack_in": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "acc_in_game#0"
      ],
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0",
        "acc_in_game#0"
      ]
    },
    "784": {
      "op": "frame_bury 0"
    },
    "786": {
      "retsub": true,
      "op": "retsub"
    },
    "787": {
      "block": "check_acc_in_game_after_if_else@6",
      "stack_in": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0",
        "i#0"
      ]
    },
    "789": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "i#0"
      ],
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0",
        "i#0",
        "32"
      ]
    },
    "790": {
      "op": "+",
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0",
        "i#0"
      ]
    },
    "791": {
      "op": "frame_bury 4",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "game_players_bref#0",
        "acc_in_game#5",
        "game_players_length#0",
        "acc_in_game#0",
        "i#0"
      ]
    },
    "793": {
      "op": "b check_acc_in_game_for_header@1"
    },
    "796": {
      "subroutine": "smart_contracts.pieout.subroutines.is_game_live",
      "params": {
        "game_state#0": "bytes"
      },
      "block": "is_game_live",
      "stack_in": [],
      "op": "proto 1 2"
    },
    "799": {
      "op": "frame_dig -1",
      "defined_out": [
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "game_state#0 (copy)"
      ]
    },
    "801": {
      "error": "Index access is out of bounds",
      "op": "extract 8 8 // on error: Index access is out of bounds",
      "defined_out": [
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0"
      ]
    },
    "804": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "reinterpret_biguint%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "tmp%0#0"
      ]
    },
    "806": {
      "op": "itob",
      "defined_out": [
        "reinterpret_biguint%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "tmp%1#0"
      ]
    },
    "807": {
      "op": "b<",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "808": {
      "op": "bnz is_game_live_if_body@2",
      "stack_out": []
    },
    "811": {
      "op": "frame_dig -1",
      "stack_out": [
        "game_state#0 (copy)"
      ]
    },
    "813": {
      "error": "Index access is out of bounds",
      "op": "extract 2 1 // on error: Index access is out of bounds",
      "defined_out": [
        "reinterpret_biguint%1#0"
      ],
      "stack_out": [
        "reinterpret_biguint%1#0"
      ]
    },
    "816": {
      "op": "frame_dig -1",
      "stack_out": [
        "reinterpret_biguint%1#0",
        "game_state#0 (copy)"
      ]
    },
    "818": {
      "error": "Index access is out of bounds",
      "op": "extract 1 1 // on error: Index access is out of bounds",
      "defined_out": [
        "reinterpret_biguint%1#0",
        "reinterpret_biguint%2#0"
      ],
      "stack_out": [
        "reinterpret_biguint%1#0",
        "reinterpret_biguint%2#0"
      ]
    },
    "821": {
      "op": "b==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "822": {
      "op": "bz is_game_live_else_body@7",
      "stack_out": []
    },
    "825": {
      "block": "is_game_live_if_body@2",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "game_state#0 (copy)"
      ]
    },
    "827": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "game_state#0 (copy)",
        "0"
      ]
    },
    "828": {
      "op": "intc_0 // 1",
      "defined_out": [
        "0",
        "1",
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "game_state#0 (copy)",
        "0",
        "1"
      ]
    },
    "829": {
      "op": "setbit",
      "defined_out": [
        "game_state#0"
      ],
      "stack_out": [
        "game_state#0"
      ]
    },
    "830": {
      "op": "frame_bury -1",
      "stack_out": []
    },
    "832": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "834": {
      "op": "intc 5 // 3600",
      "defined_out": [
        "3600",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "3600"
      ]
    },
    "836": {
      "op": "+",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "837": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "838": {
      "op": "frame_dig -1",
      "stack_out": [
        "val_as_bytes%0#0",
        "game_state#0 (copy)"
      ]
    },
    "840": {
      "op": "swap",
      "stack_out": [
        "game_state#0 (copy)",
        "val_as_bytes%0#0"
      ]
    },
    "841": {
      "op": "replace2 8",
      "stack_out": [
        "game_state#0"
      ]
    },
    "843": {
      "op": "dup"
    },
    "844": {
      "op": "frame_bury -1",
      "stack_out": [
        "game_state#0 (copy)"
      ]
    },
    "846": {
      "op": "intc_1 // 0",
      "stack_out": [
        "game_state#0 (copy)",
        "0"
      ]
    },
    "847": {
      "op": "getbit",
      "defined_out": [
        "is_true%1#0"
      ],
      "stack_out": [
        "is_true%1#0"
      ]
    },
    "848": {
      "op": "bytec_1 // 0x00",
      "defined_out": [
        "0x00",
        "is_true%1#0"
      ],
      "stack_out": [
        "is_true%1#0",
        "0x00"
      ]
    },
    "849": {
      "op": "intc_1 // 0",
      "stack_out": [
        "is_true%1#0",
        "0x00",
        "0"
      ]
    },
    "850": {
      "op": "uncover 2",
      "stack_out": [
        "0x00",
        "0",
        "is_true%1#0"
      ]
    },
    "852": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%1#0"
      ],
      "stack_out": [
        "encoded_bool%1#0"
      ]
    },
    "853": {
      "op": "frame_dig -1",
      "stack_out": [
        "encoded_bool%1#0",
        "game_state#0 (copy)"
      ]
    },
    "855": {
      "error": "Index access is out of bounds",
      "op": "extract 8 8 // on error: Index access is out of bounds",
      "defined_out": [
        "encoded_bool%1#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "encoded_bool%1#0",
        "tmp%5#0"
      ]
    },
    "858": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%2#0"
      ]
    },
    "859": {
      "op": "pushbytes 0xf1f3294a // method \"game_live(bool,uint64)\"",
      "defined_out": [
        "Method(game_live(bool,uint64))",
        "encoded_tuple_buffer%2#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%2#0",
        "Method(game_live(bool,uint64))"
      ]
    },
    "865": {
      "op": "swap",
      "stack_out": [
        "Method(game_live(bool,uint64))",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "866": {
      "op": "concat",
      "defined_out": [
        "event%0#0"
      ],
      "stack_out": [
        "event%0#0"
      ]
    },
    "867": {
      "op": "log",
      "stack_out": []
    },
    "868": {
      "op": "pushbytes 0x80",
      "defined_out": [
        "0x80"
      ],
      "stack_out": [
        "0x80"
      ]
    },
    "871": {
      "op": "frame_dig -1",
      "stack_out": [
        "0x80",
        "game_state#0 (copy)"
      ]
    },
    "873": {
      "retsub": true,
      "op": "retsub"
    },
    "874": {
      "block": "is_game_live_else_body@7",
      "stack_in": [],
      "op": "bytec_1 // 0x00",
      "defined_out": [
        "0x00"
      ],
      "stack_out": [
        "0x00"
      ]
    },
    "875": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x00",
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "0x00",
        "game_state#0 (copy)"
      ]
    },
    "877": {
      "retsub": true,
      "op": "retsub"
    },
    "878": {
      "subroutine": "smart_contracts.pieout.subroutines.is_game_over",
      "params": {
        "game_id#0": "uint64",
        "game_state#0": "bytes",
        "box_game_players#0": "bytes",
        "box_commit_rand#0": "bytes"
      },
      "block": "is_game_over",
      "stack_in": [],
      "op": "proto 4 2"
    },
    "881": {
      "op": "intc_1 // 0",
      "stack_out": [
        "first_place_receiver#0"
      ]
    },
    "882": {
      "op": "dupn 7",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ]
    },
    "884": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0"
      ]
    },
    "886": {
      "op": "dupn 4",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ]
    },
    "888": {
      "op": "frame_dig -3",
      "defined_out": [
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "game_state#0 (copy)"
      ]
    },
    "890": {
      "error": "Index access is out of bounds",
      "op": "extract 8 8 // on error: Index access is out of bounds",
      "defined_out": [
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "893": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "reinterpret_biguint%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "reinterpret_biguint%0#0",
        "tmp%0#0"
      ]
    },
    "895": {
      "op": "itob",
      "defined_out": [
        "reinterpret_biguint%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "reinterpret_biguint%0#0",
        "tmp%1#0"
      ]
    },
    "896": {
      "op": "b<",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%2#0"
      ]
    },
    "897": {
      "op": "bnz is_game_over_if_body@2",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ]
    },
    "900": {
      "op": "frame_dig -3",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "game_state#0 (copy)"
      ]
    },
    "902": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "game_state#0 (copy)",
        "2"
      ]
    },
    "903": {
      "op": "getbyte",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%4#0"
      ]
    },
    "904": {
      "op": "bnz is_game_over_else_body@25",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ]
    },
    "907": {
      "block": "is_game_over_if_body@2",
      "stack_in": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ],
      "op": "frame_dig -4",
      "defined_out": [
        "game_id#0 (copy)"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "game_id#0 (copy)"
      ]
    },
    "909": {
      "op": "itob",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%6#0"
      ]
    },
    "910": {
      "op": "frame_dig -2",
      "defined_out": [
        "box_game_players#0 (copy)",
        "tmp%6#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%6#0",
        "box_game_players#0 (copy)"
      ]
    },
    "912": {
      "op": "swap",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "box_game_players#0 (copy)",
        "tmp%6#0"
      ]
    },
    "913": {
      "op": "concat",
      "defined_out": [
        "game_players_bref#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "game_players_bref#0"
      ]
    },
    "914": {
      "op": "dup",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "game_players_bref#0",
        "game_players_bref#0"
      ]
    },
    "915": {
      "op": "frame_bury 1",
      "defined_out": [
        "game_players_bref#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "game_players_bref#0"
      ]
    },
    "917": {
      "op": "box_len",
      "defined_out": [
        "check%0#0",
        "game_players_bref#0",
        "value%0#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "value%0#0",
        "check%0#0"
      ]
    },
    "918": {
      "op": "swap",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "check%0#0",
        "value%0#0"
      ]
    },
    "919": {
      "op": "frame_bury 12",
      "defined_out": [
        "check%0#0",
        "game_players_bref#0",
        "value%0#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "check%0#0"
      ]
    },
    "921": {
      "error": "check BoxRef exists",
      "op": "assert // check BoxRef exists",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ]
    },
    "922": {
      "op": "intc_1 // 0",
      "defined_out": [
        "game_players_bref#0",
        "i#0",
        "value%0#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "i#0"
      ]
    },
    "923": {
      "op": "frame_bury 9",
      "defined_out": [
        "game_players_bref#0",
        "i#0",
        "value%0#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ]
    },
    "925": {
      "block": "is_game_over_for_header@3",
      "stack_in": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ],
      "op": "frame_dig 9",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "i#0"
      ]
    },
    "927": {
      "op": "frame_dig 12",
      "defined_out": [
        "i#0",
        "value%0#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "i#0",
        "value%0#0"
      ]
    },
    "929": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0",
        "value%0#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "continue_looping%0#0"
      ]
    },
    "930": {
      "op": "bz is_game_over_after_for@8",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ]
    },
    "933": {
      "op": "frame_dig 1",
      "defined_out": [
        "game_players_bref#0",
        "i#0",
        "value%0#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "game_players_bref#0"
      ]
    },
    "935": {
      "op": "frame_dig 9",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "game_players_bref#0",
        "i#0"
      ]
    },
    "937": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "game_players_bref#0",
        "i#0",
        "value%0#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "game_players_bref#0",
        "i#0",
        "32"
      ]
    },
    "938": {
      "op": "box_extract",
      "defined_out": [
        "game_players_bref#0",
        "i#0",
        "player_addr_bytes#0",
        "value%0#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "player_addr_bytes#0"
      ]
    },
    "939": {
      "op": "dup",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "player_addr_bytes#0",
        "player_addr_bytes#0"
      ]
    },
    "940": {
      "op": "frame_bury 2",
      "defined_out": [
        "game_players_bref#0",
        "i#0",
        "player_addr_bytes#0",
        "value%0#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "player_addr_bytes#0"
      ]
    },
    "942": {
      "op": "bytec 8 // 0x0000000000000000000000000000000000000000000000000000000000000000",
      "defined_out": [
        "0x0000000000000000000000000000000000000000000000000000000000000000",
        "game_players_bref#0",
        "i#0",
        "player_addr_bytes#0",
        "value%0#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "player_addr_bytes#0",
        "0x0000000000000000000000000000000000000000000000000000000000000000"
      ]
    },
    "944": {
      "op": "!=",
      "defined_out": [
        "game_players_bref#0",
        "i#0",
        "player_addr_bytes#0",
        "tmp%7#0",
        "value%0#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%7#0"
      ]
    },
    "945": {
      "op": "bz is_game_over_after_if_else@6",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ]
    },
    "948": {
      "op": "frame_dig -1",
      "defined_out": [
        "box_commit_rand#0 (copy)",
        "game_players_bref#0",
        "i#0",
        "player_addr_bytes#0",
        "value%0#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "box_commit_rand#0 (copy)"
      ]
    },
    "950": {
      "op": "frame_dig 2",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "box_commit_rand#0 (copy)",
        "player_addr_bytes#0"
      ]
    },
    "952": {
      "op": "intc 6 // 32000",
      "defined_out": [
        "32000",
        "box_commit_rand#0 (copy)",
        "game_players_bref#0",
        "i#0",
        "player_addr_bytes#0",
        "value%0#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "box_commit_rand#0 (copy)",
        "player_addr_bytes#0",
        "32000"
      ]
    },
    "954": {
      "callsub": "smart_contracts.pieout.subroutines.reset_box_commit_rand",
      "op": "callsub reset_box_commit_rand",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ]
    },
    "957": {
      "block": "is_game_over_after_if_else@6",
      "stack_in": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ],
      "op": "frame_dig 9",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "i#0"
      ]
    },
    "959": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "i#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "i#0",
        "32"
      ]
    },
    "960": {
      "op": "+",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "i#0"
      ]
    },
    "961": {
      "op": "frame_bury 9",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ]
    },
    "963": {
      "op": "b is_game_over_for_header@3"
    },
    "966": {
      "block": "is_game_over_after_for@8",
      "stack_in": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "game_state#0 (copy)"
      ]
    },
    "968": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "game_state#0 (copy)",
        "1"
      ]
    },
    "969": {
      "op": "getbyte",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%9#0"
      ]
    },
    "970": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "tmp%9#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%9#0",
        "32"
      ]
    },
    "971": {
      "op": "*",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%10#0"
      ]
    },
    "972": {
      "op": "bzero",
      "defined_out": [
        "materialized_values%0#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "materialized_values%0#0"
      ]
    },
    "973": {
      "op": "frame_dig 1",
      "defined_out": [
        "game_players_bref#0",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "materialized_values%0#0",
        "game_players_bref#0"
      ]
    },
    "975": {
      "op": "dup",
      "defined_out": [
        "game_players_bref#0",
        "game_players_bref#0 (copy)",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "materialized_values%0#0",
        "game_players_bref#0",
        "game_players_bref#0 (copy)"
      ]
    },
    "976": {
      "op": "box_del",
      "defined_out": [
        "game_players_bref#0",
        "materialized_values%0#0",
        "{box_del}"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "materialized_values%0#0",
        "game_players_bref#0",
        "{box_del}"
      ]
    },
    "977": {
      "op": "pop",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "materialized_values%0#0",
        "game_players_bref#0"
      ]
    },
    "978": {
      "op": "swap",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "game_players_bref#0",
        "materialized_values%0#0"
      ]
    },
    "979": {
      "op": "box_put",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ]
    },
    "980": {
      "op": "frame_dig -3",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "game_state#0 (copy)"
      ]
    },
    "982": {
      "op": "bytec_1 // 0x00",
      "defined_out": [
        "0x00",
        "game_players_bref#0",
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "game_state#0 (copy)",
        "0x00"
      ]
    },
    "983": {
      "op": "replace2 2",
      "defined_out": [
        "game_players_bref#0",
        "game_state#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "game_state#0"
      ]
    },
    "985": {
      "op": "dup"
    },
    "986": {
      "op": "frame_bury -3",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "game_state#0 (copy)"
      ]
    },
    "988": {
      "error": "Index access is out of bounds",
      "op": "extract 3 1 // on error: Index access is out of bounds",
      "defined_out": [
        "game_players_bref#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%11#0"
      ]
    },
    "991": {
      "op": "frame_dig -3",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%11#0",
        "game_state#0 (copy)"
      ]
    },
    "993": {
      "error": "Index access is out of bounds",
      "op": "extract 56 32 // on error: Index access is out of bounds",
      "defined_out": [
        "game_players_bref#0",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%11#0",
        "tmp%12#0"
      ]
    },
    "996": {
      "op": "dup",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%12#0"
      ]
    },
    "997": {
      "op": "frame_bury 5",
      "defined_out": [
        "game_players_bref#0",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%11#0",
        "tmp%12#0"
      ]
    },
    "999": {
      "op": "frame_dig -3",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%11#0",
        "tmp%12#0",
        "game_state#0 (copy)"
      ]
    },
    "1001": {
      "error": "Index access is out of bounds",
      "op": "extract 88 32 // on error: Index access is out of bounds",
      "defined_out": [
        "game_players_bref#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0"
      ]
    },
    "1004": {
      "op": "dup",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%13#0 (copy)"
      ]
    },
    "1005": {
      "op": "cover 2",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%13#0"
      ]
    },
    "1007": {
      "op": "frame_bury 6",
      "defined_out": [
        "game_players_bref#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%12#0"
      ]
    },
    "1009": {
      "op": "frame_dig -3",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%12#0",
        "game_state#0 (copy)"
      ]
    },
    "1011": {
      "error": "Index access is out of bounds",
      "op": "extract 120 32 // on error: Index access is out of bounds",
      "defined_out": [
        "game_players_bref#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%14#0"
      ]
    },
    "1014": {
      "op": "dup",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%14#0 (copy)"
      ]
    },
    "1015": {
      "op": "cover 4",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%14#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%14#0"
      ]
    },
    "1017": {
      "op": "frame_bury 7",
      "defined_out": [
        "game_players_bref#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%14#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%12#0"
      ]
    },
    "1019": {
      "op": "uncover 2",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0"
      ]
    },
    "1021": {
      "op": "swap",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%11#0",
        "tmp%12#0"
      ]
    },
    "1022": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "game_players_bref#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%14#0",
        "tmp%13#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "1023": {
      "op": "swap",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%14#0",
        "encoded_tuple_buffer%2#0",
        "tmp%13#0"
      ]
    },
    "1024": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "game_players_bref#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%14#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "1025": {
      "op": "swap",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "encoded_tuple_buffer%3#0",
        "tmp%14#0"
      ]
    },
    "1026": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%4#0",
        "game_players_bref#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "1027": {
      "op": "pushbytes 0x410b2150 // method \"game_over(uint8,address,address,address)\"",
      "defined_out": [
        "Method(game_over(uint8,address,address,address))",
        "encoded_tuple_buffer%4#0",
        "game_players_bref#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "encoded_tuple_buffer%4#0",
        "Method(game_over(uint8,address,address,address))"
      ]
    },
    "1033": {
      "op": "swap",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "Method(game_over(uint8,address,address,address))",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "1034": {
      "op": "concat",
      "defined_out": [
        "event%0#0",
        "game_players_bref#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "event%0#0"
      ]
    },
    "1035": {
      "op": "log",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ]
    },
    "1036": {
      "op": "frame_dig -3",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "game_state#0 (copy)"
      ]
    },
    "1038": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "game_players_bref#0",
        "game_state#0 (copy)",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "game_state#0 (copy)",
        "16"
      ]
    },
    "1040": {
      "op": "extract_uint64",
      "defined_out": [
        "first_prize_share#0",
        "game_players_bref#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#0"
      ]
    },
    "1041": {
      "op": "dup",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#0",
        "first_prize_share#0"
      ]
    },
    "1042": {
      "op": "frame_bury 8",
      "defined_out": [
        "first_prize_share#0",
        "game_players_bref#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#0"
      ]
    },
    "1044": {
      "op": "pushint 258400 // 258400",
      "defined_out": [
        "258400",
        "first_prize_share#0",
        "game_players_bref#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#0",
        "258400"
      ]
    },
    "1048": {
      "op": "==",
      "defined_out": [
        "first_prize_share#0",
        "game_players_bref#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%17#0"
      ]
    },
    "1049": {
      "op": "bz is_game_over_else_body@12",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ]
    },
    "1052": {
      "op": "intc_1 // 0",
      "defined_out": [
        "first_prize_share#0",
        "game_players_bref#0",
        "second_prize_share#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "second_prize_share#0"
      ]
    },
    "1053": {
      "op": "frame_bury 10",
      "defined_out": [
        "first_prize_share#0",
        "game_players_bref#0",
        "second_prize_share#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ]
    },
    "1055": {
      "op": "intc_1 // 0",
      "defined_out": [
        "first_prize_share#0",
        "game_players_bref#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "third_prize_share#0"
      ]
    },
    "1056": {
      "op": "frame_bury 11",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ]
    },
    "1058": {
      "block": "is_game_over_after_if_else@16",
      "stack_in": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "game_state#0 (copy)"
      ]
    },
    "1060": {
      "error": "Index access is out of bounds",
      "op": "extract 24 32 // on error: Index access is out of bounds",
      "defined_out": [
        "reinterpret_bytes[32]%2#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "reinterpret_bytes[32]%2#0"
      ]
    },
    "1063": {
      "op": "global CreatorAddress",
      "defined_out": [
        "reinterpret_bytes[32]%2#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "reinterpret_bytes[32]%2#0",
        "tmp%36#0"
      ]
    },
    "1065": {
      "op": "frame_dig 5",
      "defined_out": [
        "reinterpret_bytes[32]%2#0",
        "tmp%12#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "reinterpret_bytes[32]%2#0",
        "tmp%36#0",
        "tmp%12#0"
      ]
    },
    "1067": {
      "op": "dig 2",
      "defined_out": [
        "reinterpret_bytes[32]%2#0",
        "reinterpret_bytes[32]%2#0 (copy)",
        "tmp%12#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "reinterpret_bytes[32]%2#0",
        "tmp%36#0",
        "tmp%12#0",
        "reinterpret_bytes[32]%2#0 (copy)"
      ]
    },
    "1069": {
      "op": "uncover 2",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "reinterpret_bytes[32]%2#0",
        "tmp%12#0",
        "reinterpret_bytes[32]%2#0 (copy)",
        "tmp%36#0"
      ]
    },
    "1071": {
      "callsub": "smart_contracts.pieout.subroutines.resolve_receiver_by_prio",
      "op": "callsub resolve_receiver_by_prio",
      "defined_out": [
        "first_place_receiver#0",
        "reinterpret_bytes[32]%2#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "reinterpret_bytes[32]%2#0",
        "first_place_receiver#0"
      ]
    },
    "1074": {
      "op": "frame_bury 0",
      "defined_out": [
        "first_place_receiver#0",
        "reinterpret_bytes[32]%2#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "reinterpret_bytes[32]%2#0"
      ]
    },
    "1076": {
      "op": "global CreatorAddress",
      "defined_out": [
        "first_place_receiver#0",
        "reinterpret_bytes[32]%2#0",
        "tmp%12#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "reinterpret_bytes[32]%2#0",
        "tmp%37#0"
      ]
    },
    "1078": {
      "op": "frame_dig 6",
      "defined_out": [
        "first_place_receiver#0",
        "reinterpret_bytes[32]%2#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "reinterpret_bytes[32]%2#0",
        "tmp%37#0",
        "tmp%13#0"
      ]
    },
    "1080": {
      "op": "dig 2",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "reinterpret_bytes[32]%2#0",
        "tmp%37#0",
        "tmp%13#0",
        "reinterpret_bytes[32]%2#0 (copy)"
      ]
    },
    "1082": {
      "op": "uncover 2",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "reinterpret_bytes[32]%2#0",
        "tmp%13#0",
        "reinterpret_bytes[32]%2#0 (copy)",
        "tmp%37#0"
      ]
    },
    "1084": {
      "callsub": "smart_contracts.pieout.subroutines.resolve_receiver_by_prio",
      "op": "callsub resolve_receiver_by_prio",
      "defined_out": [
        "first_place_receiver#0",
        "reinterpret_bytes[32]%2#0",
        "second_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "reinterpret_bytes[32]%2#0",
        "second_place_receiver#0"
      ]
    },
    "1087": {
      "op": "frame_bury 3",
      "defined_out": [
        "first_place_receiver#0",
        "reinterpret_bytes[32]%2#0",
        "second_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "reinterpret_bytes[32]%2#0"
      ]
    },
    "1089": {
      "op": "global CreatorAddress",
      "defined_out": [
        "first_place_receiver#0",
        "reinterpret_bytes[32]%2#0",
        "second_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%38#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "reinterpret_bytes[32]%2#0",
        "tmp%38#0"
      ]
    },
    "1091": {
      "op": "frame_dig 7",
      "defined_out": [
        "first_place_receiver#0",
        "reinterpret_bytes[32]%2#0",
        "second_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%38#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "reinterpret_bytes[32]%2#0",
        "tmp%38#0",
        "tmp%14#0"
      ]
    },
    "1093": {
      "op": "cover 2",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%14#0",
        "reinterpret_bytes[32]%2#0",
        "tmp%38#0"
      ]
    },
    "1095": {
      "callsub": "smart_contracts.pieout.subroutines.resolve_receiver_by_prio",
      "op": "callsub resolve_receiver_by_prio",
      "defined_out": [
        "first_place_receiver#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "third_place_receiver#0"
      ]
    },
    "1098": {
      "op": "frame_bury 4",
      "defined_out": [
        "first_place_receiver#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ]
    },
    "1100": {
      "op": "frame_dig 8",
      "defined_out": [
        "first_place_receiver#0",
        "first_prize_share#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#0"
      ]
    },
    "1102": {
      "op": "bz is_game_over_after_if_else@18",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ]
    },
    "1105": {
      "op": "frame_dig 0",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_place_receiver#0"
      ]
    },
    "1107": {
      "op": "frame_dig 8",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_place_receiver#0",
        "first_prize_share#0"
      ]
    },
    "1109": {
      "op": "pushbytes \"pieout:j{\\\"method\\\":\\\"play_game\\\",\\\"subroutine:\\\"is_game_over\\\",\\\"concern\\\":\\\"itxn.pay;first_prize_share\\\"}\"",
      "defined_out": [
        "\"pieout:j{\\\"method\\\":\\\"play_game\\\",\\\"subroutine:\\\"is_game_over\\\",\\\"concern\\\":\\\"itxn.pay;first_prize_share\\\"}\"",
        "first_place_receiver#0",
        "first_prize_share#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_place_receiver#0",
        "first_prize_share#0",
        "\"pieout:j{\\\"method\\\":\\\"play_game\\\",\\\"subroutine:\\\"is_game_over\\\",\\\"concern\\\":\\\"itxn.pay;first_prize_share\\\"}\""
      ]
    },
    "1207": {
      "callsub": "smart_contracts.pieout.subroutines.payout_itxn",
      "op": "callsub payout_itxn",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ]
    },
    "1210": {
      "block": "is_game_over_after_if_else@18",
      "stack_in": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ],
      "op": "frame_dig 10",
      "defined_out": [
        "second_prize_share#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "second_prize_share#0"
      ]
    },
    "1212": {
      "op": "bz is_game_over_after_if_else@20",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ]
    },
    "1215": {
      "op": "frame_dig 3",
      "defined_out": [
        "second_place_receiver#0",
        "second_prize_share#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "second_place_receiver#0"
      ]
    },
    "1217": {
      "op": "frame_dig 10",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "second_place_receiver#0",
        "second_prize_share#0"
      ]
    },
    "1219": {
      "op": "pushbytes \"pieout:j{\\\"method\\\":\\\"play_game\\\",\\\"subroutine:\\\"is_game_over\\\",\\\"concern\\\":\\\"itxn.pay;second_prize_share\\\"}\"",
      "defined_out": [
        "\"pieout:j{\\\"method\\\":\\\"play_game\\\",\\\"subroutine:\\\"is_game_over\\\",\\\"concern\\\":\\\"itxn.pay;second_prize_share\\\"}\"",
        "second_place_receiver#0",
        "second_prize_share#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "second_place_receiver#0",
        "second_prize_share#0",
        "\"pieout:j{\\\"method\\\":\\\"play_game\\\",\\\"subroutine:\\\"is_game_over\\\",\\\"concern\\\":\\\"itxn.pay;second_prize_share\\\"}\""
      ]
    },
    "1318": {
      "callsub": "smart_contracts.pieout.subroutines.payout_itxn",
      "op": "callsub payout_itxn",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ]
    },
    "1321": {
      "block": "is_game_over_after_if_else@20",
      "stack_in": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ],
      "op": "frame_dig 11",
      "defined_out": [
        "third_prize_share#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "third_prize_share#0"
      ]
    },
    "1323": {
      "op": "bz is_game_over_after_if_else@22",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ]
    },
    "1326": {
      "op": "frame_dig 4",
      "defined_out": [
        "third_place_receiver#0",
        "third_prize_share#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "third_place_receiver#0"
      ]
    },
    "1328": {
      "op": "frame_dig 11",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "third_place_receiver#0",
        "third_prize_share#0"
      ]
    },
    "1330": {
      "op": "pushbytes \"pieout:j{\\\"method\\\":\\\"play_game\\\",\\\"subroutine:\\\"is_game_over\\\",\\\"concern\\\":\\\"itxn.pay;third_prize_share\\\"}\"",
      "defined_out": [
        "\"pieout:j{\\\"method\\\":\\\"play_game\\\",\\\"subroutine:\\\"is_game_over\\\",\\\"concern\\\":\\\"itxn.pay;third_prize_share\\\"}\"",
        "third_place_receiver#0",
        "third_prize_share#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "third_place_receiver#0",
        "third_prize_share#0",
        "\"pieout:j{\\\"method\\\":\\\"play_game\\\",\\\"subroutine:\\\"is_game_over\\\",\\\"concern\\\":\\\"itxn.pay;third_prize_share\\\"}\""
      ]
    },
    "1428": {
      "callsub": "smart_contracts.pieout.subroutines.payout_itxn",
      "op": "callsub payout_itxn",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ]
    },
    "1431": {
      "block": "is_game_over_after_if_else@22",
      "stack_in": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "game_state#0 (copy)"
      ]
    },
    "1433": {
      "op": "pushbytes 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "game_state#0 (copy)",
        "0x0000000000000000"
      ]
    },
    "1443": {
      "op": "replace2 16",
      "defined_out": [
        "game_state#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "game_state#0"
      ]
    },
    "1445": {
      "op": "frame_bury -3",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ]
    },
    "1447": {
      "op": "pushbytes 0x80",
      "defined_out": [
        "0x80"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "0x80"
      ]
    },
    "1450": {
      "op": "frame_dig -3",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "0x80",
        "game_state#0 (copy)"
      ]
    },
    "1452": {
      "op": "frame_bury 1"
    },
    "1454": {
      "op": "frame_bury 0"
    },
    "1456": {
      "retsub": true,
      "op": "retsub"
    },
    "1457": {
      "block": "is_game_over_else_body@12",
      "stack_in": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ],
      "op": "frame_dig 8",
      "defined_out": [
        "first_prize_share#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#0"
      ]
    },
    "1459": {
      "op": "pushint 516800 // 516800",
      "defined_out": [
        "516800",
        "first_prize_share#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#0",
        "516800"
      ]
    },
    "1463": {
      "op": "==",
      "defined_out": [
        "first_prize_share#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "tmp%21#0"
      ]
    },
    "1464": {
      "op": "bz is_game_over_else_body@14",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ]
    },
    "1467": {
      "op": "frame_dig 8",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#0"
      ]
    },
    "1469": {
      "op": "dup",
      "defined_out": [
        "first_prize_share#0",
        "first_prize_share#0 (copy)"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#0",
        "first_prize_share#0 (copy)"
      ]
    },
    "1470": {
      "op": "pushint 60 // 60",
      "defined_out": [
        "60",
        "first_prize_share#0",
        "first_prize_share#0 (copy)"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#0",
        "first_prize_share#0 (copy)",
        "60"
      ]
    },
    "1472": {
      "op": "*",
      "defined_out": [
        "first_prize_share#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#0",
        "tmp%24#0"
      ]
    },
    "1473": {
      "op": "pushint 100 // 100",
      "defined_out": [
        "100",
        "first_prize_share#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#0",
        "tmp%24#0",
        "100"
      ]
    },
    "1475": {
      "op": "/",
      "defined_out": [
        "first_prize_share#0",
        "first_prize_share#1"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#0",
        "first_prize_share#1"
      ]
    },
    "1476": {
      "op": "swap",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#1",
        "first_prize_share#0"
      ]
    },
    "1477": {
      "op": "dig 1",
      "defined_out": [
        "first_prize_share#0",
        "first_prize_share#1",
        "first_prize_share#1 (copy)"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#1",
        "first_prize_share#0",
        "first_prize_share#1 (copy)"
      ]
    },
    "1479": {
      "op": "-",
      "defined_out": [
        "first_prize_share#0",
        "first_prize_share#1",
        "second_prize_share#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#1",
        "second_prize_share#0"
      ]
    },
    "1480": {
      "op": "frame_bury 10",
      "defined_out": [
        "first_prize_share#0",
        "first_prize_share#1",
        "second_prize_share#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#1"
      ]
    },
    "1482": {
      "op": "intc_1 // 0",
      "defined_out": [
        "first_prize_share#0",
        "first_prize_share#1",
        "second_prize_share#0",
        "third_prize_share#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#1",
        "third_prize_share#0"
      ]
    },
    "1483": {
      "op": "frame_bury 11",
      "defined_out": [
        "first_prize_share#0",
        "second_prize_share#0",
        "third_prize_share#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#0"
      ]
    },
    "1485": {
      "op": "frame_bury 8",
      "defined_out": [
        "first_prize_share#0",
        "second_prize_share#0",
        "third_prize_share#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ]
    },
    "1487": {
      "op": "b is_game_over_after_if_else@16"
    },
    "1490": {
      "block": "is_game_over_else_body@14",
      "stack_in": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ],
      "op": "frame_dig 8",
      "defined_out": [
        "first_prize_share#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#0"
      ]
    },
    "1492": {
      "op": "dup",
      "defined_out": [
        "first_prize_share#0",
        "first_prize_share#0 (copy)"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#0",
        "first_prize_share#0 (copy)"
      ]
    },
    "1493": {
      "op": "pushint 50 // 50",
      "defined_out": [
        "50",
        "first_prize_share#0",
        "first_prize_share#0 (copy)"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#0",
        "first_prize_share#0 (copy)",
        "50"
      ]
    },
    "1495": {
      "op": "*",
      "defined_out": [
        "first_prize_share#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#0",
        "tmp%29#0"
      ]
    },
    "1496": {
      "op": "pushint 100 // 100",
      "defined_out": [
        "100",
        "first_prize_share#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#0",
        "tmp%29#0",
        "100"
      ]
    },
    "1498": {
      "op": "/",
      "defined_out": [
        "first_prize_share#0",
        "first_prize_share#1"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#0",
        "first_prize_share#1"
      ]
    },
    "1499": {
      "op": "dig 1",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#0",
        "first_prize_share#1",
        "first_prize_share#0 (copy)"
      ]
    },
    "1501": {
      "op": "pushint 30 // 30",
      "defined_out": [
        "30",
        "first_prize_share#0",
        "first_prize_share#0 (copy)",
        "first_prize_share#1"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#0",
        "first_prize_share#1",
        "first_prize_share#0 (copy)",
        "30"
      ]
    },
    "1503": {
      "op": "*",
      "defined_out": [
        "first_prize_share#0",
        "first_prize_share#1",
        "tmp%32#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#0",
        "first_prize_share#1",
        "tmp%32#0"
      ]
    },
    "1504": {
      "op": "pushint 100 // 100",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#0",
        "first_prize_share#1",
        "tmp%32#0",
        "100"
      ]
    },
    "1506": {
      "op": "/",
      "defined_out": [
        "first_prize_share#0",
        "first_prize_share#1",
        "second_prize_share#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#0",
        "first_prize_share#1",
        "second_prize_share#0"
      ]
    },
    "1507": {
      "op": "dup",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#0",
        "first_prize_share#1",
        "second_prize_share#0",
        "second_prize_share#0"
      ]
    },
    "1508": {
      "op": "frame_bury 10",
      "defined_out": [
        "first_prize_share#0",
        "first_prize_share#1",
        "second_prize_share#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#0",
        "first_prize_share#1",
        "second_prize_share#0"
      ]
    },
    "1510": {
      "op": "uncover 2",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#1",
        "second_prize_share#0",
        "first_prize_share#0"
      ]
    },
    "1512": {
      "op": "dig 2",
      "defined_out": [
        "first_prize_share#0",
        "first_prize_share#1",
        "first_prize_share#1 (copy)",
        "second_prize_share#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#1",
        "second_prize_share#0",
        "first_prize_share#0",
        "first_prize_share#1 (copy)"
      ]
    },
    "1514": {
      "op": "-",
      "defined_out": [
        "first_prize_share#0",
        "first_prize_share#1",
        "second_prize_share#0",
        "tmp%35#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#1",
        "second_prize_share#0",
        "tmp%35#0"
      ]
    },
    "1515": {
      "op": "swap",
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#1",
        "tmp%35#0",
        "second_prize_share#0"
      ]
    },
    "1516": {
      "op": "-",
      "defined_out": [
        "first_prize_share#0",
        "first_prize_share#1",
        "second_prize_share#0",
        "third_prize_share#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#1",
        "third_prize_share#0"
      ]
    },
    "1517": {
      "op": "frame_bury 11",
      "defined_out": [
        "first_prize_share#0",
        "second_prize_share#0",
        "third_prize_share#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "first_prize_share#0"
      ]
    },
    "1519": {
      "op": "frame_bury 8",
      "defined_out": [
        "first_prize_share#0",
        "second_prize_share#0",
        "third_prize_share#0"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ]
    },
    "1521": {
      "op": "b is_game_over_after_if_else@16"
    },
    "1524": {
      "block": "is_game_over_else_body@25",
      "stack_in": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0"
      ],
      "op": "bytec_1 // 0x00",
      "defined_out": [
        "0x00"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "0x00"
      ]
    },
    "1525": {
      "op": "frame_dig -3",
      "defined_out": [
        "0x00",
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "first_place_receiver#0",
        "game_players_bref#0",
        "player_addr_bytes#0",
        "second_place_receiver#0",
        "third_place_receiver#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "first_prize_share#0",
        "i#0",
        "second_prize_share#0",
        "third_prize_share#0",
        "value%0#0",
        "0x00",
        "game_state#0 (copy)"
      ]
    },
    "1527": {
      "op": "frame_bury 1"
    },
    "1529": {
      "op": "frame_bury 0"
    },
    "1531": {
      "retsub": true,
      "op": "retsub"
    },
    "1532": {
      "subroutine": "smart_contracts.pieout.contract.Pieout.calc_single_box_cost",
      "params": {
        "key_size#0": "bytes",
        "value_size#0": "bytes"
      },
      "block": "calc_single_box_cost",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "1535": {
      "op": "frame_dig -2",
      "defined_out": [
        "key_size#0 (copy)"
      ],
      "stack_out": [
        "key_size#0 (copy)"
      ]
    },
    "1537": {
      "op": "btoi",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1538": {
      "op": "frame_dig -1",
      "defined_out": [
        "tmp%1#0",
        "value_size#0 (copy)"
      ],
      "stack_out": [
        "tmp%1#0",
        "value_size#0 (copy)"
      ]
    },
    "1540": {
      "op": "btoi",
      "defined_out": [
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "1541": {
      "op": "+",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1542": {
      "op": "pushint 400 // 400",
      "defined_out": [
        "400",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "400"
      ]
    },
    "1545": {
      "op": "*",
      "defined_out": [
        "size_cost#0"
      ],
      "stack_out": [
        "size_cost#0"
      ]
    },
    "1546": {
      "op": "pushint 2500 // 2500",
      "defined_out": [
        "2500",
        "size_cost#0"
      ],
      "stack_out": [
        "size_cost#0",
        "2500"
      ]
    },
    "1549": {
      "op": "+",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "1550": {
      "retsub": true,
      "op": "retsub"
    },
    "1551": {
      "subroutine": "smart_contracts.pieout.contract.Pieout.read_box_game_state",
      "params": {
        "game_id#0": "uint64"
      },
      "block": "read_box_game_state",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1554": {
      "op": "frame_dig -1",
      "defined_out": [
        "game_id#0 (copy)"
      ],
      "stack_out": [
        "game_id#0 (copy)"
      ]
    },
    "1556": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "1557": {
      "op": "bytec 4 // \"s_\"",
      "defined_out": [
        "\"s_\"",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "\"s_\""
      ]
    },
    "1559": {
      "op": "dig 1",
      "defined_out": [
        "\"s_\"",
        "encoded_value%0#0",
        "encoded_value%0#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "\"s_\"",
        "encoded_value%0#0 (copy)"
      ]
    },
    "1561": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1562": {
      "op": "box_get",
      "defined_out": [
        "encoded_value%0#0",
        "game_state#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "maybe_exists%0#0"
      ]
    },
    "1563": {
      "error": "check self.box_game_state entry exists",
      "op": "assert // check self.box_game_state entry exists",
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0"
      ]
    },
    "1564": {
      "op": "dup",
      "defined_out": [
        "encoded_value%0#0",
        "game_state#0",
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "1565": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "game_state#0 (copy)",
        "0"
      ]
    },
    "1566": {
      "op": "getbit",
      "defined_out": [
        "encoded_value%0#0",
        "game_state#0",
        "is_true%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "is_true%0#0"
      ]
    },
    "1567": {
      "op": "bytec_1 // 0x00",
      "defined_out": [
        "0x00",
        "encoded_value%0#0",
        "game_state#0",
        "is_true%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "is_true%0#0",
        "0x00"
      ]
    },
    "1568": {
      "op": "intc_1 // 0",
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "is_true%0#0",
        "0x00",
        "0"
      ]
    },
    "1569": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "0x00",
        "0",
        "is_true%0#0"
      ]
    },
    "1571": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "game_state#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "encoded_bool%0#0"
      ]
    },
    "1572": {
      "op": "dig 1",
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "encoded_bool%0#0",
        "game_state#0 (copy)"
      ]
    },
    "1574": {
      "error": "Index access is out of bounds",
      "op": "extract 1 1 // on error: Index access is out of bounds",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "encoded_bool%0#0",
        "tmp%0#0"
      ]
    },
    "1577": {
      "op": "dig 2",
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "encoded_bool%0#0",
        "tmp%0#0",
        "game_state#0 (copy)"
      ]
    },
    "1579": {
      "error": "Index access is out of bounds",
      "op": "extract 2 1 // on error: Index access is out of bounds",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "encoded_bool%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "1582": {
      "op": "dig 3",
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "encoded_bool%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "game_state#0 (copy)"
      ]
    },
    "1584": {
      "error": "Index access is out of bounds",
      "op": "extract 3 1 // on error: Index access is out of bounds",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "encoded_bool%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "1587": {
      "op": "dig 4",
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "encoded_bool%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "game_state#0 (copy)"
      ]
    },
    "1589": {
      "error": "Index access is out of bounds",
      "op": "extract 4 1 // on error: Index access is out of bounds",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "encoded_bool%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "1592": {
      "op": "dig 5",
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "encoded_bool%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "game_state#0 (copy)"
      ]
    },
    "1594": {
      "error": "Index access is out of bounds",
      "op": "extract 5 1 // on error: Index access is out of bounds",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "encoded_bool%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "1597": {
      "op": "dig 6",
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "encoded_bool%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "game_state#0 (copy)"
      ]
    },
    "1599": {
      "error": "Index access is out of bounds",
      "op": "extract 6 2 // on error: Index access is out of bounds",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "encoded_bool%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "1602": {
      "op": "dig 7",
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "encoded_bool%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "game_state#0 (copy)"
      ]
    },
    "1604": {
      "error": "Index access is out of bounds",
      "op": "extract 8 8 // on error: Index access is out of bounds",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "encoded_bool%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0"
      ]
    },
    "1607": {
      "op": "dig 8",
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "encoded_bool%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "game_state#0 (copy)"
      ]
    },
    "1609": {
      "error": "Index access is out of bounds",
      "op": "extract 16 8 // on error: Index access is out of bounds",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "encoded_bool%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "1612": {
      "op": "dig 9",
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "encoded_bool%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "game_state#0 (copy)"
      ]
    },
    "1614": {
      "error": "Index access is out of bounds",
      "op": "extract 24 32 // on error: Index access is out of bounds",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "encoded_bool%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "1617": {
      "op": "dig 10",
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "encoded_bool%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "game_state#0 (copy)"
      ]
    },
    "1619": {
      "error": "Index access is out of bounds",
      "op": "extract 56 32 // on error: Index access is out of bounds",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "encoded_bool%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "1622": {
      "op": "dig 11",
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "encoded_bool%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "game_state#0 (copy)"
      ]
    },
    "1624": {
      "error": "Index access is out of bounds",
      "op": "extract 88 32 // on error: Index access is out of bounds",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%10#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "encoded_bool%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0"
      ]
    },
    "1627": {
      "op": "uncover 12",
      "stack_out": [
        "encoded_value%0#0",
        "encoded_bool%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "game_state#0"
      ]
    },
    "1629": {
      "error": "Index access is out of bounds",
      "op": "extract 120 32 // on error: Index access is out of bounds",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "encoded_bool%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0"
      ]
    },
    "1632": {
      "op": "uncover 13",
      "stack_out": [
        "encoded_bool%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded_value%0#0"
      ]
    },
    "1634": {
      "op": "uncover 13",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded_value%0#0",
        "encoded_bool%0#0"
      ]
    },
    "1636": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "1637": {
      "op": "uncover 12",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded_tuple_buffer%2#0",
        "tmp%0#0"
      ]
    },
    "1639": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "tmp%1#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "1640": {
      "op": "uncover 11",
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded_tuple_buffer%3#0",
        "tmp%1#0"
      ]
    },
    "1642": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%4#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "1643": {
      "op": "uncover 10",
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded_tuple_buffer%4#0",
        "tmp%2#0"
      ]
    },
    "1645": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%5#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "1646": {
      "op": "uncover 9",
      "stack_out": [
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded_tuple_buffer%5#0",
        "tmp%3#0"
      ]
    },
    "1648": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%6#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "1649": {
      "op": "uncover 8",
      "stack_out": [
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded_tuple_buffer%6#0",
        "tmp%4#0"
      ]
    },
    "1651": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%7#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded_tuple_buffer%7#0"
      ]
    },
    "1652": {
      "op": "uncover 7",
      "stack_out": [
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded_tuple_buffer%7#0",
        "tmp%5#0"
      ]
    },
    "1654": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%8#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded_tuple_buffer%8#0"
      ]
    },
    "1655": {
      "op": "uncover 6",
      "stack_out": [
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded_tuple_buffer%8#0",
        "tmp%6#0"
      ]
    },
    "1657": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded_tuple_buffer%9#0"
      ]
    },
    "1658": {
      "op": "uncover 5",
      "stack_out": [
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded_tuple_buffer%9#0",
        "tmp%7#0"
      ]
    },
    "1660": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%10#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded_tuple_buffer%10#0"
      ]
    },
    "1661": {
      "op": "uncover 4",
      "stack_out": [
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded_tuple_buffer%10#0",
        "tmp%8#0"
      ]
    },
    "1663": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%11#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded_tuple_buffer%11#0"
      ]
    },
    "1664": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%10#0",
        "tmp%11#0",
        "encoded_tuple_buffer%11#0",
        "tmp%9#0"
      ]
    },
    "1666": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%12#0",
        "tmp%10#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "tmp%11#0",
        "encoded_tuple_buffer%12#0"
      ]
    },
    "1667": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "encoded_tuple_buffer%12#0",
        "tmp%10#0"
      ]
    },
    "1669": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%13#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "encoded_tuple_buffer%13#0"
      ]
    },
    "1670": {
      "op": "swap",
      "stack_out": [
        "encoded_tuple_buffer%13#0",
        "tmp%11#0"
      ]
    },
    "1671": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%14#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%14#0"
      ]
    },
    "1672": {
      "retsub": true,
      "op": "retsub"
    },
    "1673": {
      "subroutine": "smart_contracts.pieout.contract.Pieout.read_box_game_players",
      "params": {
        "game_id#0": "uint64"
      },
      "block": "read_box_game_players",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1676": {
      "op": "intc_1 // 0",
      "stack_out": [
        "player_addr_bytes#0"
      ]
    },
    "1677": {
      "op": "dup",
      "stack_out": [
        "player_addr_bytes#0",
        "players#9"
      ]
    },
    "1678": {
      "op": "frame_dig -1",
      "defined_out": [
        "game_id#0 (copy)"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_id#0 (copy)"
      ]
    },
    "1680": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "encoded_value%0#0"
      ]
    },
    "1681": {
      "op": "bytec_3 // \"p_\"",
      "defined_out": [
        "\"p_\"",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "encoded_value%0#0",
        "\"p_\""
      ]
    },
    "1682": {
      "op": "swap",
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "\"p_\"",
        "encoded_value%0#0"
      ]
    },
    "1683": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "box_prefixed_key%0#0"
      ]
    },
    "1684": {
      "op": "box_get",
      "defined_out": [
        "game_players#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "maybe_exists%0#0"
      ]
    },
    "1685": {
      "op": "swap",
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "maybe_exists%0#0",
        "game_players#0"
      ]
    },
    "1686": {
      "op": "dup",
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "maybe_exists%0#0",
        "game_players#0",
        "game_players#0 (copy)"
      ]
    },
    "1687": {
      "op": "uncover 2",
      "defined_out": [
        "game_players#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "game_players#0",
        "maybe_exists%0#0"
      ]
    },
    "1689": {
      "error": "check self.box_game_players entry exists",
      "op": "assert // check self.box_game_players entry exists",
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "game_players#0"
      ]
    },
    "1690": {
      "op": "pushbytes 0x0000",
      "defined_out": [
        "game_players#0",
        "players#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "game_players#0",
        "players#0"
      ]
    },
    "1694": {
      "op": "swap",
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "game_players#0"
      ]
    },
    "1695": {
      "op": "len",
      "defined_out": [
        "game_players#0",
        "players#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0"
      ]
    },
    "1696": {
      "op": "intc_1 // 0",
      "defined_out": [
        "game_players#0",
        "i#0",
        "players#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0"
      ]
    },
    "1697": {
      "block": "read_box_game_players_for_header@1",
      "stack_in": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "i#0"
      ]
    },
    "1699": {
      "op": "frame_dig 4",
      "defined_out": [
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "i#0",
        "tmp%0#0"
      ]
    },
    "1701": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "1702": {
      "op": "bz read_box_game_players_after_for@6",
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0"
      ]
    },
    "1705": {
      "op": "frame_dig 2",
      "defined_out": [
        "game_players#0",
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "game_players#0"
      ]
    },
    "1707": {
      "op": "frame_dig 5",
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "game_players#0",
        "i#0"
      ]
    },
    "1709": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "game_players#0",
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "game_players#0",
        "i#0",
        "32"
      ]
    },
    "1710": {
      "op": "extract3",
      "defined_out": [
        "game_players#0",
        "i#0",
        "player_addr_bytes#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "player_addr_bytes#0"
      ]
    },
    "1711": {
      "op": "dup",
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "player_addr_bytes#0",
        "player_addr_bytes#0"
      ]
    },
    "1712": {
      "op": "frame_bury 0",
      "defined_out": [
        "game_players#0",
        "i#0",
        "player_addr_bytes#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "player_addr_bytes#0"
      ]
    },
    "1714": {
      "op": "bytec 8 // 0x0000000000000000000000000000000000000000000000000000000000000000",
      "defined_out": [
        "0x0000000000000000000000000000000000000000000000000000000000000000",
        "game_players#0",
        "i#0",
        "player_addr_bytes#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "player_addr_bytes#0",
        "0x0000000000000000000000000000000000000000000000000000000000000000"
      ]
    },
    "1716": {
      "op": "!=",
      "defined_out": [
        "game_players#0",
        "i#0",
        "player_addr_bytes#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "tmp%1#0"
      ]
    },
    "1717": {
      "op": "frame_dig 3",
      "defined_out": [
        "game_players#0",
        "i#0",
        "player_addr_bytes#0",
        "players#9",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "tmp%1#0",
        "players#9"
      ]
    },
    "1719": {
      "op": "frame_bury 1",
      "defined_out": [
        "game_players#0",
        "i#0",
        "player_addr_bytes#0",
        "players#9",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "tmp%1#0"
      ]
    },
    "1721": {
      "op": "bz read_box_game_players_after_if_else@4",
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0"
      ]
    },
    "1724": {
      "op": "frame_dig 3",
      "defined_out": [
        "game_players#0",
        "i#0",
        "player_addr_bytes#0",
        "players#0",
        "players#9",
        "tmp%0#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "players#0"
      ]
    },
    "1726": {
      "op": "extract 2 0",
      "defined_out": [
        "expr_value_trimmed%0#0",
        "game_players#0",
        "i#0",
        "player_addr_bytes#0",
        "players#0",
        "players#9",
        "tmp%0#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "expr_value_trimmed%0#0"
      ]
    },
    "1729": {
      "op": "frame_dig 0",
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "player_addr_bytes#0"
      ]
    },
    "1731": {
      "op": "concat",
      "defined_out": [
        "concatenated%0#0",
        "game_players#0",
        "i#0",
        "player_addr_bytes#0",
        "players#0",
        "players#9",
        "tmp%0#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "concatenated%0#0"
      ]
    },
    "1732": {
      "op": "dup",
      "defined_out": [
        "concatenated%0#0",
        "concatenated%0#0 (copy)",
        "game_players#0",
        "i#0",
        "player_addr_bytes#0",
        "players#0",
        "players#9",
        "tmp%0#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "concatenated%0#0",
        "concatenated%0#0 (copy)"
      ]
    },
    "1733": {
      "op": "len",
      "defined_out": [
        "byte_len%0#0",
        "concatenated%0#0",
        "game_players#0",
        "i#0",
        "player_addr_bytes#0",
        "players#0",
        "players#9",
        "tmp%0#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "concatenated%0#0",
        "byte_len%0#0"
      ]
    },
    "1734": {
      "op": "intc_3 // 32",
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "concatenated%0#0",
        "byte_len%0#0",
        "32"
      ]
    },
    "1735": {
      "op": "/",
      "defined_out": [
        "concatenated%0#0",
        "game_players#0",
        "i#0",
        "len_%0#0",
        "player_addr_bytes#0",
        "players#0",
        "players#9",
        "tmp%0#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "concatenated%0#0",
        "len_%0#0"
      ]
    },
    "1736": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "concatenated%0#0",
        "game_players#0",
        "i#0",
        "player_addr_bytes#0",
        "players#0",
        "players#9",
        "tmp%0#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "concatenated%0#0",
        "as_bytes%0#0"
      ]
    },
    "1737": {
      "op": "extract 6 2",
      "defined_out": [
        "concatenated%0#0",
        "game_players#0",
        "i#0",
        "len_16_bit%0#0",
        "player_addr_bytes#0",
        "players#0",
        "players#9",
        "tmp%0#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "concatenated%0#0",
        "len_16_bit%0#0"
      ]
    },
    "1740": {
      "op": "swap",
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "len_16_bit%0#0",
        "concatenated%0#0"
      ]
    },
    "1741": {
      "op": "concat",
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "players#9"
      ]
    },
    "1742": {
      "op": "frame_bury 1",
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0"
      ]
    },
    "1744": {
      "block": "read_box_game_players_after_if_else@4",
      "stack_in": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "players#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "players#0"
      ]
    },
    "1746": {
      "op": "frame_bury 3",
      "defined_out": [
        "players#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0"
      ]
    },
    "1748": {
      "op": "frame_dig 5",
      "defined_out": [
        "i#0",
        "players#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "i#0"
      ]
    },
    "1750": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "i#0",
        "players#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "i#0",
        "32"
      ]
    },
    "1751": {
      "op": "+",
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "i#0"
      ]
    },
    "1752": {
      "op": "frame_bury 5",
      "defined_out": [
        "i#0",
        "players#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0"
      ]
    },
    "1754": {
      "op": "b read_box_game_players_for_header@1"
    },
    "1757": {
      "block": "read_box_game_players_after_for@6",
      "stack_in": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "players#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "players#0"
      ]
    },
    "1759": {
      "op": "frame_bury 0"
    },
    "1761": {
      "retsub": true,
      "op": "retsub"
    },
    "1762": {
      "subroutine": "smart_contracts.pieout.contract.Pieout.read_box_commit_rand",
      "params": {
        "player#0": "bytes"
      },
      "block": "read_box_commit_rand",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1765": {
      "op": "bytec_0 // \"c_\"",
      "defined_out": [
        "\"c_\""
      ],
      "stack_out": [
        "\"c_\""
      ]
    },
    "1766": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"c_\"",
        "player#0 (copy)"
      ],
      "stack_out": [
        "\"c_\"",
        "player#0 (copy)"
      ]
    },
    "1768": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "1769": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "1770": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "box_prefixed_key%0#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "_%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1771": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1773": {
      "error": "Box not found. Ensure the box you are trying to access was created and still exists.",
      "op": "assert // Box not found. Ensure the box you are trying to access was created and still exists.",
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "1774": {
      "op": "box_get",
      "defined_out": [
        "commit_rand#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "commit_rand#0",
        "maybe_exists%1#0"
      ]
    },
    "1775": {
      "error": "check self.box_commit_rand entry exists",
      "op": "assert // check self.box_commit_rand entry exists",
      "stack_out": [
        "commit_rand#0"
      ]
    },
    "1776": {
      "op": "dup",
      "defined_out": [
        "commit_rand#0",
        "commit_rand#0 (copy)"
      ],
      "stack_out": [
        "commit_rand#0",
        "commit_rand#0 (copy)"
      ]
    },
    "1777": {
      "error": "Index access is out of bounds",
      "op": "extract 0 8 // on error: Index access is out of bounds",
      "defined_out": [
        "commit_rand#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "commit_rand#0",
        "tmp%0#0"
      ]
    },
    "1780": {
      "op": "dig 1",
      "stack_out": [
        "commit_rand#0",
        "tmp%0#0",
        "commit_rand#0 (copy)"
      ]
    },
    "1782": {
      "error": "Index access is out of bounds",
      "op": "extract 8 8 // on error: Index access is out of bounds",
      "defined_out": [
        "commit_rand#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "commit_rand#0",
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "1785": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "commit_rand#0"
      ]
    },
    "1787": {
      "error": "Index access is out of bounds",
      "op": "extract 16 8 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "1790": {
      "op": "cover 2",
      "stack_out": [
        "tmp%2#0",
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "1792": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "1793": {
      "op": "swap",
      "stack_out": [
        "encoded_tuple_buffer%2#0",
        "tmp%2#0"
      ]
    },
    "1794": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%3#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%3#0"
      ]
    },
    "1795": {
      "retsub": true,
      "op": "retsub"
    },
    "1796": {
      "subroutine": "smart_contracts.pieout.contract.Pieout.generate",
      "params": {},
      "block": "generate",
      "stack_in": [],
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1798": {
      "op": "global CreatorAddress",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "1800": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1801": {
      "error": "Account must match application creator address.",
      "op": "assert // Account must match application creator address.",
      "stack_out": []
    },
    "1802": {
      "op": "bytec 9 // \"game_id\"",
      "defined_out": [
        "\"game_id\""
      ],
      "stack_out": [
        "\"game_id\""
      ]
    },
    "1804": {
      "op": "intc_0 // 1",
      "defined_out": [
        "\"game_id\"",
        "1"
      ],
      "stack_out": [
        "\"game_id\"",
        "1"
      ]
    },
    "1805": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1806": {
      "op": "bytec 6 // \"score_id\"",
      "defined_out": [
        "\"score_id\""
      ],
      "stack_out": [
        "\"score_id\""
      ]
    },
    "1808": {
      "op": "intc_0 // 1",
      "stack_out": [
        "\"score_id\"",
        "1"
      ]
    },
    "1809": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1810": {
      "op": "bytec 10 // \"ath_score\"",
      "defined_out": [
        "\"ath_score\""
      ],
      "stack_out": [
        "\"ath_score\""
      ]
    },
    "1812": {
      "op": "intc_1 // 0",
      "defined_out": [
        "\"ath_score\"",
        "0"
      ],
      "stack_out": [
        "\"ath_score\"",
        "0"
      ]
    },
    "1813": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1814": {
      "op": "bytec 7 // \"ath_address\"",
      "defined_out": [
        "\"ath_address\""
      ],
      "stack_out": [
        "\"ath_address\""
      ]
    },
    "1816": {
      "op": "global ZeroAddress",
      "defined_out": [
        "\"ath_address\"",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "\"ath_address\"",
        "materialized_values%0#0"
      ]
    },
    "1818": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1819": {
      "retsub": true,
      "op": "retsub"
    },
    "1820": {
      "subroutine": "smart_contracts.pieout.contract.Pieout.mint_trophy",
      "params": {
        "box_t_pay#0": "uint64",
        "mint_pay#0": "uint64"
      },
      "block": "mint_trophy",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "1823": {
      "op": "global GroupSize",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1825": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "3"
      ]
    },
    "1827": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1828": {
      "error": "Invalid group size. Ensure number of transaction in group is within valid bounds.",
      "op": "assert // Invalid group size. Ensure number of transaction in group is within valid bounds.",
      "stack_out": []
    },
    "1829": {
      "op": "bytec_2 // \"t_\"",
      "defined_out": [
        "\"t_\""
      ],
      "stack_out": [
        "\"t_\""
      ]
    },
    "1830": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "_%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1831": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%0#0"
      ]
    },
    "1833": {
      "op": "!",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1834": {
      "error": "Box found. Ensure the box you are trying to access does not exist already.",
      "op": "assert // Box found. Ensure the box you are trying to access does not exist already.",
      "stack_out": []
    },
    "1835": {
      "op": "frame_dig -2",
      "defined_out": [
        "box_t_pay#0 (copy)"
      ],
      "stack_out": [
        "box_t_pay#0 (copy)"
      ]
    },
    "1837": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1839": {
      "op": "pushint 19300 // 19300",
      "defined_out": [
        "19300",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "19300"
      ]
    },
    "1843": {
      "op": ">=",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "1844": {
      "error": "Insufficient funds. Box pay amount is not enough to cover application MBR.",
      "op": "assert // Insufficient funds. Box pay amount is not enough to cover application MBR.",
      "stack_out": []
    },
    "1845": {
      "op": "frame_dig -2",
      "stack_out": [
        "box_t_pay#0 (copy)"
      ]
    },
    "1847": {
      "op": "gtxns Sender",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "1849": {
      "op": "global CreatorAddress",
      "defined_out": [
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "tmp%6#0"
      ]
    },
    "1851": {
      "op": "==",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "1852": {
      "error": "Box payment sender address must match transaction sender address.",
      "op": "assert // Box payment sender address must match transaction sender address.",
      "stack_out": []
    },
    "1853": {
      "op": "frame_dig -2",
      "stack_out": [
        "box_t_pay#0 (copy)"
      ]
    },
    "1855": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "1857": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "1859": {
      "op": "==",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "1860": {
      "error": "Box payment receiver address must match application address.",
      "op": "assert // Box payment receiver address must match application address.",
      "stack_out": []
    },
    "1861": {
      "op": "frame_dig -1",
      "defined_out": [
        "mint_pay#0 (copy)"
      ],
      "stack_out": [
        "mint_pay#0 (copy)"
      ]
    },
    "1863": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "1865": {
      "op": "global AssetCreateMinBalance",
      "defined_out": [
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%12#0"
      ]
    },
    "1867": {
      "op": ">=",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "1868": {
      "error": "Insufficient funds. Mint pay amount is not enough to cover asset creation cost.",
      "op": "assert // Insufficient funds. Mint pay amount is not enough to cover asset creation cost.",
      "stack_out": []
    },
    "1869": {
      "op": "frame_dig -1",
      "stack_out": [
        "mint_pay#0 (copy)"
      ]
    },
    "1871": {
      "op": "gtxns Sender",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "1873": {
      "op": "global CreatorAddress",
      "defined_out": [
        "tmp%14#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%15#0"
      ]
    },
    "1875": {
      "op": "==",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "1876": {
      "error": "Mint payment sender address must match transaction sender address.",
      "op": "assert // Mint payment sender address must match transaction sender address.",
      "stack_out": []
    },
    "1877": {
      "op": "frame_dig -1",
      "stack_out": [
        "mint_pay#0 (copy)"
      ]
    },
    "1879": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "1881": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%18#0"
      ]
    },
    "1883": {
      "op": "==",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "1884": {
      "error": "Mint payment receiver address must match application address.",
      "op": "assert // Mint payment receiver address must match application address.",
      "stack_out": []
    },
    "1885": {
      "op": "itxn_begin"
    },
    "1886": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0"
      ]
    },
    "1888": {
      "op": "dupn 3",
      "defined_out": [
        "inner_txn_params%0%%param_ConfigAssetClawback_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetClawback_idx_0#0"
      ]
    },
    "1890": {
      "op": "pushbytes 0x7069656f75743a6a7b226d6574686f64223a226d696e745f74726f706879222c22636f6e6365726e223a226974786e2e61737365745f636f6e6669673b6372656174655f74726f7068795f6173736574227d",
      "defined_out": [
        "0x7069656f75743a6a7b226d6574686f64223a226d696e745f74726f706879222c22636f6e6365726e223a226974786e2e61737365745f636f6e6669673b6372656174655f74726f7068795f6173736574227d",
        "inner_txn_params%0%%param_ConfigAssetClawback_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetClawback_idx_0#0",
        "0x7069656f75743a6a7b226d6574686f64223a226d696e745f74726f706879222c22636f6e6365726e223a226974786e2e61737365745f636f6e6669673b6372656174655f74726f7068795f6173736574227d"
      ]
    },
    "1974": {
      "op": "itxn_field Note",
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetClawback_idx_0#0"
      ]
    },
    "1976": {
      "op": "itxn_field ConfigAssetClawback",
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0"
      ]
    },
    "1978": {
      "op": "itxn_field ConfigAssetFreeze",
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0"
      ]
    },
    "1980": {
      "op": "itxn_field ConfigAssetReserve",
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0"
      ]
    },
    "1982": {
      "op": "itxn_field ConfigAssetManager",
      "stack_out": []
    },
    "1984": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1985": {
      "op": "itxn_field ConfigAssetDefaultFrozen",
      "stack_out": []
    },
    "1987": {
      "op": "intc_1 // 0",
      "stack_out": [
        "0"
      ]
    },
    "1988": {
      "op": "itxn_field ConfigAssetDecimals",
      "stack_out": []
    },
    "1990": {
      "op": "pushbytes \"Gamename-ATH-Trophy\"",
      "defined_out": [
        "\"Gamename-ATH-Trophy\""
      ],
      "stack_out": [
        "\"Gamename-ATH-Trophy\""
      ]
    },
    "2011": {
      "op": "itxn_field ConfigAssetName",
      "stack_out": []
    },
    "2013": {
      "op": "pushbytes \"TRFY\"",
      "defined_out": [
        "\"TRFY\""
      ],
      "stack_out": [
        "\"TRFY\""
      ]
    },
    "2019": {
      "op": "itxn_field ConfigAssetUnitName",
      "stack_out": []
    },
    "2021": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "2022": {
      "op": "itxn_field ConfigAssetTotal",
      "stack_out": []
    },
    "2024": {
      "op": "pushint 3 // acfg",
      "defined_out": [
        "acfg"
      ],
      "stack_out": [
        "acfg"
      ]
    },
    "2026": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "2028": {
      "op": "intc_1 // 0",
      "stack_out": [
        "0"
      ]
    },
    "2029": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "2031": {
      "op": "itxn_submit"
    },
    "2032": {
      "op": "itxn CreatedAssetID",
      "defined_out": [
        "acfg_itxn.CreatedAssetID#0"
      ],
      "stack_out": [
        "acfg_itxn.CreatedAssetID#0"
      ]
    },
    "2034": {
      "op": "bytec_2 // \"t_\"",
      "stack_out": [
        "acfg_itxn.CreatedAssetID#0",
        "\"t_\""
      ]
    },
    "2035": {
      "op": "pushint 40 // 40",
      "defined_out": [
        "\"t_\"",
        "40",
        "acfg_itxn.CreatedAssetID#0"
      ],
      "stack_out": [
        "acfg_itxn.CreatedAssetID#0",
        "\"t_\"",
        "40"
      ]
    },
    "2037": {
      "op": "box_create",
      "defined_out": [
        "acfg_itxn.CreatedAssetID#0",
        "{box_create}"
      ],
      "stack_out": [
        "acfg_itxn.CreatedAssetID#0",
        "{box_create}"
      ]
    },
    "2038": {
      "op": "pop",
      "stack_out": [
        "acfg_itxn.CreatedAssetID#0"
      ]
    },
    "2039": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "2040": {
      "op": "global ZeroAddress",
      "defined_out": [
        "tmp%20#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "tmp%20#0"
      ]
    },
    "2042": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%2#0"
      ]
    },
    "2043": {
      "op": "bytec_2 // \"t_\"",
      "stack_out": [
        "encoded_tuple_buffer%2#0",
        "\"t_\""
      ]
    },
    "2044": {
      "op": "swap",
      "stack_out": [
        "\"t_\"",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "2045": {
      "op": "box_put",
      "stack_out": []
    },
    "2046": {
      "retsub": true,
      "op": "retsub"
    },
    "2047": {
      "subroutine": "smart_contracts.pieout.contract.Pieout.claim_trophy",
      "params": {},
      "block": "claim_trophy",
      "stack_in": [],
      "op": "global GroupSize",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2049": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "1"
      ]
    },
    "2050": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2051": {
      "error": "Invalid group size. This app call can only take standalone transactions.",
      "op": "assert // Invalid group size. This app call can only take standalone transactions.",
      "stack_out": []
    },
    "2052": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "2054": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "0"
      ]
    },
    "2055": {
      "op": "bytec 7 // \"ath_address\"",
      "defined_out": [
        "\"ath_address\"",
        "0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "0",
        "\"ath_address\""
      ]
    },
    "2057": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2058": {
      "error": "check self.ath_address exists",
      "op": "assert // check self.ath_address exists",
      "stack_out": [
        "tmp%2#0",
        "maybe_value%0#0"
      ]
    },
    "2059": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "2060": {
      "error": "Asset trophy receiver must match application ATH address.",
      "op": "assert // Asset trophy receiver must match application ATH address.",
      "stack_out": []
    },
    "2061": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "2063": {
      "op": "bytec_2 // \"t_\"",
      "defined_out": [
        "\"t_\"",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "\"t_\""
      ]
    },
    "2064": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2065": {
      "error": "check self.box_game_trophy exists",
      "op": "assert // check self.box_game_trophy exists",
      "stack_out": [
        "tmp%4#0",
        "maybe_value%1#0"
      ]
    },
    "2066": {
      "op": "intc_1 // 0",
      "stack_out": [
        "tmp%4#0",
        "maybe_value%1#0",
        "0"
      ]
    },
    "2067": {
      "op": "extract_uint64",
      "defined_out": [
        "tmp%4#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%6#0"
      ]
    },
    "2068": {
      "op": "swap",
      "stack_out": [
        "tmp%6#0",
        "tmp%4#0"
      ]
    },
    "2069": {
      "op": "dig 1",
      "defined_out": [
        "tmp%4#0",
        "tmp%6#0",
        "tmp%6#0 (copy)"
      ],
      "stack_out": [
        "tmp%6#0",
        "tmp%4#0",
        "tmp%6#0 (copy)"
      ]
    },
    "2071": {
      "op": "asset_holding_get AssetBalance",
      "defined_out": [
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "2073": {
      "op": "bury 1",
      "stack_out": [
        "tmp%6#0",
        "tmp%8#0"
      ]
    },
    "2075": {
      "error": "Account must be opted in to asset in order to perform this action.",
      "op": "assert // Account must be opted in to asset in order to perform this action.",
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "2076": {
      "op": "itxn_begin"
    },
    "2077": {
      "op": "txn Sender",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "2079": {
      "op": "pushbytes 0x7069656f75743a6a7b226d6574686f64223a22636c61696d5f74726f706879222c22636f6e6365726e223a226974786e2e61737365745f7472616e736665723b7472616e736665725f74726f7068795f6173736574227d",
      "defined_out": [
        "0x7069656f75743a6a7b226d6574686f64223a22636c61696d5f74726f706879222c22636f6e6365726e223a226974786e2e61737365745f7472616e736665723b7472616e736665725f74726f7068795f6173736574227d",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "0x7069656f75743a6a7b226d6574686f64223a22636c61696d5f74726f706879222c22636f6e6365726e223a226974786e2e61737365745f7472616e736665723b7472616e736665725f74726f7068795f6173736574227d"
      ]
    },
    "2168": {
      "op": "itxn_field Note",
      "stack_out": [
        "tmp%6#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "2170": {
      "op": "intc_0 // 1",
      "stack_out": [
        "tmp%6#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "1"
      ]
    },
    "2171": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "tmp%6#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "2173": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "2175": {
      "op": "itxn_field XferAsset",
      "stack_out": []
    },
    "2177": {
      "op": "pushint 4 // axfer",
      "defined_out": [
        "axfer"
      ],
      "stack_out": [
        "axfer"
      ]
    },
    "2179": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "2181": {
      "op": "intc_1 // 0",
      "stack_out": [
        "0"
      ]
    },
    "2182": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "2184": {
      "op": "itxn_submit"
    },
    "2185": {
      "retsub": true,
      "op": "retsub"
    },
    "2186": {
      "subroutine": "smart_contracts.pieout.contract.Pieout.new_game",
      "params": {
        "max_players#0": "uint64",
        "box_s_pay#0": "uint64",
        "box_p_pay#0": "uint64",
        "stake_pay#0": "uint64"
      },
      "block": "new_game",
      "stack_in": [],
      "op": "proto 4 0"
    },
    "2189": {
      "op": "global GroupSize",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2191": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "4"
      ]
    },
    "2193": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2194": {
      "error": "Invalid group size. Ensure number of transaction in group is within valid bounds.",
      "op": "assert // Invalid group size. Ensure number of transaction in group is within valid bounds.",
      "stack_out": []
    },
    "2195": {
      "op": "bytec_2 // \"t_\"",
      "defined_out": [
        "\"t_\""
      ],
      "stack_out": [
        "\"t_\""
      ]
    },
    "2196": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "_%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2197": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%0#0"
      ]
    },
    "2199": {
      "error": "Box not found. Ensure the box you are trying to access was created and still exists.",
      "op": "assert // Box not found. Ensure the box you are trying to access was created and still exists.",
      "stack_out": []
    },
    "2200": {
      "op": "frame_dig -4",
      "defined_out": [
        "max_players#0 (copy)"
      ],
      "stack_out": [
        "max_players#0 (copy)"
      ]
    },
    "2202": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "max_players#0 (copy)",
        "4"
      ]
    },
    "2204": {
      "op": ">=",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "2205": {
      "op": "bz new_game_bool_false@3",
      "stack_out": []
    },
    "2208": {
      "op": "frame_dig -4",
      "stack_out": [
        "max_players#0 (copy)"
      ]
    },
    "2210": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "max_players#0 (copy)"
      ],
      "stack_out": [
        "max_players#0 (copy)",
        "16"
      ]
    },
    "2212": {
      "op": "<=",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "2213": {
      "op": "bz new_game_bool_false@3",
      "stack_out": []
    },
    "2216": {
      "op": "intc_0 // 1",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0"
      ]
    },
    "2217": {
      "block": "new_game_bool_merge@4",
      "stack_in": [
        "and_result%0#0"
      ],
      "error": "The number of max players must be within bounds.",
      "op": "assert // The number of max players must be within bounds.",
      "defined_out": [],
      "stack_out": []
    },
    "2218": {
      "op": "frame_dig -1",
      "defined_out": [
        "stake_pay#0 (copy)"
      ],
      "stack_out": [
        "stake_pay#0 (copy)"
      ]
    },
    "2220": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "2222": {
      "op": "dup",
      "defined_out": [
        "tmp%4#0",
        "tmp%4#0 (copy)"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%4#0 (copy)"
      ]
    },
    "2223": {
      "op": "intc 4 // 1000",
      "defined_out": [
        "1000",
        "tmp%4#0",
        "tmp%4#0 (copy)"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%4#0 (copy)",
        "1000"
      ]
    },
    "2225": {
      "op": "==",
      "defined_out": [
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "2226": {
      "error": "Insufficient funds. Stake pay amount is not enough to cover staking requirements.",
      "op": "assert // Insufficient funds. Stake pay amount is not enough to cover staking requirements.",
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "2227": {
      "op": "frame_dig -3",
      "defined_out": [
        "box_s_pay#0 (copy)",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "box_s_pay#0 (copy)"
      ]
    },
    "2229": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%4#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%6#0"
      ]
    },
    "2231": {
      "op": "intc 11 // 67300",
      "defined_out": [
        "67300",
        "tmp%4#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%6#0",
        "67300"
      ]
    },
    "2233": {
      "op": "==",
      "defined_out": [
        "tmp%4#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%7#0"
      ]
    },
    "2234": {
      "error": "Insufficient funds. Box pay amount is not enough to cover application MBR.",
      "op": "assert // Insufficient funds. Box pay amount is not enough to cover application MBR.",
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "2235": {
      "op": "frame_dig -2",
      "defined_out": [
        "box_p_pay#0 (copy)",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "box_p_pay#0 (copy)"
      ]
    },
    "2237": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%4#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%8#0"
      ]
    },
    "2239": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "tmp%4#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%8#0",
        "32"
      ]
    },
    "2240": {
      "op": "frame_dig -4",
      "defined_out": [
        "32",
        "max_players#0 (copy)",
        "tmp%4#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%8#0",
        "32",
        "max_players#0 (copy)"
      ]
    },
    "2242": {
      "op": "*",
      "defined_out": [
        "tmp%4#0",
        "tmp%8#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%8#0",
        "to_encode%0#0"
      ]
    },
    "2243": {
      "op": "dup",
      "defined_out": [
        "tmp%4#0",
        "tmp%8#0",
        "to_encode%0#0",
        "to_encode%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%8#0",
        "to_encode%0#0",
        "to_encode%0#0 (copy)"
      ]
    },
    "2244": {
      "op": "itob",
      "defined_out": [
        "tmp%4#0",
        "tmp%8#0",
        "to_encode%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%8#0",
        "to_encode%0#0",
        "val_as_bytes%0#0"
      ]
    },
    "2245": {
      "op": "dup",
      "defined_out": [
        "tmp%4#0",
        "tmp%8#0",
        "to_encode%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%8#0",
        "to_encode%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%0#0 (copy)"
      ]
    },
    "2246": {
      "op": "bitlen",
      "defined_out": [
        "bitlen%0#0",
        "tmp%4#0",
        "tmp%8#0",
        "to_encode%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%8#0",
        "to_encode%0#0",
        "val_as_bytes%0#0",
        "bitlen%0#0"
      ]
    },
    "2247": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "bitlen%0#0",
        "tmp%4#0",
        "tmp%8#0",
        "to_encode%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%8#0",
        "to_encode%0#0",
        "val_as_bytes%0#0",
        "bitlen%0#0",
        "16"
      ]
    },
    "2249": {
      "op": "<=",
      "defined_out": [
        "no_overflow%0#0",
        "tmp%4#0",
        "tmp%8#0",
        "to_encode%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%8#0",
        "to_encode%0#0",
        "val_as_bytes%0#0",
        "no_overflow%0#0"
      ]
    },
    "2250": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "tmp%4#0",
        "tmp%8#0",
        "to_encode%0#0",
        "val_as_bytes%0#0"
      ]
    },
    "2251": {
      "op": "extract 6 2",
      "defined_out": [
        "tmp%4#0",
        "tmp%8#0",
        "to_encode%0#0",
        "uint16%0#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%8#0",
        "to_encode%0#0",
        "uint16%0#0"
      ]
    },
    "2254": {
      "op": "pushbytes 0x0a",
      "defined_out": [
        "0x0a",
        "tmp%4#0",
        "tmp%8#0",
        "to_encode%0#0",
        "uint16%0#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%8#0",
        "to_encode%0#0",
        "uint16%0#0",
        "0x0a"
      ]
    },
    "2257": {
      "op": "swap",
      "stack_out": [
        "tmp%4#0",
        "tmp%8#0",
        "to_encode%0#0",
        "0x0a",
        "uint16%0#0"
      ]
    },
    "2258": {
      "callsub": "smart_contracts.pieout.contract.Pieout.calc_single_box_cost",
      "op": "callsub calc_single_box_cost",
      "defined_out": [
        "tmp%4#0",
        "tmp%8#0",
        "tmp%9#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%8#0",
        "to_encode%0#0",
        "tmp%9#0"
      ]
    },
    "2261": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%4#0",
        "to_encode%0#0",
        "tmp%9#0",
        "tmp%8#0"
      ]
    },
    "2263": {
      "op": "==",
      "defined_out": [
        "tmp%10#0",
        "tmp%4#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "to_encode%0#0",
        "tmp%10#0"
      ]
    },
    "2264": {
      "error": "Insufficient funds. Box pay amount is not enough to cover application MBR.",
      "op": "assert // Insufficient funds. Box pay amount is not enough to cover application MBR.",
      "stack_out": [
        "tmp%4#0",
        "to_encode%0#0"
      ]
    },
    "2265": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%4#0",
        "to_encode%0#0",
        "stake_pay#0 (copy)"
      ]
    },
    "2267": {
      "op": "gtxns Sender",
      "defined_out": [
        "tmp%11#0",
        "tmp%4#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "to_encode%0#0",
        "tmp%11#0"
      ]
    },
    "2269": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%11#0",
        "tmp%12#0",
        "tmp%4#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "to_encode%0#0",
        "tmp%11#0",
        "tmp%12#0"
      ]
    },
    "2271": {
      "op": "==",
      "defined_out": [
        "tmp%13#0",
        "tmp%4#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "to_encode%0#0",
        "tmp%13#0"
      ]
    },
    "2272": {
      "error": "Stake payment sender address must match transaction sender address.",
      "op": "assert // Stake payment sender address must match transaction sender address.",
      "stack_out": [
        "tmp%4#0",
        "to_encode%0#0"
      ]
    },
    "2273": {
      "op": "frame_dig -3",
      "stack_out": [
        "tmp%4#0",
        "to_encode%0#0",
        "box_s_pay#0 (copy)"
      ]
    },
    "2275": {
      "op": "gtxns Sender",
      "defined_out": [
        "tmp%14#0",
        "tmp%4#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "to_encode%0#0",
        "tmp%14#0"
      ]
    },
    "2277": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%14#0",
        "tmp%15#0",
        "tmp%4#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "to_encode%0#0",
        "tmp%14#0",
        "tmp%15#0"
      ]
    },
    "2279": {
      "op": "==",
      "defined_out": [
        "tmp%16#0",
        "tmp%4#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "to_encode%0#0",
        "tmp%16#0"
      ]
    },
    "2280": {
      "error": "Box payment sender address must match transaction sender address.",
      "op": "assert // Box payment sender address must match transaction sender address.",
      "stack_out": [
        "tmp%4#0",
        "to_encode%0#0"
      ]
    },
    "2281": {
      "op": "frame_dig -2",
      "stack_out": [
        "tmp%4#0",
        "to_encode%0#0",
        "box_p_pay#0 (copy)"
      ]
    },
    "2283": {
      "op": "gtxns Sender",
      "defined_out": [
        "tmp%17#0",
        "tmp%4#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "to_encode%0#0",
        "tmp%17#0"
      ]
    },
    "2285": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%17#0",
        "tmp%18#0",
        "tmp%4#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "to_encode%0#0",
        "tmp%17#0",
        "tmp%18#0"
      ]
    },
    "2287": {
      "op": "==",
      "defined_out": [
        "tmp%19#0",
        "tmp%4#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "to_encode%0#0",
        "tmp%19#0"
      ]
    },
    "2288": {
      "error": "Box payment sender address must match transaction sender address.",
      "op": "assert // Box payment sender address must match transaction sender address.",
      "stack_out": [
        "tmp%4#0",
        "to_encode%0#0"
      ]
    },
    "2289": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%4#0",
        "to_encode%0#0",
        "stake_pay#0 (copy)"
      ]
    },
    "2291": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%20#0",
        "tmp%4#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "to_encode%0#0",
        "tmp%20#0"
      ]
    },
    "2293": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%20#0",
        "tmp%21#0",
        "tmp%4#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "to_encode%0#0",
        "tmp%20#0",
        "tmp%21#0"
      ]
    },
    "2295": {
      "op": "==",
      "defined_out": [
        "tmp%22#0",
        "tmp%4#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "to_encode%0#0",
        "tmp%22#0"
      ]
    },
    "2296": {
      "error": "Stake payment receiver address must match application address.",
      "op": "assert // Stake payment receiver address must match application address.",
      "stack_out": [
        "tmp%4#0",
        "to_encode%0#0"
      ]
    },
    "2297": {
      "op": "frame_dig -3",
      "stack_out": [
        "tmp%4#0",
        "to_encode%0#0",
        "box_s_pay#0 (copy)"
      ]
    },
    "2299": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%23#0",
        "tmp%4#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "to_encode%0#0",
        "tmp%23#0"
      ]
    },
    "2301": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%23#0",
        "tmp%24#0",
        "tmp%4#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "to_encode%0#0",
        "tmp%23#0",
        "tmp%24#0"
      ]
    },
    "2303": {
      "op": "==",
      "defined_out": [
        "tmp%25#0",
        "tmp%4#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "to_encode%0#0",
        "tmp%25#0"
      ]
    },
    "2304": {
      "error": "Box payment receiver address must match application address.",
      "op": "assert // Box payment receiver address must match application address.",
      "stack_out": [
        "tmp%4#0",
        "to_encode%0#0"
      ]
    },
    "2305": {
      "op": "frame_dig -2",
      "stack_out": [
        "tmp%4#0",
        "to_encode%0#0",
        "box_p_pay#0 (copy)"
      ]
    },
    "2307": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%26#0",
        "tmp%4#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "to_encode%0#0",
        "tmp%26#0"
      ]
    },
    "2309": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%26#0",
        "tmp%27#0",
        "tmp%4#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "to_encode%0#0",
        "tmp%26#0",
        "tmp%27#0"
      ]
    },
    "2311": {
      "op": "==",
      "defined_out": [
        "tmp%28#0",
        "tmp%4#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "to_encode%0#0",
        "tmp%28#0"
      ]
    },
    "2312": {
      "error": "Box payment receiver address must match application address.",
      "op": "assert // Box payment receiver address must match application address.",
      "stack_out": [
        "tmp%4#0",
        "to_encode%0#0"
      ]
    },
    "2313": {
      "op": "frame_dig -4",
      "stack_out": [
        "tmp%4#0",
        "to_encode%0#0",
        "max_players#0 (copy)"
      ]
    },
    "2315": {
      "op": "itob",
      "defined_out": [
        "tmp%4#0",
        "to_encode%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "to_encode%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "2316": {
      "op": "dup",
      "defined_out": [
        "tmp%4#0",
        "to_encode%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%1#0 (copy)"
      ],
      "stack_out": [
        "tmp%4#0",
        "to_encode%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%1#0 (copy)"
      ]
    },
    "2317": {
      "op": "bitlen",
      "defined_out": [
        "bitlen%1#0",
        "tmp%4#0",
        "to_encode%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "to_encode%0#0",
        "val_as_bytes%1#0",
        "bitlen%1#0"
      ]
    },
    "2318": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "bitlen%1#0",
        "tmp%4#0",
        "to_encode%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "to_encode%0#0",
        "val_as_bytes%1#0",
        "bitlen%1#0",
        "8"
      ]
    },
    "2320": {
      "op": "<=",
      "defined_out": [
        "no_overflow%1#0",
        "tmp%4#0",
        "to_encode%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "to_encode%0#0",
        "val_as_bytes%1#0",
        "no_overflow%1#0"
      ]
    },
    "2321": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "tmp%4#0",
        "to_encode%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "2322": {
      "op": "extract 7 1",
      "defined_out": [
        "tmp%4#0",
        "to_encode%0#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "to_encode%0#0",
        "uint8%0#0"
      ]
    },
    "2325": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "tmp%29#0",
        "tmp%4#0",
        "to_encode%0#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "to_encode%0#0",
        "uint8%0#0",
        "tmp%29#0"
      ]
    },
    "2327": {
      "op": "intc 5 // 3600",
      "defined_out": [
        "3600",
        "tmp%29#0",
        "tmp%4#0",
        "to_encode%0#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "to_encode%0#0",
        "uint8%0#0",
        "tmp%29#0",
        "3600"
      ]
    },
    "2329": {
      "op": "+",
      "defined_out": [
        "tmp%4#0",
        "to_encode%0#0",
        "to_encode%1#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "to_encode%0#0",
        "uint8%0#0",
        "to_encode%1#0"
      ]
    },
    "2330": {
      "op": "itob",
      "defined_out": [
        "tmp%4#0",
        "to_encode%0#0",
        "uint8%0#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "to_encode%0#0",
        "uint8%0#0",
        "val_as_bytes%2#0"
      ]
    },
    "2331": {
      "op": "uncover 3",
      "stack_out": [
        "to_encode%0#0",
        "uint8%0#0",
        "val_as_bytes%2#0",
        "tmp%4#0"
      ]
    },
    "2333": {
      "op": "itob",
      "defined_out": [
        "to_encode%0#0",
        "uint8%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "uint8%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ]
    },
    "2334": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%30#0",
        "to_encode%0#0",
        "uint8%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "uint8%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "tmp%30#0"
      ]
    },
    "2336": {
      "op": "global ZeroAddress",
      "defined_out": [
        "tmp%30#0",
        "tmp%31#0",
        "to_encode%0#0",
        "uint8%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "uint8%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "tmp%30#0",
        "tmp%31#0"
      ]
    },
    "2338": {
      "op": "dupn 2",
      "defined_out": [
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "to_encode%0#0",
        "uint8%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "uint8%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0"
      ]
    },
    "2340": {
      "op": "bytec_1 // 0x00",
      "defined_out": [
        "0x00",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "to_encode%0#0",
        "uint8%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "uint8%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "0x00"
      ]
    },
    "2341": {
      "op": "uncover 7",
      "stack_out": [
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "0x00",
        "uint8%0#0"
      ]
    },
    "2343": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "2344": {
      "op": "pushbytes 0x01",
      "defined_out": [
        "0x01",
        "encoded_tuple_buffer%2#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "encoded_tuple_buffer%2#0",
        "0x01"
      ]
    },
    "2347": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "2348": {
      "op": "bytec_1 // 0x00",
      "stack_out": [
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "encoded_tuple_buffer%3#0",
        "0x00"
      ]
    },
    "2349": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%4#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "2350": {
      "op": "bytec_1 // 0x00",
      "stack_out": [
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "encoded_tuple_buffer%4#0",
        "0x00"
      ]
    },
    "2351": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%5#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "2352": {
      "op": "bytec_1 // 0x00",
      "stack_out": [
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "encoded_tuple_buffer%5#0",
        "0x00"
      ]
    },
    "2353": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%6#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "2354": {
      "op": "bytec 11 // 0x0020",
      "defined_out": [
        "0x0020",
        "encoded_tuple_buffer%6#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "encoded_tuple_buffer%6#0",
        "0x0020"
      ]
    },
    "2356": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%7#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "encoded_tuple_buffer%7#0"
      ]
    },
    "2357": {
      "op": "uncover 6",
      "stack_out": [
        "to_encode%0#0",
        "val_as_bytes%3#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "encoded_tuple_buffer%7#0",
        "val_as_bytes%2#0"
      ]
    },
    "2359": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%8#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "to_encode%0#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "val_as_bytes%3#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "encoded_tuple_buffer%8#0"
      ]
    },
    "2360": {
      "op": "uncover 5",
      "stack_out": [
        "to_encode%0#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "encoded_tuple_buffer%8#0",
        "val_as_bytes%3#0"
      ]
    },
    "2362": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%9#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "encoded_tuple_buffer%9#0"
      ]
    },
    "2363": {
      "op": "uncover 4",
      "stack_out": [
        "to_encode%0#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "encoded_tuple_buffer%9#0",
        "tmp%30#0"
      ]
    },
    "2365": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%10#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "encoded_tuple_buffer%10#0"
      ]
    },
    "2366": {
      "op": "uncover 3",
      "stack_out": [
        "to_encode%0#0",
        "tmp%32#0",
        "tmp%33#0",
        "encoded_tuple_buffer%10#0",
        "tmp%31#0"
      ]
    },
    "2368": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%11#0",
        "tmp%32#0",
        "tmp%33#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "tmp%32#0",
        "tmp%33#0",
        "encoded_tuple_buffer%11#0"
      ]
    },
    "2369": {
      "op": "uncover 2",
      "stack_out": [
        "to_encode%0#0",
        "tmp%33#0",
        "encoded_tuple_buffer%11#0",
        "tmp%32#0"
      ]
    },
    "2371": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%12#0",
        "tmp%33#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "tmp%33#0",
        "encoded_tuple_buffer%12#0"
      ]
    },
    "2372": {
      "op": "swap",
      "stack_out": [
        "to_encode%0#0",
        "encoded_tuple_buffer%12#0",
        "tmp%33#0"
      ]
    },
    "2373": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%13#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "encoded_tuple_buffer%13#0"
      ]
    },
    "2374": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "encoded_tuple_buffer%13#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "encoded_tuple_buffer%13#0",
        "0"
      ]
    },
    "2375": {
      "op": "bytec 9 // \"game_id\"",
      "defined_out": [
        "\"game_id\"",
        "0",
        "encoded_tuple_buffer%13#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "encoded_tuple_buffer%13#0",
        "0",
        "\"game_id\""
      ]
    },
    "2377": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_tuple_buffer%13#0",
        "maybe_exists%1#0",
        "maybe_value%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "encoded_tuple_buffer%13#0",
        "maybe_value%0#0",
        "maybe_exists%1#0"
      ]
    },
    "2378": {
      "error": "check self.game_id exists",
      "op": "assert // check self.game_id exists",
      "stack_out": [
        "to_encode%0#0",
        "encoded_tuple_buffer%13#0",
        "maybe_value%0#0"
      ]
    },
    "2379": {
      "op": "dup",
      "defined_out": [
        "encoded_tuple_buffer%13#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "encoded_tuple_buffer%13#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "2380": {
      "op": "itob",
      "defined_out": [
        "encoded_tuple_buffer%13#0",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "encoded_tuple_buffer%13#0",
        "maybe_value%0#0",
        "encoded_value%0#0"
      ]
    },
    "2381": {
      "op": "bytec 4 // \"s_\"",
      "defined_out": [
        "\"s_\"",
        "encoded_tuple_buffer%13#0",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "encoded_tuple_buffer%13#0",
        "maybe_value%0#0",
        "encoded_value%0#0",
        "\"s_\""
      ]
    },
    "2383": {
      "op": "dig 1",
      "defined_out": [
        "\"s_\"",
        "encoded_tuple_buffer%13#0",
        "encoded_value%0#0",
        "encoded_value%0#0 (copy)",
        "maybe_value%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "encoded_tuple_buffer%13#0",
        "maybe_value%0#0",
        "encoded_value%0#0",
        "\"s_\"",
        "encoded_value%0#0 (copy)"
      ]
    },
    "2385": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_tuple_buffer%13#0",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "encoded_tuple_buffer%13#0",
        "maybe_value%0#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "2386": {
      "op": "uncover 3",
      "stack_out": [
        "to_encode%0#0",
        "maybe_value%0#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "encoded_tuple_buffer%13#0"
      ]
    },
    "2388": {
      "op": "box_put",
      "stack_out": [
        "to_encode%0#0",
        "maybe_value%0#0",
        "encoded_value%0#0"
      ]
    },
    "2389": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "encoded_value%0#0",
        "to_encode%0#0"
      ]
    },
    "2391": {
      "op": "bzero",
      "defined_out": [
        "encoded_value%0#0",
        "materialized_values%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "encoded_value%0#0",
        "materialized_values%0#0"
      ]
    },
    "2392": {
      "op": "bytec_3 // \"p_\"",
      "defined_out": [
        "\"p_\"",
        "encoded_value%0#0",
        "materialized_values%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "encoded_value%0#0",
        "materialized_values%0#0",
        "\"p_\""
      ]
    },
    "2393": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "materialized_values%0#0",
        "\"p_\"",
        "encoded_value%0#0"
      ]
    },
    "2395": {
      "op": "concat",
      "defined_out": [
        "game_players_bref#0",
        "materialized_values%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "materialized_values%0#0",
        "game_players_bref#0"
      ]
    },
    "2396": {
      "op": "dup",
      "defined_out": [
        "game_players_bref#0",
        "game_players_bref#0 (copy)",
        "materialized_values%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "materialized_values%0#0",
        "game_players_bref#0",
        "game_players_bref#0 (copy)"
      ]
    },
    "2397": {
      "op": "box_del",
      "defined_out": [
        "game_players_bref#0",
        "materialized_values%0#0",
        "maybe_value%0#0",
        "{box_del}"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "materialized_values%0#0",
        "game_players_bref#0",
        "{box_del}"
      ]
    },
    "2398": {
      "op": "pop",
      "stack_out": [
        "maybe_value%0#0",
        "materialized_values%0#0",
        "game_players_bref#0"
      ]
    },
    "2399": {
      "op": "dup",
      "stack_out": [
        "maybe_value%0#0",
        "materialized_values%0#0",
        "game_players_bref#0",
        "game_players_bref#0 (copy)"
      ]
    },
    "2400": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "game_players_bref#0",
        "game_players_bref#0 (copy)",
        "materialized_values%0#0"
      ]
    },
    "2402": {
      "op": "box_put",
      "stack_out": [
        "maybe_value%0#0",
        "game_players_bref#0"
      ]
    },
    "2403": {
      "op": "intc_1 // 0"
    },
    "2404": {
      "op": "txn Sender",
      "defined_out": [
        "0",
        "game_players_bref#0",
        "maybe_value%0#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "game_players_bref#0",
        "0",
        "tmp%36#0"
      ]
    },
    "2406": {
      "op": "box_replace",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "2407": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "1"
      ]
    },
    "2408": {
      "op": "+",
      "defined_out": [
        "materialized_values%1#0"
      ],
      "stack_out": [
        "materialized_values%1#0"
      ]
    },
    "2409": {
      "op": "bytec 9 // \"game_id\"",
      "stack_out": [
        "materialized_values%1#0",
        "\"game_id\""
      ]
    },
    "2411": {
      "op": "swap",
      "stack_out": [
        "\"game_id\"",
        "materialized_values%1#0"
      ]
    },
    "2412": {
      "op": "app_global_put",
      "stack_out": []
    },
    "2413": {
      "retsub": true,
      "op": "retsub"
    },
    "2414": {
      "block": "new_game_bool_false@3",
      "stack_in": [],
      "op": "intc_1 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0"
      ]
    },
    "2415": {
      "op": "b new_game_bool_merge@4"
    },
    "2418": {
      "subroutine": "smart_contracts.pieout.contract.Pieout.join_game",
      "params": {
        "game_id#0": "uint64",
        "stake_pay#0": "uint64"
      },
      "block": "join_game",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "2421": {
      "op": "frame_dig -2",
      "defined_out": [
        "game_id#0 (copy)"
      ],
      "stack_out": [
        "game_id#0 (copy)"
      ]
    },
    "2423": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "2424": {
      "op": "bytec 4 // \"s_\"",
      "defined_out": [
        "\"s_\"",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "\"s_\""
      ]
    },
    "2426": {
      "op": "dig 1",
      "defined_out": [
        "\"s_\"",
        "encoded_value%0#0",
        "encoded_value%0#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "\"s_\"",
        "encoded_value%0#0 (copy)"
      ]
    },
    "2428": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "2429": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "2430": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "maybe_exists%0#0"
      ]
    },
    "2431": {
      "error": "check self.box_game_state entry exists",
      "op": "assert // check self.box_game_state entry exists",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "2432": {
      "op": "global GroupSize",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%0#0"
      ]
    },
    "2434": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%0#0",
        "2"
      ]
    },
    "2435": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%1#0"
      ]
    },
    "2436": {
      "error": "Invalid group size. Ensure number of transaction in group is within valid bounds.",
      "op": "assert // Invalid group size. Ensure number of transaction in group is within valid bounds.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "2437": {
      "op": "dig 1",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "2439": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "_%0#0",
        "maybe_exists%1#0"
      ]
    },
    "2440": {
      "op": "bury 1",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "maybe_exists%1#0"
      ]
    },
    "2442": {
      "error": "Box game state not found. Check if game ID exists.",
      "op": "assert // Box game state not found. Check if game ID exists.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "2443": {
      "op": "bytec_2 // \"t_\"",
      "defined_out": [
        "\"t_\"",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "\"t_\""
      ]
    },
    "2444": {
      "op": "box_len",
      "defined_out": [
        "_%1#0",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "maybe_exists%2#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "_%1#0",
        "maybe_exists%2#0"
      ]
    },
    "2445": {
      "op": "bury 1",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "maybe_exists%2#0"
      ]
    },
    "2447": {
      "error": "Box not found. Ensure the box you are trying to access was created and still exists.",
      "op": "assert // Box not found. Ensure the box you are trying to access was created and still exists.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "2448": {
      "op": "frame_dig -1",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "stake_pay#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "stake_pay#0 (copy)"
      ]
    },
    "2450": {
      "op": "gtxns Amount",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0"
      ]
    },
    "2452": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ]
    },
    "2453": {
      "op": "intc 4 // 1000",
      "defined_out": [
        "1000",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%2#0 (copy)",
        "1000"
      ]
    },
    "2455": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "2456": {
      "error": "Insufficient funds. Stake pay amount is not enough to cover staking requirements.",
      "op": "assert // Insufficient funds. Stake pay amount is not enough to cover staking requirements.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0"
      ]
    },
    "2457": {
      "op": "frame_dig -1",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "stake_pay#0 (copy)"
      ]
    },
    "2459": {
      "op": "gtxns Sender",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%4#0"
      ]
    },
    "2461": {
      "op": "txn Sender",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "2463": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%6#0"
      ]
    },
    "2464": {
      "error": "Stake payment sender address must match transaction sender address.",
      "op": "assert // Stake payment sender address must match transaction sender address.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0"
      ]
    },
    "2465": {
      "op": "frame_dig -1",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "stake_pay#0 (copy)"
      ]
    },
    "2467": {
      "op": "gtxns Receiver",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%7#0"
      ]
    },
    "2469": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "2471": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%9#0"
      ]
    },
    "2472": {
      "error": "Stake payment receiver address must match application address.",
      "op": "assert // Stake payment receiver address must match application address.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0"
      ]
    },
    "2473": {
      "op": "txn Sender",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%10#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%10#0"
      ]
    },
    "2475": {
      "op": "dig 2",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state#0 (copy)",
        "tmp%10#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%10#0",
        "game_state#0 (copy)"
      ]
    },
    "2477": {
      "op": "intc_2 // 2",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%10#0",
        "game_state#0 (copy)",
        "2"
      ]
    },
    "2478": {
      "op": "getbyte",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%10#0",
        "tmp%12#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%10#0",
        "tmp%12#0"
      ]
    },
    "2479": {
      "op": "frame_dig -2",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%10#0",
        "tmp%12#0",
        "game_id#0 (copy)"
      ]
    },
    "2481": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "game_id#0 (copy)",
        "tmp%10#0"
      ]
    },
    "2483": {
      "op": "bytec_3 // \"p_\"",
      "defined_out": [
        "\"p_\"",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_id#0 (copy)",
        "game_state#0",
        "tmp%10#0",
        "tmp%12#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "game_id#0 (copy)",
        "tmp%10#0",
        "\"p_\""
      ]
    },
    "2484": {
      "op": "dig 3",
      "defined_out": [
        "\"p_\"",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_id#0 (copy)",
        "game_state#0",
        "tmp%10#0",
        "tmp%12#0",
        "tmp%12#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "game_id#0 (copy)",
        "tmp%10#0",
        "\"p_\"",
        "tmp%12#0 (copy)"
      ]
    },
    "2486": {
      "op": "intc_1 // 0",
      "defined_out": [
        "\"p_\"",
        "0",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_id#0 (copy)",
        "game_state#0",
        "tmp%10#0",
        "tmp%12#0",
        "tmp%12#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "game_id#0 (copy)",
        "tmp%10#0",
        "\"p_\"",
        "tmp%12#0 (copy)",
        "0"
      ]
    },
    "2487": {
      "callsub": "smart_contracts.pieout.subroutines.check_acc_in_game",
      "op": "callsub check_acc_in_game",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "tmp%13#0"
      ]
    },
    "2490": {
      "op": "!",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "tmp%14#0"
      ]
    },
    "2491": {
      "error": "Player with this address must not be an active game participant in the game.",
      "op": "assert // Player with this address must not be an active game participant in the game.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0"
      ]
    },
    "2492": {
      "op": "dig 2",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "game_state#0 (copy)"
      ]
    },
    "2494": {
      "op": "intc_1 // 0",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "game_state#0 (copy)",
        "0"
      ]
    },
    "2495": {
      "op": "getbit",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "is_true%0#0",
        "tmp%12#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "is_true%0#0"
      ]
    },
    "2496": {
      "op": "bytec_1 // 0x00",
      "defined_out": [
        "0x00",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "is_true%0#0",
        "tmp%12#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "is_true%0#0",
        "0x00"
      ]
    },
    "2497": {
      "op": "intc_1 // 0",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "is_true%0#0",
        "0x00",
        "0"
      ]
    },
    "2498": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "0x00",
        "0",
        "is_true%0#0"
      ]
    },
    "2500": {
      "op": "setbit",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%12#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "encoded_bool%0#0"
      ]
    },
    "2501": {
      "op": "intc_1 // 0",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "encoded_bool%0#0",
        "0"
      ]
    },
    "2502": {
      "op": "getbit",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "tmp%15#0"
      ]
    },
    "2503": {
      "op": "!",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%12#0",
        "tmp%16#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "tmp%16#0"
      ]
    },
    "2504": {
      "error": "Game state staking finalized value mismatch.",
      "op": "assert // Game state staking finalized value mismatch.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0"
      ]
    },
    "2505": {
      "op": "dig 2",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "game_state#0 (copy)"
      ]
    },
    "2507": {
      "error": "Index access is out of bounds",
      "op": "extract 8 8 // on error: Index access is out of bounds",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "reinterpret_biguint%0#0",
        "tmp%12#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "2510": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "reinterpret_biguint%0#0",
        "tmp%12#0",
        "tmp%17#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "reinterpret_biguint%0#0",
        "tmp%17#0"
      ]
    },
    "2512": {
      "op": "itob",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "reinterpret_biguint%0#0",
        "tmp%12#0",
        "tmp%18#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "reinterpret_biguint%0#0",
        "tmp%18#0"
      ]
    },
    "2513": {
      "op": "b>=",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%12#0",
        "tmp%19#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "tmp%19#0"
      ]
    },
    "2514": {
      "error": "Invalid time frame. Call made outside the permitted block or timestamp range.",
      "op": "assert // Invalid time frame. Call made outside the permitted block or timestamp range.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0"
      ]
    },
    "2515": {
      "op": "dig 2",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "game_state#0 (copy)"
      ]
    },
    "2517": {
      "error": "Index access is out of bounds",
      "op": "extract 2 1 // on error: Index access is out of bounds",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "reinterpret_biguint%1#0",
        "tmp%12#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "reinterpret_biguint%1#0"
      ]
    },
    "2520": {
      "op": "dig 3",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "reinterpret_biguint%1#0",
        "game_state#0 (copy)"
      ]
    },
    "2522": {
      "error": "Index access is out of bounds",
      "op": "extract 1 1 // on error: Index access is out of bounds",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "reinterpret_biguint%1#0",
        "reinterpret_biguint%2#0",
        "tmp%12#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "reinterpret_biguint%1#0",
        "reinterpret_biguint%2#0"
      ]
    },
    "2525": {
      "op": "b<=",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%12#0",
        "tmp%2#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "tmp%20#0"
      ]
    },
    "2526": {
      "error": "Number of active players must not exceed number of max players.",
      "op": "assert // Number of active players must not exceed number of max players.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0"
      ]
    },
    "2527": {
      "op": "dig 2",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "game_state#0 (copy)"
      ]
    },
    "2529": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state#0 (copy)",
        "tmp%12#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "game_state#0 (copy)",
        "6"
      ]
    },
    "2531": {
      "op": "extract_uint16",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%12#0",
        "tmp%2#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "tmp%22#0"
      ]
    },
    "2532": {
      "op": "dig 3",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "tmp%22#0",
        "game_state#0 (copy)"
      ]
    },
    "2534": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state#0 (copy)",
        "tmp%12#0",
        "tmp%2#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "tmp%22#0",
        "game_state#0 (copy)",
        "1"
      ]
    },
    "2535": {
      "op": "getbyte",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%12#0",
        "tmp%2#0",
        "tmp%22#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "tmp%22#0",
        "tmp%24#0"
      ]
    },
    "2536": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%12#0",
        "tmp%2#0",
        "tmp%22#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "tmp%22#0",
        "tmp%24#0",
        "32"
      ]
    },
    "2537": {
      "op": "*",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%12#0",
        "tmp%2#0",
        "tmp%22#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "tmp%22#0",
        "tmp%25#0"
      ]
    },
    "2538": {
      "op": "dig 1",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%12#0",
        "tmp%2#0",
        "tmp%22#0",
        "tmp%22#0 (copy)",
        "tmp%25#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "tmp%22#0",
        "tmp%25#0",
        "tmp%22#0 (copy)"
      ]
    },
    "2540": {
      "op": ">",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%12#0",
        "tmp%2#0",
        "tmp%22#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "tmp%22#0",
        "tmp%26#0"
      ]
    },
    "2541": {
      "error": "Players box start position index overflow. Can not store more addresses.",
      "op": "assert // Players box start position index overflow. Can not store more addresses.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "tmp%22#0"
      ]
    },
    "2542": {
      "op": "bytec_3 // \"p_\"",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "tmp%22#0",
        "\"p_\""
      ]
    },
    "2543": {
      "op": "uncover 6",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "tmp%22#0",
        "\"p_\"",
        "encoded_value%0#0"
      ]
    },
    "2545": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_players_bref#0",
        "game_state#0",
        "tmp%12#0",
        "tmp%2#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "tmp%22#0",
        "game_players_bref#0"
      ]
    },
    "2546": {
      "op": "txn Sender",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_players_bref#0",
        "game_state#0",
        "tmp%12#0",
        "tmp%2#0",
        "tmp%22#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "tmp%22#0",
        "game_players_bref#0",
        "tmp%30#0"
      ]
    },
    "2548": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "tmp%22#0",
        "tmp%30#0",
        "game_players_bref#0"
      ]
    },
    "2549": {
      "op": "cover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "game_players_bref#0",
        "tmp%22#0",
        "tmp%30#0"
      ]
    },
    "2551": {
      "op": "box_replace",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0"
      ]
    },
    "2552": {
      "op": "intc_0 // 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%12#0",
        "1"
      ]
    },
    "2553": {
      "op": "+",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "to_encode%0#0"
      ]
    },
    "2554": {
      "op": "itob",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "val_as_bytes%0#0"
      ]
    },
    "2555": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%0#0 (copy)"
      ]
    },
    "2556": {
      "op": "bitlen",
      "defined_out": [
        "bitlen%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "val_as_bytes%0#0",
        "bitlen%0#0"
      ]
    },
    "2557": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "bitlen%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "val_as_bytes%0#0",
        "bitlen%0#0",
        "8"
      ]
    },
    "2559": {
      "op": "<=",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "no_overflow%0#0",
        "tmp%2#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "val_as_bytes%0#0",
        "no_overflow%0#0"
      ]
    },
    "2560": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "val_as_bytes%0#0"
      ]
    },
    "2561": {
      "op": "extract 7 1",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "uint8%0#0"
      ]
    },
    "2564": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%2#0",
        "uint8%0#0",
        "game_state#0"
      ]
    },
    "2566": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%2#0",
        "game_state#0",
        "uint8%0#0"
      ]
    },
    "2567": {
      "op": "replace2 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%2#0",
        "game_state#0"
      ]
    },
    "2569": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%2#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "2570": {
      "op": "pushint 6 // 6",
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%2#0",
        "game_state#0",
        "game_state#0 (copy)",
        "6"
      ]
    },
    "2572": {
      "op": "extract_uint16",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%34#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%2#0",
        "game_state#0",
        "tmp%34#0"
      ]
    },
    "2573": {
      "op": "intc_3 // 32",
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%2#0",
        "game_state#0",
        "tmp%34#0",
        "32"
      ]
    },
    "2574": {
      "op": "+",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%2#0",
        "game_state#0",
        "to_encode%1#0"
      ]
    },
    "2575": {
      "op": "itob",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%2#0",
        "game_state#0",
        "val_as_bytes%1#0"
      ]
    },
    "2576": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "val_as_bytes%1#0",
        "val_as_bytes%1#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%2#0",
        "game_state#0",
        "val_as_bytes%1#0",
        "val_as_bytes%1#0 (copy)"
      ]
    },
    "2577": {
      "op": "bitlen",
      "defined_out": [
        "bitlen%1#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%2#0",
        "game_state#0",
        "val_as_bytes%1#0",
        "bitlen%1#0"
      ]
    },
    "2578": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "bitlen%1#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%2#0",
        "game_state#0",
        "val_as_bytes%1#0",
        "bitlen%1#0",
        "16"
      ]
    },
    "2580": {
      "op": "<=",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "no_overflow%1#0",
        "tmp%2#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%2#0",
        "game_state#0",
        "val_as_bytes%1#0",
        "no_overflow%1#0"
      ]
    },
    "2581": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%2#0",
        "game_state#0",
        "val_as_bytes%1#0"
      ]
    },
    "2582": {
      "op": "extract 6 2",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "uint16%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%2#0",
        "game_state#0",
        "uint16%0#0"
      ]
    },
    "2585": {
      "op": "replace2 6",
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%2#0",
        "game_state#0"
      ]
    },
    "2587": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%2#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "2588": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%2#0",
        "game_state#0",
        "game_state#0 (copy)",
        "16"
      ]
    },
    "2590": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%2#0",
        "game_state#0",
        "tmp%36#0"
      ]
    },
    "2591": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%36#0",
        "tmp%2#0"
      ]
    },
    "2593": {
      "op": "+",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "to_encode%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "to_encode%2#0"
      ]
    },
    "2594": {
      "op": "itob",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "val_as_bytes%2#0"
      ]
    },
    "2595": {
      "op": "replace2 16",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "2597": {
      "callsub": "smart_contracts.pieout.subroutines.is_game_live",
      "op": "callsub is_game_live",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "is_game_live%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "is_game_live%0#0",
        "game_state#0"
      ]
    },
    "2600": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "2602": {
      "op": "box_put",
      "stack_out": []
    },
    "2603": {
      "retsub": true,
      "op": "retsub"
    },
    "2604": {
      "subroutine": "smart_contracts.pieout.contract.Pieout.get_box_commit_rand",
      "params": {
        "box_c_pay#0": "uint64"
      },
      "block": "get_box_commit_rand",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "2607": {
      "op": "global GroupSize",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2609": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "2"
      ]
    },
    "2610": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2611": {
      "error": "Invalid group size. Ensure number of transaction in group is within valid bounds.",
      "op": "assert // Invalid group size. Ensure number of transaction in group is within valid bounds.",
      "stack_out": []
    },
    "2612": {
      "op": "bytec_0 // \"c_\"",
      "defined_out": [
        "\"c_\""
      ],
      "stack_out": [
        "\"c_\""
      ]
    },
    "2613": {
      "op": "txn Sender",
      "defined_out": [
        "\"c_\"",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "\"c_\"",
        "materialized_values%0#0"
      ]
    },
    "2615": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "2616": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "_%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2617": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%0#0"
      ]
    },
    "2619": {
      "op": "!",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "2620": {
      "error": "Box found. Ensure the box you are trying to access does not exist already.",
      "op": "assert // Box found. Ensure the box you are trying to access does not exist already.",
      "stack_out": []
    },
    "2621": {
      "op": "bytec_2 // \"t_\"",
      "defined_out": [
        "\"t_\""
      ],
      "stack_out": [
        "\"t_\""
      ]
    },
    "2622": {
      "op": "box_len",
      "defined_out": [
        "_%1#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "_%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2623": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%1#0"
      ]
    },
    "2625": {
      "error": "Box not found. Ensure the box you are trying to access was created and still exists.",
      "op": "assert // Box not found. Ensure the box you are trying to access was created and still exists.",
      "stack_out": []
    },
    "2626": {
      "op": "frame_dig -1",
      "defined_out": [
        "box_c_pay#0 (copy)"
      ],
      "stack_out": [
        "box_c_pay#0 (copy)"
      ]
    },
    "2628": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "2630": {
      "op": "intc 7 // 28900",
      "defined_out": [
        "28900",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "28900"
      ]
    },
    "2632": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "2633": {
      "error": "Insufficient funds. Box pay amount is not enough to cover application MBR.",
      "op": "assert // Insufficient funds. Box pay amount is not enough to cover application MBR.",
      "stack_out": []
    },
    "2634": {
      "op": "frame_dig -1",
      "stack_out": [
        "box_c_pay#0 (copy)"
      ]
    },
    "2636": {
      "op": "gtxns Sender",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "2638": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "tmp%6#0"
      ]
    },
    "2640": {
      "op": "==",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "2641": {
      "error": "Box payment sender address must match transaction sender address.",
      "op": "assert // Box payment sender address must match transaction sender address.",
      "stack_out": []
    },
    "2642": {
      "op": "frame_dig -1",
      "stack_out": [
        "box_c_pay#0 (copy)"
      ]
    },
    "2644": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "2646": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "2648": {
      "op": "==",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "2649": {
      "error": "Box payment receiver address must match application address.",
      "op": "assert // Box payment receiver address must match application address.",
      "stack_out": []
    },
    "2650": {
      "op": "bytec_0 // \"c_\"",
      "stack_out": [
        "\"c_\""
      ]
    },
    "2651": {
      "op": "txn Sender",
      "defined_out": [
        "\"c_\"",
        "tmp%11#0"
      ],
      "stack_out": [
        "\"c_\"",
        "tmp%11#0"
      ]
    },
    "2653": {
      "op": "intc 6 // 32000",
      "defined_out": [
        "\"c_\"",
        "32000",
        "tmp%11#0"
      ],
      "stack_out": [
        "\"c_\"",
        "tmp%11#0",
        "32000"
      ]
    },
    "2655": {
      "callsub": "smart_contracts.pieout.subroutines.reset_box_commit_rand",
      "op": "callsub reset_box_commit_rand",
      "stack_out": []
    },
    "2658": {
      "retsub": true,
      "op": "retsub"
    },
    "2659": {
      "subroutine": "smart_contracts.pieout.contract.Pieout.set_box_commit_rand",
      "params": {
        "game_id#0": "uint64"
      },
      "block": "set_box_commit_rand",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "2662": {
      "op": "global GroupSize",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2664": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "1"
      ]
    },
    "2665": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2666": {
      "error": "Invalid group size. This app call can only take standalone transactions.",
      "op": "assert // Invalid group size. This app call can only take standalone transactions.",
      "stack_out": []
    },
    "2667": {
      "op": "frame_dig -1",
      "defined_out": [
        "game_id#0 (copy)"
      ],
      "stack_out": [
        "game_id#0 (copy)"
      ]
    },
    "2669": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "2670": {
      "op": "bytec 4 // \"s_\"",
      "defined_out": [
        "\"s_\"",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "\"s_\""
      ]
    },
    "2672": {
      "op": "dig 1",
      "defined_out": [
        "\"s_\"",
        "encoded_value%0#0",
        "encoded_value%0#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "\"s_\"",
        "encoded_value%0#0 (copy)"
      ]
    },
    "2674": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "2675": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "2676": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "_%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2677": {
      "op": "bury 1",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2679": {
      "error": "Box game state not found. Check if game ID exists.",
      "op": "assert // Box game state not found. Check if game ID exists.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "2680": {
      "op": "bytec_0 // \"c_\"",
      "defined_out": [
        "\"c_\"",
        "box_prefixed_key%0#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "\"c_\""
      ]
    },
    "2681": {
      "op": "txn Sender",
      "defined_out": [
        "\"c_\"",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "\"c_\"",
        "materialized_values%0#0"
      ]
    },
    "2683": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%1#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%1#0"
      ]
    },
    "2684": {
      "op": "box_len",
      "defined_out": [
        "_%1#0",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "_%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2685": {
      "op": "bury 1",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "maybe_exists%1#0"
      ]
    },
    "2687": {
      "error": "Box not found. Ensure the box you are trying to access was created and still exists.",
      "op": "assert // Box not found. Ensure the box you are trying to access was created and still exists.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "2688": {
      "op": "box_get",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_exists%2#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_exists%2#0"
      ]
    },
    "2689": {
      "error": "check self.box_game_state entry exists",
      "op": "assert // check self.box_game_state entry exists",
      "stack_out": [
        "encoded_value%0#0",
        "maybe_value%0#0"
      ]
    },
    "2690": {
      "op": "dup",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "2691": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "0"
      ]
    },
    "2692": {
      "op": "getbit",
      "defined_out": [
        "encoded_value%0#0",
        "is_true%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "is_true%0#0"
      ]
    },
    "2693": {
      "op": "bytec_1 // 0x00",
      "defined_out": [
        "0x00",
        "encoded_value%0#0",
        "is_true%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "is_true%0#0",
        "0x00"
      ]
    },
    "2694": {
      "op": "intc_1 // 0",
      "stack_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "is_true%0#0",
        "0x00",
        "0"
      ]
    },
    "2695": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "0x00",
        "0",
        "is_true%0#0"
      ]
    },
    "2697": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "encoded_bool%0#0"
      ]
    },
    "2698": {
      "op": "intc_1 // 0",
      "stack_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "encoded_bool%0#0",
        "0"
      ]
    },
    "2699": {
      "op": "getbit",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "tmp%2#0"
      ]
    },
    "2700": {
      "op": "intc_0 // 1",
      "stack_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "tmp%2#0",
        "1"
      ]
    },
    "2701": {
      "op": "==",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "tmp%3#0"
      ]
    },
    "2702": {
      "error": "Game state staking finalized value mismatch.",
      "op": "assert // Game state staking finalized value mismatch.",
      "stack_out": [
        "encoded_value%0#0",
        "maybe_value%0#0"
      ]
    },
    "2703": {
      "op": "txn Sender",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "tmp%4#0"
      ]
    },
    "2705": {
      "op": "swap",
      "stack_out": [
        "encoded_value%0#0",
        "tmp%4#0",
        "maybe_value%0#0"
      ]
    },
    "2706": {
      "op": "intc_0 // 1",
      "stack_out": [
        "encoded_value%0#0",
        "tmp%4#0",
        "maybe_value%0#0",
        "1"
      ]
    },
    "2707": {
      "op": "getbyte",
      "defined_out": [
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%6#0"
      ]
    },
    "2708": {
      "op": "frame_dig -1",
      "stack_out": [
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%6#0",
        "game_id#0 (copy)"
      ]
    },
    "2710": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_value%0#0",
        "tmp%6#0",
        "game_id#0 (copy)",
        "tmp%4#0"
      ]
    },
    "2712": {
      "op": "bytec_3 // \"p_\"",
      "defined_out": [
        "\"p_\"",
        "encoded_value%0#0",
        "game_id#0 (copy)",
        "tmp%4#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "tmp%6#0",
        "game_id#0 (copy)",
        "tmp%4#0",
        "\"p_\""
      ]
    },
    "2713": {
      "op": "uncover 3",
      "stack_out": [
        "encoded_value%0#0",
        "game_id#0 (copy)",
        "tmp%4#0",
        "\"p_\"",
        "tmp%6#0"
      ]
    },
    "2715": {
      "op": "intc_1 // 0",
      "stack_out": [
        "encoded_value%0#0",
        "game_id#0 (copy)",
        "tmp%4#0",
        "\"p_\"",
        "tmp%6#0",
        "0"
      ]
    },
    "2716": {
      "callsub": "smart_contracts.pieout.subroutines.check_acc_in_game",
      "op": "callsub check_acc_in_game",
      "defined_out": [
        "encoded_value%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "tmp%7#0"
      ]
    },
    "2719": {
      "op": "intc_0 // 1",
      "stack_out": [
        "encoded_value%0#0",
        "tmp%7#0",
        "1"
      ]
    },
    "2720": {
      "op": "==",
      "defined_out": [
        "encoded_value%0#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "tmp%8#0"
      ]
    },
    "2721": {
      "error": "Account is not recognized as an active player for this game.",
      "op": "assert // Account is not recognized as an active player for this game.",
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "2722": {
      "op": "bytec_0 // \"c_\"",
      "stack_out": [
        "encoded_value%0#0",
        "\"c_\""
      ]
    },
    "2723": {
      "op": "txn Sender",
      "defined_out": [
        "\"c_\"",
        "encoded_value%0#0",
        "materialized_values%1#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "\"c_\"",
        "materialized_values%1#0"
      ]
    },
    "2725": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%4#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%4#0"
      ]
    },
    "2726": {
      "op": "box_get",
      "defined_out": [
        "commit_rand#0",
        "encoded_value%0#0",
        "maybe_exists%4#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "commit_rand#0",
        "maybe_exists%4#0"
      ]
    },
    "2727": {
      "error": "check self.box_commit_rand entry exists",
      "op": "assert // check self.box_commit_rand entry exists",
      "stack_out": [
        "encoded_value%0#0",
        "commit_rand#0"
      ]
    },
    "2728": {
      "op": "dup",
      "defined_out": [
        "commit_rand#0",
        "commit_rand#0 (copy)",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "commit_rand#0",
        "commit_rand#0 (copy)"
      ]
    },
    "2729": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "commit_rand#0",
        "commit_rand#0 (copy)",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "commit_rand#0",
        "commit_rand#0 (copy)",
        "8"
      ]
    },
    "2731": {
      "op": "extract_uint64",
      "defined_out": [
        "commit_rand#0",
        "encoded_value%0#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "commit_rand#0",
        "tmp%10#0"
      ]
    },
    "2732": {
      "op": "!",
      "defined_out": [
        "commit_rand#0",
        "encoded_value%0#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "commit_rand#0",
        "tmp%11#0"
      ]
    },
    "2733": {
      "error": "Box Commit Rand round not empty. Round value must be zero to obtain a valid one.",
      "op": "assert // Box Commit Rand round not empty. Round value must be zero to obtain a valid one.",
      "stack_out": [
        "encoded_value%0#0",
        "commit_rand#0"
      ]
    },
    "2734": {
      "op": "global Round",
      "defined_out": [
        "commit_rand#0",
        "encoded_value%0#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "commit_rand#0",
        "tmp%12#0"
      ]
    },
    "2736": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "commit_rand#0",
        "encoded_value%0#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "commit_rand#0",
        "tmp%12#0",
        "4"
      ]
    },
    "2738": {
      "op": "+",
      "defined_out": [
        "commit_rand#0",
        "encoded_value%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "commit_rand#0",
        "to_encode%0#0"
      ]
    },
    "2739": {
      "op": "itob",
      "defined_out": [
        "commit_rand#0",
        "encoded_value%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "commit_rand#0",
        "val_as_bytes%0#0"
      ]
    },
    "2740": {
      "op": "replace2 8",
      "stack_out": [
        "encoded_value%0#0",
        "commit_rand#0"
      ]
    },
    "2742": {
      "op": "swap",
      "stack_out": [
        "commit_rand#0",
        "encoded_value%0#0"
      ]
    },
    "2743": {
      "op": "replace2 0",
      "stack_out": [
        "commit_rand#0"
      ]
    },
    "2745": {
      "op": "bytec_0 // \"c_\"",
      "stack_out": [
        "commit_rand#0",
        "\"c_\""
      ]
    },
    "2746": {
      "op": "txn Sender",
      "defined_out": [
        "\"c_\"",
        "commit_rand#0",
        "materialized_values%2#0"
      ],
      "stack_out": [
        "commit_rand#0",
        "\"c_\"",
        "materialized_values%2#0"
      ]
    },
    "2748": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%5#0",
        "commit_rand#0"
      ],
      "stack_out": [
        "commit_rand#0",
        "box_prefixed_key%5#0"
      ]
    },
    "2749": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%5#0",
        "commit_rand#0"
      ]
    },
    "2750": {
      "op": "box_put",
      "stack_out": []
    },
    "2751": {
      "retsub": true,
      "op": "retsub"
    },
    "2752": {
      "subroutine": "smart_contracts.pieout.contract.Pieout.del_box_commit_rand_for_self",
      "params": {
        "game_id#0": "uint64"
      },
      "block": "del_box_commit_rand_for_self",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "2755": {
      "op": "global GroupSize",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2757": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "1"
      ]
    },
    "2758": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2759": {
      "error": "Invalid group size. This app call can only take standalone transactions.",
      "op": "assert // Invalid group size. This app call can only take standalone transactions.",
      "stack_out": []
    },
    "2760": {
      "op": "frame_dig -1",
      "defined_out": [
        "game_id#0 (copy)"
      ],
      "stack_out": [
        "game_id#0 (copy)"
      ]
    },
    "2762": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "2763": {
      "op": "bytec 4 // \"s_\"",
      "defined_out": [
        "\"s_\"",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "\"s_\""
      ]
    },
    "2765": {
      "op": "swap",
      "stack_out": [
        "\"s_\"",
        "encoded_value%0#0"
      ]
    },
    "2766": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "2767": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "2768": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "box_prefixed_key%0#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "_%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2769": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2771": {
      "error": "Box game state not found. Check if game ID exists.",
      "op": "assert // Box game state not found. Check if game ID exists.",
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "2772": {
      "op": "bytec_0 // \"c_\"",
      "defined_out": [
        "\"c_\"",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "\"c_\""
      ]
    },
    "2773": {
      "op": "txn Sender",
      "defined_out": [
        "\"c_\"",
        "box_prefixed_key%0#0",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "\"c_\"",
        "materialized_values%0#0"
      ]
    },
    "2775": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%1#0"
      ]
    },
    "2776": {
      "op": "box_len",
      "defined_out": [
        "_%1#0",
        "box_prefixed_key%0#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "_%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2777": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%1#0"
      ]
    },
    "2779": {
      "error": "Box not found. Ensure the box you are trying to access was created and still exists.",
      "op": "assert // Box not found. Ensure the box you are trying to access was created and still exists.",
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "2780": {
      "op": "bytec_0 // \"c_\"",
      "stack_out": [
        "box_prefixed_key%0#0",
        "\"c_\""
      ]
    },
    "2781": {
      "op": "txn Sender",
      "defined_out": [
        "\"c_\"",
        "box_prefixed_key%0#0",
        "materialized_values%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "\"c_\"",
        "materialized_values%1#0"
      ]
    },
    "2783": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%2#0"
      ]
    },
    "2784": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%2#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_exists%2#0"
      ]
    },
    "2785": {
      "error": "check self.box_commit_rand entry exists",
      "op": "assert // check self.box_commit_rand entry exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0"
      ]
    },
    "2786": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "0"
      ]
    },
    "2787": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%3#0"
      ]
    },
    "2788": {
      "op": "bz del_box_commit_rand_for_self_bool_true@2",
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "2791": {
      "op": "bytec_0 // \"c_\"",
      "stack_out": [
        "box_prefixed_key%0#0",
        "\"c_\""
      ]
    },
    "2792": {
      "op": "txn Sender",
      "defined_out": [
        "\"c_\"",
        "box_prefixed_key%0#0",
        "materialized_values%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "\"c_\"",
        "materialized_values%2#0"
      ]
    },
    "2794": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%3#0"
      ]
    },
    "2795": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%3#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%1#0",
        "maybe_exists%3#0"
      ]
    },
    "2796": {
      "error": "check self.box_commit_rand entry exists",
      "op": "assert // check self.box_commit_rand entry exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%1#0"
      ]
    },
    "2797": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%1#0",
        "0"
      ]
    },
    "2798": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%6#0"
      ]
    },
    "2799": {
      "op": "frame_dig -1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%6#0",
        "game_id#0 (copy)"
      ]
    },
    "2801": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%7#0"
      ]
    },
    "2802": {
      "op": "bz del_box_commit_rand_for_self_bool_false@3",
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "2805": {
      "block": "del_box_commit_rand_for_self_bool_true@2",
      "stack_in": [
        "box_prefixed_key%0#0"
      ],
      "op": "intc_0 // 1",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "or_result%0#0"
      ]
    },
    "2806": {
      "block": "del_box_commit_rand_for_self_bool_merge@4",
      "stack_in": [
        "box_prefixed_key%0#0",
        "or_result%0#0"
      ],
      "error": "Invalid Game ID. Box Commit Rand Game ID must be a certain value or match Game ID arg.",
      "op": "assert // Invalid Game ID. Box Commit Rand Game ID must be a certain value or match Game ID arg.",
      "defined_out": [],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "2807": {
      "op": "bytec_0 // \"c_\"",
      "defined_out": [
        "\"c_\""
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "\"c_\""
      ]
    },
    "2808": {
      "op": "txn Sender",
      "defined_out": [
        "\"c_\"",
        "materialized_values%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "\"c_\"",
        "materialized_values%3#0"
      ]
    },
    "2810": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%4#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%4#0"
      ]
    },
    "2811": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%4#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%2#0",
        "maybe_exists%4#0"
      ]
    },
    "2812": {
      "error": "check self.box_commit_rand entry exists",
      "op": "assert // check self.box_commit_rand entry exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%2#0"
      ]
    },
    "2813": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%2#0",
        "0"
      ]
    },
    "2814": {
      "op": "extract_uint64",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%9#0"
      ]
    },
    "2815": {
      "op": "bz del_box_commit_rand_for_self_after_if_else@6",
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "2818": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%11#0"
      ]
    },
    "2820": {
      "op": "frame_dig 0",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%11#0",
        "box_prefixed_key%0#0"
      ]
    },
    "2822": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%5#0",
        "maybe_value%3#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%11#0",
        "maybe_value%3#0",
        "maybe_exists%5#0"
      ]
    },
    "2823": {
      "error": "check self.box_game_state entry exists",
      "op": "assert // check self.box_game_state entry exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%11#0",
        "maybe_value%3#0"
      ]
    },
    "2824": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "box_prefixed_key%0#0",
        "maybe_value%3#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%11#0",
        "maybe_value%3#0",
        "1"
      ]
    },
    "2825": {
      "op": "getbyte",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%11#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%11#0",
        "tmp%13#0"
      ]
    },
    "2826": {
      "op": "frame_dig -1",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_id#0 (copy)",
        "tmp%11#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%11#0",
        "tmp%13#0",
        "game_id#0 (copy)"
      ]
    },
    "2828": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%13#0",
        "game_id#0 (copy)",
        "tmp%11#0"
      ]
    },
    "2830": {
      "op": "bytec_3 // \"p_\"",
      "defined_out": [
        "\"p_\"",
        "box_prefixed_key%0#0",
        "game_id#0 (copy)",
        "tmp%11#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%13#0",
        "game_id#0 (copy)",
        "tmp%11#0",
        "\"p_\""
      ]
    },
    "2831": {
      "op": "uncover 3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_id#0 (copy)",
        "tmp%11#0",
        "\"p_\"",
        "tmp%13#0"
      ]
    },
    "2833": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_id#0 (copy)",
        "tmp%11#0",
        "\"p_\"",
        "tmp%13#0",
        "0"
      ]
    },
    "2834": {
      "callsub": "smart_contracts.pieout.subroutines.check_acc_in_game",
      "op": "callsub check_acc_in_game",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%14#0"
      ]
    },
    "2837": {
      "op": "!",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%15#0"
      ]
    },
    "2838": {
      "error": "Player with this address must not be an active game participant in the game.",
      "op": "assert // Player with this address must not be an active game participant in the game.",
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "2839": {
      "block": "del_box_commit_rand_for_self_after_if_else@6",
      "stack_in": [
        "box_prefixed_key%0#0"
      ],
      "op": "bytec_0 // \"c_\"",
      "defined_out": [
        "\"c_\""
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "\"c_\""
      ]
    },
    "2840": {
      "op": "txn Sender",
      "defined_out": [
        "\"c_\"",
        "materialized_values%4#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "\"c_\"",
        "materialized_values%4#0"
      ]
    },
    "2842": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%6#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%6#0"
      ]
    },
    "2843": {
      "op": "box_del",
      "defined_out": [
        "{box_del}"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "{box_del}"
      ]
    },
    "2844": {
      "op": "pop",
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "2845": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%16#0"
      ]
    },
    "2847": {
      "op": "intc 7 // 28900",
      "defined_out": [
        "28900",
        "tmp%16#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%16#0",
        "28900"
      ]
    },
    "2849": {
      "op": "pushbytes \"pieout:j{\\\"method\\\":\\\"del_box_commit_rand_for_self\\\",\\\"concern\\\":\\\"txn.app_c;mbr_box_c_refund\\\"}\"",
      "defined_out": [
        "\"pieout:j{\\\"method\\\":\\\"del_box_commit_rand_for_self\\\",\\\"concern\\\":\\\"txn.app_c;mbr_box_c_refund\\\"}\"",
        "28900",
        "tmp%16#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%16#0",
        "28900",
        "\"pieout:j{\\\"method\\\":\\\"del_box_commit_rand_for_self\\\",\\\"concern\\\":\\\"txn.app_c;mbr_box_c_refund\\\"}\""
      ]
    },
    "2939": {
      "callsub": "smart_contracts.pieout.subroutines.payout_itxn",
      "op": "callsub payout_itxn",
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "2942": {
      "retsub": true,
      "op": "retsub"
    },
    "2943": {
      "block": "del_box_commit_rand_for_self_bool_false@3",
      "stack_in": [
        "box_prefixed_key%0#0"
      ],
      "op": "intc_1 // 0",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "or_result%0#0"
      ]
    },
    "2944": {
      "op": "b del_box_commit_rand_for_self_bool_merge@4"
    },
    "2947": {
      "subroutine": "smart_contracts.pieout.contract.Pieout.del_box_commit_rand_for_other",
      "params": {
        "player#0": "bytes"
      },
      "block": "del_box_commit_rand_for_other",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "2950": {
      "op": "global GroupSize",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2952": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "1"
      ]
    },
    "2953": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2954": {
      "error": "Invalid group size. This app call can only take standalone transactions.",
      "op": "assert // Invalid group size. This app call can only take standalone transactions.",
      "stack_out": []
    },
    "2955": {
      "op": "bytec_0 // \"c_\"",
      "defined_out": [
        "\"c_\""
      ],
      "stack_out": [
        "\"c_\""
      ]
    },
    "2956": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"c_\"",
        "player#0 (copy)"
      ],
      "stack_out": [
        "\"c_\"",
        "player#0 (copy)"
      ]
    },
    "2958": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "2959": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "2960": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "box_prefixed_key%0#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "_%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2961": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2963": {
      "error": "Box not found. Ensure the box you are trying to access was created and still exists.",
      "op": "assert // Box not found. Ensure the box you are trying to access was created and still exists.",
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "2964": {
      "op": "frame_dig -1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "player#0 (copy)"
      ]
    },
    "2966": {
      "op": "txn Sender",
      "defined_out": [
        "box_prefixed_key%0#0",
        "player#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "player#0 (copy)",
        "tmp%2#0"
      ]
    },
    "2968": {
      "op": "!=",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%3#0"
      ]
    },
    "2969": {
      "error": "Account is not authorized to make this call.",
      "op": "assert // Account is not authorized to make this call.",
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "2970": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "2971": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%1#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_exists%1#0"
      ]
    },
    "2972": {
      "error": "check self.box_commit_rand entry exists",
      "op": "assert // check self.box_commit_rand entry exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0"
      ]
    },
    "2973": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "2974": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "8"
      ]
    },
    "2976": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "tmp%5#0"
      ]
    },
    "2977": {
      "op": "!",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "tmp%6#0"
      ]
    },
    "2978": {
      "error": "Box Commit Rand round not empty. Round value must be zero to obtain a valid one.",
      "op": "assert // Box Commit Rand round not empty. Round value must be zero to obtain a valid one.",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0"
      ]
    },
    "2979": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "box_prefixed_key%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "16"
      ]
    },
    "2981": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%8#0"
      ]
    },
    "2982": {
      "op": "global Round",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "2984": {
      "op": "<",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%10#0"
      ]
    },
    "2985": {
      "error": "Invalid time frame. Call made outside the permitted block or timestamp range.",
      "op": "assert // Invalid time frame. Call made outside the permitted block or timestamp range.",
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "2986": {
      "op": "box_del",
      "defined_out": [
        "{box_del}"
      ],
      "stack_out": [
        "{box_del}"
      ]
    },
    "2987": {
      "op": "pop",
      "stack_out": []
    },
    "2988": {
      "op": "frame_dig -1",
      "stack_out": [
        "player#0 (copy)"
      ]
    },
    "2990": {
      "op": "txn Sender",
      "defined_out": [
        "player#0 (copy)",
        "tmp%11#0"
      ],
      "stack_out": [
        "player#0 (copy)",
        "tmp%11#0"
      ]
    },
    "2992": {
      "op": "global CreatorAddress",
      "defined_out": [
        "player#0 (copy)",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "player#0 (copy)",
        "tmp%11#0",
        "tmp%12#0"
      ]
    },
    "2994": {
      "callsub": "smart_contracts.pieout.subroutines.resolve_receiver_by_prio",
      "op": "callsub resolve_receiver_by_prio",
      "defined_out": [
        "receiver#0"
      ],
      "stack_out": [
        "receiver#0"
      ]
    },
    "2997": {
      "op": "intc 7 // 28900",
      "defined_out": [
        "28900",
        "receiver#0"
      ],
      "stack_out": [
        "receiver#0",
        "28900"
      ]
    },
    "2999": {
      "op": "pushbytes \"pieout:j{\\\"method\\\":\\\"del_box_commit_rand_for_other\\\",\\\"concern\\\":\\\"itxn.pay;mbr_box_c_refund\\\"}\"",
      "defined_out": [
        "\"pieout:j{\\\"method\\\":\\\"del_box_commit_rand_for_other\\\",\\\"concern\\\":\\\"itxn.pay;mbr_box_c_refund\\\"}\"",
        "28900",
        "receiver#0"
      ],
      "stack_out": [
        "receiver#0",
        "28900",
        "\"pieout:j{\\\"method\\\":\\\"del_box_commit_rand_for_other\\\",\\\"concern\\\":\\\"itxn.pay;mbr_box_c_refund\\\"}\""
      ]
    },
    "3089": {
      "callsub": "smart_contracts.pieout.subroutines.payout_itxn",
      "op": "callsub payout_itxn",
      "stack_out": []
    },
    "3092": {
      "retsub": true,
      "op": "retsub"
    },
    "3093": {
      "subroutine": "smart_contracts.pieout.contract.Pieout.up_ref_budget_for_play_game",
      "params": {
        "game_id#0": "uint64"
      },
      "block": "up_ref_budget_for_play_game",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "3096": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "3097": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_type%0#0"
      ],
      "stack_out": [
        "gtxn_type%0#0"
      ]
    },
    "3099": {
      "op": "pushint 6 // appl",
      "defined_out": [
        "appl",
        "gtxn_type%0#0"
      ],
      "stack_out": [
        "gtxn_type%0#0",
        "appl"
      ]
    },
    "3101": {
      "op": "==",
      "defined_out": [
        "gtxn_type_matches%0#0"
      ],
      "stack_out": [
        "gtxn_type_matches%0#0"
      ]
    },
    "3102": {
      "error": "transaction type is appl",
      "op": "assert // transaction type is appl",
      "stack_out": []
    },
    "3103": {
      "op": "global GroupSize",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3105": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "2"
      ]
    },
    "3106": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "3107": {
      "error": "Invalid group size. Ensure number of transaction in group is within valid bounds.",
      "op": "assert // Invalid group size. Ensure number of transaction in group is within valid bounds.",
      "stack_out": []
    },
    "3108": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "3110": {
      "op": "!",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "3111": {
      "error": "Invalid group index. Ensure transaction group index matches the expected value. ",
      "op": "assert // Invalid group index. Ensure transaction group index matches the expected value. ",
      "stack_out": []
    },
    "3112": {
      "op": "intc_0 // 1",
      "stack_out": [
        "1"
      ]
    },
    "3113": {
      "op": "gtxns ApplicationID",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "3115": {
      "op": "global CurrentApplicationID",
      "defined_out": [
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "3117": {
      "op": "==",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "3118": {
      "error": "Application ID mismatch. App ID must be same across all transactions in group.",
      "op": "assert // Application ID mismatch. App ID must be same across all transactions in group.",
      "stack_out": []
    },
    "3119": {
      "op": "intc_0 // 1",
      "stack_out": [
        "1"
      ]
    },
    "3120": {
      "op": "gtxns Sender",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "3122": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "3124": {
      "op": "==",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "3125": {
      "error": "Sender mismatch. Sender must be same address across all transactions in group.",
      "op": "assert // Sender mismatch. Sender must be same address across all transactions in group.",
      "stack_out": []
    },
    "3126": {
      "op": "intc_0 // 1",
      "stack_out": [
        "1"
      ]
    },
    "3127": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "1"
      ],
      "stack_out": [
        "1",
        "0"
      ]
    },
    "3128": {
      "op": "gtxnsas ApplicationArgs",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "3130": {
      "op": "bytec 13 // method \"play_game(uint64)void\"",
      "defined_out": [
        "Method(play_game(uint64)void)",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "Method(play_game(uint64)void)"
      ]
    },
    "3132": {
      "op": "==",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "3133": {
      "error": "Transaction at this group index must have exact required method selector.",
      "op": "assert // Transaction at this group index must have exact required method selector.",
      "stack_out": []
    },
    "3134": {
      "op": "intc_0 // 1",
      "stack_out": [
        "1"
      ]
    },
    "3135": {
      "op": "dup",
      "stack_out": [
        "1",
        "1"
      ]
    },
    "3136": {
      "op": "gtxnsas ApplicationArgs",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "3138": {
      "op": "frame_dig -1",
      "defined_out": [
        "game_id#0 (copy)",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "game_id#0 (copy)"
      ]
    },
    "3140": {
      "op": "itob",
      "defined_out": [
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "tmp%13#0"
      ]
    },
    "3141": {
      "op": "dig 1",
      "defined_out": [
        "tmp%12#0",
        "tmp%12#0 (copy)",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "tmp%13#0",
        "tmp%12#0 (copy)"
      ]
    },
    "3143": {
      "op": "==",
      "defined_out": [
        "tmp%12#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "tmp%14#0"
      ]
    },
    "3144": {
      "error": "Invalid Game ID. Box Commit Rand Game ID must be a certain value or match Game ID arg.",
      "op": "assert // Invalid Game ID. Box Commit Rand Game ID must be a certain value or match Game ID arg.",
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "3145": {
      "op": "bytec_0 // \"c_\"",
      "defined_out": [
        "\"c_\"",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "\"c_\""
      ]
    },
    "3146": {
      "op": "txn Sender",
      "defined_out": [
        "\"c_\"",
        "materialized_values%0#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "\"c_\"",
        "materialized_values%0#0"
      ]
    },
    "3148": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "box_prefixed_key%0#0"
      ]
    },
    "3149": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3150": {
      "error": "check self.box_commit_rand entry exists",
      "op": "assert // check self.box_commit_rand entry exists",
      "stack_out": [
        "tmp%12#0",
        "maybe_value%0#0"
      ]
    },
    "3151": {
      "op": "intc_1 // 0",
      "stack_out": [
        "tmp%12#0",
        "maybe_value%0#0",
        "0"
      ]
    },
    "3152": {
      "op": "extract_uint64",
      "defined_out": [
        "tmp%12#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "tmp%17#0"
      ]
    },
    "3153": {
      "op": "itob",
      "defined_out": [
        "tmp%12#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "tmp%18#0"
      ]
    },
    "3154": {
      "op": "==",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "3155": {
      "op": "assert",
      "stack_out": []
    },
    "3156": {
      "op": "bytec_0 // \"c_\"",
      "stack_out": [
        "\"c_\""
      ]
    },
    "3157": {
      "op": "txn Sender",
      "defined_out": [
        "\"c_\"",
        "materialized_values%1#0"
      ],
      "stack_out": [
        "\"c_\"",
        "materialized_values%1#0"
      ]
    },
    "3159": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0"
      ]
    },
    "3160": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "3161": {
      "error": "check self.box_commit_rand entry exists",
      "op": "assert // check self.box_commit_rand entry exists",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "3162": {
      "op": "intc_1 // 0",
      "stack_out": [
        "maybe_value%1#0",
        "0"
      ]
    },
    "3163": {
      "op": "extract_uint64",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "3164": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%21#0",
        "game_id#0 (copy)"
      ]
    },
    "3166": {
      "op": "==",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "3167": {
      "op": "assert",
      "stack_out": []
    },
    "3168": {
      "retsub": true,
      "op": "retsub"
    },
    "3169": {
      "subroutine": "smart_contracts.pieout.contract.Pieout.play_game",
      "params": {
        "game_id#0": "uint64"
      },
      "block": "play_game",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "3172": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%1#0"
      ]
    },
    "3173": {
      "op": "dupn 6",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0"
      ]
    },
    "3175": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0"
      ]
    },
    "3177": {
      "op": "dupn 8",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0"
      ]
    },
    "3179": {
      "block": "play_game_while_top@37",
      "stack_in": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0"
      ],
      "op": "pushint 19610 // 19610",
      "defined_out": [
        "19610"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "19610"
      ]
    },
    "3183": {
      "op": "global OpcodeBudget",
      "defined_out": [
        "19610",
        "tmp%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "19610",
        "tmp%0#0"
      ]
    },
    "3185": {
      "op": ">",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%1#0"
      ]
    },
    "3186": {
      "op": "bz play_game_after_while@42",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0"
      ]
    },
    "3189": {
      "op": "itxn_begin"
    },
    "3190": {
      "op": "pushint 6 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "appl"
      ]
    },
    "3192": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0"
      ]
    },
    "3194": {
      "op": "pushint 5 // DeleteApplication",
      "defined_out": [
        "DeleteApplication"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "DeleteApplication"
      ]
    },
    "3196": {
      "op": "itxn_field OnCompletion",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0"
      ]
    },
    "3198": {
      "op": "bytec 14 // 0x068101",
      "defined_out": [
        "0x068101"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "0x068101"
      ]
    },
    "3200": {
      "op": "itxn_field ApprovalProgram",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0"
      ]
    },
    "3202": {
      "op": "bytec 14 // 0x068101",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "0x068101"
      ]
    },
    "3204": {
      "op": "itxn_field ClearStateProgram",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0"
      ]
    },
    "3206": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "0"
      ]
    },
    "3207": {
      "op": "itxn_field Fee",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0"
      ]
    },
    "3209": {
      "op": "itxn_submit"
    },
    "3210": {
      "op": "b play_game_while_top@37"
    },
    "3213": {
      "block": "play_game_after_while@42",
      "stack_in": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0"
      ],
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "0"
      ]
    },
    "3214": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_type%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "gtxn_type%0#0"
      ]
    },
    "3216": {
      "op": "pushint 6 // appl",
      "defined_out": [
        "appl",
        "gtxn_type%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "gtxn_type%0#0",
        "appl"
      ]
    },
    "3218": {
      "op": "==",
      "defined_out": [
        "gtxn_type_matches%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "gtxn_type_matches%0#0"
      ]
    },
    "3219": {
      "error": "transaction type is appl",
      "op": "assert // transaction type is appl",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0"
      ]
    },
    "3220": {
      "op": "global GroupSize",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%0#0"
      ]
    },
    "3222": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "tmp%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%0#0",
        "2"
      ]
    },
    "3223": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%1#0"
      ]
    },
    "3224": {
      "error": "Invalid group size. Ensure number of transaction in group is within valid bounds.",
      "op": "assert // Invalid group size. Ensure number of transaction in group is within valid bounds.",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0"
      ]
    },
    "3225": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%2#0"
      ]
    },
    "3227": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%2#0",
        "1"
      ]
    },
    "3228": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%3#0"
      ]
    },
    "3229": {
      "error": "Invalid group index. Ensure transaction group index matches the expected value. ",
      "op": "assert // Invalid group index. Ensure transaction group index matches the expected value. ",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0"
      ]
    },
    "3230": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "0"
      ]
    },
    "3231": {
      "op": "gtxns ApplicationID",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%4#0"
      ]
    },
    "3233": {
      "op": "global CurrentApplicationID",
      "defined_out": [
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "3235": {
      "op": "==",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%6#0"
      ]
    },
    "3236": {
      "error": "Application ID mismatch. App ID must be same across all transactions in group.",
      "op": "assert // Application ID mismatch. App ID must be same across all transactions in group.",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0"
      ]
    },
    "3237": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "0"
      ]
    },
    "3238": {
      "op": "gtxns Sender",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%7#0"
      ]
    },
    "3240": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "3242": {
      "op": "==",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%9#0"
      ]
    },
    "3243": {
      "error": "Sender mismatch. Sender must be same address across all transactions in group.",
      "op": "assert // Sender mismatch. Sender must be same address across all transactions in group.",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0"
      ]
    },
    "3244": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "0"
      ]
    },
    "3245": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "0",
        "0"
      ]
    },
    "3246": {
      "op": "gtxnsas ApplicationArgs",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%10#0"
      ]
    },
    "3248": {
      "op": "bytec 12 // method \"up_ref_budget_for_play_game(uint64)void\"",
      "defined_out": [
        "Method(up_ref_budget_for_play_game(uint64)void)",
        "tmp%10#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%10#0",
        "Method(up_ref_budget_for_play_game(uint64)void)"
      ]
    },
    "3250": {
      "op": "==",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%11#0"
      ]
    },
    "3251": {
      "error": "Transaction at this group index must have exact required method selector.",
      "op": "assert // Transaction at this group index must have exact required method selector.",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0"
      ]
    },
    "3252": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "0"
      ]
    },
    "3253": {
      "op": "intc_0 // 1",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "0",
        "1"
      ]
    },
    "3254": {
      "op": "gtxnsas ApplicationArgs",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%12#0"
      ]
    },
    "3256": {
      "op": "dup"
    },
    "3257": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%12#0",
        "tmp%12#0 (copy)",
        "tmp%13#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%12#0",
        "tmp%12#0 (copy)",
        "tmp%13#0"
      ]
    },
    "3260": {
      "op": "==",
      "defined_out": [
        "tmp%12#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%12#0",
        "tmp%14#0"
      ]
    },
    "3261": {
      "error": "Invalid Game ID. Box Commit Rand Game ID must be a certain value or match Game ID arg.",
      "op": "assert // Invalid Game ID. Box Commit Rand Game ID must be a certain value or match Game ID arg.",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%12#0"
      ]
    },
    "3262": {
      "op": "bytec_0 // \"c_\"",
      "defined_out": [
        "\"c_\"",
        "tmp%12#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%12#0",
        "\"c_\""
      ]
    },
    "3263": {
      "op": "txn Sender",
      "defined_out": [
        "\"c_\"",
        "materialized_values%0#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%12#0",
        "\"c_\"",
        "materialized_values%0#0"
      ]
    },
    "3265": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%12#0",
        "box_prefixed_key%0#0"
      ]
    },
    "3266": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%12#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3267": {
      "error": "check self.box_commit_rand entry exists",
      "op": "assert // check self.box_commit_rand entry exists",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%12#0",
        "maybe_value%0#0"
      ]
    },
    "3268": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%12#0",
        "maybe_value%0#0",
        "0"
      ]
    },
    "3269": {
      "op": "extract_uint64",
      "defined_out": [
        "tmp%12#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%12#0",
        "tmp%17#0"
      ]
    },
    "3270": {
      "op": "itob",
      "defined_out": [
        "tmp%12#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%12#0",
        "tmp%18#0"
      ]
    },
    "3271": {
      "op": "==",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%19#0"
      ]
    },
    "3272": {
      "op": "assert",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0"
      ]
    },
    "3273": {
      "op": "frame_dig -1",
      "defined_out": [
        "game_id#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_id#0 (copy)"
      ]
    },
    "3275": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "encoded_value%0#0"
      ]
    },
    "3276": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "encoded_value%0#0",
        "encoded_value%0#0"
      ]
    },
    "3277": {
      "op": "frame_bury 1",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "encoded_value%0#0"
      ]
    },
    "3279": {
      "op": "bytec 4 // \"s_\"",
      "defined_out": [
        "\"s_\"",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "encoded_value%0#0",
        "\"s_\""
      ]
    },
    "3281": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "\"s_\"",
        "encoded_value%0#0"
      ]
    },
    "3282": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "box_prefixed_key%1#0"
      ]
    },
    "3283": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "box_prefixed_key%1#0",
        "box_prefixed_key%1#0"
      ]
    },
    "3284": {
      "op": "frame_bury 0",
      "defined_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "box_prefixed_key%1#0"
      ]
    },
    "3286": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%1#0",
        "box_prefixed_key%1#0 (copy)",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "box_prefixed_key%1#0",
        "box_prefixed_key%1#0 (copy)"
      ]
    },
    "3287": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "box_prefixed_key%1#0",
        "_%0#0",
        "maybe_exists%1#0"
      ]
    },
    "3288": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "box_prefixed_key%1#0",
        "maybe_exists%1#0"
      ]
    },
    "3290": {
      "error": "Box game state not found. Check if game ID exists.",
      "op": "assert // Box game state not found. Check if game ID exists.",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "box_prefixed_key%1#0"
      ]
    },
    "3291": {
      "op": "bytec_0 // \"c_\"",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "box_prefixed_key%1#0",
        "\"c_\""
      ]
    },
    "3292": {
      "op": "txn Sender",
      "defined_out": [
        "\"c_\"",
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "materialized_values%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "box_prefixed_key%1#0",
        "\"c_\"",
        "materialized_values%1#0"
      ]
    },
    "3294": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%1#0",
        "box_prefixed_key%2#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "box_prefixed_key%1#0",
        "box_prefixed_key%2#0"
      ]
    },
    "3295": {
      "op": "box_len",
      "defined_out": [
        "_%1#0",
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "maybe_exists%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "box_prefixed_key%1#0",
        "_%1#0",
        "maybe_exists%2#0"
      ]
    },
    "3296": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "box_prefixed_key%1#0",
        "maybe_exists%2#0"
      ]
    },
    "3298": {
      "error": "Box not found. Ensure the box you are trying to access was created and still exists.",
      "op": "assert // Box not found. Ensure the box you are trying to access was created and still exists.",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "box_prefixed_key%1#0"
      ]
    },
    "3299": {
      "op": "bytec_2 // \"t_\"",
      "defined_out": [
        "\"t_\"",
        "box_prefixed_key%1#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "box_prefixed_key%1#0",
        "\"t_\""
      ]
    },
    "3300": {
      "op": "box_len",
      "defined_out": [
        "_%2#0",
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "maybe_exists%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "box_prefixed_key%1#0",
        "_%2#0",
        "maybe_exists%3#0"
      ]
    },
    "3301": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "box_prefixed_key%1#0",
        "maybe_exists%3#0"
      ]
    },
    "3303": {
      "error": "Box not found. Ensure the box you are trying to access was created and still exists.",
      "op": "assert // Box not found. Ensure the box you are trying to access was created and still exists.",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "box_prefixed_key%1#0"
      ]
    },
    "3304": {
      "op": "txn Sender",
      "defined_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "box_prefixed_key%1#0",
        "tmp%20#0"
      ]
    },
    "3306": {
      "op": "dig 1",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "box_prefixed_key%1#0",
        "tmp%20#0",
        "box_prefixed_key%1#0 (copy)"
      ]
    },
    "3308": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "maybe_exists%4#0",
        "maybe_value%1#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "box_prefixed_key%1#0",
        "tmp%20#0",
        "maybe_value%1#0",
        "maybe_exists%4#0"
      ]
    },
    "3309": {
      "error": "check self.box_game_state entry exists",
      "op": "assert // check self.box_game_state entry exists",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "box_prefixed_key%1#0",
        "tmp%20#0",
        "maybe_value%1#0"
      ]
    },
    "3310": {
      "op": "intc_0 // 1",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "box_prefixed_key%1#0",
        "tmp%20#0",
        "maybe_value%1#0",
        "1"
      ]
    },
    "3311": {
      "op": "getbyte",
      "defined_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "tmp%20#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "box_prefixed_key%1#0",
        "tmp%20#0",
        "tmp%22#0"
      ]
    },
    "3312": {
      "op": "frame_dig -1",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "box_prefixed_key%1#0",
        "tmp%20#0",
        "tmp%22#0",
        "game_id#0 (copy)"
      ]
    },
    "3314": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "box_prefixed_key%1#0",
        "tmp%22#0",
        "game_id#0 (copy)",
        "tmp%20#0"
      ]
    },
    "3316": {
      "op": "bytec_3 // \"p_\"",
      "defined_out": [
        "\"p_\"",
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_id#0 (copy)",
        "tmp%20#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "box_prefixed_key%1#0",
        "tmp%22#0",
        "game_id#0 (copy)",
        "tmp%20#0",
        "\"p_\""
      ]
    },
    "3317": {
      "op": "uncover 3",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "box_prefixed_key%1#0",
        "game_id#0 (copy)",
        "tmp%20#0",
        "\"p_\"",
        "tmp%22#0"
      ]
    },
    "3319": {
      "op": "intc_0 // 1",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "box_prefixed_key%1#0",
        "game_id#0 (copy)",
        "tmp%20#0",
        "\"p_\"",
        "tmp%22#0",
        "1"
      ]
    },
    "3320": {
      "callsub": "smart_contracts.pieout.subroutines.check_acc_in_game",
      "op": "callsub check_acc_in_game",
      "defined_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "box_prefixed_key%1#0",
        "tmp%23#0"
      ]
    },
    "3323": {
      "op": "intc_0 // 1",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "box_prefixed_key%1#0",
        "tmp%23#0",
        "1"
      ]
    },
    "3324": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "box_prefixed_key%1#0",
        "tmp%24#0"
      ]
    },
    "3325": {
      "error": "Account is not recognized as an active player for this game.",
      "op": "assert // Account is not recognized as an active player for this game.",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "box_prefixed_key%1#0"
      ]
    },
    "3326": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "maybe_exists%5#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0",
        "maybe_exists%5#0"
      ]
    },
    "3327": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "maybe_exists%5#0",
        "game_state#0"
      ]
    },
    "3328": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "maybe_exists%5#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "3329": {
      "op": "cover 2",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0",
        "maybe_exists%5#0",
        "game_state#0"
      ]
    },
    "3331": {
      "op": "frame_bury 2",
      "defined_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "maybe_exists%5#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0",
        "maybe_exists%5#0"
      ]
    },
    "3333": {
      "error": "check self.box_game_state entry exists",
      "op": "assert // check self.box_game_state entry exists",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0"
      ]
    },
    "3334": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "3335": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0",
        "game_state#0 (copy)",
        "0"
      ]
    },
    "3336": {
      "op": "getbit",
      "defined_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "is_true%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0",
        "is_true%0#0"
      ]
    },
    "3337": {
      "op": "bytec_1 // 0x00",
      "defined_out": [
        "0x00",
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "is_true%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0",
        "is_true%0#0",
        "0x00"
      ]
    },
    "3338": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0",
        "is_true%0#0",
        "0x00",
        "0"
      ]
    },
    "3339": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0",
        "0x00",
        "0",
        "is_true%0#0"
      ]
    },
    "3341": {
      "op": "setbit",
      "defined_out": [
        "box_prefixed_key%1#0",
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0",
        "encoded_bool%0#0"
      ]
    },
    "3342": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0",
        "encoded_bool%0#0",
        "0"
      ]
    },
    "3343": {
      "op": "getbit",
      "defined_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0",
        "tmp%25#0"
      ]
    },
    "3344": {
      "op": "intc_0 // 1",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0",
        "tmp%25#0",
        "1"
      ]
    },
    "3345": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0",
        "tmp%26#0"
      ]
    },
    "3346": {
      "error": "Game state staking finalized value mismatch.",
      "op": "assert // Game state staking finalized value mismatch.",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0"
      ]
    },
    "3347": {
      "error": "Index access is out of bounds",
      "op": "extract 8 8 // on error: Index access is out of bounds",
      "defined_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "3350": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "reinterpret_biguint%0#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "reinterpret_biguint%0#0",
        "tmp%27#0"
      ]
    },
    "3352": {
      "op": "itob",
      "defined_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "reinterpret_biguint%0#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "reinterpret_biguint%0#0",
        "tmp%28#0"
      ]
    },
    "3353": {
      "op": "b>=",
      "defined_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%29#0"
      ]
    },
    "3354": {
      "error": "Invalid time frame. Call made outside the permitted block or timestamp range.",
      "op": "assert // Invalid time frame. Call made outside the permitted block or timestamp range.",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0"
      ]
    },
    "3355": {
      "op": "bytec_0 // \"c_\"",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "\"c_\""
      ]
    },
    "3356": {
      "op": "txn Sender",
      "defined_out": [
        "\"c_\"",
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "materialized_values%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "\"c_\"",
        "materialized_values%2#0"
      ]
    },
    "3358": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%1#0",
        "box_prefixed_key%5#0",
        "encoded_value%0#0",
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "box_prefixed_key%5#0"
      ]
    },
    "3359": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "maybe_exists%6#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "maybe_value%3#0",
        "maybe_exists%6#0"
      ]
    },
    "3360": {
      "error": "check self.box_commit_rand entry exists",
      "op": "assert // check self.box_commit_rand entry exists",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "maybe_value%3#0"
      ]
    },
    "3361": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "maybe_value%3#0",
        "0"
      ]
    },
    "3362": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%31#0"
      ]
    },
    "3363": {
      "op": "frame_dig -1",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%31#0",
        "game_id#0 (copy)"
      ]
    },
    "3365": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%32#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%32#0"
      ]
    },
    "3366": {
      "error": "Invalid Game ID. Box Commit Rand Game ID must be a certain value or match Game ID arg.",
      "op": "assert // Invalid Game ID. Box Commit Rand Game ID must be a certain value or match Game ID arg.",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0"
      ]
    },
    "3367": {
      "op": "global Round",
      "defined_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%33#0"
      ]
    },
    "3369": {
      "op": "bytec_0 // \"c_\"",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%33#0",
        "\"c_\""
      ]
    },
    "3370": {
      "op": "txn Sender",
      "defined_out": [
        "\"c_\"",
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "materialized_values%3#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%33#0",
        "\"c_\"",
        "materialized_values%3#0"
      ]
    },
    "3372": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%1#0",
        "box_prefixed_key%6#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%33#0",
        "box_prefixed_key%6#0"
      ]
    },
    "3373": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "maybe_exists%7#0",
        "maybe_value%4#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%33#0",
        "maybe_value%4#0",
        "maybe_exists%7#0"
      ]
    },
    "3374": {
      "error": "check self.box_commit_rand entry exists",
      "op": "assert // check self.box_commit_rand entry exists",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%33#0",
        "maybe_value%4#0"
      ]
    },
    "3375": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "maybe_value%4#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%33#0",
        "maybe_value%4#0",
        "8"
      ]
    },
    "3377": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%33#0",
        "tmp%35#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%33#0",
        "tmp%35#0"
      ]
    },
    "3378": {
      "op": ">=",
      "defined_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%36#0"
      ]
    },
    "3379": {
      "error": "Randomness commit round not reached yet.",
      "op": "assert // Randomness commit round not reached yet.",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0"
      ]
    },
    "3380": {
      "op": "itxn_begin"
    },
    "3381": {
      "op": "bytec_0 // \"c_\"",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "\"c_\""
      ]
    },
    "3382": {
      "op": "txn Sender",
      "defined_out": [
        "\"c_\"",
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "materialized_values%4#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "\"c_\"",
        "materialized_values%4#0"
      ]
    },
    "3384": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%1#0",
        "box_prefixed_key%7#0",
        "encoded_value%0#0",
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "box_prefixed_key%7#0"
      ]
    },
    "3385": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "maybe_exists%8#0",
        "maybe_value%5#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "maybe_value%5#0",
        "maybe_exists%8#0"
      ]
    },
    "3386": {
      "error": "check self.box_commit_rand entry exists",
      "op": "assert // check self.box_commit_rand entry exists",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "maybe_value%5#0"
      ]
    },
    "3387": {
      "op": "pushint 8 // 8",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "maybe_value%5#0",
        "8"
      ]
    },
    "3389": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "to_encode%0#0"
      ]
    },
    "3390": {
      "op": "itob",
      "defined_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "val_as_bytes%0#0"
      ]
    },
    "3391": {
      "op": "bytec 11 // 0x0020",
      "defined_out": [
        "0x0020",
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "val_as_bytes%0#0",
        "0x0020"
      ]
    },
    "3393": {
      "op": "txn Sender",
      "defined_out": [
        "0x0020",
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "to_encode%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "val_as_bytes%0#0",
        "0x0020",
        "to_encode%1#0"
      ]
    },
    "3395": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "encoded_value%3#0",
        "game_state#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "val_as_bytes%0#0",
        "encoded_value%3#0"
      ]
    },
    "3396": {
      "op": "pushint 600011887 // 600011887",
      "defined_out": [
        "600011887",
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "encoded_value%3#0",
        "game_state#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "val_as_bytes%0#0",
        "encoded_value%3#0",
        "600011887"
      ]
    },
    "3402": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "val_as_bytes%0#0",
        "encoded_value%3#0"
      ]
    },
    "3404": {
      "op": "pushbytes 0x47c20c23 // method \"must_get(uint64,byte[])byte[]\"",
      "defined_out": [
        "Method(must_get(uint64,byte[])byte[])",
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "encoded_value%3#0",
        "game_state#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "val_as_bytes%0#0",
        "encoded_value%3#0",
        "Method(must_get(uint64,byte[])byte[])"
      ]
    },
    "3410": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "val_as_bytes%0#0",
        "encoded_value%3#0"
      ]
    },
    "3412": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "encoded_value%3#0",
        "val_as_bytes%0#0"
      ]
    },
    "3413": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "encoded_value%3#0"
      ]
    },
    "3415": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0"
      ]
    },
    "3417": {
      "op": "pushint 6 // appl",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "appl"
      ]
    },
    "3419": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0"
      ]
    },
    "3421": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "0"
      ]
    },
    "3422": {
      "op": "itxn_field Fee",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0"
      ]
    },
    "3424": {
      "op": "itxn_submit"
    },
    "3425": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%0#0",
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "awst_tmp%0#0"
      ]
    },
    "3427": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)",
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "3428": {
      "op": "extract 0 4",
      "defined_out": [
        "awst_tmp%0#0",
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "awst_tmp%0#0",
        "tmp%39#0"
      ]
    },
    "3431": {
      "op": "bytec 5 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "awst_tmp%0#0",
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "awst_tmp%0#0",
        "tmp%39#0",
        "0x151f7c75"
      ]
    },
    "3433": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%40#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "awst_tmp%0#0",
        "tmp%40#0"
      ]
    },
    "3434": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "awst_tmp%0#0"
      ]
    },
    "3435": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "3436": {
      "op": "extract 6 0",
      "defined_out": [
        "awst_tmp%0#0",
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "seed#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "awst_tmp%0#0",
        "seed#0"
      ]
    },
    "3439": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "awst_tmp%0#0",
        "seed#0",
        "0"
      ]
    },
    "3440": {
      "op": "bytec 6 // \"score_id\"",
      "defined_out": [
        "\"score_id\"",
        "0",
        "awst_tmp%0#0",
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "seed#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "awst_tmp%0#0",
        "seed#0",
        "0",
        "\"score_id\""
      ]
    },
    "3442": {
      "op": "app_global_get_ex",
      "defined_out": [
        "awst_tmp%0#0",
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "maybe_exists%9#0",
        "score_id#0",
        "seed#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "awst_tmp%0#0",
        "seed#0",
        "score_id#0",
        "maybe_exists%9#0"
      ]
    },
    "3443": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "awst_tmp%0#0",
        "seed#0",
        "maybe_exists%9#0",
        "score_id#0"
      ]
    },
    "3444": {
      "op": "frame_bury 11",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "awst_tmp%0#0",
        "seed#0",
        "maybe_exists%9#0"
      ]
    },
    "3446": {
      "error": "check self.score_id exists",
      "op": "assert // check self.score_id exists",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "awst_tmp%0#0",
        "seed#0"
      ]
    },
    "3447": {
      "op": "txn Sender",
      "defined_out": [
        "awst_tmp%0#0",
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "player#0",
        "score_id#0",
        "seed#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "awst_tmp%0#0",
        "seed#0",
        "player#0"
      ]
    },
    "3449": {
      "op": "frame_bury 4",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "awst_tmp%0#0",
        "seed#0"
      ]
    },
    "3451": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "seed#0",
        "awst_tmp%0#0"
      ]
    },
    "3452": {
      "op": "extract 22 8",
      "defined_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "player#0",
        "score_id#0",
        "seed#0",
        "seed#2"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "seed#0",
        "seed#2"
      ]
    },
    "3455": {
      "op": "len",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "seed#0",
        "tmp%0#0"
      ]
    },
    "3456": {
      "op": "pushint 8 // 8",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "seed#0",
        "tmp%0#0",
        "8"
      ]
    },
    "3458": {
      "op": "==",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "seed#0",
        "tmp%1#0"
      ]
    },
    "3459": {
      "op": "assert",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "seed#0"
      ]
    },
    "3460": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "player#0",
        "score_id#0",
        "seed#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "seed#0",
        "16"
      ]
    },
    "3462": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "initial_state#0",
        "player#0",
        "score_id#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "initial_state#0"
      ]
    },
    "3463": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "initial_state#0",
        "0"
      ]
    },
    "3464": {
      "op": "intc 8 // 6364136223846793005",
      "defined_out": [
        "0",
        "6364136223846793005",
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "initial_state#0",
        "player#0",
        "score_id#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "initial_state#0",
        "0",
        "6364136223846793005"
      ]
    },
    "3466": {
      "op": "mulw",
      "defined_out": [
        "_high_mul#0",
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "initial_state#0",
        "low_mul#0",
        "player#0",
        "score_id#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "initial_state#0",
        "_high_mul#0",
        "low_mul#0"
      ]
    },
    "3467": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "initial_state#0",
        "low_mul#0"
      ]
    },
    "3469": {
      "op": "intc 9 // 1442695040888963407",
      "defined_out": [
        "1442695040888963407",
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "initial_state#0",
        "low_mul#0",
        "player#0",
        "score_id#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "initial_state#0",
        "low_mul#0",
        "1442695040888963407"
      ]
    },
    "3471": {
      "op": "addw",
      "defined_out": [
        "_high_add#0",
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "initial_state#0",
        "low_add#0",
        "player#0",
        "score_id#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "initial_state#0",
        "_high_add#0",
        "low_add#0"
      ]
    },
    "3472": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "initial_state#0",
        "low_add#0"
      ]
    },
    "3474": {
      "op": "addw",
      "defined_out": [
        "_high_addw#0",
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "player#0",
        "score_id#0",
        "state#2"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "_high_addw#0",
        "state#2"
      ]
    },
    "3475": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "state#2"
      ]
    },
    "3477": {
      "op": "intc 8 // 6364136223846793005",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "state#2",
        "6364136223846793005"
      ]
    },
    "3479": {
      "op": "mulw",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "_high_mul#0",
        "low_mul#0"
      ]
    },
    "3480": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "low_mul#0"
      ]
    },
    "3482": {
      "op": "intc 9 // 1442695040888963407",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "low_mul#0",
        "1442695040888963407"
      ]
    },
    "3484": {
      "op": "addw",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "_high_add#0",
        "low_add#0"
      ]
    },
    "3485": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "low_add#0"
      ]
    },
    "3487": {
      "op": "pushbytes 0x00ff",
      "defined_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "low_add#0",
        "player#0",
        "result#1",
        "score_id#0",
        "state#2"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "low_add#0",
        "result#1"
      ]
    },
    "3491": {
      "op": "frame_bury 5",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "low_add#0"
      ]
    },
    "3493": {
      "op": "pushint 18446744073709486080 // 18446744073709486080",
      "defined_out": [
        "18446744073709486080",
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "low_add#0",
        "player#0",
        "result#1",
        "score_id#0",
        "state#2"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "low_add#0",
        "18446744073709486080"
      ]
    },
    "3504": {
      "op": "intc_0 // 1",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "low_add#0",
        "18446744073709486080",
        "1"
      ]
    },
    "3505": {
      "op": "addw",
      "defined_out": [
        "_addw_high#0",
        "addw_low#0",
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "low_add#0",
        "player#0",
        "result#1",
        "score_id#0",
        "state#2"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "low_add#0",
        "_addw_high#0",
        "addw_low#0"
      ]
    },
    "3506": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "low_add#0",
        "addw_low#0"
      ]
    },
    "3508": {
      "op": "intc 10 // 4294967295",
      "defined_out": [
        "4294967295",
        "addw_low#0",
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "low_add#0",
        "player#0",
        "result#1",
        "score_id#0",
        "state#2"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "low_add#0",
        "addw_low#0",
        "4294967295"
      ]
    },
    "3510": {
      "op": "&",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "low_add#0",
        "tmp%0#0"
      ]
    },
    "3511": {
      "op": "intc 12 // 65535",
      "defined_out": [
        "65535",
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "low_add#0",
        "player#0",
        "result#1",
        "score_id#0",
        "state#2",
        "tmp%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "low_add#0",
        "tmp%0#0",
        "65535"
      ]
    },
    "3513": {
      "op": "%",
      "defined_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "low_add#0",
        "player#0",
        "result#1",
        "score_id#0",
        "state#2",
        "threshold#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "low_add#0",
        "threshold#0"
      ]
    },
    "3514": {
      "op": "frame_bury 13",
      "defined_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "low_add#0",
        "player#0",
        "result#1",
        "score_id#0",
        "state#2",
        "threshold#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "low_add#0"
      ]
    },
    "3516": {
      "op": "intc_1 // 0",
      "defined_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "i#0",
        "low_add#0",
        "player#0",
        "result#1",
        "score_id#0",
        "state#2",
        "threshold#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "low_add#0",
        "i#0"
      ]
    },
    "3517": {
      "op": "frame_bury 9",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "state#2"
      ]
    },
    "3519": {
      "op": "frame_bury 12",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0"
      ]
    },
    "3521": {
      "block": "play_game_for_header@13",
      "stack_in": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0"
      ],
      "op": "frame_dig 9",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "i#0"
      ]
    },
    "3523": {
      "op": "pushint 255 // 255",
      "defined_out": [
        "255",
        "i#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "i#0",
        "255"
      ]
    },
    "3526": {
      "op": "<",
      "defined_out": [
        "continue_looping%1#0",
        "i#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "continue_looping%1#0"
      ]
    },
    "3527": {
      "op": "bz play_game_after_for@18",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0"
      ]
    },
    "3530": {
      "block": "play_game_while_top@15",
      "stack_in": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0"
      ],
      "op": "frame_dig 12",
      "defined_out": [
        "state#2"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "state#2"
      ]
    },
    "3532": {
      "op": "dup",
      "defined_out": [
        "state#2",
        "state#2 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "state#2",
        "state#2 (copy)"
      ]
    },
    "3533": {
      "op": "intc 8 // 6364136223846793005",
      "defined_out": [
        "6364136223846793005",
        "state#2",
        "state#2 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "state#2",
        "state#2 (copy)",
        "6364136223846793005"
      ]
    },
    "3535": {
      "op": "mulw",
      "defined_out": [
        "_high_mul#0",
        "low_mul#0",
        "state#2"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "state#2",
        "_high_mul#0",
        "low_mul#0"
      ]
    },
    "3536": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "state#2",
        "low_mul#0"
      ]
    },
    "3538": {
      "op": "intc 9 // 1442695040888963407",
      "defined_out": [
        "1442695040888963407",
        "low_mul#0",
        "state#2"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "state#2",
        "low_mul#0",
        "1442695040888963407"
      ]
    },
    "3540": {
      "op": "addw",
      "defined_out": [
        "_high_add#0",
        "low_add#0",
        "state#2"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "state#2",
        "_high_add#0",
        "low_add#0"
      ]
    },
    "3541": {
      "op": "cover 2",
      "defined_out": [
        "_high_add#0",
        "low_add#0",
        "state#2"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "low_add#0",
        "state#2",
        "_high_add#0"
      ]
    },
    "3543": {
      "op": "pop",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "low_add#0",
        "state#2"
      ]
    },
    "3544": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "low_add#0",
        "state#2",
        "state#2 (copy)"
      ]
    },
    "3545": {
      "op": "pushint 18 // 18",
      "defined_out": [
        "18",
        "low_add#0",
        "state#2",
        "state#2 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "low_add#0",
        "state#2",
        "state#2 (copy)",
        "18"
      ]
    },
    "3547": {
      "op": "shr",
      "defined_out": [
        "low_add#0",
        "state#2",
        "tmp%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "low_add#0",
        "state#2",
        "tmp%0#0"
      ]
    },
    "3548": {
      "op": "dig 1",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "low_add#0",
        "state#2",
        "tmp%0#0",
        "state#2 (copy)"
      ]
    },
    "3550": {
      "op": "^",
      "defined_out": [
        "low_add#0",
        "state#2",
        "tmp%1#5"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "low_add#0",
        "state#2",
        "tmp%1#5"
      ]
    },
    "3551": {
      "op": "pushint 27 // 27",
      "defined_out": [
        "27",
        "low_add#0",
        "state#2",
        "tmp%1#5"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "low_add#0",
        "state#2",
        "tmp%1#5",
        "27"
      ]
    },
    "3553": {
      "op": "shr",
      "defined_out": [
        "low_add#0",
        "state#2",
        "value#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "low_add#0",
        "state#2",
        "value#0"
      ]
    },
    "3554": {
      "op": "intc 10 // 4294967295",
      "defined_out": [
        "4294967295",
        "low_add#0",
        "state#2",
        "value#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "low_add#0",
        "state#2",
        "value#0",
        "4294967295"
      ]
    },
    "3556": {
      "op": "&",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "low_add#0",
        "state#2",
        "value#0"
      ]
    },
    "3557": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "low_add#0",
        "value#0",
        "state#2"
      ]
    },
    "3558": {
      "op": "pushint 59 // 59",
      "defined_out": [
        "59",
        "low_add#0",
        "state#2",
        "value#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "low_add#0",
        "value#0",
        "state#2",
        "59"
      ]
    },
    "3560": {
      "op": "shr",
      "defined_out": [
        "low_add#0",
        "rot#0",
        "state#2",
        "value#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "low_add#0",
        "value#0",
        "rot#0"
      ]
    },
    "3561": {
      "op": "dup2",
      "defined_out": [
        "low_add#0",
        "rot#0",
        "rot#0 (copy)",
        "state#2",
        "value#0",
        "value#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "low_add#0",
        "value#0",
        "rot#0",
        "value#0 (copy)",
        "rot#0 (copy)"
      ]
    },
    "3562": {
      "op": "shr",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "low_add#0",
        "value#0",
        "rot#0",
        "tmp%0#0"
      ]
    },
    "3563": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "low_add#0",
        "value#0",
        "tmp%0#0",
        "rot#0"
      ]
    },
    "3564": {
      "op": "~",
      "defined_out": [
        "low_add#0",
        "state#2",
        "tmp%0#0",
        "tmp%0#11",
        "value#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "low_add#0",
        "value#0",
        "tmp%0#0",
        "tmp%0#11"
      ]
    },
    "3565": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "low_add#0",
        "state#2",
        "tmp%0#0",
        "tmp%0#11",
        "value#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "low_add#0",
        "value#0",
        "tmp%0#0",
        "tmp%0#11",
        "1"
      ]
    },
    "3566": {
      "op": "addw",
      "defined_out": [
        "_addw_high#0",
        "addw_low#0",
        "low_add#0",
        "state#2",
        "tmp%0#0",
        "value#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "low_add#0",
        "value#0",
        "tmp%0#0",
        "_addw_high#0",
        "addw_low#0"
      ]
    },
    "3567": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "low_add#0",
        "value#0",
        "tmp%0#0",
        "addw_low#0"
      ]
    },
    "3569": {
      "op": "pushint 31 // 31",
      "defined_out": [
        "31",
        "addw_low#0",
        "low_add#0",
        "state#2",
        "tmp%0#0",
        "value#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "low_add#0",
        "value#0",
        "tmp%0#0",
        "addw_low#0",
        "31"
      ]
    },
    "3571": {
      "op": "&",
      "defined_out": [
        "low_add#0",
        "state#2",
        "tmp%0#0",
        "tmp%2#0",
        "value#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "low_add#0",
        "value#0",
        "tmp%0#0",
        "tmp%2#0"
      ]
    },
    "3572": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "low_add#0",
        "tmp%0#0",
        "tmp%2#0",
        "value#0"
      ]
    },
    "3574": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "low_add#0",
        "tmp%0#0",
        "value#0",
        "tmp%2#0"
      ]
    },
    "3575": {
      "op": "shl",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "low_add#0",
        "tmp%0#0",
        "value#0"
      ]
    },
    "3576": {
      "op": "intc 10 // 4294967295",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "low_add#0",
        "tmp%0#0",
        "value#0",
        "4294967295"
      ]
    },
    "3578": {
      "op": "&",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "low_add#0",
        "tmp%0#0",
        "tmp%0#11"
      ]
    },
    "3579": {
      "op": "|",
      "defined_out": [
        "candidate#0",
        "low_add#0",
        "state#2"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "low_add#0",
        "candidate#0"
      ]
    },
    "3580": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "low_add#0",
        "candidate#0",
        "candidate#0"
      ]
    },
    "3581": {
      "op": "frame_bury 8",
      "defined_out": [
        "candidate#0",
        "low_add#0",
        "state#2"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "low_add#0",
        "candidate#0"
      ]
    },
    "3583": {
      "op": "frame_dig 13",
      "defined_out": [
        "candidate#0",
        "low_add#0",
        "state#2",
        "threshold#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "low_add#0",
        "candidate#0",
        "threshold#0"
      ]
    },
    "3585": {
      "op": ">=",
      "defined_out": [
        "candidate#0",
        "low_add#0",
        "state#2",
        "threshold#0",
        "tmp%20#1"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "low_add#0",
        "tmp%20#1"
      ]
    },
    "3586": {
      "op": "bz play_game_after_if_else@17",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "low_add#0"
      ]
    },
    "3589": {
      "op": "frame_dig 8",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "low_add#0",
        "candidate#0"
      ]
    },
    "3591": {
      "op": "intc 12 // 65535",
      "defined_out": [
        "65535",
        "candidate#0",
        "low_add#0",
        "state#2",
        "threshold#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "low_add#0",
        "candidate#0",
        "65535"
      ]
    },
    "3593": {
      "op": "%",
      "defined_out": [
        "candidate#0",
        "low_add#0",
        "state#2",
        "threshold#0",
        "tmp%21#2"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "low_add#0",
        "tmp%21#2"
      ]
    },
    "3594": {
      "op": "intc_0 // 1",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "low_add#0",
        "tmp%21#2",
        "1"
      ]
    },
    "3595": {
      "op": "+",
      "defined_out": [
        "candidate#0",
        "low_add#0",
        "state#2",
        "threshold#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "low_add#0",
        "tmp%22#0"
      ]
    },
    "3596": {
      "op": "itob",
      "defined_out": [
        "candidate#0",
        "low_add#0",
        "state#2",
        "threshold#0",
        "tmp%23#2"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "low_add#0",
        "tmp%23#2"
      ]
    },
    "3597": {
      "op": "extract 6 2",
      "defined_out": [
        "candidate#0",
        "low_add#0",
        "state#2",
        "threshold#0",
        "tmp%24#1"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "low_add#0",
        "tmp%24#1"
      ]
    },
    "3600": {
      "op": "frame_dig 5",
      "defined_out": [
        "candidate#0",
        "low_add#0",
        "result#1",
        "state#2",
        "threshold#0",
        "tmp%24#1"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "low_add#0",
        "tmp%24#1",
        "result#1"
      ]
    },
    "3602": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "low_add#0",
        "result#1",
        "tmp%24#1"
      ]
    },
    "3603": {
      "op": "concat",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "low_add#0",
        "result#1"
      ]
    },
    "3604": {
      "op": "frame_bury 5",
      "defined_out": [
        "candidate#0",
        "low_add#0",
        "result#1",
        "state#2",
        "threshold#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "low_add#0"
      ]
    },
    "3606": {
      "op": "frame_dig 9",
      "defined_out": [
        "candidate#0",
        "i#0",
        "low_add#0",
        "result#1",
        "state#2",
        "threshold#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "low_add#0",
        "i#0"
      ]
    },
    "3608": {
      "op": "intc_0 // 1",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "low_add#0",
        "i#0",
        "1"
      ]
    },
    "3609": {
      "op": "+",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "low_add#0",
        "i#0"
      ]
    },
    "3610": {
      "op": "frame_bury 9",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "state#2"
      ]
    },
    "3612": {
      "op": "frame_bury 12",
      "defined_out": [
        "candidate#0",
        "i#0",
        "result#1",
        "state#2",
        "threshold#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0"
      ]
    },
    "3614": {
      "op": "b play_game_for_header@13"
    },
    "3617": {
      "block": "play_game_after_if_else@17",
      "stack_in": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "low_add#0"
      ],
      "op": "frame_bury 12",
      "defined_out": [
        "state#2"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0"
      ]
    },
    "3619": {
      "op": "b play_game_while_top@15"
    },
    "3622": {
      "block": "play_game_after_for@18",
      "stack_in": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0"
      ],
      "op": "intc_1 // 0",
      "defined_out": [
        "score#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "score#0"
      ]
    },
    "3623": {
      "op": "frame_bury 10",
      "defined_out": [
        "score#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0"
      ]
    },
    "3625": {
      "op": "frame_dig 5",
      "defined_out": [
        "result#1",
        "score#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "result#1"
      ]
    },
    "3627": {
      "op": "len",
      "defined_out": [
        "result#1",
        "score#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%3#1"
      ]
    },
    "3628": {
      "op": "frame_bury 14",
      "defined_out": [
        "result#1",
        "score#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0"
      ]
    },
    "3630": {
      "op": "intc_2 // 2",
      "defined_out": [
        "i#0",
        "result#1",
        "score#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "i#0"
      ]
    },
    "3631": {
      "op": "frame_bury 9",
      "defined_out": [
        "i#0",
        "result#1",
        "score#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0"
      ]
    },
    "3633": {
      "block": "play_game_for_header@20",
      "stack_in": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0"
      ],
      "op": "frame_dig 9",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "i#0"
      ]
    },
    "3635": {
      "op": "frame_dig 14",
      "defined_out": [
        "i#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "i#0",
        "tmp%3#1"
      ]
    },
    "3637": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "continue_looping%0#0"
      ]
    },
    "3638": {
      "op": "bz play_game_after_for@23",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0"
      ]
    },
    "3641": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "i#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "2"
      ]
    },
    "3642": {
      "op": "frame_dig 14",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "2",
        "tmp%3#1"
      ]
    },
    "3644": {
      "op": "dup",
      "defined_out": [
        "2",
        "i#0",
        "tmp%3#1",
        "tmp%3#1 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "2",
        "tmp%3#1 (copy)",
        "tmp%3#1 (copy)"
      ]
    },
    "3645": {
      "op": "cover 2",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%3#1",
        "2",
        "tmp%3#1 (copy)"
      ]
    },
    "3647": {
      "op": ">=",
      "defined_out": [
        "i#0",
        "is_out_of_bounds%0#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%3#1",
        "is_out_of_bounds%0#0"
      ]
    },
    "3648": {
      "op": "intc_2 // 2",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%3#1",
        "is_out_of_bounds%0#0",
        "2"
      ]
    },
    "3649": {
      "op": "dig 2",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%3#1",
        "is_out_of_bounds%0#0",
        "2",
        "tmp%3#1 (copy)"
      ]
    },
    "3651": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%3#1",
        "2",
        "tmp%3#1 (copy)",
        "is_out_of_bounds%0#0"
      ]
    },
    "3653": {
      "op": "select",
      "defined_out": [
        "bounded_index%0#0",
        "i#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%3#1",
        "bounded_index%0#0"
      ]
    },
    "3654": {
      "op": "frame_dig 5",
      "defined_out": [
        "bounded_index%0#0",
        "i#0",
        "result#1",
        "tmp%3#1"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%3#1",
        "bounded_index%0#0",
        "result#1"
      ]
    },
    "3656": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%3#1",
        "result#1",
        "bounded_index%0#0"
      ]
    },
    "3657": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "result#1",
        "bounded_index%0#0",
        "tmp%3#1"
      ]
    },
    "3659": {
      "op": "substring3",
      "defined_out": [
        "i#0",
        "result#1",
        "tmp%3#1",
        "tmp%4#1"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%4#1"
      ]
    },
    "3660": {
      "op": "frame_dig 9",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%4#1",
        "i#0"
      ]
    },
    "3662": {
      "op": "extract_uint16",
      "defined_out": [
        "i#0",
        "result#1",
        "roll#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "roll#0"
      ]
    },
    "3663": {
      "op": "pushint 10992 // 10992",
      "defined_out": [
        "10992",
        "i#0",
        "result#1",
        "roll#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "roll#0",
        "10992"
      ]
    },
    "3666": {
      "op": "<=",
      "defined_out": [
        "i#0",
        "result#1",
        "tmp%3#1",
        "tmp%5#1"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%5#1"
      ]
    },
    "3667": {
      "op": "bnz play_game_after_for@23",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0"
      ]
    },
    "3670": {
      "op": "frame_dig 10",
      "defined_out": [
        "i#0",
        "result#1",
        "score#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "score#0"
      ]
    },
    "3672": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "i#0",
        "result#1",
        "score#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "score#0",
        "1"
      ]
    },
    "3673": {
      "op": "+",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "score#0"
      ]
    },
    "3674": {
      "op": "frame_bury 10",
      "defined_out": [
        "i#0",
        "result#1",
        "score#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0"
      ]
    },
    "3676": {
      "op": "frame_dig 9",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "i#0"
      ]
    },
    "3678": {
      "op": "intc_2 // 2",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "i#0",
        "2"
      ]
    },
    "3679": {
      "op": "+",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "i#0"
      ]
    },
    "3680": {
      "op": "frame_bury 9",
      "defined_out": [
        "i#0",
        "result#1",
        "score#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0"
      ]
    },
    "3682": {
      "op": "b play_game_for_header@20"
    },
    "3685": {
      "block": "play_game_after_for@23",
      "stack_in": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0"
      ],
      "op": "frame_dig 11",
      "defined_out": [
        "score_id#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "score_id#0"
      ]
    },
    "3687": {
      "op": "itob",
      "defined_out": [
        "score_id#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "val_as_bytes%1#0"
      ]
    },
    "3688": {
      "op": "frame_dig 10",
      "defined_out": [
        "score#0",
        "score_id#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "val_as_bytes%1#0",
        "score#0"
      ]
    },
    "3690": {
      "op": "itob",
      "defined_out": [
        "score#0",
        "score_id#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ]
    },
    "3691": {
      "op": "dup",
      "defined_out": [
        "score#0",
        "score_id#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%2#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%2#0 (copy)"
      ]
    },
    "3692": {
      "op": "bitlen",
      "defined_out": [
        "bitlen%0#0",
        "score#0",
        "score_id#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "bitlen%0#0"
      ]
    },
    "3693": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "bitlen%0#0",
        "score#0",
        "score_id#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "bitlen%0#0",
        "8"
      ]
    },
    "3695": {
      "op": "<=",
      "defined_out": [
        "no_overflow%0#0",
        "score#0",
        "score_id#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "no_overflow%0#0"
      ]
    },
    "3696": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ]
    },
    "3697": {
      "op": "extract 7 1",
      "defined_out": [
        "score#0",
        "score_id#0",
        "uint8%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "val_as_bytes%1#0",
        "uint8%0#0"
      ]
    },
    "3700": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "val_as_bytes%1#0",
        "uint8%0#0",
        "uint8%0#0"
      ]
    },
    "3701": {
      "op": "frame_bury 6",
      "defined_out": [
        "score#0",
        "score_id#0",
        "uint8%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "val_as_bytes%1#0",
        "uint8%0#0"
      ]
    },
    "3703": {
      "op": "frame_dig 1",
      "defined_out": [
        "encoded_value%0#0",
        "score#0",
        "score_id#0",
        "uint8%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "val_as_bytes%1#0",
        "uint8%0#0",
        "encoded_value%0#0"
      ]
    },
    "3705": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "uint8%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "3707": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0",
        "score#0",
        "score_id#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "uint8%0#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "3708": {
      "op": "frame_dig 4",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0",
        "player#0",
        "score#0",
        "score_id#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "uint8%0#0",
        "encoded_tuple_buffer%2#0",
        "player#0"
      ]
    },
    "3710": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "encoded_value%0#0",
        "player#0",
        "score#0",
        "score_id#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "uint8%0#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "3711": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "encoded_tuple_buffer%3#0",
        "uint8%0#0"
      ]
    },
    "3712": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%4#0",
        "encoded_value%0#0",
        "player#0",
        "score#0",
        "score_id#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "3713": {
      "op": "pushbytes 0x1cc2af51 // method \"player_score(uint64,uint64,address,uint8)\"",
      "defined_out": [
        "Method(player_score(uint64,uint64,address,uint8))",
        "encoded_tuple_buffer%4#0",
        "encoded_value%0#0",
        "player#0",
        "score#0",
        "score_id#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "encoded_tuple_buffer%4#0",
        "Method(player_score(uint64,uint64,address,uint8))"
      ]
    },
    "3719": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "Method(player_score(uint64,uint64,address,uint8))",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "3720": {
      "op": "concat",
      "defined_out": [
        "encoded_value%0#0",
        "event%0#0",
        "player#0",
        "score#0",
        "score_id#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "event%0#0"
      ]
    },
    "3721": {
      "op": "log",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0"
      ]
    },
    "3722": {
      "op": "frame_dig 2",
      "defined_out": [
        "encoded_value%0#0",
        "game_state#0",
        "player#0",
        "score#0",
        "score_id#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0"
      ]
    },
    "3724": {
      "error": "Index access is out of bounds",
      "op": "extract 56 32 // on error: Index access is out of bounds",
      "defined_out": [
        "encoded_value%0#0",
        "game_state#0",
        "player#0",
        "score#0",
        "score_id#0",
        "tmp%6#1",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%6#1"
      ]
    },
    "3727": {
      "op": "global ZeroAddress",
      "defined_out": [
        "encoded_value%0#0",
        "game_state#0",
        "player#0",
        "score#0",
        "score_id#0",
        "tmp%6#1",
        "tmp%7#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%6#1",
        "tmp%7#0"
      ]
    },
    "3729": {
      "op": "==",
      "defined_out": [
        "encoded_value%0#0",
        "game_state#0",
        "player#0",
        "score#0",
        "score_id#0",
        "tmp%8#1",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%8#1"
      ]
    },
    "3730": {
      "op": "bnz play_game_if_body@25",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0"
      ]
    },
    "3733": {
      "op": "frame_dig 2",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0"
      ]
    },
    "3735": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "encoded_value%0#0",
        "game_state#0",
        "player#0",
        "score#0",
        "score_id#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0",
        "3"
      ]
    },
    "3737": {
      "op": "getbyte",
      "defined_out": [
        "encoded_value%0#0",
        "game_state#0",
        "player#0",
        "score#0",
        "score_id#0",
        "tmp%10#1",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%10#1"
      ]
    },
    "3738": {
      "op": "frame_dig 10",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%10#1",
        "score#0"
      ]
    },
    "3740": {
      "op": "<",
      "defined_out": [
        "encoded_value%0#0",
        "game_state#0",
        "player#0",
        "score#0",
        "score_id#0",
        "tmp%11#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%11#0"
      ]
    },
    "3741": {
      "op": "bz play_game_else_body@26",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0"
      ]
    },
    "3744": {
      "block": "play_game_if_body@25",
      "stack_in": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0"
      ]
    },
    "3746": {
      "op": "dup",
      "defined_out": [
        "game_state#0",
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "3747": {
      "error": "Index access is out of bounds",
      "op": "extract 4 1 // on error: Index access is out of bounds",
      "defined_out": [
        "assigned_value%0#1",
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0",
        "assigned_value%0#1"
      ]
    },
    "3750": {
      "op": "replace2 5",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0"
      ]
    },
    "3752": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "3753": {
      "error": "Index access is out of bounds",
      "op": "extract 88 32 // on error: Index access is out of bounds",
      "defined_out": [
        "assigned_value%1#1",
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0",
        "assigned_value%1#1"
      ]
    },
    "3756": {
      "op": "replace2 120",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0"
      ]
    },
    "3758": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "3759": {
      "error": "Index access is out of bounds",
      "op": "extract 3 1 // on error: Index access is out of bounds",
      "defined_out": [
        "assigned_value%2#0",
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0",
        "assigned_value%2#0"
      ]
    },
    "3762": {
      "op": "replace2 4",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0"
      ]
    },
    "3764": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "3765": {
      "error": "Index access is out of bounds",
      "op": "extract 56 32 // on error: Index access is out of bounds",
      "defined_out": [
        "assigned_value%3#0",
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0",
        "assigned_value%3#0"
      ]
    },
    "3768": {
      "op": "replace2 88",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0"
      ]
    },
    "3770": {
      "op": "frame_dig 6",
      "defined_out": [
        "game_state#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0",
        "uint8%0#0"
      ]
    },
    "3772": {
      "op": "replace2 3",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0"
      ]
    },
    "3774": {
      "op": "frame_dig 4",
      "defined_out": [
        "game_state#0",
        "player#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0",
        "player#0"
      ]
    },
    "3776": {
      "op": "replace2 56",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0"
      ]
    },
    "3778": {
      "op": "frame_bury 2",
      "defined_out": [
        "game_state#0",
        "player#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0"
      ]
    },
    "3780": {
      "block": "play_game_after_if_else@34",
      "stack_in": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0"
      ],
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "0"
      ]
    },
    "3781": {
      "op": "bytec 6 // \"score_id\"",
      "defined_out": [
        "\"score_id\"",
        "0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "0",
        "\"score_id\""
      ]
    },
    "3783": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%10#0",
        "maybe_value%7#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "maybe_value%7#0",
        "maybe_exists%10#0"
      ]
    },
    "3784": {
      "error": "check self.score_id exists",
      "op": "assert // check self.score_id exists",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "maybe_value%7#0"
      ]
    },
    "3785": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "maybe_value%7#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "maybe_value%7#0",
        "1"
      ]
    },
    "3786": {
      "op": "+",
      "defined_out": [
        "materialized_values%5#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "materialized_values%5#0"
      ]
    },
    "3787": {
      "op": "bytec 6 // \"score_id\"",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "materialized_values%5#0",
        "\"score_id\""
      ]
    },
    "3789": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "\"score_id\"",
        "materialized_values%5#0"
      ]
    },
    "3790": {
      "op": "app_global_put",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0"
      ]
    },
    "3791": {
      "op": "frame_dig 2",
      "defined_out": [
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0"
      ]
    },
    "3793": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0",
        "3"
      ]
    },
    "3795": {
      "op": "getbyte",
      "defined_out": [
        "game_state#0",
        "tmp%44#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%44#0"
      ]
    },
    "3796": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%44#0",
        "tmp%44#0"
      ]
    },
    "3797": {
      "op": "frame_bury 15",
      "defined_out": [
        "game_state#0",
        "tmp%44#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%44#0"
      ]
    },
    "3799": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%44#0",
        "0"
      ]
    },
    "3800": {
      "op": "bytec 10 // \"ath_score\"",
      "defined_out": [
        "\"ath_score\"",
        "0",
        "game_state#0",
        "tmp%44#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%44#0",
        "0",
        "\"ath_score\""
      ]
    },
    "3802": {
      "op": "app_global_get_ex",
      "defined_out": [
        "game_state#0",
        "maybe_exists%11#0",
        "maybe_value%8#0",
        "tmp%44#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%44#0",
        "maybe_value%8#0",
        "maybe_exists%11#0"
      ]
    },
    "3803": {
      "error": "check self.ath_score exists",
      "op": "assert // check self.ath_score exists",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%44#0",
        "maybe_value%8#0"
      ]
    },
    "3804": {
      "op": ">",
      "defined_out": [
        "game_state#0",
        "tmp%44#0",
        "tmp%45#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%45#0"
      ]
    },
    "3805": {
      "op": "bz play_game_after_if_else@8",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0"
      ]
    },
    "3808": {
      "op": "bytec 10 // \"ath_score\"",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "\"ath_score\""
      ]
    },
    "3810": {
      "op": "frame_dig 15",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "\"ath_score\"",
        "tmp%44#0"
      ]
    },
    "3812": {
      "op": "app_global_put",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0"
      ]
    },
    "3813": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "0"
      ]
    },
    "3814": {
      "op": "bytec 7 // \"ath_address\"",
      "defined_out": [
        "\"ath_address\"",
        "0",
        "game_state#0",
        "tmp%44#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "0",
        "\"ath_address\""
      ]
    },
    "3816": {
      "op": "app_global_get_ex",
      "defined_out": [
        "game_state#0",
        "maybe_exists%12#0",
        "maybe_value%9#0",
        "tmp%44#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "maybe_value%9#0",
        "maybe_exists%12#0"
      ]
    },
    "3817": {
      "error": "check self.ath_address exists",
      "op": "assert // check self.ath_address exists",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "maybe_value%9#0"
      ]
    },
    "3818": {
      "op": "global ZeroAddress",
      "defined_out": [
        "game_state#0",
        "maybe_value%9#0",
        "tmp%44#0",
        "tmp%47#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "maybe_value%9#0",
        "tmp%47#0"
      ]
    },
    "3820": {
      "op": "!=",
      "defined_out": [
        "game_state#0",
        "tmp%44#0",
        "tmp%48#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%48#0"
      ]
    },
    "3821": {
      "op": "bz play_game_after_if_else@7",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0"
      ]
    },
    "3824": {
      "op": "bytec_2 // \"t_\"",
      "defined_out": [
        "\"t_\"",
        "game_state#0",
        "tmp%44#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "\"t_\""
      ]
    },
    "3825": {
      "op": "box_get",
      "defined_out": [
        "game_state#0",
        "maybe_exists%13#0",
        "maybe_value%10#0",
        "tmp%44#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "maybe_value%10#0",
        "maybe_exists%13#0"
      ]
    },
    "3826": {
      "error": "check self.box_game_trophy exists",
      "op": "assert // check self.box_game_trophy exists",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "maybe_value%10#0"
      ]
    },
    "3827": {
      "op": "dup",
      "defined_out": [
        "game_state#0",
        "maybe_value%10#0",
        "maybe_value%10#0 (copy)",
        "tmp%44#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "maybe_value%10#0",
        "maybe_value%10#0 (copy)"
      ]
    },
    "3828": {
      "error": "Index access is out of bounds",
      "op": "extract 8 32 // on error: Index access is out of bounds",
      "defined_out": [
        "game_state#0",
        "maybe_value%10#0",
        "reinterpret_bytes[32]%0#0",
        "tmp%44#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "maybe_value%10#0",
        "reinterpret_bytes[32]%0#0"
      ]
    },
    "3831": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "reinterpret_bytes[32]%0#0",
        "maybe_value%10#0"
      ]
    },
    "3832": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "reinterpret_bytes[32]%0#0",
        "maybe_value%10#0",
        "0"
      ]
    },
    "3833": {
      "op": "extract_uint64",
      "defined_out": [
        "game_state#0",
        "reinterpret_bytes[32]%0#0",
        "tmp%44#0",
        "tmp%50#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "reinterpret_bytes[32]%0#0",
        "tmp%50#0"
      ]
    },
    "3834": {
      "op": "asset_holding_get AssetBalance",
      "defined_out": [
        "asset_balance#0",
        "asset_exists#0",
        "game_state#0",
        "tmp%44#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "asset_balance#0",
        "asset_exists#0"
      ]
    },
    "3836": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "asset_exists#0",
        "asset_balance#0"
      ]
    },
    "3837": {
      "op": "frame_bury 7",
      "defined_out": [
        "asset_balance#0",
        "asset_exists#0",
        "game_state#0",
        "tmp%44#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "asset_exists#0"
      ]
    },
    "3839": {
      "op": "bz play_game_after_if_else@7",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0"
      ]
    },
    "3842": {
      "op": "frame_dig 7",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "asset_balance#0"
      ]
    },
    "3844": {
      "op": "intc_0 // 1",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "asset_balance#0",
        "1"
      ]
    },
    "3845": {
      "op": "==",
      "defined_out": [
        "asset_balance#0",
        "game_state#0",
        "tmp%44#0",
        "tmp%51#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%51#0"
      ]
    },
    "3846": {
      "op": "bz play_game_after_if_else@7",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0"
      ]
    },
    "3849": {
      "op": "bytec_2 // \"t_\"",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "\"t_\""
      ]
    },
    "3850": {
      "op": "box_get",
      "defined_out": [
        "asset_balance#0",
        "game_state#0",
        "maybe_exists%15#0",
        "maybe_value%12#0",
        "tmp%44#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "maybe_value%12#0",
        "maybe_exists%15#0"
      ]
    },
    "3851": {
      "error": "check self.box_game_trophy exists",
      "op": "assert // check self.box_game_trophy exists",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "maybe_value%12#0"
      ]
    },
    "3852": {
      "op": "dup",
      "defined_out": [
        "asset_balance#0",
        "game_state#0",
        "maybe_value%12#0",
        "maybe_value%12#0 (copy)",
        "tmp%44#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "maybe_value%12#0",
        "maybe_value%12#0 (copy)"
      ]
    },
    "3853": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "maybe_value%12#0",
        "maybe_value%12#0 (copy)",
        "0"
      ]
    },
    "3854": {
      "op": "extract_uint64",
      "defined_out": [
        "asset_balance#0",
        "asset_id#0",
        "game_state#0",
        "maybe_value%12#0",
        "tmp%44#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "maybe_value%12#0",
        "asset_id#0"
      ]
    },
    "3855": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "asset_id#0",
        "maybe_value%12#0"
      ]
    },
    "3856": {
      "error": "Index access is out of bounds",
      "op": "extract 8 32 // on error: Index access is out of bounds",
      "defined_out": [
        "asset_balance#0",
        "asset_id#0",
        "asset_sender#0",
        "game_state#0",
        "tmp%44#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "asset_id#0",
        "asset_sender#0"
      ]
    },
    "3859": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "asset_balance#0",
        "asset_id#0",
        "asset_receiver#0",
        "asset_sender#0",
        "game_state#0",
        "tmp%44#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "asset_id#0",
        "asset_sender#0",
        "asset_receiver#0"
      ]
    },
    "3861": {
      "op": "itxn_begin"
    },
    "3862": {
      "op": "pushbytes \"pieout:j{\\\"method\\\":\\\"play_game\\\",\\\"subroutine:\\\"clawback_itxn\\\",\\\"concern\\\":\\\"itxn.asset_transfer;clawback_trophy_asset\\\"}\"",
      "defined_out": [
        "\"pieout:j{\\\"method\\\":\\\"play_game\\\",\\\"subroutine:\\\"clawback_itxn\\\",\\\"concern\\\":\\\"itxn.asset_transfer;clawback_trophy_asset\\\"}\"",
        "asset_balance#0",
        "asset_id#0",
        "asset_receiver#0",
        "asset_sender#0",
        "game_state#0",
        "tmp%44#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "asset_id#0",
        "asset_sender#0",
        "asset_receiver#0",
        "\"pieout:j{\\\"method\\\":\\\"play_game\\\",\\\"subroutine:\\\"clawback_itxn\\\",\\\"concern\\\":\\\"itxn.asset_transfer;clawback_trophy_asset\\\"}\""
      ]
    },
    "3976": {
      "op": "itxn_field Note",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "asset_id#0",
        "asset_sender#0",
        "asset_receiver#0"
      ]
    },
    "3978": {
      "op": "intc_0 // 1",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "asset_id#0",
        "asset_sender#0",
        "asset_receiver#0",
        "1"
      ]
    },
    "3979": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "asset_id#0",
        "asset_sender#0",
        "asset_receiver#0"
      ]
    },
    "3981": {
      "op": "itxn_field AssetReceiver"
    },
    "3983": {
      "op": "itxn_field AssetSender",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "asset_id#0",
        "asset_receiver#0"
      ]
    },
    "3985": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0"
      ]
    },
    "3987": {
      "op": "pushint 4 // axfer",
      "defined_out": [
        "asset_balance#0",
        "axfer",
        "game_state#0",
        "tmp%44#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "axfer"
      ]
    },
    "3989": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0"
      ]
    },
    "3991": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "0"
      ]
    },
    "3992": {
      "op": "itxn_field Fee",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0"
      ]
    },
    "3994": {
      "op": "itxn_submit"
    },
    "3995": {
      "block": "play_game_after_if_else@7",
      "stack_in": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0"
      ],
      "op": "txn Sender",
      "defined_out": [
        "materialized_values%7#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "materialized_values%7#0"
      ]
    },
    "3997": {
      "op": "bytec 7 // \"ath_address\"",
      "defined_out": [
        "\"ath_address\"",
        "materialized_values%7#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "materialized_values%7#0",
        "\"ath_address\""
      ]
    },
    "3999": {
      "op": "dig 1",
      "defined_out": [
        "\"ath_address\"",
        "materialized_values%7#0",
        "materialized_values%7#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "materialized_values%7#0",
        "\"ath_address\"",
        "materialized_values%7#0 (copy)"
      ]
    },
    "4001": {
      "op": "app_global_put",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "materialized_values%7#0"
      ]
    },
    "4002": {
      "op": "bytec_2 // \"t_\"",
      "defined_out": [
        "\"t_\"",
        "materialized_values%7#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "materialized_values%7#0",
        "\"t_\""
      ]
    },
    "4003": {
      "op": "box_get",
      "defined_out": [
        "materialized_values%7#0",
        "maybe_exists%18#0",
        "maybe_value%15#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "materialized_values%7#0",
        "maybe_value%15#0",
        "maybe_exists%18#0"
      ]
    },
    "4004": {
      "error": "check self.box_game_trophy exists",
      "op": "assert // check self.box_game_trophy exists",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "materialized_values%7#0",
        "maybe_value%15#0"
      ]
    },
    "4005": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "maybe_value%15#0",
        "materialized_values%7#0"
      ]
    },
    "4006": {
      "op": "replace2 8",
      "defined_out": [
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "updated_data%0#0"
      ]
    },
    "4008": {
      "op": "bytec_2 // \"t_\"",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "updated_data%0#0",
        "\"t_\""
      ]
    },
    "4009": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "\"t_\"",
        "updated_data%0#0"
      ]
    },
    "4010": {
      "op": "box_put",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0"
      ]
    },
    "4011": {
      "block": "play_game_after_if_else@8",
      "stack_in": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0"
      ]
    },
    "4013": {
      "op": "dup",
      "defined_out": [
        "game_state#0",
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "4014": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "game_state#0",
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0",
        "game_state#0 (copy)",
        "2"
      ]
    },
    "4015": {
      "op": "getbyte",
      "defined_out": [
        "game_state#0",
        "tmp%56#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0",
        "tmp%56#0"
      ]
    },
    "4016": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "game_state#0",
        "tmp%56#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0",
        "tmp%56#0",
        "1"
      ]
    },
    "4017": {
      "op": "-",
      "defined_out": [
        "game_state#0",
        "to_encode%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0",
        "to_encode%2#0"
      ]
    },
    "4018": {
      "op": "itob",
      "defined_out": [
        "game_state#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0",
        "val_as_bytes%1#0"
      ]
    },
    "4019": {
      "op": "dup",
      "defined_out": [
        "game_state#0",
        "val_as_bytes%1#0",
        "val_as_bytes%1#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0",
        "val_as_bytes%1#0",
        "val_as_bytes%1#0 (copy)"
      ]
    },
    "4020": {
      "op": "bitlen",
      "defined_out": [
        "bitlen%0#0",
        "game_state#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0",
        "val_as_bytes%1#0",
        "bitlen%0#0"
      ]
    },
    "4021": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "bitlen%0#0",
        "game_state#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0",
        "val_as_bytes%1#0",
        "bitlen%0#0",
        "8"
      ]
    },
    "4023": {
      "op": "<=",
      "defined_out": [
        "game_state#0",
        "no_overflow%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0",
        "val_as_bytes%1#0",
        "no_overflow%0#0"
      ]
    },
    "4024": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0",
        "val_as_bytes%1#0"
      ]
    },
    "4025": {
      "op": "extract 7 1",
      "defined_out": [
        "game_state#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0",
        "uint8%0#0"
      ]
    },
    "4028": {
      "op": "replace2 2",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0"
      ]
    },
    "4030": {
      "op": "bytec_0 // \"c_\"",
      "defined_out": [
        "\"c_\"",
        "game_state#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0",
        "\"c_\""
      ]
    },
    "4031": {
      "op": "txn Sender",
      "defined_out": [
        "\"c_\"",
        "game_state#0",
        "tmp%57#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0",
        "\"c_\"",
        "tmp%57#0"
      ]
    },
    "4033": {
      "op": "intc 6 // 32000",
      "defined_out": [
        "\"c_\"",
        "32000",
        "game_state#0",
        "tmp%57#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0",
        "\"c_\"",
        "tmp%57#0",
        "32000"
      ]
    },
    "4035": {
      "callsub": "smart_contracts.pieout.subroutines.reset_box_commit_rand",
      "op": "callsub reset_box_commit_rand",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0"
      ]
    },
    "4038": {
      "op": "frame_dig -1",
      "defined_out": [
        "game_id#0 (copy)",
        "game_state#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0",
        "game_id#0 (copy)"
      ]
    },
    "4040": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_id#0 (copy)",
        "game_state#0"
      ]
    },
    "4041": {
      "op": "bytec_3 // \"p_\"",
      "defined_out": [
        "\"p_\"",
        "game_id#0 (copy)",
        "game_state#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_id#0 (copy)",
        "game_state#0",
        "\"p_\""
      ]
    },
    "4042": {
      "op": "bytec_0 // \"c_\"",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_id#0 (copy)",
        "game_state#0",
        "\"p_\"",
        "\"c_\""
      ]
    },
    "4043": {
      "callsub": "smart_contracts.pieout.subroutines.is_game_over",
      "op": "callsub is_game_over",
      "defined_out": [
        "game_state#0",
        "is_game_over%0#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "is_game_over%0#0",
        "game_state#0"
      ]
    },
    "4046": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0"
      ]
    },
    "4048": {
      "op": "frame_dig 0",
      "defined_out": [
        "box_prefixed_key%1#0",
        "game_state#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0",
        "box_prefixed_key%1#0"
      ]
    },
    "4050": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "box_prefixed_key%1#0",
        "game_state#0"
      ]
    },
    "4051": {
      "op": "box_put",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0"
      ]
    },
    "4052": {
      "retsub": true,
      "op": "retsub"
    },
    "4053": {
      "block": "play_game_else_body@26",
      "stack_in": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0"
      ]
    },
    "4055": {
      "error": "Index access is out of bounds",
      "op": "extract 88 32 // on error: Index access is out of bounds",
      "defined_out": [
        "game_state#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%12#0"
      ]
    },
    "4058": {
      "op": "global ZeroAddress",
      "defined_out": [
        "game_state#0",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%12#0",
        "tmp%13#0"
      ]
    },
    "4060": {
      "op": "==",
      "defined_out": [
        "game_state#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%14#0"
      ]
    },
    "4061": {
      "op": "bnz play_game_if_body@28",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0"
      ]
    },
    "4064": {
      "op": "frame_dig 2",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0"
      ]
    },
    "4066": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0",
        "4"
      ]
    },
    "4068": {
      "op": "getbyte",
      "defined_out": [
        "game_state#0",
        "tmp%16#1"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%16#1"
      ]
    },
    "4069": {
      "op": "frame_dig 10",
      "defined_out": [
        "game_state#0",
        "score#0",
        "tmp%16#1"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%16#1",
        "score#0"
      ]
    },
    "4071": {
      "op": "<",
      "defined_out": [
        "game_state#0",
        "score#0",
        "tmp%17#1"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%17#1"
      ]
    },
    "4072": {
      "op": "bz play_game_else_body@29",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0"
      ]
    },
    "4075": {
      "block": "play_game_if_body@28",
      "stack_in": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0"
      ]
    },
    "4077": {
      "op": "dup",
      "defined_out": [
        "game_state#0",
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "4078": {
      "error": "Index access is out of bounds",
      "op": "extract 4 1 // on error: Index access is out of bounds",
      "defined_out": [
        "assigned_value%6#0",
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0",
        "assigned_value%6#0"
      ]
    },
    "4081": {
      "op": "replace2 5",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0"
      ]
    },
    "4083": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "4084": {
      "error": "Index access is out of bounds",
      "op": "extract 88 32 // on error: Index access is out of bounds",
      "defined_out": [
        "assigned_value%7#0",
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0",
        "assigned_value%7#0"
      ]
    },
    "4087": {
      "op": "replace2 120",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0"
      ]
    },
    "4089": {
      "op": "frame_dig 6",
      "defined_out": [
        "game_state#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0",
        "uint8%0#0"
      ]
    },
    "4091": {
      "op": "replace2 4",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0"
      ]
    },
    "4093": {
      "op": "frame_dig 4",
      "defined_out": [
        "game_state#0",
        "player#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0",
        "player#0"
      ]
    },
    "4095": {
      "op": "replace2 88",
      "defined_out": [
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state%out#23"
      ]
    },
    "4097": {
      "op": "frame_bury 3",
      "defined_out": [
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0"
      ]
    },
    "4099": {
      "block": "play_game_after_if_else@33",
      "stack_in": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0"
      ]
    },
    "4101": {
      "op": "frame_bury 2",
      "defined_out": [
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0"
      ]
    },
    "4103": {
      "op": "b play_game_after_if_else@34"
    },
    "4106": {
      "block": "play_game_else_body@29",
      "stack_in": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0"
      ]
    },
    "4108": {
      "error": "Index access is out of bounds",
      "op": "extract 120 32 // on error: Index access is out of bounds",
      "defined_out": [
        "game_state#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%18#0"
      ]
    },
    "4111": {
      "op": "global ZeroAddress",
      "defined_out": [
        "game_state#0",
        "tmp%18#0",
        "tmp%19#1"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%18#0",
        "tmp%19#1"
      ]
    },
    "4113": {
      "op": "==",
      "defined_out": [
        "game_state#0",
        "tmp%20#1"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%20#1"
      ]
    },
    "4114": {
      "op": "bnz play_game_if_body@31",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0"
      ]
    },
    "4117": {
      "op": "frame_dig 2",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0"
      ]
    },
    "4119": {
      "op": "dup",
      "defined_out": [
        "game_state#0",
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "4120": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "game_state#0",
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0",
        "game_state#0 (copy)",
        "5"
      ]
    },
    "4122": {
      "op": "getbyte",
      "defined_out": [
        "game_state#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0",
        "tmp%22#0"
      ]
    },
    "4123": {
      "op": "frame_dig 10",
      "defined_out": [
        "game_state#0",
        "score#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0",
        "tmp%22#0",
        "score#0"
      ]
    },
    "4125": {
      "op": "<",
      "defined_out": [
        "game_state#0",
        "score#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0",
        "tmp%23#0"
      ]
    },
    "4126": {
      "op": "swap",
      "defined_out": [
        "game_state#0",
        "game_state%out#23",
        "score#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%23#0",
        "game_state%out#23"
      ]
    },
    "4127": {
      "op": "frame_bury 3",
      "defined_out": [
        "game_state#0",
        "game_state%out#23",
        "score#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "tmp%23#0"
      ]
    },
    "4129": {
      "op": "bz play_game_after_if_else@33",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0"
      ]
    },
    "4132": {
      "block": "play_game_if_body@31",
      "stack_in": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0"
      ]
    },
    "4134": {
      "op": "frame_dig 6",
      "defined_out": [
        "game_state#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0",
        "uint8%0#0"
      ]
    },
    "4136": {
      "op": "replace2 5",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0"
      ]
    },
    "4138": {
      "op": "frame_dig 4",
      "defined_out": [
        "game_state#0",
        "player#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state#0",
        "player#0"
      ]
    },
    "4140": {
      "op": "replace2 120",
      "defined_out": [
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0",
        "game_state%out#23"
      ]
    },
    "4142": {
      "op": "frame_bury 3",
      "defined_out": [
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#23",
        "player#0",
        "result#1",
        "uint8%0#0",
        "asset_balance#0",
        "candidate#0",
        "i#0",
        "score#0",
        "score_id#0",
        "state#2",
        "threshold#0",
        "tmp%3#1",
        "tmp%44#0"
      ]
    },
    "4144": {
      "op": "b play_game_after_if_else@33"
    },
    "4147": {
      "subroutine": "smart_contracts.pieout.contract.Pieout.trigger_game_prog",
      "params": {
        "game_id#0": "uint64",
        "trigger_id#0": "bytes"
      },
      "block": "trigger_game_prog",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "4150": {
      "op": "frame_dig -2",
      "defined_out": [
        "game_id#0 (copy)"
      ],
      "stack_out": [
        "game_id#0 (copy)"
      ]
    },
    "4152": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "4153": {
      "op": "bytec 4 // \"s_\"",
      "defined_out": [
        "\"s_\"",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "\"s_\""
      ]
    },
    "4155": {
      "op": "swap",
      "stack_out": [
        "\"s_\"",
        "encoded_value%0#0"
      ]
    },
    "4156": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "4157": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "4158": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "maybe_exists%0#0"
      ]
    },
    "4159": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%0#0",
        "game_state#0"
      ]
    },
    "4160": {
      "op": "cover 2",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "game_state#0",
        "box_prefixed_key%0#0",
        "maybe_exists%0#0"
      ]
    },
    "4162": {
      "error": "check self.box_game_state entry exists",
      "op": "assert // check self.box_game_state entry exists",
      "stack_out": [
        "game_state#0",
        "box_prefixed_key%0#0"
      ]
    },
    "4163": {
      "op": "global GroupSize",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "game_state#0",
        "box_prefixed_key%0#0",
        "tmp%0#0"
      ]
    },
    "4165": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "game_state#0",
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "1"
      ]
    },
    "4166": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "game_state#0",
        "box_prefixed_key%0#0",
        "tmp%1#0"
      ]
    },
    "4167": {
      "error": "Invalid group size. This app call can only take standalone transactions.",
      "op": "assert // Invalid group size. This app call can only take standalone transactions.",
      "stack_out": [
        "game_state#0",
        "box_prefixed_key%0#0"
      ]
    },
    "4168": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "game_state#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "game_state#0",
        "_%0#0",
        "maybe_exists%1#0"
      ]
    },
    "4169": {
      "op": "bury 1",
      "stack_out": [
        "game_state#0",
        "maybe_exists%1#0"
      ]
    },
    "4171": {
      "error": "Box game state not found. Check if game ID exists.",
      "op": "assert // Box game state not found. Check if game ID exists.",
      "stack_out": [
        "game_state#0"
      ]
    },
    "4172": {
      "op": "frame_dig -1",
      "defined_out": [
        "game_state#0",
        "trigger_id#0 (copy)"
      ],
      "stack_out": [
        "game_state#0",
        "trigger_id#0 (copy)"
      ]
    },
    "4174": {
      "op": "btoi",
      "defined_out": [
        "game_state#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "game_state#0",
        "tmp%2#0"
      ]
    },
    "4175": {
      "op": "dup",
      "stack_out": [
        "game_state#0",
        "tmp%2#0",
        "tmp%2#0"
      ]
    },
    "4176": {
      "op": "cover 2",
      "defined_out": [
        "game_state#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "game_state#0",
        "tmp%2#0"
      ]
    },
    "4178": {
      "op": "bnz trigger_game_prog_else_body@2",
      "stack_out": [
        "tmp%2#0",
        "game_state#0"
      ]
    },
    "4181": {
      "op": "dup",
      "defined_out": [
        "game_state#0",
        "game_state#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "4182": {
      "error": "Index access is out of bounds",
      "op": "extract 8 8 // on error: Index access is out of bounds",
      "defined_out": [
        "game_state#0",
        "reinterpret_biguint%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "game_state#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "4185": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "game_state#0",
        "reinterpret_biguint%0#0",
        "tmp%2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "game_state#0",
        "reinterpret_biguint%0#0",
        "tmp%4#0"
      ]
    },
    "4187": {
      "op": "itob",
      "defined_out": [
        "game_state#0",
        "reinterpret_biguint%0#0",
        "tmp%2#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "game_state#0",
        "reinterpret_biguint%0#0",
        "tmp%5#0"
      ]
    },
    "4188": {
      "op": "b<",
      "defined_out": [
        "game_state#0",
        "tmp%2#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "game_state#0",
        "tmp%6#0"
      ]
    },
    "4189": {
      "error": "Invalid time frame. Call made outside the permitted block or timestamp range.",
      "op": "assert // Invalid time frame. Call made outside the permitted block or timestamp range.",
      "stack_out": [
        "tmp%2#0",
        "game_state#0"
      ]
    },
    "4190": {
      "callsub": "smart_contracts.pieout.subroutines.is_game_live",
      "op": "callsub is_game_live",
      "defined_out": [
        "game_state#0",
        "is_game_live#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "is_game_live#0",
        "game_state#0"
      ]
    },
    "4193": {
      "op": "pop",
      "stack_out": [
        "tmp%2#0",
        "is_game_live#0"
      ]
    },
    "4194": {
      "op": "swap"
    },
    "4195": {
      "retsub": true,
      "op": "retsub"
    },
    "4196": {
      "block": "trigger_game_prog_else_body@2",
      "stack_in": [
        "tmp%2#0",
        "game_state#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "game_state#0",
        "tmp%2#0"
      ]
    },
    "4198": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "game_state#0",
        "tmp%2#0",
        "2"
      ]
    },
    "4199": {
      "op": "==",
      "defined_out": [
        "tmp%2#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "game_state#0",
        "tmp%8#0"
      ]
    },
    "4200": {
      "error": "Game event not found. Check if game event Trigger ID exists",
      "op": "assert // Game event not found. Check if game event Trigger ID exists",
      "defined_out": [
        "game_state#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "game_state#0"
      ]
    },
    "4201": {
      "op": "dup",
      "defined_out": [
        "game_state#0",
        "game_state#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "4202": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "game_state#0",
        "game_state#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "game_state#0",
        "game_state#0 (copy)",
        "0"
      ]
    },
    "4203": {
      "op": "getbit",
      "defined_out": [
        "game_state#0",
        "is_true%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "game_state#0",
        "is_true%0#0"
      ]
    },
    "4204": {
      "op": "bytec_1 // 0x00",
      "defined_out": [
        "0x00",
        "game_state#0",
        "is_true%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "game_state#0",
        "is_true%0#0",
        "0x00"
      ]
    },
    "4205": {
      "op": "intc_1 // 0",
      "stack_out": [
        "tmp%2#0",
        "game_state#0",
        "is_true%0#0",
        "0x00",
        "0"
      ]
    },
    "4206": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%2#0",
        "game_state#0",
        "0x00",
        "0",
        "is_true%0#0"
      ]
    },
    "4208": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%0#0",
        "game_state#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "game_state#0",
        "encoded_bool%0#0"
      ]
    },
    "4209": {
      "op": "intc_1 // 0",
      "stack_out": [
        "tmp%2#0",
        "game_state#0",
        "encoded_bool%0#0",
        "0"
      ]
    },
    "4210": {
      "op": "getbit",
      "defined_out": [
        "game_state#0",
        "tmp%2#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "game_state#0",
        "tmp%9#0"
      ]
    },
    "4211": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "game_state#0",
        "tmp%2#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "game_state#0",
        "tmp%9#0",
        "1"
      ]
    },
    "4212": {
      "op": "==",
      "defined_out": [
        "game_state#0",
        "tmp%10#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "game_state#0",
        "tmp%10#0"
      ]
    },
    "4213": {
      "error": "Game state staking finalized value mismatch.",
      "op": "assert // Game state staking finalized value mismatch.",
      "stack_out": [
        "tmp%2#0",
        "game_state#0"
      ]
    },
    "4214": {
      "op": "dup",
      "stack_out": [
        "tmp%2#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "4215": {
      "error": "Index access is out of bounds",
      "op": "extract 8 8 // on error: Index access is out of bounds",
      "defined_out": [
        "game_state#0",
        "reinterpret_biguint%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "game_state#0",
        "reinterpret_biguint%1#0"
      ]
    },
    "4218": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "game_state#0",
        "reinterpret_biguint%1#0",
        "tmp%11#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "game_state#0",
        "reinterpret_biguint%1#0",
        "tmp%11#0"
      ]
    },
    "4220": {
      "op": "itob",
      "defined_out": [
        "game_state#0",
        "reinterpret_biguint%1#0",
        "tmp%12#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "game_state#0",
        "reinterpret_biguint%1#0",
        "tmp%12#0"
      ]
    },
    "4221": {
      "op": "b<",
      "defined_out": [
        "game_state#0",
        "tmp%13#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "game_state#0",
        "tmp%13#0"
      ]
    },
    "4222": {
      "error": "Invalid time frame. Call made outside the permitted block or timestamp range.",
      "op": "assert // Invalid time frame. Call made outside the permitted block or timestamp range.",
      "stack_out": [
        "tmp%2#0",
        "game_state#0"
      ]
    },
    "4223": {
      "op": "frame_dig -2",
      "defined_out": [
        "game_id#0 (copy)",
        "game_state#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "game_state#0",
        "game_id#0 (copy)"
      ]
    },
    "4225": {
      "op": "swap",
      "stack_out": [
        "tmp%2#0",
        "game_id#0 (copy)",
        "game_state#0"
      ]
    },
    "4226": {
      "op": "bytec_3 // \"p_\"",
      "defined_out": [
        "\"p_\"",
        "game_id#0 (copy)",
        "game_state#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "game_id#0 (copy)",
        "game_state#0",
        "\"p_\""
      ]
    },
    "4227": {
      "op": "bytec_0 // \"c_\"",
      "defined_out": [
        "\"c_\"",
        "\"p_\"",
        "game_id#0 (copy)",
        "game_state#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "game_id#0 (copy)",
        "game_state#0",
        "\"p_\"",
        "\"c_\""
      ]
    },
    "4228": {
      "callsub": "smart_contracts.pieout.subroutines.is_game_over",
      "op": "callsub is_game_over",
      "defined_out": [
        "game_state#0",
        "is_game_over#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "is_game_over#0",
        "game_state#0"
      ]
    },
    "4231": {
      "op": "pop",
      "stack_out": [
        "tmp%2#0",
        "is_game_over#0"
      ]
    },
    "4232": {
      "op": "swap"
    },
    "4233": {
      "retsub": true,
      "op": "retsub"
    },
    "4234": {
      "subroutine": "smart_contracts.pieout.contract.Pieout.reset_game",
      "params": {
        "game_id#0": "uint64",
        "stake_pay#0": "uint64"
      },
      "block": "reset_game",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "4237": {
      "op": "global GroupSize",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "4239": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "2"
      ]
    },
    "4240": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "4241": {
      "error": "Invalid group size. Ensure number of transaction in group is within valid bounds.",
      "op": "assert // Invalid group size. Ensure number of transaction in group is within valid bounds.",
      "stack_out": []
    },
    "4242": {
      "op": "frame_dig -2",
      "defined_out": [
        "game_id#0 (copy)"
      ],
      "stack_out": [
        "game_id#0 (copy)"
      ]
    },
    "4244": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "4245": {
      "op": "bytec 4 // \"s_\"",
      "defined_out": [
        "\"s_\"",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "\"s_\""
      ]
    },
    "4247": {
      "op": "dig 1",
      "defined_out": [
        "\"s_\"",
        "encoded_value%0#0",
        "encoded_value%0#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "\"s_\"",
        "encoded_value%0#0 (copy)"
      ]
    },
    "4249": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "4250": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "4251": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "_%0#0",
        "maybe_exists%0#0"
      ]
    },
    "4252": {
      "op": "bury 1",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "maybe_exists%0#0"
      ]
    },
    "4254": {
      "error": "Box game state not found. Check if game ID exists.",
      "op": "assert // Box game state not found. Check if game ID exists.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "4255": {
      "op": "frame_dig -1",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "stake_pay#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "stake_pay#0 (copy)"
      ]
    },
    "4257": {
      "op": "gtxns Sender",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%2#0"
      ]
    },
    "4259": {
      "op": "txn Sender",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "4261": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%4#0"
      ]
    },
    "4262": {
      "error": "Stake payment sender address must match transaction sender address.",
      "op": "assert // Stake payment sender address must match transaction sender address.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "4263": {
      "op": "frame_dig -1",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "stake_pay#0 (copy)"
      ]
    },
    "4265": {
      "op": "gtxns Receiver",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%5#0"
      ]
    },
    "4267": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%5#0",
        "tmp%6#0"
      ]
    },
    "4269": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%7#0"
      ]
    },
    "4270": {
      "error": "Stake payment receiver address must match application address.",
      "op": "assert // Stake payment receiver address must match application address.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "4271": {
      "op": "frame_dig -1",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "stake_pay#0 (copy)"
      ]
    },
    "4273": {
      "op": "gtxns Amount",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%8#0"
      ]
    },
    "4275": {
      "op": "intc 4 // 1000",
      "defined_out": [
        "1000",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%8#0",
        "1000"
      ]
    },
    "4277": {
      "op": ">=",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%9#0"
      ]
    },
    "4278": {
      "error": "Insufficient funds. Stake pay amount is not enough to cover staking requirements.",
      "op": "assert // Insufficient funds. Stake pay amount is not enough to cover staking requirements.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "4279": {
      "op": "dup",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "4280": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "maybe_exists%1#0"
      ]
    },
    "4281": {
      "error": "check self.box_game_state entry exists",
      "op": "assert // check self.box_game_state entry exists",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "4282": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "4283": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_state#0 (copy)",
        "0"
      ]
    },
    "4284": {
      "op": "getbit",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "is_true%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "is_true%0#0"
      ]
    },
    "4285": {
      "op": "bytec_1 // 0x00",
      "defined_out": [
        "0x00",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "is_true%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "is_true%0#0",
        "0x00"
      ]
    },
    "4286": {
      "op": "intc_1 // 0",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "is_true%0#0",
        "0x00",
        "0"
      ]
    },
    "4287": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "0x00",
        "0",
        "is_true%0#0"
      ]
    },
    "4289": {
      "op": "setbit",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "game_state#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "encoded_bool%0#0"
      ]
    },
    "4290": {
      "op": "intc_1 // 0",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "encoded_bool%0#0",
        "0"
      ]
    },
    "4291": {
      "op": "getbit",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%10#0"
      ]
    },
    "4292": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%10#0",
        "1"
      ]
    },
    "4293": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%11#0"
      ]
    },
    "4294": {
      "error": "Game state staking finalized value mismatch.",
      "op": "assert // Game state staking finalized value mismatch.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "4295": {
      "op": "dup",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "4296": {
      "error": "Index access is out of bounds",
      "op": "extract 24 32 // on error: Index access is out of bounds",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%12#0"
      ]
    },
    "4299": {
      "op": "txn Sender",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%12#0",
        "tmp%13#0"
      ]
    },
    "4301": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%14#0"
      ]
    },
    "4302": {
      "error": "Account is not recognized as the admin address for this game.",
      "op": "assert // Account is not recognized as the admin address for this game.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "4303": {
      "op": "dup",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "4304": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_state#0 (copy)",
        "16"
      ]
    },
    "4306": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%16#0"
      ]
    },
    "4307": {
      "op": "!",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%17#0"
      ]
    },
    "4308": {
      "error": "Prize pool not empty. Amount in prize pool must be zero.",
      "op": "assert // Prize pool not empty. Amount in prize pool must be zero.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "4309": {
      "op": "dup",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "4310": {
      "op": "intc_2 // 2",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_state#0 (copy)",
        "2"
      ]
    },
    "4311": {
      "op": "getbyte",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%19#0"
      ]
    },
    "4312": {
      "op": "!",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%20#0"
      ]
    },
    "4313": {
      "error": "Game lobby not empty. Number of active players must be zero.",
      "op": "assert // Game lobby not empty. Number of active players must be zero.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "4314": {
      "op": "bytec_3 // \"p_\"",
      "defined_out": [
        "\"p_\"",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "\"p_\""
      ]
    },
    "4315": {
      "op": "uncover 3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "\"p_\"",
        "encoded_value%0#0"
      ]
    },
    "4317": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_players_bref#0",
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_players_bref#0"
      ]
    },
    "4318": {
      "op": "intc_1 // 0"
    },
    "4319": {
      "op": "txn Sender",
      "defined_out": [
        "0",
        "box_prefixed_key%0#0",
        "game_players_bref#0",
        "game_state#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_players_bref#0",
        "0",
        "tmp%22#0"
      ]
    },
    "4321": {
      "op": "box_replace",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "4322": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "0"
      ]
    },
    "4323": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "0",
        "0"
      ]
    },
    "4324": {
      "op": "setbit",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "4325": {
      "op": "pushbytes 0x01",
      "defined_out": [
        "0x01",
        "box_prefixed_key%0#0",
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "0x01"
      ]
    },
    "4328": {
      "op": "replace2 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "4330": {
      "op": "bytec_1 // 0x00",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "0x00"
      ]
    },
    "4331": {
      "op": "replace2 3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "4333": {
      "op": "bytec_1 // 0x00",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "0x00"
      ]
    },
    "4334": {
      "op": "replace2 4",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "4336": {
      "op": "bytec_1 // 0x00",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "0x00"
      ]
    },
    "4337": {
      "op": "replace2 5",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "4339": {
      "op": "bytec 11 // 0x0020",
      "defined_out": [
        "0x0020",
        "box_prefixed_key%0#0",
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "0x0020"
      ]
    },
    "4341": {
      "op": "replace2 6",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "4343": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%23#0"
      ]
    },
    "4345": {
      "op": "intc 5 // 3600",
      "defined_out": [
        "3600",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%23#0",
        "3600"
      ]
    },
    "4347": {
      "op": "+",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "to_encode%0#0"
      ]
    },
    "4348": {
      "op": "itob",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "val_as_bytes%0#0"
      ]
    },
    "4349": {
      "op": "replace2 8",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "4351": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "4352": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_state#0 (copy)",
        "16"
      ]
    },
    "4354": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%25#0"
      ]
    },
    "4355": {
      "op": "intc 4 // 1000",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%25#0",
        "1000"
      ]
    },
    "4357": {
      "op": "+",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "to_encode%1#0"
      ]
    },
    "4358": {
      "op": "itob",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "val_as_bytes%1#0"
      ]
    },
    "4359": {
      "op": "replace2 16",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "4361": {
      "op": "global ZeroAddress",
      "defined_out": [
        "assigned_value%8#0",
        "box_prefixed_key%0#0",
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "assigned_value%8#0"
      ]
    },
    "4363": {
      "op": "replace2 56",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "4365": {
      "op": "global ZeroAddress",
      "defined_out": [
        "assigned_value%9#0",
        "box_prefixed_key%0#0",
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "assigned_value%9#0"
      ]
    },
    "4367": {
      "op": "replace2 88",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "4369": {
      "op": "global ZeroAddress",
      "defined_out": [
        "assigned_value%10#0",
        "box_prefixed_key%0#0",
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "assigned_value%10#0"
      ]
    },
    "4371": {
      "op": "replace2 120",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "4373": {
      "op": "box_put",
      "stack_out": []
    },
    "4374": {
      "retsub": true,
      "op": "retsub"
    },
    "4375": {
      "subroutine": "smart_contracts.pieout.contract.Pieout.delete_game",
      "params": {
        "game_id#0": "uint64"
      },
      "block": "delete_game",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "4378": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "4380": {
      "op": "frame_dig -1",
      "defined_out": [
        "game_id#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "game_id#0 (copy)"
      ]
    },
    "4382": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0"
      ]
    },
    "4383": {
      "op": "dup",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "encoded_value%0#0"
      ]
    },
    "4384": {
      "op": "bytec 4 // \"s_\"",
      "defined_out": [
        "\"s_\"",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "encoded_value%0#0",
        "\"s_\""
      ]
    },
    "4386": {
      "op": "swap",
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "\"s_\"",
        "encoded_value%0#0"
      ]
    },
    "4387": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "4388": {
      "op": "dupn 2",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "4390": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "maybe_exists%0#0"
      ]
    },
    "4391": {
      "op": "swap",
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0",
        "maybe_exists%0#0",
        "game_state#0"
      ]
    },
    "4392": {
      "op": "dup",
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0",
        "maybe_exists%0#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "4393": {
      "op": "cover 3",
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "box_prefixed_key%0#0",
        "maybe_exists%0#0",
        "game_state#0"
      ]
    },
    "4395": {
      "op": "cover 3",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_state#0",
        "box_prefixed_key%0#0",
        "maybe_exists%0#0"
      ]
    },
    "4397": {
      "error": "check self.box_game_state entry exists",
      "op": "assert // check self.box_game_state entry exists",
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_state#0",
        "box_prefixed_key%0#0"
      ]
    },
    "4398": {
      "op": "global GroupSize",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_state#0",
        "box_prefixed_key%0#0",
        "tmp%0#0"
      ]
    },
    "4400": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_state#0",
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "1"
      ]
    },
    "4401": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_state#0",
        "box_prefixed_key%0#0",
        "tmp%1#0"
      ]
    },
    "4402": {
      "error": "Invalid group size. This app call can only take standalone transactions.",
      "op": "assert // Invalid group size. This app call can only take standalone transactions.",
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_state#0",
        "box_prefixed_key%0#0"
      ]
    },
    "4403": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_state#0",
        "_%0#0",
        "maybe_exists%1#0"
      ]
    },
    "4404": {
      "op": "bury 1",
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_state#0",
        "maybe_exists%1#0"
      ]
    },
    "4406": {
      "error": "Box game state not found. Check if game ID exists.",
      "op": "assert // Box game state not found. Check if game ID exists.",
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_state#0"
      ]
    },
    "4407": {
      "op": "txn Sender",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_state#0",
        "tmp%2#0"
      ]
    },
    "4409": {
      "op": "swap",
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "game_state#0"
      ]
    },
    "4410": {
      "error": "Index access is out of bounds",
      "op": "extract 24 32 // on error: Index access is out of bounds",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "reinterpret_bytes[32]%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%2#0",
        "reinterpret_bytes[32]%0#0"
      ]
    },
    "4413": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%3#0"
      ]
    },
    "4414": {
      "op": "bnz delete_game_bool_true@2",
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "4417": {
      "op": "txn Sender",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%4#0"
      ]
    },
    "4419": {
      "op": "global CreatorAddress",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "4421": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0"
      ]
    },
    "4422": {
      "op": "bz delete_game_bool_false@3",
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "4425": {
      "block": "delete_game_bool_true@2",
      "stack_in": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0"
      ],
      "op": "intc_0 // 1",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "or_result%0#0"
      ]
    },
    "4426": {
      "block": "delete_game_bool_merge@4",
      "stack_in": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "or_result%0#0"
      ],
      "error": "Account is not authorized to make this call.",
      "op": "assert // Account is not authorized to make this call.",
      "defined_out": [],
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "4427": {
      "op": "frame_dig 3",
      "defined_out": [
        "game_state#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_state#0"
      ]
    },
    "4429": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "game_state#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_state#0",
        "2"
      ]
    },
    "4430": {
      "op": "getbyte",
      "defined_out": [
        "game_state#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%8#0"
      ]
    },
    "4431": {
      "op": "dup",
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%8#0",
        "tmp%8#0"
      ]
    },
    "4432": {
      "op": "frame_bury 0",
      "defined_out": [
        "game_state#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%8#0"
      ]
    },
    "4434": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "game_state#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%8#0",
        "1"
      ]
    },
    "4435": {
      "op": "==",
      "defined_out": [
        "game_state#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%9#0"
      ]
    },
    "4436": {
      "op": "bz delete_game_else_body@6",
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "4439": {
      "op": "frame_dig 2",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "box_prefixed_key%0#0"
      ]
    },
    "4441": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "maybe_exists%3#0",
        "maybe_value%2#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "maybe_value%2#0",
        "maybe_exists%3#0"
      ]
    },
    "4442": {
      "error": "check self.box_game_state entry exists",
      "op": "assert // check self.box_game_state entry exists",
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "maybe_value%2#0"
      ]
    },
    "4443": {
      "error": "Index access is out of bounds",
      "op": "extract 24 32 // on error: Index access is out of bounds",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "reinterpret_bytes[32]%1#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "reinterpret_bytes[32]%1#0"
      ]
    },
    "4446": {
      "op": "frame_dig -1",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_id#0 (copy)",
        "game_state#0",
        "reinterpret_bytes[32]%1#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "reinterpret_bytes[32]%1#0",
        "game_id#0 (copy)"
      ]
    },
    "4448": {
      "op": "swap",
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_id#0 (copy)",
        "reinterpret_bytes[32]%1#0"
      ]
    },
    "4449": {
      "op": "bytec_3 // \"p_\"",
      "defined_out": [
        "\"p_\"",
        "box_prefixed_key%0#0",
        "game_id#0 (copy)",
        "game_state#0",
        "reinterpret_bytes[32]%1#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_id#0 (copy)",
        "reinterpret_bytes[32]%1#0",
        "\"p_\""
      ]
    },
    "4450": {
      "op": "intc_0 // 1",
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_id#0 (copy)",
        "reinterpret_bytes[32]%1#0",
        "\"p_\"",
        "1"
      ]
    },
    "4451": {
      "op": "intc_1 // 0",
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_id#0 (copy)",
        "reinterpret_bytes[32]%1#0",
        "\"p_\"",
        "1",
        "0"
      ]
    },
    "4452": {
      "callsub": "smart_contracts.pieout.subroutines.check_acc_in_game",
      "op": "callsub check_acc_in_game",
      "defined_out": [
        "acc_in_game#1",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "acc_in_game#1"
      ]
    },
    "4455": {
      "op": "intc_0 // 1",
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "acc_in_game#1",
        "1"
      ]
    },
    "4456": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%10#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%10#0"
      ]
    },
    "4457": {
      "error": "Game admin address must be sole remaining active player in the game.",
      "op": "assert // Game admin address must be sole remaining active player in the game.",
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "4458": {
      "op": "txn Sender",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%11#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%11#0"
      ]
    },
    "4460": {
      "op": "frame_dig 3",
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%11#0",
        "game_state#0"
      ]
    },
    "4462": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%11#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%11#0",
        "game_state#0",
        "16"
      ]
    },
    "4464": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%11#0",
        "tmp%13#0"
      ]
    },
    "4465": {
      "op": "pushbytes \"pieout:j{\\\"method\\\":\\\"delete_game\\\",\\\"concern\\\":\\\"itxn.pay;prize_pool_admin_stake\\\"}\"",
      "defined_out": [
        "\"pieout:j{\\\"method\\\":\\\"delete_game\\\",\\\"concern\\\":\\\"itxn.pay;prize_pool_admin_stake\\\"}\"",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%11#0",
        "tmp%13#0",
        "\"pieout:j{\\\"method\\\":\\\"delete_game\\\",\\\"concern\\\":\\\"itxn.pay;prize_pool_admin_stake\\\"}\""
      ]
    },
    "4543": {
      "callsub": "smart_contracts.pieout.subroutines.payout_itxn",
      "op": "callsub payout_itxn",
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "4546": {
      "block": "delete_game_after_if_else@7",
      "stack_in": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "box_prefixed_key%0#0"
      ]
    },
    "4548": {
      "op": "box_del",
      "defined_out": [
        "box_prefixed_key%0#0",
        "{box_del}"
      ],
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "{box_del}"
      ]
    },
    "4549": {
      "op": "pop",
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "4550": {
      "op": "bytec_3 // \"p_\"",
      "defined_out": [
        "\"p_\"",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "\"p_\""
      ]
    },
    "4551": {
      "op": "frame_dig 1",
      "defined_out": [
        "\"p_\"",
        "box_prefixed_key%0#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "\"p_\"",
        "encoded_value%0#0"
      ]
    },
    "4553": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%5#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "box_prefixed_key%5#0"
      ]
    },
    "4554": {
      "op": "box_del",
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "{box_del}"
      ]
    },
    "4555": {
      "op": "pop",
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "4556": {
      "op": "frame_dig 3",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_state#0"
      ]
    },
    "4558": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_state#0",
        "1"
      ]
    },
    "4559": {
      "op": "getbyte",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%21#0"
      ]
    },
    "4560": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%21#0",
        "32"
      ]
    },
    "4561": {
      "op": "*",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "to_encode%0#0"
      ]
    },
    "4562": {
      "op": "itob",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "val_as_bytes%0#0"
      ]
    },
    "4563": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "val_as_bytes%0#0",
        "val_as_bytes%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "val_as_bytes%0#0",
        "val_as_bytes%0#0 (copy)"
      ]
    },
    "4564": {
      "op": "bitlen",
      "defined_out": [
        "bitlen%0#0",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "val_as_bytes%0#0",
        "bitlen%0#0"
      ]
    },
    "4565": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "bitlen%0#0",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "val_as_bytes%0#0",
        "bitlen%0#0",
        "16"
      ]
    },
    "4567": {
      "op": "<=",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "no_overflow%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "val_as_bytes%0#0",
        "no_overflow%0#0"
      ]
    },
    "4568": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "val_as_bytes%0#0"
      ]
    },
    "4569": {
      "op": "extract 6 2",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "uint16%0#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "uint16%0#0"
      ]
    },
    "4572": {
      "op": "pushbytes 0x0a",
      "defined_out": [
        "0x0a",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "uint16%0#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "uint16%0#0",
        "0x0a"
      ]
    },
    "4575": {
      "op": "swap",
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "0x0a",
        "uint16%0#0"
      ]
    },
    "4576": {
      "callsub": "smart_contracts.pieout.contract.Pieout.calc_single_box_cost",
      "op": "callsub calc_single_box_cost",
      "defined_out": [
        "box_p_cost#0",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "box_p_cost#0"
      ]
    },
    "4579": {
      "op": "txn Sender",
      "defined_out": [
        "box_p_cost#0",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "box_p_cost#0",
        "tmp%22#0"
      ]
    },
    "4581": {
      "op": "intc 11 // 67300",
      "defined_out": [
        "67300",
        "box_p_cost#0",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "box_p_cost#0",
        "tmp%22#0",
        "67300"
      ]
    },
    "4583": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%22#0",
        "67300",
        "box_p_cost#0"
      ]
    },
    "4585": {
      "op": "+",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%22#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%22#0",
        "tmp%23#0"
      ]
    },
    "4586": {
      "op": "pushbytes \"pieout:j{\\\"method\\\":\\\"delete_game\\\",\\\"concern\\\":\\\"itxn.pay;box_s_mbr_refund+box_p_mbr_refund\\\"}\"",
      "defined_out": [
        "\"pieout:j{\\\"method\\\":\\\"delete_game\\\",\\\"concern\\\":\\\"itxn.pay;box_s_mbr_refund+box_p_mbr_refund\\\"}\"",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%22#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%22#0",
        "tmp%23#0",
        "\"pieout:j{\\\"method\\\":\\\"delete_game\\\",\\\"concern\\\":\\\"itxn.pay;box_s_mbr_refund+box_p_mbr_refund\\\"}\""
      ]
    },
    "4675": {
      "callsub": "smart_contracts.pieout.subroutines.payout_itxn",
      "op": "callsub payout_itxn",
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "4678": {
      "retsub": true,
      "op": "retsub"
    },
    "4679": {
      "block": "delete_game_else_body@6",
      "stack_in": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%8#0"
      ]
    },
    "4681": {
      "op": "!",
      "defined_out": [
        "tmp%16#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%16#0"
      ]
    },
    "4682": {
      "error": "Game lobby not empty. Number of active players must be zero.",
      "op": "assert // Game lobby not empty. Number of active players must be zero.",
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "4683": {
      "op": "frame_dig 3",
      "defined_out": [
        "game_state#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_state#0"
      ]
    },
    "4685": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "game_state#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_state#0",
        "16"
      ]
    },
    "4687": {
      "op": "extract_uint64",
      "defined_out": [
        "game_state#0",
        "tmp%18#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%18#0"
      ]
    },
    "4688": {
      "op": "!",
      "defined_out": [
        "game_state#0",
        "tmp%19#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%19#0"
      ]
    },
    "4689": {
      "error": "Prize pool not empty. Amount in prize pool must be zero.",
      "op": "assert // Prize pool not empty. Amount in prize pool must be zero.",
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "4690": {
      "op": "b delete_game_after_if_else@7"
    },
    "4693": {
      "block": "delete_game_bool_false@3",
      "stack_in": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0"
      ],
      "op": "intc_1 // 0",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "or_result%0#0"
      ]
    },
    "4694": {
      "op": "b delete_game_bool_merge@4"
    },
    "4697": {
      "subroutine": "smart_contracts.pieout.contract.Pieout.terminate",
      "params": {},
      "block": "terminate",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "4700": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "asset_balance#0"
      ]
    },
    "4702": {
      "op": "intc 14 // TMPL_DELETABLE",
      "defined_out": [
        "TMPL_DELETABLE"
      ],
      "stack_out": [
        "asset_balance#0",
        "TMPL_DELETABLE"
      ]
    },
    "4704": {
      "error": "Template variable 'DELETABLE' needs to be 'True' at deploy-time.",
      "op": "assert // Template variable 'DELETABLE' needs to be 'True' at deploy-time.",
      "stack_out": [
        "asset_balance#0"
      ]
    },
    "4705": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "asset_balance#0",
        "tmp%0#0"
      ]
    },
    "4707": {
      "op": "global CreatorAddress",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "asset_balance#0",
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "4709": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "asset_balance#0",
        "tmp%2#0"
      ]
    },
    "4710": {
      "error": "Account must match application creator address.",
      "op": "assert // Account must match application creator address.",
      "stack_out": [
        "asset_balance#0"
      ]
    },
    "4711": {
      "op": "bytec_2 // \"t_\"",
      "defined_out": [
        "\"t_\""
      ],
      "stack_out": [
        "asset_balance#0",
        "\"t_\""
      ]
    },
    "4712": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "asset_balance#0",
        "_%0#0",
        "maybe_exists%0#0"
      ]
    },
    "4713": {
      "op": "bury 1",
      "stack_out": [
        "asset_balance#0",
        "maybe_exists%0#0"
      ]
    },
    "4715": {
      "op": "bz terminate_after_if_else@5",
      "stack_out": [
        "asset_balance#0"
      ]
    },
    "4718": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "asset_balance#0",
        "tmp%3#0"
      ]
    },
    "4720": {
      "op": "bytec_2 // \"t_\"",
      "stack_out": [
        "asset_balance#0",
        "tmp%3#0",
        "\"t_\""
      ]
    },
    "4721": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "asset_balance#0",
        "tmp%3#0",
        "maybe_value%0#0",
        "maybe_exists%1#0"
      ]
    },
    "4722": {
      "error": "check self.box_game_trophy exists",
      "op": "assert // check self.box_game_trophy exists",
      "stack_out": [
        "asset_balance#0",
        "tmp%3#0",
        "maybe_value%0#0"
      ]
    },
    "4723": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "maybe_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "asset_balance#0",
        "tmp%3#0",
        "maybe_value%0#0",
        "0"
      ]
    },
    "4724": {
      "op": "extract_uint64",
      "defined_out": [
        "tmp%3#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "asset_balance#0",
        "tmp%3#0",
        "tmp%5#0"
      ]
    },
    "4725": {
      "op": "asset_holding_get AssetBalance",
      "defined_out": [
        "asset_balance#0",
        "asset_exists#0"
      ],
      "stack_out": [
        "asset_balance#0",
        "asset_balance#0",
        "asset_exists#0"
      ]
    },
    "4727": {
      "op": "swap",
      "stack_out": [
        "asset_balance#0",
        "asset_exists#0",
        "asset_balance#0"
      ]
    },
    "4728": {
      "op": "frame_bury 0",
      "defined_out": [
        "asset_balance#0",
        "asset_exists#0"
      ],
      "stack_out": [
        "asset_balance#0",
        "asset_exists#0"
      ]
    },
    "4730": {
      "op": "bz terminate_after_if_else@4",
      "stack_out": [
        "asset_balance#0"
      ]
    },
    "4733": {
      "op": "frame_dig 0",
      "stack_out": [
        "asset_balance#0",
        "asset_balance#0"
      ]
    },
    "4735": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "asset_balance#0"
      ],
      "stack_out": [
        "asset_balance#0",
        "asset_balance#0",
        "1"
      ]
    },
    "4736": {
      "op": "==",
      "defined_out": [
        "asset_balance#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "asset_balance#0",
        "tmp%6#0"
      ]
    },
    "4737": {
      "op": "bz terminate_after_if_else@4",
      "stack_out": [
        "asset_balance#0"
      ]
    },
    "4740": {
      "op": "bytec_2 // \"t_\"",
      "stack_out": [
        "asset_balance#0",
        "\"t_\""
      ]
    },
    "4741": {
      "op": "box_get",
      "defined_out": [
        "asset_balance#0",
        "maybe_exists%2#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "asset_balance#0",
        "maybe_value%1#0",
        "maybe_exists%2#0"
      ]
    },
    "4742": {
      "error": "check self.box_game_trophy exists",
      "op": "assert // check self.box_game_trophy exists",
      "stack_out": [
        "asset_balance#0",
        "maybe_value%1#0"
      ]
    },
    "4743": {
      "op": "intc_1 // 0",
      "stack_out": [
        "asset_balance#0",
        "maybe_value%1#0",
        "0"
      ]
    },
    "4744": {
      "op": "extract_uint64",
      "defined_out": [
        "asset_balance#0",
        "asset_id#0"
      ],
      "stack_out": [
        "asset_balance#0",
        "asset_id#0"
      ]
    },
    "4745": {
      "op": "itxn_begin"
    },
    "4746": {
      "op": "pushbytes \"pieout:j{\\\"method\\\":\\\"terminate\\\",\\\"concern\\\":\\\"itxn.asset_config;burn_trophy_asset\\\"}\"",
      "defined_out": [
        "\"pieout:j{\\\"method\\\":\\\"terminate\\\",\\\"concern\\\":\\\"itxn.asset_config;burn_trophy_asset\\\"}\"",
        "asset_balance#0",
        "asset_id#0"
      ],
      "stack_out": [
        "asset_balance#0",
        "asset_id#0",
        "\"pieout:j{\\\"method\\\":\\\"terminate\\\",\\\"concern\\\":\\\"itxn.asset_config;burn_trophy_asset\\\"}\""
      ]
    },
    "4826": {
      "op": "itxn_field Note",
      "stack_out": [
        "asset_balance#0",
        "asset_id#0"
      ]
    },
    "4828": {
      "op": "itxn_field ConfigAsset",
      "stack_out": [
        "asset_balance#0"
      ]
    },
    "4830": {
      "op": "pushint 3 // acfg",
      "defined_out": [
        "acfg",
        "asset_balance#0"
      ],
      "stack_out": [
        "asset_balance#0",
        "acfg"
      ]
    },
    "4832": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "asset_balance#0"
      ]
    },
    "4834": {
      "op": "intc_1 // 0",
      "stack_out": [
        "asset_balance#0",
        "0"
      ]
    },
    "4835": {
      "op": "itxn_field Fee",
      "stack_out": [
        "asset_balance#0"
      ]
    },
    "4837": {
      "op": "itxn_submit"
    },
    "4838": {
      "block": "terminate_after_if_else@4",
      "stack_in": [
        "asset_balance#0"
      ],
      "op": "bytec_2 // \"t_\"",
      "defined_out": [
        "\"t_\""
      ],
      "stack_out": [
        "asset_balance#0",
        "\"t_\""
      ]
    },
    "4839": {
      "op": "box_del",
      "defined_out": [
        "{box_del}"
      ],
      "stack_out": [
        "asset_balance#0",
        "{box_del}"
      ]
    },
    "4840": {
      "op": "pop",
      "stack_out": [
        "asset_balance#0"
      ]
    },
    "4841": {
      "block": "terminate_after_if_else@5",
      "stack_in": [
        "asset_balance#0"
      ],
      "op": "itxn_begin"
    },
    "4842": {
      "op": "txn Sender",
      "defined_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ],
      "stack_out": [
        "asset_balance#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "4844": {
      "op": "dup",
      "defined_out": [
        "inner_txn_params%0%%param_CloseRemainderTo_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ],
      "stack_out": [
        "asset_balance#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_CloseRemainderTo_idx_0#0"
      ]
    },
    "4845": {
      "op": "pushbytes 0x7069656f75743a6a7b226d6574686f64223a227465726d696e617465222c22636f6e6365726e223a226974786e2e7061793b636c6f73655f72656d61696e6465725f746f227d",
      "defined_out": [
        "0x7069656f75743a6a7b226d6574686f64223a227465726d696e617465222c22636f6e6365726e223a226974786e2e7061793b636c6f73655f72656d61696e6465725f746f227d",
        "inner_txn_params%0%%param_CloseRemainderTo_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ],
      "stack_out": [
        "asset_balance#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_CloseRemainderTo_idx_0#0",
        "0x7069656f75743a6a7b226d6574686f64223a227465726d696e617465222c22636f6e6365726e223a226974786e2e7061793b636c6f73655f72656d61696e6465725f746f227d"
      ]
    },
    "4917": {
      "op": "itxn_field Note",
      "stack_out": [
        "asset_balance#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_CloseRemainderTo_idx_0#0"
      ]
    },
    "4919": {
      "op": "itxn_field CloseRemainderTo",
      "stack_out": [
        "asset_balance#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "4921": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ],
      "stack_out": [
        "asset_balance#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "0"
      ]
    },
    "4922": {
      "op": "itxn_field Amount",
      "stack_out": [
        "asset_balance#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "4924": {
      "op": "itxn_field Receiver",
      "stack_out": [
        "asset_balance#0"
      ]
    },
    "4926": {
      "op": "intc_0 // pay",
      "defined_out": [
        "pay"
      ],
      "stack_out": [
        "asset_balance#0",
        "pay"
      ]
    },
    "4927": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "asset_balance#0"
      ]
    },
    "4929": {
      "op": "intc_1 // 0",
      "stack_out": [
        "asset_balance#0",
        "0"
      ]
    },
    "4930": {
      "op": "itxn_field Fee",
      "stack_out": [
        "asset_balance#0"
      ]
    },
    "4932": {
      "op": "itxn_submit"
    },
    "4933": {
      "retsub": true,
      "op": "retsub"
    }
  }
}