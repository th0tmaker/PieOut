{
  "version": 3,
  "sources": [
    "../../../.venv/Lib/site-packages/lib_pcg/pcg32.py",
    "../../pieout/contract.py",
    "../../pieout/subroutines.py"
  ],
  "mappings": "AC6BA;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAi5BK;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAvYA;;AAAA;AAAA;AAAA;;AAAA;AA1gBL;;;AAAA;AA0gBK;;;AAAA;;AApDA;;AAAA;AAAA;AAAA;;AAAA;AAtdL;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAsdK;;;AAAA;;AA7CA;;AAAA;AAAA;AAAA;;AAAA;AAzaL;;;AAAA;AAAA;;;AAyaK;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AA1EA;;AAAA;AAAA;AAAA;;AAAA;AA/VL;;;AAAA;AA+VK;;;AAAA;;AAxBA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AApCA;;AAAA;AAAA;AAAA;;AAAA;AAnSL;;;AAAA;AAmSK;;;AAAA;;AA7EA;;AAAA;AAAA;AAAA;;AAAA;AAtNL;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAsNK;;;AAAA;;AA3EA;;AAAA;AAAA;AAAA;;AAAA;AA3IL;;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA2IK;;;AAAA;;AAdA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAfA;;AAAA;AAAA;AAAA;;AAAA;AA9GL;;;AAAA;AA8GK;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AA5BA;;AAAA;AAAA;AAAA;;AAAA;AAlFL;;;AAAA;AAkFK;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AALA;;AAAA;AAAA;AAAA;;AAAA;AAEU;;AAFV;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAfA;;AAAA;AAAA;AAAA;;AAAA;AA9DL;;;AAAA;;;AA8DK;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AA/CA;;AAAA;AAAA;AAAA;;AAAA;AAfL;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAeK;;;AAAA;;ACrBL;;;;;;AAQI;;AAAqC;AAAf;AAGD;AAGL;AAAP;;AAAA;;AAAA;;;;;AAAb;;;AAEwD;;AAAA;AAAjB;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAA/B;;AAA6D;AAAzC;AAGjB;;AAAA;AAAX;;;AACiC;AAArB;;AAGZ;;AAAA;;;AAEgB;;AAAA;;AAAuB;;AAAvB;;;;;;;AAMZ;;AAAA;AAjBS;;AAA+B;AAA/B;AAAA;;;;;AAuGb;;;AAIQ;;AAAA;;;AAAuB;;AAAvB;AAAA;AAAA;;;AACG;;AAAA;;;AAA6B;;AAAA;;;AAA7B;AADH;;;AAIA;;AAAA;AAAA;AAAA;AAAA;;AAII;;AAA0B;;AAA1B;AADmB;AAAvB;;AAAA;AAAA;;;AAAA;;AAOI;AAAA;AAAA;AAAA;AAAA;;AAAA;AACA;;AAAA;;;AAHJ;AAAA;;;;;;AAAA;AAAA;AAAA;AAMO;;;AAAP;;AAAA;AAEO;AAAP;;AAAA;AAER;;;AAEO;;AAAY;;AAAZ;AAAP;;;AACQ;;;;;;;;;;;;;AAAA;;;AAAA;;;AAAA;;AAOR;;;AAIQ;;AAAA;;;AAAuB;;AAAvB;AAAA;AAAA;;;AACG;;AAAA;AAAA;AADH;;;AAKuB;;AAAA;AAAA;AAAnB;AAAA;AADwB;AAAX;;AAAA;AAAjB;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAKA;;AAA4B;AAA5B;;;AAAA;;AAKI;;;AACA;;AAAA;;;AACA;;AAAA;;;AACA;;AAAA;;;AALJ;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;;;;AAAA;AAAA;AAAA;AASiB;;AAAA;;AAAA;AAAA;AAA+B;;AAA/B;AAA6C;;AAA7C;AACA;;AAA+B;;AAA/B;AAA6C;;AAA7C;AACA;;AAAA;;AAAA;AAAjB;;AAAiB;AAGjB;;AAAA;;AAA4D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAA5D;;;AACA;;AAAA;;AAA6D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAA7D;;;AAC4D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAA5D;;;AAGA;;AAAwB;;AAAxB;;AAAA;;AAgBO;;;AAAP;;AAAA;AAEO;AAAP;;AAAA;ADzLR;;;AAOe;;AAAA;;AAAoB;;;AAApB;AAAP;AACO;;AAAA;;AAAoB;;AAApB;AAAP;AAEI;;AAAA;;AAAsB;;AAAtB;AADJ;AAIO;;AAAA;;AAAmB;;AAAnB;AAAP;AACO;;AAAA;;AAAmB;;AAAnB;AAAP;AAEI;;AAAA;;AAAqB;;AAArB;AADJ;AAIY;AAQA;;AAED;;;;;;;;AALQ;;;AADN;;;AADE;;;;;;;;;;;;;;;;;;;;;;;AADD;;;;;;;;AADJ;;;AADE;;;;AAAA;;;AAAA;AAcZ;;;;;;AAAA;;;AAcR;;;AAQY;;AAAA;AAAkB;;AAAA;AAAlB;AADO;;;AAAA;AAKJ;;;AAAA;AAAP;AAQR;;;AAIY;;AAAA;AADS;AAAA;;AAAA;AAAA;AAAA;AAQL;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AACA;;AAAA;;;AACA;;AAAA;;;AACA;;AAAA;;;AACA;;AAAA;;;AACA;;AAAA;;;AACA;;AAAA;;;AACA;;AAAA;;;AACA;;AAAA;;;AACA;;AAAA;;;AACA;;AAAA;;;AACA;;AAAA;;;AACA;;AAAA;;;AAfD;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAP;AAoBR;;;;;AAG6C;;AAAA;AAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAEL;;;;AAAA;AACS;AAAH;AAAP;;AAAA;;AAAA;AAAjB;;;AACY;;AAAA;;AAAgD;AAA5B;AAApB;AAAA;;AACwB;;AAArB;;;;;AAAf;;;AAEgB;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;;;;;AAJC;;AAA+B;AAA/B;AAAA;;;;;AAMT;;AAAA;;AAAA;AAQO;;AAAc;;AAAd;AAAP;AAGA;;AAAe;AAAf;AACA;;AAA2B;AAA3B;AACA;;AAAiB;AAAjB;AACA;;AAAmB;;AAAnB;;AAGR;;;AAUe;;AAAqB;;AAArB;AAAP;AAEO;;AAAe;;AAAf;AAAP;AAEO;;AAAA;;AAAA;AAAoB;;AAApB;AAAP;AACO;;AAAA;;AAAoB;;AAApB;AAAP;AACO;;AAAA;;AAAoB;;AAApB;AAAP;AACO;;AAAA;;AAEoB;AAAA;;AAAA;AAAZ;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AADF;;;AADc;AAAA;;;AAApB;;AAAA;AAAP;AAKO;;AAAA;;AAAoB;;AAApB;AAAP;AACO;;AAAA;;AAAoB;;AAApB;AAAP;AACO;;AAAA;;AAAoB;;AAApB;AAAP;AACO;;AAAA;;AAAoB;;AAApB;AAAP;AAGI;;AAAA;;AAAsB;;AAAtB;AADJ;AAII;;AAAA;;AAAsB;;AAAtB;AADJ;AAII;;AAAA;;AAAsB;;AAAtB;AADJ;AAII;;AAAA;;AAAsB;;AAAtB;AADJ;AAOgB;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAMU;;AAA0B;;AAA1B;AAAZ;AACC;;AAAA;AACkB;;AACI;;AACC;;AAXhB;AADc;;AAAA;AAGjB;;;AAHiB;AAId;AAJc;AAKb;AALa;AAMd;AANc;AAOhB;;AAPgB;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAhB;AAAA;;AAAA;AAAA;AAAA;AAApB;AAAA;AAAA;AAAA;AAAA;AAiBsC;AAAhB;AAAA;;AAAA;AAAA;AAAA;AAAtB;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAGA;AAAqB;;AAArB;AACiB;;AADjB;AAMmD;AAAA;;AAAA;AAAA;AAAR;AAAnC;AADR;AACQ;AAEkB;AAAG;;AAA7B;AAGA;AAAA;;AAAA;AAAA;AAAgB;AAAhB;AAAA;;AAAA;AAAA;;AAGR;;;AAQe;;AAAqB;;AAArB;AAAP;AACO;;AAAA;AAAW;AAAX;;AAAA;AAAA;AAAA;AAAA;;AAAP;AAEO;;AAAA;;AAAoB;;AAApB;AAAP;AACO;;AAAA;;AAAoB;;AAApB;AAAP;AAEI;;AAAA;;AAAsB;;AAAtB;AADJ;AAIO;;AAAA;;AAAA;AAAoB;;;;AAApB;AAAP;AACO;;AAAA;;AAAoB;;AAApB;AAAP;AAEI;;AAAA;;AAAsB;;AAAtB;AADJ;AAKa;;AAAA;AAAA;AAQQ;;AAAA;AAAA;AAAA;AAAA;AAHjB;;AAEqB;AAFrB;;AAIiB;AAJjB;;;AAAA;AADJ;AAUO;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAP;AACO;AAAA;;;AAAwB;;AAAxB;AAAA;AAAP;AACO;AAAA;;;AAA6B;;AAAA;;;AAA7B;AAAP;AAEI;AAAA;;AAAA;AACqB;;AAAA;AAAA;AAAnB;AAAA;AADF;;AAAA;AADJ;AAOQ;AADR;;AACQ;AAEqD;;AAA7D;AAAA;;AAAA;AAGA;AAAqB;;AAArB;AACiB;;AADjB;AAKuC;AAAA;AAAA;AAAmC;AAAnC;AAAX;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAA5B;;AAII;AAAA;;AAAA;AAAoC;AAApC;AADyB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAA7B;;AAMI;AAAA;;AAAA;AAAA;;AAAA;AADoB;AAAxB;;AAKA;;;AAAA;;AAGA;;AAGR;;;AAMe;;AAAA;AAAW;AAAX;AAAA;AAAA;AAAA;AAAA;;AAAP;AACqB;AAAd;;AAAA;AAAA;AAAA;;AAAP;AAEO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAkD;AAAlD;AAAP;AAMqB;AAAA;AAAA;AAAA;AAHjB;;AAEqB;AAFrB;;AAIiB;AAJjB;;;AAMG;AANH;AADJ;AAYiC;;AAAoB;;AAAR;AAAZ;AAAV;;;AAAnB;AAA2E;;AAA3E;AACE;;AADF;AAKW;;AAAA;AAIE;AADjB;AAAqB;;AAArB;AAAA;AAAA;;AAQO;;AAAqB;AAArB;AAAP;AACqB;AAAd;;AAAA;AAAA;AAAA;;AAAP;AASI;AAAqB;;AAArB;AAAJ;;AAGA;AACa;;AAEJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AADE;;;;;;AAFX;;;AAAA;;;AAAA;;AAQR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMe;;AAAqB;AAArB;AAAP;AACO;;AAAA;AAAA;AAAA;;AAAW;AAAX;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAP;AACqB;AAAd;;AAAA;AAAA;AAAA;;AAAP;AAMqB;AAAA;AAAA;AAAA;AAAA;AAHjB;;AAEqB;AAFrB;;AAIiB;AAJjB;;;AAMG;AANH;AADJ;AAWa;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAKN;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAgC;AAAhC;AAAP;AACO;;;AAAwB;;AAAxB;AAAA;AAAP;AAuBwB;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAEb;;AAAA;;AACF;;AC/WW;AAAA;;;AF9CjB;AAAe;;AAAf;AAAP;;;AAEoB;AAoIC;AAkHe;;AAAf;AAAA;;AAtPc;;AAuPd;AAAA;;AAlHD;AAAA;;AAiHgB;;AAAf;AAAA;;AAtPc;;AAuPd;AAAA;;AAxEX;;;;AAAA;;AA8FqB;;;;;;;;;;;AAAQ;AAAhB;AAAA;;AAQP;;AAAT;AAjFkB;;AAET;AAAZ;;AAES;AAAL;;;;AAAK;;AErJF;;;AFqJE;AAAjB;;;AA8CyB;;AAAA;AAAe;;AAAf;AAAA;;AAfM;;AAgBN;AAAA;;AAAA;AASE;AAAS;;AAAT;AAAD;;AAAA;AAA0B;;AAA3B;AAqBL;;AAAT;AArB8C;AAAS;;AAAT;AAO7C;AAAA;AAMuB;AAAA;AAAQ;AAAhB;AAAA;;AANiD;;AAArB;AAAV;;AAAA;AAAA;AAczB;;AAAT;AAdA;AAAA;AAAA;;AA5DQ;;AAAA;AAAnB;;;AAEiC;;AATJ;;AASI;AE5Jb;AF4JY;AAAR;AADM;;;AAAV;;AAAA;AAAA;AAAA;;AAJH;;AAAA;AAAA;AAAA;;;;;;;;;;;;AEjJL;AAAR;;AAGmB;;AAAA;AAAA;;AAAH;AAAZ;;AAAK;;AAAA;;AAAA;AAAb;;;AAEiC;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAzB;;AAAO;AAGI;;;AAAR;AAAX;;;AAIQ;;AAAS;AAAT;AAAA;;AATK;;AAAiC;AAAjC;AAAA;;;;;AAeL;;AAAA;AAEA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AALJ;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;;;AAAA;AAAA;AAAA;AASW;;AAAA;;AAAA;AAAR;AAAP;;;AAEQ;;AAAA;AAA+B;;;AAA/B;;AACA;AAAiC;;;AAAjC;;AAEA;AAAgC;;;AAAhC;;AACA;AAAkC;;;AAAlC;;AAEA;;AAAA;;AACA;;AAAA;;AAAA;;ADuUA;AAAA;;AAAA;AAAA;AAA4B;AAA5B;AAAA;;AAAA;AAAA;AAGG;;AAAA;;AAAA;AAAA;AAAA;;AAAsC;AAAA;;AAAA;AAAA;AAAtC;AAAX;;;AACY;;AAAA;;AAAA;AACA;;AAAmB;;AAAnB;AAGmC;;AAAA;AAAA;AAAA;AAAmC;AAAnC;AAAX;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAA5B;;AAGA;;AAAA;AAAsC;AAAtC;;;AAAA;;AAGA;;AAAA;AAAA;;ACnVQ;;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;AAAR;;AAAA;AAAA;;;AAC4B;;AAAA;;;AAAX;;AAAA;AADjB;;;AAIA;;AAAA;;AAAA;;AACA;AAAiC;;;AAAjC;;AAEA;;AAAA;;AACA;;AAAA;;;;;;;;;;;AAEQ;;AAAA;AAAA;;AAAA;AAAR;;AAAA;;;;AAAA;;;AAC4B;;AAAA;AAAA;;;AAAX;;AAAA;;;;AADjB;;;AAE4B;;AAAA;AAAA;;;AAAX;;AAAA;;;;AAFjB;;;AAKA;;AAAA;;AAAA;;AACA;;AAAA;;;;;;;ADsUR;;;AAGe;;AAAqB;AAArB;AAAP;AACO;;AAAA;AAAW;AAAX;AAAA;AAAA;AAAA;AAAA;;AAAP;AAGa;AAAA;AAKV;;AAAA;AAAA;AAAX;;;AAKiC;;AAAA;AAAA;AAAA;AAHjB;;AAEqB;AAFrB;;AAIiB;AAJjB;;;AAMG;AANH;AADJ;AAWe;;;AAAA;AACf;;AAAA;AAGC;;AAAwB;AAAxB;AAAb;AACmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAgC;AAAhC;AAAP;AACO;AAAA;;;AAAuB;;AAAvB;AAAA;AAAP;AAEI;;;AAA8B;;AAA9B;AAAA;;;AACG;;AAAA;;;AAAkC;;AAAlC;AADH;;;AAEG;;AAAA;;;AAAmC;;AAAnC;AAFH;;;AAGG;;AAAA;;;AAAkC;;AAAlC;AAHH;;;;AADJ;AAQe;;AAAA;;AAAsC;AAAtC;;;AAAA;AACf;;AAAA;;;;;AAKZ;;;AAOe;;AAAqB;AAArB;AAAP;AACO;;AAAA;AAAW;AAAX;;AAAA;AAAA;AAAA;AAAA;;AAAP;AAEO;;AAAA;;AAAoB;;AAApB;AAAP;AAEI;;AAAA;;AAAsB;;AAAtB;AADJ;AAGO;;AAAA;;AAAoB;;AAApB;AAAP;AAGa;AAAA;AAAA;AAKN;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAgC;AAAhC;AAAP;AACO;AAAA;;;AAA8B;;AAA9B;AAAP;AACO;AAAA;;AAAA;AAAA;AAAP;AACO;AAAA;AAAA;AAAA;AAAP;AAIQ;AADR;;AACQ;AAEkB;AAAG;;AAA7B;AAEA;AAAA;AAAA;AAC4B;;;AAA5B;;AAC+B;AAA/B;;AACgC;AAAhC;;AAC+B;AAA/B;;AAC6B;;AAA7B;;AAEI;;AAA0B;;AAA1B;AADmB;AAAvB;;AAII;AAAA;;AAAA;AAA+B;;AAA/B;AADoB;AAAxB;;AAG8C;;AAA9C;;AAC+C;;AAA/C;;AAC8C;;AAA9C;;AAGA;;AAER;;;AAMe;;AAAqB;AAArB;AAAP;AACO;;AAAA;AAAA;AAAW;AAAX;AAAA;AAAA;;AAAA;AAAA;;AAAP;AAGa;AAAA;AAAA;AAAA;;AAAA;AAKN;AAAA;;;AAA8B;;AAA9B;AAAP;AAIG;AAAA;AAAA;AAAoC;AAApC;AAAX;;;AACY;;AAEqB;AACJ;AACA;AAJI;;;AAQQ;AAAtB;AAAP;AAG6B;;AAAa;;AAAA;;AAAA;AACzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AADjB;;;AAQJ;;AAAA;;AACI;AAAA;;AAAA;AAAJ;;AAK8C;;AAAA;AAAA;AAAnB;AAAA;AAAZ;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AADF;;;AADb;AAAY;;;AAMiB;;AAAa;;AAAA;;AAAA;AACrB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AADrB;;;;AAdW;;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAA;AAAP;;;;AAsWG;;AAAc;;AAAd;AAAP;AACO;;AAAP;",
  "op_pc_offset": 2,
  "pc_events": {
    "0": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%0#2"
      ]
    },
    "2": {
      "op": "bz main_after_if_else@20",
      "stack_out": []
    },
    "5": {
      "op": "pushbytess 0x4a2c6f7b 0x137d1094 0xb66d2f56 0x627a73af 0x7401ca83 0x5be219f0 0x02470a1d 0xa10cd103 0x642beee8 0x62cd6e4a 0x1a789ed0 0x0c558d9a 0x102875e7 0x1898a02e 0x5ff16da4 // method \"create_trophy(pay,pay)void\", method \"calc_single_box_fee(uint8,uint16)uint64\", method \"read_gen_unix()uint64\", method \"read_game_state(uint64)(uint64,bool,uint8,uint8,uint8,uint8,uint8,uint16,uint64,uint64,address,address,address,address)\", method \"read_game_players(uint64)address[]\", method \"generate()void\", method \"new_game(uint64,pay,pay,pay,pay)void\", method \"join_game(uint64,pay,pay)void\", method \"commit_rand(uint64)void\", method \"del_box_commit_rand()void\", method \"play_game(uint64)void\", method \"check_game_event(uint64,uint8)bool\", method \"reset_game(uint64,pay)void\", method \"delete_game(uint64)void\", method \"terminate()void\"",
      "defined_out": [
        "Method(calc_single_box_fee(uint8,uint16)uint64)",
        "Method(check_game_event(uint64,uint8)bool)",
        "Method(commit_rand(uint64)void)",
        "Method(create_trophy(pay,pay)void)",
        "Method(del_box_commit_rand()void)",
        "Method(delete_game(uint64)void)",
        "Method(generate()void)",
        "Method(join_game(uint64,pay,pay)void)",
        "Method(new_game(uint64,pay,pay,pay,pay)void)",
        "Method(play_game(uint64)void)",
        "Method(read_game_players(uint64)address[])",
        "Method(read_game_state(uint64)(uint64,bool,uint8,uint8,uint8,uint8,uint8,uint16,uint64,uint64,address,address,address,address))",
        "Method(read_gen_unix()uint64)",
        "Method(reset_game(uint64,pay)void)",
        "Method(terminate()void)"
      ],
      "stack_out": [
        "Method(create_trophy(pay,pay)void)",
        "Method(calc_single_box_fee(uint8,uint16)uint64)",
        "Method(read_gen_unix()uint64)",
        "Method(read_game_state(uint64)(uint64,bool,uint8,uint8,uint8,uint8,uint8,uint16,uint64,uint64,address,address,address,address))",
        "Method(read_game_players(uint64)address[])",
        "Method(generate()void)",
        "Method(new_game(uint64,pay,pay,pay,pay)void)",
        "Method(join_game(uint64,pay,pay)void)",
        "Method(commit_rand(uint64)void)",
        "Method(del_box_commit_rand()void)",
        "Method(play_game(uint64)void)",
        "Method(check_game_event(uint64,uint8)bool)",
        "Method(reset_game(uint64,pay)void)",
        "Method(delete_game(uint64)void)",
        "Method(terminate()void)"
      ]
    },
    "82": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(calc_single_box_fee(uint8,uint16)uint64)",
        "Method(check_game_event(uint64,uint8)bool)",
        "Method(commit_rand(uint64)void)",
        "Method(create_trophy(pay,pay)void)",
        "Method(del_box_commit_rand()void)",
        "Method(delete_game(uint64)void)",
        "Method(generate()void)",
        "Method(join_game(uint64,pay,pay)void)",
        "Method(new_game(uint64,pay,pay,pay,pay)void)",
        "Method(play_game(uint64)void)",
        "Method(read_game_players(uint64)address[])",
        "Method(read_game_state(uint64)(uint64,bool,uint8,uint8,uint8,uint8,uint8,uint16,uint64,uint64,address,address,address,address))",
        "Method(read_gen_unix()uint64)",
        "Method(reset_game(uint64,pay)void)",
        "Method(terminate()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(create_trophy(pay,pay)void)",
        "Method(calc_single_box_fee(uint8,uint16)uint64)",
        "Method(read_gen_unix()uint64)",
        "Method(read_game_state(uint64)(uint64,bool,uint8,uint8,uint8,uint8,uint8,uint16,uint64,uint64,address,address,address,address))",
        "Method(read_game_players(uint64)address[])",
        "Method(generate()void)",
        "Method(new_game(uint64,pay,pay,pay,pay)void)",
        "Method(join_game(uint64,pay,pay)void)",
        "Method(commit_rand(uint64)void)",
        "Method(del_box_commit_rand()void)",
        "Method(play_game(uint64)void)",
        "Method(check_game_event(uint64,uint8)bool)",
        "Method(reset_game(uint64,pay)void)",
        "Method(delete_game(uint64)void)",
        "Method(terminate()void)",
        "tmp%2#0"
      ]
    },
    "85": {
      "op": "match main_create_trophy_route@5 main_calc_single_box_fee_route@6 main_read_gen_unix_route@7 main_read_game_state_route@8 main_read_game_players_route@9 main_generate_route@10 main_new_game_route@11 main_join_game_route@12 main_commit_rand_route@13 main_del_box_commit_rand_route@14 main_play_game_route@15 main_check_game_event_route@16 main_reset_game_route@17 main_delete_game_route@18 main_terminate_route@19",
      "stack_out": []
    },
    "117": {
      "block": "main_after_if_else@20",
      "stack_in": [],
      "op": "intc_1 // 0",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "118": {
      "op": "return",
      "stack_out": []
    },
    "119": {
      "block": "main_terminate_route@19",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%85#0"
      ],
      "stack_out": [
        "tmp%85#0"
      ]
    },
    "121": {
      "op": "pushint 5 // DeleteApplication",
      "defined_out": [
        "DeleteApplication",
        "tmp%85#0"
      ],
      "stack_out": [
        "tmp%85#0",
        "DeleteApplication"
      ]
    },
    "123": {
      "op": "==",
      "defined_out": [
        "tmp%86#0"
      ],
      "stack_out": [
        "tmp%86#0"
      ]
    },
    "124": {
      "error": "OnCompletion is not DeleteApplication",
      "op": "assert // OnCompletion is not DeleteApplication",
      "stack_out": []
    },
    "125": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%87#0"
      ],
      "stack_out": [
        "tmp%87#0"
      ]
    },
    "127": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "128": {
      "callsub": "smart_contracts.pieout.contract.Pieout.terminate",
      "op": "callsub terminate"
    },
    "131": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "132": {
      "op": "return",
      "stack_out": []
    },
    "133": {
      "block": "main_delete_game_route@18",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%80#0"
      ],
      "stack_out": [
        "tmp%80#0"
      ]
    },
    "135": {
      "op": "!",
      "defined_out": [
        "tmp%81#0"
      ],
      "stack_out": [
        "tmp%81#0"
      ]
    },
    "136": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "137": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%82#0"
      ],
      "stack_out": [
        "tmp%82#0"
      ]
    },
    "139": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "140": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%8#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%8#0"
      ]
    },
    "143": {
      "op": "btoi",
      "defined_out": [
        "tmp%84#0"
      ],
      "stack_out": [
        "tmp%84#0"
      ]
    },
    "144": {
      "callsub": "smart_contracts.pieout.contract.Pieout.delete_game",
      "op": "callsub delete_game",
      "stack_out": []
    },
    "147": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "148": {
      "op": "return",
      "stack_out": []
    },
    "149": {
      "block": "main_reset_game_route@17",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%74#0"
      ],
      "stack_out": [
        "tmp%74#0"
      ]
    },
    "151": {
      "op": "!",
      "defined_out": [
        "tmp%75#0"
      ],
      "stack_out": [
        "tmp%75#0"
      ]
    },
    "152": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "153": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%76#0"
      ],
      "stack_out": [
        "tmp%76#0"
      ]
    },
    "155": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "156": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%7#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%7#0"
      ]
    },
    "159": {
      "op": "btoi",
      "defined_out": [
        "tmp%78#0"
      ],
      "stack_out": [
        "tmp%78#0"
      ]
    },
    "160": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%78#0",
        "tmp%79#0"
      ],
      "stack_out": [
        "tmp%78#0",
        "tmp%79#0"
      ]
    },
    "162": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "tmp%78#0",
        "tmp%79#0"
      ],
      "stack_out": [
        "tmp%78#0",
        "tmp%79#0",
        "1"
      ]
    },
    "163": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%8#0",
        "tmp%78#0"
      ],
      "stack_out": [
        "tmp%78#0",
        "gtxn_idx%8#0"
      ]
    },
    "164": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%8#0",
        "gtxn_idx%8#0 (copy)",
        "tmp%78#0"
      ],
      "stack_out": [
        "tmp%78#0",
        "gtxn_idx%8#0",
        "gtxn_idx%8#0 (copy)"
      ]
    },
    "165": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%8#0",
        "gtxn_type%8#0",
        "tmp%78#0"
      ],
      "stack_out": [
        "tmp%78#0",
        "gtxn_idx%8#0",
        "gtxn_type%8#0"
      ]
    },
    "167": {
      "op": "intc_0 // pay",
      "defined_out": [
        "gtxn_idx%8#0",
        "gtxn_type%8#0",
        "pay",
        "tmp%78#0"
      ],
      "stack_out": [
        "tmp%78#0",
        "gtxn_idx%8#0",
        "gtxn_type%8#0",
        "pay"
      ]
    },
    "168": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%8#0",
        "gtxn_type_matches%8#0",
        "tmp%78#0"
      ],
      "stack_out": [
        "tmp%78#0",
        "gtxn_idx%8#0",
        "gtxn_type_matches%8#0"
      ]
    },
    "169": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "tmp%78#0",
        "gtxn_idx%8#0"
      ]
    },
    "170": {
      "callsub": "smart_contracts.pieout.contract.Pieout.reset_game",
      "op": "callsub reset_game",
      "stack_out": []
    },
    "173": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "174": {
      "op": "return",
      "stack_out": []
    },
    "175": {
      "block": "main_check_game_event_route@16",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%67#0"
      ],
      "stack_out": [
        "tmp%67#0"
      ]
    },
    "177": {
      "op": "!",
      "defined_out": [
        "tmp%68#0"
      ],
      "stack_out": [
        "tmp%68#0"
      ]
    },
    "178": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "179": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%69#0"
      ],
      "stack_out": [
        "tmp%69#0"
      ]
    },
    "181": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "182": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%6#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%6#0"
      ]
    },
    "185": {
      "op": "btoi",
      "defined_out": [
        "tmp%71#0"
      ],
      "stack_out": [
        "tmp%71#0"
      ]
    },
    "186": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[1]%1#0",
        "tmp%71#0"
      ],
      "stack_out": [
        "tmp%71#0",
        "reinterpret_bytes[1]%1#0"
      ]
    },
    "189": {
      "callsub": "smart_contracts.pieout.contract.Pieout.check_game_event",
      "op": "callsub check_game_event",
      "defined_out": [
        "tmp%72#0"
      ],
      "stack_out": [
        "tmp%72#0"
      ]
    },
    "192": {
      "op": "bytec 5 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%72#0"
      ],
      "stack_out": [
        "tmp%72#0",
        "0x151f7c75"
      ]
    },
    "194": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%72#0"
      ]
    },
    "195": {
      "op": "concat",
      "defined_out": [
        "tmp%73#0"
      ],
      "stack_out": [
        "tmp%73#0"
      ]
    },
    "196": {
      "op": "log",
      "stack_out": []
    },
    "197": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "198": {
      "op": "return",
      "stack_out": []
    },
    "199": {
      "block": "main_play_game_route@15",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%62#0"
      ],
      "stack_out": [
        "tmp%62#0"
      ]
    },
    "201": {
      "op": "!",
      "defined_out": [
        "tmp%63#0"
      ],
      "stack_out": [
        "tmp%63#0"
      ]
    },
    "202": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "203": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%64#0"
      ],
      "stack_out": [
        "tmp%64#0"
      ]
    },
    "205": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "206": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%5#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%5#0"
      ]
    },
    "209": {
      "op": "btoi",
      "defined_out": [
        "tmp%66#0"
      ],
      "stack_out": [
        "tmp%66#0"
      ]
    },
    "210": {
      "callsub": "smart_contracts.pieout.contract.Pieout.play_game",
      "op": "callsub play_game",
      "stack_out": []
    },
    "213": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "214": {
      "op": "return",
      "stack_out": []
    },
    "215": {
      "block": "main_del_box_commit_rand_route@14",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%58#0"
      ],
      "stack_out": [
        "tmp%58#0"
      ]
    },
    "217": {
      "op": "!",
      "defined_out": [
        "tmp%59#0"
      ],
      "stack_out": [
        "tmp%59#0"
      ]
    },
    "218": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "219": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%60#0"
      ],
      "stack_out": [
        "tmp%60#0"
      ]
    },
    "221": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "222": {
      "callsub": "smart_contracts.pieout.contract.Pieout.del_box_commit_rand",
      "op": "callsub del_box_commit_rand"
    },
    "225": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "226": {
      "op": "return",
      "stack_out": []
    },
    "227": {
      "block": "main_commit_rand_route@13",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%53#0"
      ]
    },
    "229": {
      "op": "!",
      "defined_out": [
        "tmp%54#0"
      ],
      "stack_out": [
        "tmp%54#0"
      ]
    },
    "230": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "231": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%55#0"
      ],
      "stack_out": [
        "tmp%55#0"
      ]
    },
    "233": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "234": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%4#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%4#0"
      ]
    },
    "237": {
      "op": "btoi",
      "defined_out": [
        "tmp%57#0"
      ],
      "stack_out": [
        "tmp%57#0"
      ]
    },
    "238": {
      "callsub": "smart_contracts.pieout.contract.Pieout.commit_rand",
      "op": "callsub commit_rand",
      "stack_out": []
    },
    "241": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "242": {
      "op": "return",
      "stack_out": []
    },
    "243": {
      "block": "main_join_game_route@12",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%46#0"
      ],
      "stack_out": [
        "tmp%46#0"
      ]
    },
    "245": {
      "op": "!",
      "defined_out": [
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%47#0"
      ]
    },
    "246": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "247": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%48#0"
      ]
    },
    "249": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "250": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%3#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%3#0"
      ]
    },
    "253": {
      "op": "btoi",
      "defined_out": [
        "tmp%50#0"
      ],
      "stack_out": [
        "tmp%50#0"
      ]
    },
    "254": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%50#0",
        "tmp%51#0"
      ],
      "stack_out": [
        "tmp%50#0",
        "tmp%51#0"
      ]
    },
    "256": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "tmp%50#0",
        "tmp%51#0"
      ],
      "stack_out": [
        "tmp%50#0",
        "tmp%51#0",
        "2"
      ]
    },
    "257": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%6#0",
        "tmp%50#0"
      ],
      "stack_out": [
        "tmp%50#0",
        "gtxn_idx%6#0"
      ]
    },
    "258": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%6#0",
        "gtxn_idx%6#0 (copy)",
        "tmp%50#0"
      ],
      "stack_out": [
        "tmp%50#0",
        "gtxn_idx%6#0",
        "gtxn_idx%6#0 (copy)"
      ]
    },
    "259": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%6#0",
        "gtxn_type%6#0",
        "tmp%50#0"
      ],
      "stack_out": [
        "tmp%50#0",
        "gtxn_idx%6#0",
        "gtxn_type%6#0"
      ]
    },
    "261": {
      "op": "intc_0 // pay",
      "defined_out": [
        "gtxn_idx%6#0",
        "gtxn_type%6#0",
        "pay",
        "tmp%50#0"
      ],
      "stack_out": [
        "tmp%50#0",
        "gtxn_idx%6#0",
        "gtxn_type%6#0",
        "pay"
      ]
    },
    "262": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%6#0",
        "gtxn_type_matches%6#0",
        "tmp%50#0"
      ],
      "stack_out": [
        "tmp%50#0",
        "gtxn_idx%6#0",
        "gtxn_type_matches%6#0"
      ]
    },
    "263": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "tmp%50#0",
        "gtxn_idx%6#0"
      ]
    },
    "264": {
      "op": "txn GroupIndex",
      "defined_out": [
        "gtxn_idx%6#0",
        "tmp%50#0",
        "tmp%52#0"
      ],
      "stack_out": [
        "tmp%50#0",
        "gtxn_idx%6#0",
        "tmp%52#0"
      ]
    },
    "266": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "gtxn_idx%6#0",
        "tmp%50#0",
        "tmp%52#0"
      ],
      "stack_out": [
        "tmp%50#0",
        "gtxn_idx%6#0",
        "tmp%52#0",
        "1"
      ]
    },
    "267": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%6#0",
        "gtxn_idx%7#0",
        "tmp%50#0"
      ],
      "stack_out": [
        "tmp%50#0",
        "gtxn_idx%6#0",
        "gtxn_idx%7#0"
      ]
    },
    "268": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%6#0",
        "gtxn_idx%7#0",
        "gtxn_idx%7#0 (copy)",
        "tmp%50#0"
      ],
      "stack_out": [
        "tmp%50#0",
        "gtxn_idx%6#0",
        "gtxn_idx%7#0",
        "gtxn_idx%7#0 (copy)"
      ]
    },
    "269": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%6#0",
        "gtxn_idx%7#0",
        "gtxn_type%7#0",
        "tmp%50#0"
      ],
      "stack_out": [
        "tmp%50#0",
        "gtxn_idx%6#0",
        "gtxn_idx%7#0",
        "gtxn_type%7#0"
      ]
    },
    "271": {
      "op": "intc_0 // pay",
      "stack_out": [
        "tmp%50#0",
        "gtxn_idx%6#0",
        "gtxn_idx%7#0",
        "gtxn_type%7#0",
        "pay"
      ]
    },
    "272": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%6#0",
        "gtxn_idx%7#0",
        "gtxn_type_matches%7#0",
        "tmp%50#0"
      ],
      "stack_out": [
        "tmp%50#0",
        "gtxn_idx%6#0",
        "gtxn_idx%7#0",
        "gtxn_type_matches%7#0"
      ]
    },
    "273": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "tmp%50#0",
        "gtxn_idx%6#0",
        "gtxn_idx%7#0"
      ]
    },
    "274": {
      "callsub": "smart_contracts.pieout.contract.Pieout.join_game",
      "op": "callsub join_game",
      "stack_out": []
    },
    "277": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "278": {
      "op": "return",
      "stack_out": []
    },
    "279": {
      "block": "main_new_game_route@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0"
      ]
    },
    "281": {
      "op": "!",
      "defined_out": [
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%38#0"
      ]
    },
    "282": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "283": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%39#0"
      ]
    },
    "285": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "286": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%2#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%2#0"
      ]
    },
    "289": {
      "op": "btoi",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0"
      ]
    },
    "290": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%41#0",
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%41#0",
        "tmp%42#0"
      ]
    },
    "292": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "tmp%41#0",
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%41#0",
        "tmp%42#0",
        "4"
      ]
    },
    "294": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%2#0",
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0",
        "gtxn_idx%2#0"
      ]
    },
    "295": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_idx%2#0 (copy)",
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0",
        "gtxn_idx%2#0",
        "gtxn_idx%2#0 (copy)"
      ]
    },
    "296": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_type%2#0",
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0",
        "gtxn_idx%2#0",
        "gtxn_type%2#0"
      ]
    },
    "298": {
      "op": "intc_0 // pay",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_type%2#0",
        "pay",
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0",
        "gtxn_idx%2#0",
        "gtxn_type%2#0",
        "pay"
      ]
    },
    "299": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_type_matches%2#0",
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0",
        "gtxn_idx%2#0",
        "gtxn_type_matches%2#0"
      ]
    },
    "300": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "tmp%41#0",
        "gtxn_idx%2#0"
      ]
    },
    "301": {
      "op": "txn GroupIndex",
      "defined_out": [
        "gtxn_idx%2#0",
        "tmp%41#0",
        "tmp%43#0"
      ],
      "stack_out": [
        "tmp%41#0",
        "gtxn_idx%2#0",
        "tmp%43#0"
      ]
    },
    "303": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "gtxn_idx%2#0",
        "tmp%41#0",
        "tmp%43#0"
      ],
      "stack_out": [
        "tmp%41#0",
        "gtxn_idx%2#0",
        "tmp%43#0",
        "3"
      ]
    },
    "305": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0"
      ]
    },
    "306": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%3#0 (copy)",
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%3#0 (copy)"
      ]
    },
    "307": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_type%3#0",
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_type%3#0"
      ]
    },
    "309": {
      "op": "intc_0 // pay",
      "stack_out": [
        "tmp%41#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_type%3#0",
        "pay"
      ]
    },
    "310": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_type_matches%3#0",
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_type_matches%3#0"
      ]
    },
    "311": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "tmp%41#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0"
      ]
    },
    "312": {
      "op": "txn GroupIndex",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "tmp%41#0",
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%41#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "tmp%44#0"
      ]
    },
    "314": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "tmp%41#0",
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%41#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "tmp%44#0",
        "2"
      ]
    },
    "315": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0"
      ]
    },
    "316": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "gtxn_idx%4#0 (copy)",
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "gtxn_idx%4#0 (copy)"
      ]
    },
    "317": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "gtxn_type%4#0",
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "gtxn_type%4#0"
      ]
    },
    "319": {
      "op": "intc_0 // pay",
      "stack_out": [
        "tmp%41#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "gtxn_type%4#0",
        "pay"
      ]
    },
    "320": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "gtxn_type_matches%4#0",
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "gtxn_type_matches%4#0"
      ]
    },
    "321": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "tmp%41#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0"
      ]
    },
    "322": {
      "op": "txn GroupIndex",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "tmp%41#0",
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%41#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "tmp%45#0"
      ]
    },
    "324": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "tmp%41#0",
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%41#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "tmp%45#0",
        "1"
      ]
    },
    "325": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "gtxn_idx%5#0",
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "gtxn_idx%5#0"
      ]
    },
    "326": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "gtxn_idx%5#0",
        "gtxn_idx%5#0 (copy)",
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "gtxn_idx%5#0",
        "gtxn_idx%5#0 (copy)"
      ]
    },
    "327": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "gtxn_idx%5#0",
        "gtxn_type%5#0",
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "gtxn_idx%5#0",
        "gtxn_type%5#0"
      ]
    },
    "329": {
      "op": "intc_0 // pay",
      "stack_out": [
        "tmp%41#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "gtxn_idx%5#0",
        "gtxn_type%5#0",
        "pay"
      ]
    },
    "330": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "gtxn_idx%5#0",
        "gtxn_type_matches%5#0",
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "gtxn_idx%5#0",
        "gtxn_type_matches%5#0"
      ]
    },
    "331": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "tmp%41#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "gtxn_idx%5#0"
      ]
    },
    "332": {
      "callsub": "smart_contracts.pieout.contract.Pieout.new_game",
      "op": "callsub new_game",
      "stack_out": []
    },
    "335": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "336": {
      "op": "return",
      "stack_out": []
    },
    "337": {
      "block": "main_generate_route@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "339": {
      "op": "!",
      "defined_out": [
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%34#0"
      ]
    },
    "340": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "341": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0"
      ]
    },
    "343": {
      "op": "!",
      "defined_out": [
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0"
      ]
    },
    "344": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "345": {
      "callsub": "smart_contracts.pieout.contract.Pieout.generate",
      "op": "callsub generate"
    },
    "348": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "349": {
      "op": "return",
      "stack_out": []
    },
    "350": {
      "block": "main_read_game_players_route@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "352": {
      "op": "!",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "353": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "354": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "356": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "357": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%1#0"
      ]
    },
    "360": {
      "op": "btoi",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0"
      ]
    },
    "361": {
      "callsub": "smart_contracts.pieout.contract.Pieout.read_game_players",
      "op": "callsub read_game_players",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "364": {
      "op": "bytec 5 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0",
        "0x151f7c75"
      ]
    },
    "366": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%31#0"
      ]
    },
    "367": {
      "op": "concat",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0"
      ]
    },
    "368": {
      "op": "log",
      "stack_out": []
    },
    "369": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "370": {
      "op": "return",
      "stack_out": []
    },
    "371": {
      "block": "main_read_game_state_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "373": {
      "op": "!",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "374": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "375": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "377": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "378": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%0#0"
      ]
    },
    "381": {
      "op": "btoi",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "382": {
      "callsub": "smart_contracts.pieout.contract.Pieout.read_game_state",
      "op": "callsub read_game_state",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "385": {
      "op": "bytec 5 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0",
        "0x151f7c75"
      ]
    },
    "387": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%24#0"
      ]
    },
    "388": {
      "op": "concat",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "389": {
      "op": "log",
      "stack_out": []
    },
    "390": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "391": {
      "op": "return",
      "stack_out": []
    },
    "392": {
      "block": "main_read_gen_unix_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "394": {
      "op": "!",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "395": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "396": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "398": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "399": {
      "op": "intc 12 // TMPL_GEN_UNIX",
      "defined_out": [
        "to_encode%1#0"
      ],
      "stack_out": [
        "to_encode%1#0"
      ]
    },
    "401": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0"
      ]
    },
    "402": {
      "op": "bytec 5 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0",
        "0x151f7c75"
      ]
    },
    "404": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%1#0"
      ]
    },
    "405": {
      "op": "concat",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "406": {
      "op": "log",
      "stack_out": []
    },
    "407": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "408": {
      "op": "return",
      "stack_out": []
    },
    "409": {
      "block": "main_calc_single_box_fee_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "411": {
      "op": "!",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "412": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "413": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "415": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "416": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%0#0"
      ]
    },
    "419": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[1]%0#0",
        "reinterpret_bytes[2]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%0#0",
        "reinterpret_bytes[2]%0#0"
      ]
    },
    "422": {
      "callsub": "smart_contracts.pieout.contract.Pieout.calc_single_box_fee",
      "op": "callsub calc_single_box_fee",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "425": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "426": {
      "op": "bytec 5 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "0x151f7c75"
      ]
    },
    "428": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ]
    },
    "429": {
      "op": "concat",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "430": {
      "op": "log",
      "stack_out": []
    },
    "431": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "432": {
      "op": "return",
      "stack_out": []
    },
    "433": {
      "block": "main_create_trophy_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "435": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "436": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "437": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "439": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "440": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "442": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "2"
      ]
    },
    "443": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "444": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ]
    },
    "445": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ]
    },
    "447": {
      "op": "intc_0 // pay",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay"
      ]
    },
    "448": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ]
    },
    "449": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "450": {
      "op": "txn GroupIndex",
      "defined_out": [
        "gtxn_idx%0#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%8#0"
      ]
    },
    "452": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "gtxn_idx%0#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%8#0",
        "1"
      ]
    },
    "453": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0"
      ]
    },
    "454": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0",
        "gtxn_idx%1#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0",
        "gtxn_idx%1#0 (copy)"
      ]
    },
    "455": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0",
        "gtxn_type%1#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0",
        "gtxn_type%1#0"
      ]
    },
    "457": {
      "op": "intc_0 // pay",
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0",
        "gtxn_type%1#0",
        "pay"
      ]
    },
    "458": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0",
        "gtxn_type_matches%1#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0",
        "gtxn_type_matches%1#0"
      ]
    },
    "459": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0"
      ]
    },
    "460": {
      "callsub": "smart_contracts.pieout.contract.Pieout.create_trophy",
      "op": "callsub create_trophy",
      "stack_out": []
    },
    "463": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "464": {
      "op": "return",
      "stack_out": []
    },
    "465": {
      "subroutine": "smart_contracts.pieout.subroutines.check_sender_in_game",
      "params": {
        "game_id#0": "uint64",
        "box_game_players#0": "bytes",
        "player_count#0": "uint64",
        "clear_player#0": "uint64"
      },
      "block": "check_sender_in_game",
      "stack_in": [],
      "op": "proto 4 1"
    },
    "468": {
      "op": "intc_1 // 0",
      "stack_out": [
        "players_ref#0"
      ]
    },
    "469": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5"
      ]
    },
    "471": {
      "op": "frame_dig -2",
      "defined_out": [
        "player_count#0 (copy)"
      ],
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "player_count#0 (copy)"
      ]
    },
    "473": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "player_count#0 (copy)"
      ],
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "player_count#0 (copy)",
        "32"
      ]
    },
    "474": {
      "op": "*",
      "defined_out": [
        "game_players_length#0"
      ],
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0"
      ]
    },
    "475": {
      "op": "intc_1 // 0"
    },
    "476": {
      "op": "dup",
      "defined_out": [
        "game_players_length#0",
        "i#0",
        "txn_sender_in_game#0"
      ],
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0"
      ]
    },
    "477": {
      "block": "check_sender_in_game_for_header@1",
      "stack_in": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0",
        "i#0"
      ]
    },
    "479": {
      "op": "frame_dig 2",
      "defined_out": [
        "game_players_length#0",
        "i#0"
      ],
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0",
        "i#0",
        "game_players_length#0"
      ]
    },
    "481": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "game_players_length#0",
        "i#0"
      ],
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "482": {
      "op": "frame_dig 3",
      "defined_out": [
        "continue_looping%0#0",
        "game_players_length#0",
        "i#0",
        "txn_sender_in_game#5"
      ],
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0",
        "continue_looping%0#0",
        "txn_sender_in_game#5"
      ]
    },
    "484": {
      "op": "frame_bury 1",
      "defined_out": [
        "continue_looping%0#0",
        "game_players_length#0",
        "i#0",
        "txn_sender_in_game#5"
      ],
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "486": {
      "op": "bz check_sender_in_game_after_for@8",
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0"
      ]
    },
    "489": {
      "op": "frame_dig -4",
      "defined_out": [
        "game_id#0 (copy)",
        "game_players_length#0",
        "i#0",
        "txn_sender_in_game#5"
      ],
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0",
        "game_id#0 (copy)"
      ]
    },
    "491": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0",
        "game_players_length#0",
        "i#0",
        "txn_sender_in_game#5"
      ],
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0",
        "encoded_value%0#0"
      ]
    },
    "492": {
      "op": "frame_dig -3",
      "defined_out": [
        "box_game_players#0 (copy)",
        "encoded_value%0#0",
        "game_players_length#0",
        "i#0",
        "txn_sender_in_game#5"
      ],
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0",
        "encoded_value%0#0",
        "box_game_players#0 (copy)"
      ]
    },
    "494": {
      "op": "swap",
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0",
        "box_game_players#0 (copy)",
        "encoded_value%0#0"
      ]
    },
    "495": {
      "op": "concat",
      "defined_out": [
        "game_players_length#0",
        "i#0",
        "players_ref#0",
        "txn_sender_in_game#5"
      ],
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0",
        "players_ref#0"
      ]
    },
    "496": {
      "op": "dup",
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0",
        "players_ref#0",
        "players_ref#0"
      ]
    },
    "497": {
      "op": "frame_bury 0",
      "defined_out": [
        "game_players_length#0",
        "i#0",
        "players_ref#0",
        "txn_sender_in_game#5"
      ],
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0",
        "players_ref#0"
      ]
    },
    "499": {
      "op": "box_get",
      "defined_out": [
        "game_players_length#0",
        "i#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "players_ref#0",
        "txn_sender_in_game#5"
      ],
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "500": {
      "error": "check BoxMap entry exists",
      "op": "assert // check BoxMap entry exists",
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0",
        "maybe_value%0#0"
      ]
    },
    "501": {
      "op": "frame_dig 4",
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0",
        "maybe_value%0#0",
        "i#0"
      ]
    },
    "503": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "game_players_length#0",
        "i#0",
        "maybe_value%0#0",
        "players_ref#0",
        "txn_sender_in_game#5"
      ],
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0",
        "maybe_value%0#0",
        "i#0",
        "32"
      ]
    },
    "504": {
      "op": "extract3",
      "defined_out": [
        "game_players_length#0",
        "i#0",
        "player_addr_bytes#0",
        "players_ref#0",
        "txn_sender_in_game#5"
      ],
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0",
        "player_addr_bytes#0"
      ]
    },
    "505": {
      "op": "txn Sender",
      "defined_out": [
        "game_players_length#0",
        "i#0",
        "player_addr_bytes#0",
        "players_ref#0",
        "tmp%0#0",
        "txn_sender_in_game#5"
      ],
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0",
        "player_addr_bytes#0",
        "tmp%0#0"
      ]
    },
    "507": {
      "op": "==",
      "defined_out": [
        "game_players_length#0",
        "i#0",
        "players_ref#0",
        "tmp%1#0",
        "txn_sender_in_game#5"
      ],
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0",
        "tmp%1#0"
      ]
    },
    "508": {
      "op": "bz check_sender_in_game_after_if_else@6",
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0"
      ]
    },
    "511": {
      "op": "intc_0 // 1",
      "defined_out": [
        "game_players_length#0",
        "i#0",
        "players_ref#0",
        "txn_sender_in_game#0",
        "txn_sender_in_game#5"
      ],
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0",
        "txn_sender_in_game#0"
      ]
    },
    "512": {
      "op": "frame_bury 3",
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0"
      ]
    },
    "514": {
      "op": "frame_dig -1",
      "defined_out": [
        "clear_player#0 (copy)",
        "game_players_length#0",
        "i#0",
        "players_ref#0",
        "txn_sender_in_game#0",
        "txn_sender_in_game#5"
      ],
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0",
        "clear_player#0 (copy)"
      ]
    },
    "516": {
      "op": "bz check_sender_in_game_after_if_else@5",
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0"
      ]
    },
    "519": {
      "op": "frame_dig 0",
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0",
        "players_ref#0"
      ]
    },
    "521": {
      "op": "frame_dig 4",
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0",
        "players_ref#0",
        "i#0"
      ]
    },
    "523": {
      "op": "bytec 9 // 0x0000000000000000000000000000000000000000000000000000000000000000",
      "defined_out": [
        "0x0000000000000000000000000000000000000000000000000000000000000000",
        "game_players_length#0",
        "i#0",
        "players_ref#0",
        "txn_sender_in_game#0",
        "txn_sender_in_game#5"
      ],
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0",
        "players_ref#0",
        "i#0",
        "0x0000000000000000000000000000000000000000000000000000000000000000"
      ]
    },
    "525": {
      "op": "box_replace",
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0"
      ]
    },
    "526": {
      "block": "check_sender_in_game_after_if_else@5",
      "stack_in": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "txn_sender_in_game#5"
      ],
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0",
        "txn_sender_in_game#5"
      ]
    },
    "528": {
      "op": "frame_bury 1",
      "defined_out": [
        "txn_sender_in_game#5"
      ],
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0"
      ]
    },
    "530": {
      "block": "check_sender_in_game_after_for@8",
      "stack_in": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "txn_sender_in_game#0"
      ],
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0",
        "txn_sender_in_game#0"
      ]
    },
    "532": {
      "op": "frame_bury 0"
    },
    "534": {
      "retsub": true,
      "op": "retsub"
    },
    "535": {
      "block": "check_sender_in_game_after_if_else@6",
      "stack_in": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0",
        "i#0"
      ]
    },
    "537": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "i#0"
      ],
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0",
        "i#0",
        "32"
      ]
    },
    "538": {
      "op": "+",
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0",
        "i#0"
      ]
    },
    "539": {
      "op": "frame_bury 4",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "players_ref#0",
        "txn_sender_in_game#5",
        "game_players_length#0",
        "txn_sender_in_game#0",
        "i#0"
      ]
    },
    "541": {
      "op": "b check_sender_in_game_for_header@1"
    },
    "544": {
      "subroutine": "smart_contracts.pieout.subroutines.is_game_live",
      "params": {
        "game_state#0": "bytes"
      },
      "block": "is_game_live",
      "stack_in": [],
      "op": "proto 1 2"
    },
    "547": {
      "op": "frame_dig -1",
      "defined_out": [
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "game_state#0 (copy)"
      ]
    },
    "549": {
      "error": "Index access is out of bounds",
      "op": "extract 8 8 // on error: Index access is out of bounds",
      "defined_out": [
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0"
      ]
    },
    "552": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "reinterpret_biguint%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "tmp%0#0"
      ]
    },
    "554": {
      "op": "itob",
      "defined_out": [
        "reinterpret_biguint%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "tmp%1#0"
      ]
    },
    "555": {
      "op": "b<",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "556": {
      "op": "bnz is_game_live_if_body@2",
      "stack_out": []
    },
    "559": {
      "op": "frame_dig -1",
      "stack_out": [
        "game_state#0 (copy)"
      ]
    },
    "561": {
      "error": "Index access is out of bounds",
      "op": "extract 2 1 // on error: Index access is out of bounds",
      "defined_out": [
        "reinterpret_biguint%1#0"
      ],
      "stack_out": [
        "reinterpret_biguint%1#0"
      ]
    },
    "564": {
      "op": "frame_dig -1",
      "stack_out": [
        "reinterpret_biguint%1#0",
        "game_state#0 (copy)"
      ]
    },
    "566": {
      "error": "Index access is out of bounds",
      "op": "extract 1 1 // on error: Index access is out of bounds",
      "defined_out": [
        "reinterpret_biguint%1#0",
        "reinterpret_biguint%2#0"
      ],
      "stack_out": [
        "reinterpret_biguint%1#0",
        "reinterpret_biguint%2#0"
      ]
    },
    "569": {
      "op": "b==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "570": {
      "op": "bz is_game_live_else_body@7",
      "stack_out": []
    },
    "573": {
      "block": "is_game_live_if_body@2",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "game_state#0 (copy)"
      ]
    },
    "575": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "game_state#0 (copy)",
        "0"
      ]
    },
    "576": {
      "op": "intc_0 // 1",
      "defined_out": [
        "0",
        "1",
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "game_state#0 (copy)",
        "0",
        "1"
      ]
    },
    "577": {
      "op": "setbit",
      "defined_out": [
        "game_state#0"
      ],
      "stack_out": [
        "game_state#0"
      ]
    },
    "578": {
      "op": "frame_bury -1",
      "stack_out": []
    },
    "580": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "582": {
      "op": "intc 4 // 3600",
      "defined_out": [
        "3600",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "3600"
      ]
    },
    "584": {
      "op": "+",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "585": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "586": {
      "op": "frame_dig -1",
      "stack_out": [
        "val_as_bytes%0#0",
        "game_state#0 (copy)"
      ]
    },
    "588": {
      "op": "swap",
      "stack_out": [
        "game_state#0 (copy)",
        "val_as_bytes%0#0"
      ]
    },
    "589": {
      "op": "replace2 8",
      "stack_out": [
        "game_state#0"
      ]
    },
    "591": {
      "op": "dup"
    },
    "592": {
      "op": "frame_bury -1",
      "stack_out": [
        "game_state#0 (copy)"
      ]
    },
    "594": {
      "op": "intc_1 // 0",
      "stack_out": [
        "game_state#0 (copy)",
        "0"
      ]
    },
    "595": {
      "op": "getbit",
      "defined_out": [
        "is_true%1#0"
      ],
      "stack_out": [
        "is_true%1#0"
      ]
    },
    "596": {
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x00",
        "is_true%1#0"
      ],
      "stack_out": [
        "is_true%1#0",
        "0x00"
      ]
    },
    "597": {
      "op": "intc_1 // 0",
      "stack_out": [
        "is_true%1#0",
        "0x00",
        "0"
      ]
    },
    "598": {
      "op": "uncover 2",
      "stack_out": [
        "0x00",
        "0",
        "is_true%1#0"
      ]
    },
    "600": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%1#0"
      ],
      "stack_out": [
        "encoded_bool%1#0"
      ]
    },
    "601": {
      "op": "frame_dig -1",
      "stack_out": [
        "encoded_bool%1#0",
        "game_state#0 (copy)"
      ]
    },
    "603": {
      "error": "Index access is out of bounds",
      "op": "extract 8 8 // on error: Index access is out of bounds",
      "defined_out": [
        "encoded_bool%1#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "encoded_bool%1#0",
        "tmp%5#0"
      ]
    },
    "606": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%2#0"
      ]
    },
    "607": {
      "op": "pushbytes 0xf1f3294a // method \"game_live(bool,uint64)\"",
      "defined_out": [
        "Method(game_live(bool,uint64))",
        "encoded_tuple_buffer%2#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%2#0",
        "Method(game_live(bool,uint64))"
      ]
    },
    "613": {
      "op": "swap",
      "stack_out": [
        "Method(game_live(bool,uint64))",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "614": {
      "op": "concat",
      "defined_out": [
        "event%0#0"
      ],
      "stack_out": [
        "event%0#0"
      ]
    },
    "615": {
      "op": "log",
      "stack_out": []
    },
    "616": {
      "op": "pushbytes 0x80",
      "defined_out": [
        "0x80"
      ],
      "stack_out": [
        "0x80"
      ]
    },
    "619": {
      "op": "frame_dig -1",
      "stack_out": [
        "0x80",
        "game_state#0 (copy)"
      ]
    },
    "621": {
      "retsub": true,
      "op": "retsub"
    },
    "622": {
      "block": "is_game_live_else_body@7",
      "stack_in": [],
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x00"
      ],
      "stack_out": [
        "0x00"
      ]
    },
    "623": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x00",
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "0x00",
        "game_state#0 (copy)"
      ]
    },
    "625": {
      "retsub": true,
      "op": "retsub"
    },
    "626": {
      "subroutine": "smart_contracts.pieout.subroutines.payout_itxn",
      "params": {
        "receiver#0": "bytes",
        "amount#0": "uint64",
        "note#0": "bytes"
      },
      "block": "payout_itxn",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "629": {
      "op": "frame_dig -3",
      "defined_out": [
        "receiver#0 (copy)"
      ],
      "stack_out": [
        "receiver#0 (copy)"
      ]
    },
    "631": {
      "op": "global ZeroAddress",
      "defined_out": [
        "receiver#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "receiver#0 (copy)",
        "tmp%0#0"
      ]
    },
    "633": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "634": {
      "op": "bz payout_itxn_after_if_else@3",
      "stack_out": []
    },
    "637": {
      "op": "itxn_begin"
    },
    "638": {
      "op": "frame_dig -1",
      "defined_out": [
        "note#0 (copy)"
      ],
      "stack_out": [
        "note#0 (copy)"
      ]
    },
    "640": {
      "op": "itxn_field Note",
      "stack_out": []
    },
    "642": {
      "op": "frame_dig -2",
      "defined_out": [
        "amount#0 (copy)"
      ],
      "stack_out": [
        "amount#0 (copy)"
      ]
    },
    "644": {
      "op": "itxn_field Amount",
      "stack_out": []
    },
    "646": {
      "op": "frame_dig -3",
      "stack_out": [
        "receiver#0 (copy)"
      ]
    },
    "648": {
      "op": "itxn_field Receiver",
      "stack_out": []
    },
    "650": {
      "op": "intc_0 // pay",
      "defined_out": [
        "pay"
      ],
      "stack_out": [
        "pay"
      ]
    },
    "651": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "653": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "654": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "656": {
      "op": "itxn_submit"
    },
    "657": {
      "block": "payout_itxn_after_if_else@3",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    },
    "658": {
      "subroutine": "smart_contracts.pieout.subroutines.is_game_over",
      "params": {
        "game_id#0": "uint64",
        "game_state#0": "bytes",
        "box_game_players#0": "bytes"
      },
      "block": "is_game_over",
      "stack_in": [],
      "op": "proto 3 2"
    },
    "661": {
      "op": "frame_dig -2",
      "defined_out": [
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "game_state#0 (copy)"
      ]
    },
    "663": {
      "error": "Index access is out of bounds",
      "op": "extract 8 8 // on error: Index access is out of bounds",
      "defined_out": [
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0"
      ]
    },
    "666": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "reinterpret_biguint%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "tmp%0#0"
      ]
    },
    "668": {
      "op": "itob",
      "defined_out": [
        "reinterpret_biguint%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "tmp%1#0"
      ]
    },
    "669": {
      "op": "b<",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "670": {
      "op": "bnz is_game_over_if_body@2",
      "stack_out": []
    },
    "673": {
      "op": "frame_dig -2",
      "stack_out": [
        "game_state#0 (copy)"
      ]
    },
    "675": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "game_state#0 (copy)",
        "2"
      ]
    },
    "676": {
      "op": "getbyte",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "677": {
      "op": "bnz is_game_over_else_body@7",
      "stack_out": []
    },
    "680": {
      "block": "is_game_over_if_body@2",
      "stack_in": [],
      "op": "frame_dig -2",
      "defined_out": [
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "game_state#0 (copy)"
      ]
    },
    "682": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "game_state#0 (copy)",
        "1"
      ]
    },
    "683": {
      "op": "getbyte",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "684": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "32"
      ]
    },
    "685": {
      "op": "*",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "686": {
      "op": "bzero",
      "defined_out": [
        "materialized_values%0#0"
      ],
      "stack_out": [
        "materialized_values%0#0"
      ]
    },
    "687": {
      "op": "frame_dig -3",
      "defined_out": [
        "game_id#0 (copy)",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "materialized_values%0#0",
        "game_id#0 (copy)"
      ]
    },
    "689": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "materialized_values%0#0",
        "encoded_value%0#0"
      ]
    },
    "690": {
      "op": "frame_dig -1",
      "defined_out": [
        "box_game_players#0 (copy)",
        "encoded_value%0#0",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "materialized_values%0#0",
        "encoded_value%0#0",
        "box_game_players#0 (copy)"
      ]
    },
    "692": {
      "op": "swap",
      "stack_out": [
        "materialized_values%0#0",
        "box_game_players#0 (copy)",
        "encoded_value%0#0"
      ]
    },
    "693": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "materialized_values%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "694": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "materialized_values%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "695": {
      "op": "box_del",
      "defined_out": [
        "box_prefixed_key%0#0",
        "materialized_values%0#0",
        "{box_del}"
      ],
      "stack_out": [
        "materialized_values%0#0",
        "box_prefixed_key%0#0",
        "{box_del}"
      ]
    },
    "696": {
      "op": "pop",
      "stack_out": [
        "materialized_values%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "697": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "materialized_values%0#0"
      ]
    },
    "698": {
      "op": "box_put",
      "stack_out": []
    },
    "699": {
      "op": "frame_dig -2",
      "stack_out": [
        "game_state#0 (copy)"
      ]
    },
    "701": {
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x00",
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "game_state#0 (copy)",
        "0x00"
      ]
    },
    "702": {
      "op": "replace2 2",
      "defined_out": [
        "game_state#0"
      ],
      "stack_out": [
        "game_state#0"
      ]
    },
    "704": {
      "op": "dup"
    },
    "705": {
      "op": "frame_bury -2",
      "stack_out": [
        "game_state#0 (copy)"
      ]
    },
    "707": {
      "error": "Index access is out of bounds",
      "op": "extract 3 1 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "710": {
      "op": "frame_dig -2",
      "stack_out": [
        "tmp%9#0",
        "game_state#0 (copy)"
      ]
    },
    "712": {
      "error": "Index access is out of bounds",
      "op": "extract 56 32 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%10#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "tmp%10#0"
      ]
    },
    "715": {
      "op": "frame_dig -2",
      "stack_out": [
        "tmp%9#0",
        "tmp%10#0",
        "game_state#0 (copy)"
      ]
    },
    "717": {
      "error": "Index access is out of bounds",
      "op": "extract 88 32 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%10#0",
        "tmp%11#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0"
      ]
    },
    "720": {
      "op": "frame_dig -2",
      "stack_out": [
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "game_state#0 (copy)"
      ]
    },
    "722": {
      "error": "Index access is out of bounds",
      "op": "extract 120 32 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0"
      ]
    },
    "725": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%9#0"
      ]
    },
    "727": {
      "op": "dig 3",
      "defined_out": [
        "tmp%10#0",
        "tmp%10#0 (copy)",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%9#0",
        "tmp%10#0 (copy)"
      ]
    },
    "729": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "730": {
      "op": "dig 2",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%11#0 (copy)",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "encoded_tuple_buffer%2#0",
        "tmp%11#0 (copy)"
      ]
    },
    "732": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "733": {
      "op": "dig 1",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%12#0 (copy)"
      ],
      "stack_out": [
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "encoded_tuple_buffer%3#0",
        "tmp%12#0 (copy)"
      ]
    },
    "735": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%4#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "736": {
      "op": "pushbytes 0x410b2150 // method \"game_over(uint8,address,address,address)\"",
      "defined_out": [
        "Method(game_over(uint8,address,address,address))",
        "encoded_tuple_buffer%4#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "encoded_tuple_buffer%4#0",
        "Method(game_over(uint8,address,address,address))"
      ]
    },
    "742": {
      "op": "swap",
      "stack_out": [
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "Method(game_over(uint8,address,address,address))",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "743": {
      "op": "concat",
      "defined_out": [
        "event%0#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "event%0#0"
      ]
    },
    "744": {
      "op": "log",
      "stack_out": [
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0"
      ]
    },
    "745": {
      "op": "frame_dig -2",
      "stack_out": [
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "game_state#0 (copy)"
      ]
    },
    "747": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "game_state#0 (copy)",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "game_state#0 (copy)",
        "16"
      ]
    },
    "749": {
      "op": "extract_uint64",
      "defined_out": [
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%14#0"
      ]
    },
    "750": {
      "op": "dup",
      "defined_out": [
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%14#0 (copy)"
      ],
      "stack_out": [
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%14#0 (copy)"
      ]
    },
    "751": {
      "op": "pushint 50 // 50",
      "defined_out": [
        "50",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%14#0 (copy)"
      ],
      "stack_out": [
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%14#0 (copy)",
        "50"
      ]
    },
    "753": {
      "op": "*",
      "defined_out": [
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%15#0"
      ]
    },
    "754": {
      "op": "pushint 100 // 100",
      "defined_out": [
        "100",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%15#0",
        "100"
      ]
    },
    "756": {
      "op": "/",
      "defined_out": [
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%14#0",
        "top1_win_share#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%14#0",
        "top1_win_share#0"
      ]
    },
    "757": {
      "op": "dig 1",
      "stack_out": [
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%14#0",
        "top1_win_share#0",
        "tmp%14#0 (copy)"
      ]
    },
    "759": {
      "op": "pushint 30 // 30",
      "defined_out": [
        "30",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%14#0 (copy)",
        "top1_win_share#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%14#0",
        "top1_win_share#0",
        "tmp%14#0 (copy)",
        "30"
      ]
    },
    "761": {
      "op": "*",
      "defined_out": [
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%18#0",
        "top1_win_share#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%14#0",
        "top1_win_share#0",
        "tmp%18#0"
      ]
    },
    "762": {
      "op": "pushint 100 // 100",
      "stack_out": [
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%14#0",
        "top1_win_share#0",
        "tmp%18#0",
        "100"
      ]
    },
    "764": {
      "op": "/",
      "defined_out": [
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%14#0",
        "top1_win_share#0",
        "top2_win_share#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%14#0",
        "top1_win_share#0",
        "top2_win_share#0"
      ]
    },
    "765": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "top1_win_share#0",
        "top2_win_share#0",
        "tmp%14#0"
      ]
    },
    "767": {
      "op": "dig 2",
      "defined_out": [
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%14#0",
        "top1_win_share#0",
        "top1_win_share#0 (copy)",
        "top2_win_share#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "top1_win_share#0",
        "top2_win_share#0",
        "tmp%14#0",
        "top1_win_share#0 (copy)"
      ]
    },
    "769": {
      "op": "-",
      "defined_out": [
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%21#0",
        "top1_win_share#0",
        "top2_win_share#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "top1_win_share#0",
        "top2_win_share#0",
        "tmp%21#0"
      ]
    },
    "770": {
      "op": "dig 1",
      "defined_out": [
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%21#0",
        "top1_win_share#0",
        "top2_win_share#0",
        "top2_win_share#0 (copy)"
      ],
      "stack_out": [
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "top1_win_share#0",
        "top2_win_share#0",
        "tmp%21#0",
        "top2_win_share#0 (copy)"
      ]
    },
    "772": {
      "op": "-",
      "defined_out": [
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "top1_win_share#0",
        "top2_win_share#0",
        "top3_win_share#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "top1_win_share#0",
        "top2_win_share#0",
        "top3_win_share#0"
      ]
    },
    "773": {
      "op": "uncover 5",
      "stack_out": [
        "tmp%11#0",
        "tmp%12#0",
        "top1_win_share#0",
        "top2_win_share#0",
        "top3_win_share#0",
        "tmp%10#0"
      ]
    },
    "775": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%11#0",
        "tmp%12#0",
        "top2_win_share#0",
        "top3_win_share#0",
        "tmp%10#0",
        "top1_win_share#0"
      ]
    },
    "777": {
      "op": "pushbytes \"prize pool payout -> first place address\"",
      "defined_out": [
        "\"prize pool payout -> first place address\"",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "top1_win_share#0",
        "top2_win_share#0",
        "top3_win_share#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%12#0",
        "top2_win_share#0",
        "top3_win_share#0",
        "tmp%10#0",
        "top1_win_share#0",
        "\"prize pool payout -> first place address\""
      ]
    },
    "819": {
      "callsub": "smart_contracts.pieout.subroutines.payout_itxn",
      "op": "callsub payout_itxn",
      "stack_out": [
        "tmp%11#0",
        "tmp%12#0",
        "top2_win_share#0",
        "top3_win_share#0"
      ]
    },
    "822": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%12#0",
        "top2_win_share#0",
        "top3_win_share#0",
        "tmp%11#0"
      ]
    },
    "824": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%12#0",
        "top3_win_share#0",
        "tmp%11#0",
        "top2_win_share#0"
      ]
    },
    "826": {
      "op": "pushbytes \"prize pool payout -> second place address\"",
      "defined_out": [
        "\"prize pool payout -> second place address\"",
        "tmp%11#0",
        "tmp%12#0",
        "top2_win_share#0",
        "top3_win_share#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "top3_win_share#0",
        "tmp%11#0",
        "top2_win_share#0",
        "\"prize pool payout -> second place address\""
      ]
    },
    "869": {
      "callsub": "smart_contracts.pieout.subroutines.payout_itxn",
      "op": "callsub payout_itxn",
      "stack_out": [
        "tmp%12#0",
        "top3_win_share#0"
      ]
    },
    "872": {
      "op": "pushbytes \"prize pool payout -> third place address\"",
      "defined_out": [
        "\"prize pool payout -> third place address\"",
        "tmp%12#0",
        "top3_win_share#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "top3_win_share#0",
        "\"prize pool payout -> third place address\""
      ]
    },
    "914": {
      "callsub": "smart_contracts.pieout.subroutines.payout_itxn",
      "op": "callsub payout_itxn",
      "stack_out": []
    },
    "917": {
      "op": "frame_dig -2",
      "stack_out": [
        "game_state#0 (copy)"
      ]
    },
    "919": {
      "op": "bytec 7 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "game_state#0 (copy)",
        "0x0000000000000000"
      ]
    },
    "921": {
      "op": "replace2 16",
      "stack_out": [
        "game_state#0"
      ]
    },
    "923": {
      "op": "frame_bury -2",
      "stack_out": []
    },
    "925": {
      "op": "pushbytes 0x80",
      "defined_out": [
        "0x80"
      ],
      "stack_out": [
        "0x80"
      ]
    },
    "928": {
      "op": "frame_dig -2",
      "stack_out": [
        "0x80",
        "game_state#0 (copy)"
      ]
    },
    "930": {
      "retsub": true,
      "op": "retsub"
    },
    "931": {
      "block": "is_game_over_else_body@7",
      "stack_in": [],
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x00"
      ],
      "stack_out": [
        "0x00"
      ]
    },
    "932": {
      "op": "frame_dig -2",
      "defined_out": [
        "0x00",
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "0x00",
        "game_state#0 (copy)"
      ]
    },
    "934": {
      "retsub": true,
      "op": "retsub"
    },
    "935": {
      "subroutine": "smart_contracts.pieout.contract.Pieout.create_trophy",
      "params": {
        "box_t_pay#0": "uint64",
        "mint_pay#0": "uint64"
      },
      "block": "create_trophy",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "938": {
      "op": "frame_dig -2",
      "defined_out": [
        "box_t_pay#0 (copy)"
      ],
      "stack_out": [
        "box_t_pay#0 (copy)"
      ]
    },
    "940": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "942": {
      "op": "pushint 6500 // 6500",
      "defined_out": [
        "6500",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "6500"
      ]
    },
    "945": {
      "op": ">=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "946": {
      "error": "Insufficient funds. Box pay amount is not enough to cover application MBR.",
      "op": "assert // Insufficient funds. Box pay amount is not enough to cover application MBR.",
      "stack_out": []
    },
    "947": {
      "op": "frame_dig -2",
      "stack_out": [
        "box_t_pay#0 (copy)"
      ]
    },
    "949": {
      "op": "gtxns Sender",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "951": {
      "op": "global CreatorAddress",
      "defined_out": [
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "953": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "954": {
      "error": "Box payment sender address must match transaction sender address.",
      "op": "assert // Box payment sender address must match transaction sender address.",
      "stack_out": []
    },
    "955": {
      "op": "frame_dig -2",
      "stack_out": [
        "box_t_pay#0 (copy)"
      ]
    },
    "957": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "959": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "tmp%6#0"
      ]
    },
    "961": {
      "op": "==",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "962": {
      "error": "Box payment reciever address must match application address.",
      "op": "assert // Box payment reciever address must match application address.",
      "stack_out": []
    },
    "963": {
      "op": "frame_dig -1",
      "defined_out": [
        "mint_pay#0 (copy)"
      ],
      "stack_out": [
        "mint_pay#0 (copy)"
      ]
    },
    "965": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "967": {
      "op": "global AssetCreateMinBalance",
      "defined_out": [
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "969": {
      "op": ">=",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "970": {
      "error": "Insufficient funds. Mint pay amount is not enough to cover application MBR.",
      "op": "assert // Insufficient funds. Mint pay amount is not enough to cover application MBR.",
      "stack_out": []
    },
    "971": {
      "op": "frame_dig -1",
      "stack_out": [
        "mint_pay#0 (copy)"
      ]
    },
    "973": {
      "op": "gtxns Sender",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "975": {
      "op": "global CreatorAddress",
      "defined_out": [
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%12#0"
      ]
    },
    "977": {
      "op": "==",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "978": {
      "error": "Mint payment sender address must match transaction sender address.",
      "op": "assert // Mint payment sender address must match transaction sender address.",
      "stack_out": []
    },
    "979": {
      "op": "frame_dig -1",
      "stack_out": [
        "mint_pay#0 (copy)"
      ]
    },
    "981": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "983": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%14#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%15#0"
      ]
    },
    "985": {
      "op": "==",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "986": {
      "error": "Mint payment reciever address must match application address.",
      "op": "assert // Mint payment reciever address must match application address.",
      "stack_out": []
    },
    "987": {
      "op": "itxn_begin"
    },
    "988": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0"
      ]
    },
    "990": {
      "op": "dupn 2",
      "defined_out": [
        "inner_txn_params%0%%param_ConfigAssetClawback_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetClawback_idx_0#0"
      ]
    },
    "992": {
      "op": "itxn_field ConfigAssetClawback",
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0"
      ]
    },
    "994": {
      "op": "itxn_field ConfigAssetFreeze",
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0"
      ]
    },
    "996": {
      "op": "itxn_field ConfigAssetManager",
      "stack_out": []
    },
    "998": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "999": {
      "op": "itxn_field ConfigAssetDefaultFrozen",
      "stack_out": []
    },
    "1001": {
      "op": "intc_1 // 0",
      "stack_out": [
        "0"
      ]
    },
    "1002": {
      "op": "itxn_field ConfigAssetDecimals",
      "stack_out": []
    },
    "1004": {
      "op": "pushbytes \"Gamename-ATH-Trophy\"",
      "defined_out": [
        "\"Gamename-ATH-Trophy\""
      ],
      "stack_out": [
        "\"Gamename-ATH-Trophy\""
      ]
    },
    "1025": {
      "op": "itxn_field ConfigAssetName",
      "stack_out": []
    },
    "1027": {
      "op": "pushbytes \"TRFY\"",
      "defined_out": [
        "\"TRFY\""
      ],
      "stack_out": [
        "\"TRFY\""
      ]
    },
    "1033": {
      "op": "itxn_field ConfigAssetUnitName",
      "stack_out": []
    },
    "1035": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1036": {
      "op": "itxn_field ConfigAssetTotal",
      "stack_out": []
    },
    "1038": {
      "op": "pushint 3 // acfg",
      "defined_out": [
        "acfg"
      ],
      "stack_out": [
        "acfg"
      ]
    },
    "1040": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "1042": {
      "op": "intc_1 // 0",
      "stack_out": [
        "0"
      ]
    },
    "1043": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1045": {
      "op": "itxn_submit"
    },
    "1046": {
      "op": "pushbytes 0x745f",
      "defined_out": [
        "0x745f"
      ],
      "stack_out": [
        "0x745f"
      ]
    },
    "1050": {
      "op": "itxn CreatedAssetID",
      "defined_out": [
        "0x745f",
        "acfg_itxn.CreatedAssetID#0"
      ],
      "stack_out": [
        "0x745f",
        "acfg_itxn.CreatedAssetID#0"
      ]
    },
    "1052": {
      "op": "box_create",
      "defined_out": [
        "{box_create}"
      ],
      "stack_out": [
        "{box_create}"
      ]
    },
    "1053": {
      "op": "pop",
      "stack_out": []
    },
    "1054": {
      "retsub": true,
      "op": "retsub"
    },
    "1055": {
      "subroutine": "smart_contracts.pieout.contract.Pieout.calc_single_box_fee",
      "params": {
        "key_size#0": "bytes",
        "value_size#0": "bytes"
      },
      "block": "calc_single_box_fee",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "1058": {
      "op": "frame_dig -2",
      "defined_out": [
        "key_size#0 (copy)"
      ],
      "stack_out": [
        "key_size#0 (copy)"
      ]
    },
    "1060": {
      "op": "btoi",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1061": {
      "op": "frame_dig -1",
      "defined_out": [
        "tmp%1#0",
        "value_size#0 (copy)"
      ],
      "stack_out": [
        "tmp%1#0",
        "value_size#0 (copy)"
      ]
    },
    "1063": {
      "op": "btoi",
      "defined_out": [
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "1064": {
      "op": "+",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1065": {
      "op": "pushint 400 // 400",
      "defined_out": [
        "400",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "400"
      ]
    },
    "1068": {
      "op": "*",
      "defined_out": [
        "size_fee#0"
      ],
      "stack_out": [
        "size_fee#0"
      ]
    },
    "1069": {
      "op": "pushint 2500 // 2500",
      "defined_out": [
        "2500",
        "size_fee#0"
      ],
      "stack_out": [
        "size_fee#0",
        "2500"
      ]
    },
    "1072": {
      "op": "+",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "1073": {
      "retsub": true,
      "op": "retsub"
    },
    "1074": {
      "subroutine": "smart_contracts.pieout.contract.Pieout.read_game_state",
      "params": {
        "game_id#0": "uint64"
      },
      "block": "read_game_state",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1077": {
      "op": "frame_dig -1",
      "defined_out": [
        "game_id#0 (copy)"
      ],
      "stack_out": [
        "game_id#0 (copy)"
      ]
    },
    "1079": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "1080": {
      "op": "bytec_2 // \"s_\"",
      "defined_out": [
        "\"s_\"",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "\"s_\""
      ]
    },
    "1081": {
      "op": "dig 1",
      "defined_out": [
        "\"s_\"",
        "encoded_value%0#0",
        "encoded_value%0#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "\"s_\"",
        "encoded_value%0#0 (copy)"
      ]
    },
    "1083": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1084": {
      "op": "box_get",
      "defined_out": [
        "encoded_value%0#0",
        "game_state#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "maybe_exists%0#0"
      ]
    },
    "1085": {
      "error": "check self.box_game_state entry exists",
      "op": "assert // check self.box_game_state entry exists",
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0"
      ]
    },
    "1086": {
      "op": "dup",
      "defined_out": [
        "encoded_value%0#0",
        "game_state#0",
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "1087": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "game_state#0 (copy)",
        "0"
      ]
    },
    "1088": {
      "op": "getbit",
      "defined_out": [
        "encoded_value%0#0",
        "game_state#0",
        "is_true%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "is_true%0#0"
      ]
    },
    "1089": {
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x00",
        "encoded_value%0#0",
        "game_state#0",
        "is_true%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "is_true%0#0",
        "0x00"
      ]
    },
    "1090": {
      "op": "intc_1 // 0",
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "is_true%0#0",
        "0x00",
        "0"
      ]
    },
    "1091": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "0x00",
        "0",
        "is_true%0#0"
      ]
    },
    "1093": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "game_state#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "encoded_bool%0#0"
      ]
    },
    "1094": {
      "op": "dig 1",
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "encoded_bool%0#0",
        "game_state#0 (copy)"
      ]
    },
    "1096": {
      "error": "Index access is out of bounds",
      "op": "extract 1 1 // on error: Index access is out of bounds",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "encoded_bool%0#0",
        "tmp%0#0"
      ]
    },
    "1099": {
      "op": "dig 2",
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "encoded_bool%0#0",
        "tmp%0#0",
        "game_state#0 (copy)"
      ]
    },
    "1101": {
      "error": "Index access is out of bounds",
      "op": "extract 2 1 // on error: Index access is out of bounds",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "encoded_bool%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "1104": {
      "op": "dig 3",
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "encoded_bool%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "game_state#0 (copy)"
      ]
    },
    "1106": {
      "error": "Index access is out of bounds",
      "op": "extract 3 1 // on error: Index access is out of bounds",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "encoded_bool%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "1109": {
      "op": "dig 4",
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "encoded_bool%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "game_state#0 (copy)"
      ]
    },
    "1111": {
      "error": "Index access is out of bounds",
      "op": "extract 4 1 // on error: Index access is out of bounds",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "encoded_bool%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "1114": {
      "op": "dig 5",
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "encoded_bool%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "game_state#0 (copy)"
      ]
    },
    "1116": {
      "error": "Index access is out of bounds",
      "op": "extract 5 1 // on error: Index access is out of bounds",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "encoded_bool%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "1119": {
      "op": "dig 6",
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "encoded_bool%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "game_state#0 (copy)"
      ]
    },
    "1121": {
      "error": "Index access is out of bounds",
      "op": "extract 6 2 // on error: Index access is out of bounds",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "encoded_bool%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "1124": {
      "op": "dig 7",
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "encoded_bool%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "game_state#0 (copy)"
      ]
    },
    "1126": {
      "error": "Index access is out of bounds",
      "op": "extract 8 8 // on error: Index access is out of bounds",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "encoded_bool%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0"
      ]
    },
    "1129": {
      "op": "dig 8",
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "encoded_bool%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "game_state#0 (copy)"
      ]
    },
    "1131": {
      "error": "Index access is out of bounds",
      "op": "extract 16 8 // on error: Index access is out of bounds",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "encoded_bool%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "1134": {
      "op": "dig 9",
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "encoded_bool%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "game_state#0 (copy)"
      ]
    },
    "1136": {
      "error": "Index access is out of bounds",
      "op": "extract 24 32 // on error: Index access is out of bounds",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "encoded_bool%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "1139": {
      "op": "dig 10",
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "encoded_bool%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "game_state#0 (copy)"
      ]
    },
    "1141": {
      "error": "Index access is out of bounds",
      "op": "extract 56 32 // on error: Index access is out of bounds",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "encoded_bool%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "1144": {
      "op": "dig 11",
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "encoded_bool%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "game_state#0 (copy)"
      ]
    },
    "1146": {
      "error": "Index access is out of bounds",
      "op": "extract 88 32 // on error: Index access is out of bounds",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%10#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "game_state#0",
        "encoded_bool%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0"
      ]
    },
    "1149": {
      "op": "uncover 12",
      "stack_out": [
        "encoded_value%0#0",
        "encoded_bool%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "game_state#0"
      ]
    },
    "1151": {
      "error": "Index access is out of bounds",
      "op": "extract 120 32 // on error: Index access is out of bounds",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "encoded_bool%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0"
      ]
    },
    "1154": {
      "op": "uncover 13",
      "stack_out": [
        "encoded_bool%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded_value%0#0"
      ]
    },
    "1156": {
      "op": "uncover 13",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded_value%0#0",
        "encoded_bool%0#0"
      ]
    },
    "1158": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "1159": {
      "op": "uncover 12",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded_tuple_buffer%2#0",
        "tmp%0#0"
      ]
    },
    "1161": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "tmp%1#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "1162": {
      "op": "uncover 11",
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded_tuple_buffer%3#0",
        "tmp%1#0"
      ]
    },
    "1164": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%4#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "1165": {
      "op": "uncover 10",
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded_tuple_buffer%4#0",
        "tmp%2#0"
      ]
    },
    "1167": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%5#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "1168": {
      "op": "uncover 9",
      "stack_out": [
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded_tuple_buffer%5#0",
        "tmp%3#0"
      ]
    },
    "1170": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%6#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "1171": {
      "op": "uncover 8",
      "stack_out": [
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded_tuple_buffer%6#0",
        "tmp%4#0"
      ]
    },
    "1173": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%7#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded_tuple_buffer%7#0"
      ]
    },
    "1174": {
      "op": "uncover 7",
      "stack_out": [
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded_tuple_buffer%7#0",
        "tmp%5#0"
      ]
    },
    "1176": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%8#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded_tuple_buffer%8#0"
      ]
    },
    "1177": {
      "op": "uncover 6",
      "stack_out": [
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded_tuple_buffer%8#0",
        "tmp%6#0"
      ]
    },
    "1179": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded_tuple_buffer%9#0"
      ]
    },
    "1180": {
      "op": "uncover 5",
      "stack_out": [
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded_tuple_buffer%9#0",
        "tmp%7#0"
      ]
    },
    "1182": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%10#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded_tuple_buffer%10#0"
      ]
    },
    "1183": {
      "op": "uncover 4",
      "stack_out": [
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded_tuple_buffer%10#0",
        "tmp%8#0"
      ]
    },
    "1185": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%11#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded_tuple_buffer%11#0"
      ]
    },
    "1186": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%10#0",
        "tmp%11#0",
        "encoded_tuple_buffer%11#0",
        "tmp%9#0"
      ]
    },
    "1188": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%12#0",
        "tmp%10#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "tmp%11#0",
        "encoded_tuple_buffer%12#0"
      ]
    },
    "1189": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "encoded_tuple_buffer%12#0",
        "tmp%10#0"
      ]
    },
    "1191": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%13#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "encoded_tuple_buffer%13#0"
      ]
    },
    "1192": {
      "op": "swap",
      "stack_out": [
        "encoded_tuple_buffer%13#0",
        "tmp%11#0"
      ]
    },
    "1193": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%14#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%14#0"
      ]
    },
    "1194": {
      "retsub": true,
      "op": "retsub"
    },
    "1195": {
      "subroutine": "smart_contracts.pieout.contract.Pieout.read_game_players",
      "params": {
        "game_id#0": "uint64"
      },
      "block": "read_game_players",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1198": {
      "op": "intc_1 // 0",
      "stack_out": [
        "player_addr_bytes#0"
      ]
    },
    "1199": {
      "op": "dup",
      "stack_out": [
        "player_addr_bytes#0",
        "players#9"
      ]
    },
    "1200": {
      "op": "frame_dig -1",
      "defined_out": [
        "game_id#0 (copy)"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_id#0 (copy)"
      ]
    },
    "1202": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "encoded_value%0#0"
      ]
    },
    "1203": {
      "op": "bytec_1 // \"p_\"",
      "defined_out": [
        "\"p_\"",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "encoded_value%0#0",
        "\"p_\""
      ]
    },
    "1204": {
      "op": "swap",
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "\"p_\"",
        "encoded_value%0#0"
      ]
    },
    "1205": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "box_prefixed_key%0#0"
      ]
    },
    "1206": {
      "op": "box_get",
      "defined_out": [
        "game_players#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "maybe_exists%0#0"
      ]
    },
    "1207": {
      "op": "swap",
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "maybe_exists%0#0",
        "game_players#0"
      ]
    },
    "1208": {
      "op": "dup",
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "maybe_exists%0#0",
        "game_players#0",
        "game_players#0 (copy)"
      ]
    },
    "1209": {
      "op": "uncover 2",
      "defined_out": [
        "game_players#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "game_players#0",
        "maybe_exists%0#0"
      ]
    },
    "1211": {
      "error": "check self.box_game_players entry exists",
      "op": "assert // check self.box_game_players entry exists",
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "game_players#0"
      ]
    },
    "1212": {
      "op": "pushbytes 0x0000",
      "defined_out": [
        "game_players#0",
        "players#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "game_players#0",
        "players#0"
      ]
    },
    "1216": {
      "op": "swap",
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "game_players#0"
      ]
    },
    "1217": {
      "op": "len",
      "defined_out": [
        "game_players#0",
        "players#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0"
      ]
    },
    "1218": {
      "op": "intc_1 // 0",
      "defined_out": [
        "game_players#0",
        "i#0",
        "players#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0"
      ]
    },
    "1219": {
      "block": "read_game_players_for_header@1",
      "stack_in": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "i#0"
      ]
    },
    "1221": {
      "op": "frame_dig 4",
      "defined_out": [
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "i#0",
        "tmp%0#0"
      ]
    },
    "1223": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "1224": {
      "op": "bz read_game_players_after_for@6",
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0"
      ]
    },
    "1227": {
      "op": "frame_dig 2",
      "defined_out": [
        "game_players#0",
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "game_players#0"
      ]
    },
    "1229": {
      "op": "frame_dig 5",
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "game_players#0",
        "i#0"
      ]
    },
    "1231": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "game_players#0",
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "game_players#0",
        "i#0",
        "32"
      ]
    },
    "1232": {
      "op": "extract3",
      "defined_out": [
        "game_players#0",
        "i#0",
        "player_addr_bytes#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "player_addr_bytes#0"
      ]
    },
    "1233": {
      "op": "dup",
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "player_addr_bytes#0",
        "player_addr_bytes#0"
      ]
    },
    "1234": {
      "op": "frame_bury 0",
      "defined_out": [
        "game_players#0",
        "i#0",
        "player_addr_bytes#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "player_addr_bytes#0"
      ]
    },
    "1236": {
      "op": "bytec 9 // 0x0000000000000000000000000000000000000000000000000000000000000000",
      "defined_out": [
        "0x0000000000000000000000000000000000000000000000000000000000000000",
        "game_players#0",
        "i#0",
        "player_addr_bytes#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "player_addr_bytes#0",
        "0x0000000000000000000000000000000000000000000000000000000000000000"
      ]
    },
    "1238": {
      "op": "!=",
      "defined_out": [
        "game_players#0",
        "i#0",
        "player_addr_bytes#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "tmp%1#0"
      ]
    },
    "1239": {
      "op": "frame_dig 3",
      "defined_out": [
        "game_players#0",
        "i#0",
        "player_addr_bytes#0",
        "players#9",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "tmp%1#0",
        "players#9"
      ]
    },
    "1241": {
      "op": "frame_bury 1",
      "defined_out": [
        "game_players#0",
        "i#0",
        "player_addr_bytes#0",
        "players#9",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "tmp%1#0"
      ]
    },
    "1243": {
      "op": "bz read_game_players_after_if_else@4",
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0"
      ]
    },
    "1246": {
      "op": "frame_dig 3",
      "defined_out": [
        "game_players#0",
        "i#0",
        "player_addr_bytes#0",
        "players#0",
        "players#9",
        "tmp%0#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "players#0"
      ]
    },
    "1248": {
      "op": "extract 2 0",
      "defined_out": [
        "expr_value_trimmed%0#0",
        "game_players#0",
        "i#0",
        "player_addr_bytes#0",
        "players#0",
        "players#9",
        "tmp%0#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "expr_value_trimmed%0#0"
      ]
    },
    "1251": {
      "op": "frame_dig 0",
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "player_addr_bytes#0"
      ]
    },
    "1253": {
      "op": "concat",
      "defined_out": [
        "concatenated%0#0",
        "game_players#0",
        "i#0",
        "player_addr_bytes#0",
        "players#0",
        "players#9",
        "tmp%0#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "concatenated%0#0"
      ]
    },
    "1254": {
      "op": "dup",
      "defined_out": [
        "concatenated%0#0",
        "concatenated%0#0 (copy)",
        "game_players#0",
        "i#0",
        "player_addr_bytes#0",
        "players#0",
        "players#9",
        "tmp%0#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "concatenated%0#0",
        "concatenated%0#0 (copy)"
      ]
    },
    "1255": {
      "op": "len",
      "defined_out": [
        "byte_len%0#0",
        "concatenated%0#0",
        "game_players#0",
        "i#0",
        "player_addr_bytes#0",
        "players#0",
        "players#9",
        "tmp%0#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "concatenated%0#0",
        "byte_len%0#0"
      ]
    },
    "1256": {
      "op": "intc_3 // 32",
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "concatenated%0#0",
        "byte_len%0#0",
        "32"
      ]
    },
    "1257": {
      "op": "/",
      "defined_out": [
        "concatenated%0#0",
        "game_players#0",
        "i#0",
        "len_%0#0",
        "player_addr_bytes#0",
        "players#0",
        "players#9",
        "tmp%0#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "concatenated%0#0",
        "len_%0#0"
      ]
    },
    "1258": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "concatenated%0#0",
        "game_players#0",
        "i#0",
        "player_addr_bytes#0",
        "players#0",
        "players#9",
        "tmp%0#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "concatenated%0#0",
        "as_bytes%0#0"
      ]
    },
    "1259": {
      "op": "extract 6 2",
      "defined_out": [
        "concatenated%0#0",
        "game_players#0",
        "i#0",
        "len_16_bit%0#0",
        "player_addr_bytes#0",
        "players#0",
        "players#9",
        "tmp%0#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "concatenated%0#0",
        "len_16_bit%0#0"
      ]
    },
    "1262": {
      "op": "swap",
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "len_16_bit%0#0",
        "concatenated%0#0"
      ]
    },
    "1263": {
      "op": "concat",
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "players#9"
      ]
    },
    "1264": {
      "op": "frame_bury 1",
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0"
      ]
    },
    "1266": {
      "block": "read_game_players_after_if_else@4",
      "stack_in": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "players#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "players#0"
      ]
    },
    "1268": {
      "op": "frame_bury 3",
      "defined_out": [
        "players#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0"
      ]
    },
    "1270": {
      "op": "frame_dig 5",
      "defined_out": [
        "i#0",
        "players#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "i#0"
      ]
    },
    "1272": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "i#0",
        "players#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "i#0",
        "32"
      ]
    },
    "1273": {
      "op": "+",
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "i#0"
      ]
    },
    "1274": {
      "op": "frame_bury 5",
      "defined_out": [
        "i#0",
        "players#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0"
      ]
    },
    "1276": {
      "op": "b read_game_players_for_header@1"
    },
    "1279": {
      "block": "read_game_players_after_for@6",
      "stack_in": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "players#0"
      ],
      "stack_out": [
        "player_addr_bytes#0",
        "players#9",
        "game_players#0",
        "players#0",
        "tmp%0#0",
        "i#0",
        "players#0"
      ]
    },
    "1281": {
      "op": "frame_bury 0"
    },
    "1283": {
      "retsub": true,
      "op": "retsub"
    },
    "1284": {
      "subroutine": "smart_contracts.pieout.contract.Pieout.generate",
      "params": {},
      "block": "generate",
      "stack_in": [],
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1286": {
      "op": "global CreatorAddress",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "1288": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1289": {
      "error": "Transaction sender address must match application creator address.",
      "op": "assert // Transaction sender address must match application creator address.",
      "stack_out": []
    },
    "1290": {
      "op": "bytec 4 // \"game_id\"",
      "defined_out": [
        "\"game_id\""
      ],
      "stack_out": [
        "\"game_id\""
      ]
    },
    "1292": {
      "op": "intc_1 // 0",
      "defined_out": [
        "\"game_id\"",
        "0"
      ],
      "stack_out": [
        "\"game_id\"",
        "0"
      ]
    },
    "1293": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1294": {
      "op": "bytec 6 // \"commit_rand_salt_id\"",
      "defined_out": [
        "\"commit_rand_salt_id\""
      ],
      "stack_out": [
        "\"commit_rand_salt_id\""
      ]
    },
    "1296": {
      "op": "intc_1 // 0",
      "stack_out": [
        "\"commit_rand_salt_id\"",
        "0"
      ]
    },
    "1297": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1298": {
      "op": "bytec 8 // \"ath_score\"",
      "defined_out": [
        "\"ath_score\""
      ],
      "stack_out": [
        "\"ath_score\""
      ]
    },
    "1300": {
      "op": "intc_1 // 0",
      "stack_out": [
        "\"ath_score\"",
        "0"
      ]
    },
    "1301": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1302": {
      "op": "bytec 10 // \"ath_address\"",
      "defined_out": [
        "\"ath_address\""
      ],
      "stack_out": [
        "\"ath_address\""
      ]
    },
    "1304": {
      "op": "global ZeroAddress",
      "defined_out": [
        "\"ath_address\"",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "\"ath_address\"",
        "materialized_values%0#0"
      ]
    },
    "1306": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1307": {
      "retsub": true,
      "op": "retsub"
    },
    "1308": {
      "subroutine": "smart_contracts.pieout.contract.Pieout.new_game",
      "params": {
        "max_players#0": "uint64",
        "box_s_pay#0": "uint64",
        "box_c_pay#0": "uint64",
        "box_p_pay#0": "uint64",
        "stake_pay#0": "uint64"
      },
      "block": "new_game",
      "stack_in": [],
      "op": "proto 5 0"
    },
    "1311": {
      "op": "global GroupSize",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1313": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "5"
      ]
    },
    "1315": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1316": {
      "error": "Invalid group size. Ensure number of transaction in group is within bounds.",
      "op": "assert // Invalid group size. Ensure number of transaction in group is within bounds.",
      "stack_out": []
    },
    "1317": {
      "op": "frame_dig -5",
      "defined_out": [
        "max_players#0 (copy)"
      ],
      "stack_out": [
        "max_players#0 (copy)"
      ]
    },
    "1319": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "max_players#0 (copy)"
      ],
      "stack_out": [
        "max_players#0 (copy)",
        "10"
      ]
    },
    "1321": {
      "op": "<=",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1322": {
      "error": "Player cap overflow. Max players limit must not be exceeded.",
      "op": "assert // Player cap overflow. Max players limit must not be exceeded.",
      "stack_out": []
    },
    "1323": {
      "op": "frame_dig -1",
      "defined_out": [
        "stake_pay#0 (copy)"
      ],
      "stack_out": [
        "stake_pay#0 (copy)"
      ]
    },
    "1325": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1327": {
      "op": "dup",
      "defined_out": [
        "tmp%3#0",
        "tmp%3#0 (copy)"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%3#0 (copy)"
      ]
    },
    "1328": {
      "op": "intc 5 // 1000",
      "defined_out": [
        "1000",
        "tmp%3#0",
        "tmp%3#0 (copy)"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%3#0 (copy)",
        "1000"
      ]
    },
    "1330": {
      "op": ">=",
      "defined_out": [
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "1331": {
      "error": "Insufficient funds. Stake pay amount is not enough to cover application MBR.",
      "op": "assert // Insufficient funds. Stake pay amount is not enough to cover application MBR.",
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1332": {
      "op": "frame_dig -4",
      "defined_out": [
        "box_s_pay#0 (copy)",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "box_s_pay#0 (copy)"
      ]
    },
    "1334": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%3#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%5#0"
      ]
    },
    "1336": {
      "op": "intc 10 // 67300",
      "defined_out": [
        "67300",
        "tmp%3#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%5#0",
        "67300"
      ]
    },
    "1338": {
      "op": ">=",
      "defined_out": [
        "tmp%3#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%6#0"
      ]
    },
    "1339": {
      "error": "Insufficient funds. Box pay amount is not enough to cover application MBR.",
      "op": "assert // Insufficient funds. Box pay amount is not enough to cover application MBR.",
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1340": {
      "op": "frame_dig -3",
      "defined_out": [
        "box_c_pay#0 (copy)",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "box_c_pay#0 (copy)"
      ]
    },
    "1342": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%3#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%7#0"
      ]
    },
    "1344": {
      "op": "intc 6 // 19300",
      "defined_out": [
        "19300",
        "tmp%3#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%7#0",
        "19300"
      ]
    },
    "1346": {
      "op": ">=",
      "defined_out": [
        "tmp%3#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%8#0"
      ]
    },
    "1347": {
      "error": "Insufficient funds. Box pay amount is not enough to cover application MBR.",
      "op": "assert // Insufficient funds. Box pay amount is not enough to cover application MBR.",
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1348": {
      "op": "frame_dig -2",
      "defined_out": [
        "box_p_pay#0 (copy)",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "box_p_pay#0 (copy)"
      ]
    },
    "1350": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%3#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%9#0"
      ]
    },
    "1352": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "tmp%3#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%9#0",
        "32"
      ]
    },
    "1353": {
      "op": "frame_dig -5",
      "stack_out": [
        "tmp%3#0",
        "tmp%9#0",
        "32",
        "max_players#0 (copy)"
      ]
    },
    "1355": {
      "op": "*",
      "defined_out": [
        "tmp%3#0",
        "tmp%9#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%9#0",
        "to_encode%0#0"
      ]
    },
    "1356": {
      "op": "dup",
      "defined_out": [
        "tmp%3#0",
        "tmp%9#0",
        "to_encode%0#0",
        "to_encode%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%9#0",
        "to_encode%0#0",
        "to_encode%0#0 (copy)"
      ]
    },
    "1357": {
      "op": "itob",
      "defined_out": [
        "tmp%3#0",
        "tmp%9#0",
        "to_encode%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%9#0",
        "to_encode%0#0",
        "val_as_bytes%0#0"
      ]
    },
    "1358": {
      "op": "dup",
      "defined_out": [
        "tmp%3#0",
        "tmp%9#0",
        "to_encode%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%9#0",
        "to_encode%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%0#0 (copy)"
      ]
    },
    "1359": {
      "op": "bitlen",
      "defined_out": [
        "bitlen%0#0",
        "tmp%3#0",
        "tmp%9#0",
        "to_encode%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%9#0",
        "to_encode%0#0",
        "val_as_bytes%0#0",
        "bitlen%0#0"
      ]
    },
    "1360": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "bitlen%0#0",
        "tmp%3#0",
        "tmp%9#0",
        "to_encode%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%9#0",
        "to_encode%0#0",
        "val_as_bytes%0#0",
        "bitlen%0#0",
        "16"
      ]
    },
    "1362": {
      "op": "<=",
      "defined_out": [
        "no_overflow%0#0",
        "tmp%3#0",
        "tmp%9#0",
        "to_encode%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%9#0",
        "to_encode%0#0",
        "val_as_bytes%0#0",
        "no_overflow%0#0"
      ]
    },
    "1363": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "tmp%3#0",
        "tmp%9#0",
        "to_encode%0#0",
        "val_as_bytes%0#0"
      ]
    },
    "1364": {
      "op": "extract 6 2",
      "defined_out": [
        "tmp%3#0",
        "tmp%9#0",
        "to_encode%0#0",
        "uint16%0#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%9#0",
        "to_encode%0#0",
        "uint16%0#0"
      ]
    },
    "1367": {
      "op": "pushbytes 0x0a",
      "defined_out": [
        "0x0a",
        "tmp%3#0",
        "tmp%9#0",
        "to_encode%0#0",
        "uint16%0#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%9#0",
        "to_encode%0#0",
        "uint16%0#0",
        "0x0a"
      ]
    },
    "1370": {
      "op": "swap",
      "stack_out": [
        "tmp%3#0",
        "tmp%9#0",
        "to_encode%0#0",
        "0x0a",
        "uint16%0#0"
      ]
    },
    "1371": {
      "callsub": "smart_contracts.pieout.contract.Pieout.calc_single_box_fee",
      "op": "callsub calc_single_box_fee",
      "defined_out": [
        "tmp%10#0",
        "tmp%3#0",
        "tmp%9#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%10#0"
      ]
    },
    "1374": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%3#0",
        "to_encode%0#0",
        "tmp%10#0",
        "tmp%9#0"
      ]
    },
    "1376": {
      "op": "<=",
      "defined_out": [
        "tmp%11#0",
        "tmp%3#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "to_encode%0#0",
        "tmp%11#0"
      ]
    },
    "1377": {
      "error": "Insufficient funds. Box pay amount is not enough to cover application MBR.",
      "op": "assert // Insufficient funds. Box pay amount is not enough to cover application MBR.",
      "stack_out": [
        "tmp%3#0",
        "to_encode%0#0"
      ]
    },
    "1378": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%3#0",
        "to_encode%0#0",
        "stake_pay#0 (copy)"
      ]
    },
    "1380": {
      "op": "gtxns Sender",
      "defined_out": [
        "tmp%12#0",
        "tmp%3#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "to_encode%0#0",
        "tmp%12#0"
      ]
    },
    "1382": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%12#0",
        "tmp%13#0",
        "tmp%3#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "to_encode%0#0",
        "tmp%12#0",
        "tmp%13#0"
      ]
    },
    "1384": {
      "op": "==",
      "defined_out": [
        "tmp%14#0",
        "tmp%3#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "to_encode%0#0",
        "tmp%14#0"
      ]
    },
    "1385": {
      "error": "Stake payment sender address must match transaction sender address.",
      "op": "assert // Stake payment sender address must match transaction sender address.",
      "stack_out": [
        "tmp%3#0",
        "to_encode%0#0"
      ]
    },
    "1386": {
      "op": "frame_dig -4",
      "stack_out": [
        "tmp%3#0",
        "to_encode%0#0",
        "box_s_pay#0 (copy)"
      ]
    },
    "1388": {
      "op": "gtxns Sender",
      "defined_out": [
        "tmp%15#0",
        "tmp%3#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "to_encode%0#0",
        "tmp%15#0"
      ]
    },
    "1390": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%15#0",
        "tmp%16#0",
        "tmp%3#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "to_encode%0#0",
        "tmp%15#0",
        "tmp%16#0"
      ]
    },
    "1392": {
      "op": "==",
      "defined_out": [
        "tmp%17#0",
        "tmp%3#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "to_encode%0#0",
        "tmp%17#0"
      ]
    },
    "1393": {
      "error": "Box payment sender address must match transaction sender address.",
      "op": "assert // Box payment sender address must match transaction sender address.",
      "stack_out": [
        "tmp%3#0",
        "to_encode%0#0"
      ]
    },
    "1394": {
      "op": "frame_dig -3",
      "stack_out": [
        "tmp%3#0",
        "to_encode%0#0",
        "box_c_pay#0 (copy)"
      ]
    },
    "1396": {
      "op": "gtxns Sender",
      "defined_out": [
        "tmp%18#0",
        "tmp%3#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "to_encode%0#0",
        "tmp%18#0"
      ]
    },
    "1398": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%18#0",
        "tmp%19#0",
        "tmp%3#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "to_encode%0#0",
        "tmp%18#0",
        "tmp%19#0"
      ]
    },
    "1400": {
      "op": "==",
      "defined_out": [
        "tmp%20#0",
        "tmp%3#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "to_encode%0#0",
        "tmp%20#0"
      ]
    },
    "1401": {
      "error": "Box payment sender address must match transaction sender address.",
      "op": "assert // Box payment sender address must match transaction sender address.",
      "stack_out": [
        "tmp%3#0",
        "to_encode%0#0"
      ]
    },
    "1402": {
      "op": "frame_dig -2",
      "stack_out": [
        "tmp%3#0",
        "to_encode%0#0",
        "box_p_pay#0 (copy)"
      ]
    },
    "1404": {
      "op": "gtxns Sender",
      "defined_out": [
        "tmp%21#0",
        "tmp%3#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "to_encode%0#0",
        "tmp%21#0"
      ]
    },
    "1406": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%21#0",
        "tmp%22#0",
        "tmp%3#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "to_encode%0#0",
        "tmp%21#0",
        "tmp%22#0"
      ]
    },
    "1408": {
      "op": "==",
      "defined_out": [
        "tmp%23#0",
        "tmp%3#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "to_encode%0#0",
        "tmp%23#0"
      ]
    },
    "1409": {
      "error": "Box payment sender address must match transaction sender address.",
      "op": "assert // Box payment sender address must match transaction sender address.",
      "stack_out": [
        "tmp%3#0",
        "to_encode%0#0"
      ]
    },
    "1410": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%3#0",
        "to_encode%0#0",
        "stake_pay#0 (copy)"
      ]
    },
    "1412": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%24#0",
        "tmp%3#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "to_encode%0#0",
        "tmp%24#0"
      ]
    },
    "1414": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%24#0",
        "tmp%25#0",
        "tmp%3#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "to_encode%0#0",
        "tmp%24#0",
        "tmp%25#0"
      ]
    },
    "1416": {
      "op": "==",
      "defined_out": [
        "tmp%26#0",
        "tmp%3#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "to_encode%0#0",
        "tmp%26#0"
      ]
    },
    "1417": {
      "error": "Stake payment reciever address must match application address.",
      "op": "assert // Stake payment reciever address must match application address.",
      "stack_out": [
        "tmp%3#0",
        "to_encode%0#0"
      ]
    },
    "1418": {
      "op": "frame_dig -4",
      "stack_out": [
        "tmp%3#0",
        "to_encode%0#0",
        "box_s_pay#0 (copy)"
      ]
    },
    "1420": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%27#0",
        "tmp%3#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "to_encode%0#0",
        "tmp%27#0"
      ]
    },
    "1422": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%27#0",
        "tmp%28#0",
        "tmp%3#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "to_encode%0#0",
        "tmp%27#0",
        "tmp%28#0"
      ]
    },
    "1424": {
      "op": "==",
      "defined_out": [
        "tmp%29#0",
        "tmp%3#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "to_encode%0#0",
        "tmp%29#0"
      ]
    },
    "1425": {
      "error": "Box payment reciever address must match application address.",
      "op": "assert // Box payment reciever address must match application address.",
      "stack_out": [
        "tmp%3#0",
        "to_encode%0#0"
      ]
    },
    "1426": {
      "op": "frame_dig -3",
      "stack_out": [
        "tmp%3#0",
        "to_encode%0#0",
        "box_c_pay#0 (copy)"
      ]
    },
    "1428": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%3#0",
        "tmp%30#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "to_encode%0#0",
        "tmp%30#0"
      ]
    },
    "1430": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%3#0",
        "tmp%30#0",
        "tmp%31#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "to_encode%0#0",
        "tmp%30#0",
        "tmp%31#0"
      ]
    },
    "1432": {
      "op": "==",
      "defined_out": [
        "tmp%3#0",
        "tmp%32#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "to_encode%0#0",
        "tmp%32#0"
      ]
    },
    "1433": {
      "error": "Box payment reciever address must match application address.",
      "op": "assert // Box payment reciever address must match application address.",
      "stack_out": [
        "tmp%3#0",
        "to_encode%0#0"
      ]
    },
    "1434": {
      "op": "frame_dig -2",
      "stack_out": [
        "tmp%3#0",
        "to_encode%0#0",
        "box_p_pay#0 (copy)"
      ]
    },
    "1436": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%3#0",
        "tmp%33#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "to_encode%0#0",
        "tmp%33#0"
      ]
    },
    "1438": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%3#0",
        "tmp%33#0",
        "tmp%34#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "to_encode%0#0",
        "tmp%33#0",
        "tmp%34#0"
      ]
    },
    "1440": {
      "op": "==",
      "defined_out": [
        "tmp%3#0",
        "tmp%35#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "to_encode%0#0",
        "tmp%35#0"
      ]
    },
    "1441": {
      "error": "Box payment reciever address must match application address.",
      "op": "assert // Box payment reciever address must match application address.",
      "stack_out": [
        "tmp%3#0",
        "to_encode%0#0"
      ]
    },
    "1442": {
      "op": "frame_dig -5",
      "stack_out": [
        "tmp%3#0",
        "to_encode%0#0",
        "max_players#0 (copy)"
      ]
    },
    "1444": {
      "op": "itob",
      "defined_out": [
        "tmp%3#0",
        "to_encode%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "to_encode%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "1445": {
      "op": "dup",
      "defined_out": [
        "tmp%3#0",
        "to_encode%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%1#0 (copy)"
      ],
      "stack_out": [
        "tmp%3#0",
        "to_encode%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%1#0 (copy)"
      ]
    },
    "1446": {
      "op": "bitlen",
      "defined_out": [
        "bitlen%1#0",
        "tmp%3#0",
        "to_encode%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "to_encode%0#0",
        "val_as_bytes%1#0",
        "bitlen%1#0"
      ]
    },
    "1447": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "bitlen%1#0",
        "tmp%3#0",
        "to_encode%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "to_encode%0#0",
        "val_as_bytes%1#0",
        "bitlen%1#0",
        "8"
      ]
    },
    "1449": {
      "op": "<=",
      "defined_out": [
        "no_overflow%1#0",
        "tmp%3#0",
        "to_encode%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "to_encode%0#0",
        "val_as_bytes%1#0",
        "no_overflow%1#0"
      ]
    },
    "1450": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "tmp%3#0",
        "to_encode%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "1451": {
      "op": "extract 7 1",
      "defined_out": [
        "tmp%3#0",
        "to_encode%0#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "to_encode%0#0",
        "uint8%0#0"
      ]
    },
    "1454": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "tmp%3#0",
        "tmp%36#0",
        "to_encode%0#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "to_encode%0#0",
        "uint8%0#0",
        "tmp%36#0"
      ]
    },
    "1456": {
      "op": "intc 4 // 3600",
      "defined_out": [
        "3600",
        "tmp%3#0",
        "tmp%36#0",
        "to_encode%0#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "to_encode%0#0",
        "uint8%0#0",
        "tmp%36#0",
        "3600"
      ]
    },
    "1458": {
      "op": "+",
      "defined_out": [
        "tmp%3#0",
        "to_encode%0#0",
        "to_encode%1#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "to_encode%0#0",
        "uint8%0#0",
        "to_encode%1#0"
      ]
    },
    "1459": {
      "op": "itob",
      "defined_out": [
        "tmp%3#0",
        "to_encode%0#0",
        "uint8%0#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "to_encode%0#0",
        "uint8%0#0",
        "val_as_bytes%2#0"
      ]
    },
    "1460": {
      "op": "uncover 3",
      "stack_out": [
        "to_encode%0#0",
        "uint8%0#0",
        "val_as_bytes%2#0",
        "tmp%3#0"
      ]
    },
    "1462": {
      "op": "itob",
      "defined_out": [
        "to_encode%0#0",
        "uint8%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "uint8%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ]
    },
    "1463": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%37#0",
        "to_encode%0#0",
        "uint8%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "uint8%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "tmp%37#0"
      ]
    },
    "1465": {
      "op": "global ZeroAddress",
      "defined_out": [
        "tmp%37#0",
        "tmp%38#0",
        "to_encode%0#0",
        "uint8%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "uint8%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "tmp%37#0",
        "tmp%38#0"
      ]
    },
    "1467": {
      "op": "dupn 2",
      "defined_out": [
        "tmp%37#0",
        "tmp%38#0",
        "tmp%39#0",
        "tmp%40#0",
        "to_encode%0#0",
        "uint8%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "uint8%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "tmp%37#0",
        "tmp%38#0",
        "tmp%39#0",
        "tmp%40#0"
      ]
    },
    "1469": {
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x00",
        "tmp%37#0",
        "tmp%38#0",
        "tmp%39#0",
        "tmp%40#0",
        "to_encode%0#0",
        "uint8%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "uint8%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "tmp%37#0",
        "tmp%38#0",
        "tmp%39#0",
        "tmp%40#0",
        "0x00"
      ]
    },
    "1470": {
      "op": "uncover 7",
      "stack_out": [
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "tmp%37#0",
        "tmp%38#0",
        "tmp%39#0",
        "tmp%40#0",
        "0x00",
        "uint8%0#0"
      ]
    },
    "1472": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "tmp%37#0",
        "tmp%38#0",
        "tmp%39#0",
        "tmp%40#0",
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "tmp%37#0",
        "tmp%38#0",
        "tmp%39#0",
        "tmp%40#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "1473": {
      "op": "pushbytes 0x01",
      "defined_out": [
        "0x01",
        "encoded_tuple_buffer%2#0",
        "tmp%37#0",
        "tmp%38#0",
        "tmp%39#0",
        "tmp%40#0",
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "tmp%37#0",
        "tmp%38#0",
        "tmp%39#0",
        "tmp%40#0",
        "encoded_tuple_buffer%2#0",
        "0x01"
      ]
    },
    "1476": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "tmp%37#0",
        "tmp%38#0",
        "tmp%39#0",
        "tmp%40#0",
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "tmp%37#0",
        "tmp%38#0",
        "tmp%39#0",
        "tmp%40#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "1477": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "tmp%37#0",
        "tmp%38#0",
        "tmp%39#0",
        "tmp%40#0",
        "encoded_tuple_buffer%3#0",
        "0x00"
      ]
    },
    "1478": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%4#0",
        "tmp%37#0",
        "tmp%38#0",
        "tmp%39#0",
        "tmp%40#0",
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "tmp%37#0",
        "tmp%38#0",
        "tmp%39#0",
        "tmp%40#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "1479": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "tmp%37#0",
        "tmp%38#0",
        "tmp%39#0",
        "tmp%40#0",
        "encoded_tuple_buffer%4#0",
        "0x00"
      ]
    },
    "1480": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%5#0",
        "tmp%37#0",
        "tmp%38#0",
        "tmp%39#0",
        "tmp%40#0",
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "tmp%37#0",
        "tmp%38#0",
        "tmp%39#0",
        "tmp%40#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "1481": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "tmp%37#0",
        "tmp%38#0",
        "tmp%39#0",
        "tmp%40#0",
        "encoded_tuple_buffer%5#0",
        "0x00"
      ]
    },
    "1482": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%6#0",
        "tmp%37#0",
        "tmp%38#0",
        "tmp%39#0",
        "tmp%40#0",
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "tmp%37#0",
        "tmp%38#0",
        "tmp%39#0",
        "tmp%40#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "1483": {
      "op": "bytec 11 // 0x0020",
      "defined_out": [
        "0x0020",
        "encoded_tuple_buffer%6#0",
        "tmp%37#0",
        "tmp%38#0",
        "tmp%39#0",
        "tmp%40#0",
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "tmp%37#0",
        "tmp%38#0",
        "tmp%39#0",
        "tmp%40#0",
        "encoded_tuple_buffer%6#0",
        "0x0020"
      ]
    },
    "1485": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%7#0",
        "tmp%37#0",
        "tmp%38#0",
        "tmp%39#0",
        "tmp%40#0",
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "tmp%37#0",
        "tmp%38#0",
        "tmp%39#0",
        "tmp%40#0",
        "encoded_tuple_buffer%7#0"
      ]
    },
    "1486": {
      "op": "uncover 6",
      "stack_out": [
        "to_encode%0#0",
        "val_as_bytes%3#0",
        "tmp%37#0",
        "tmp%38#0",
        "tmp%39#0",
        "tmp%40#0",
        "encoded_tuple_buffer%7#0",
        "val_as_bytes%2#0"
      ]
    },
    "1488": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%8#0",
        "tmp%37#0",
        "tmp%38#0",
        "tmp%39#0",
        "tmp%40#0",
        "to_encode%0#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "val_as_bytes%3#0",
        "tmp%37#0",
        "tmp%38#0",
        "tmp%39#0",
        "tmp%40#0",
        "encoded_tuple_buffer%8#0"
      ]
    },
    "1489": {
      "op": "uncover 5",
      "stack_out": [
        "to_encode%0#0",
        "tmp%37#0",
        "tmp%38#0",
        "tmp%39#0",
        "tmp%40#0",
        "encoded_tuple_buffer%8#0",
        "val_as_bytes%3#0"
      ]
    },
    "1491": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%9#0",
        "tmp%37#0",
        "tmp%38#0",
        "tmp%39#0",
        "tmp%40#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "tmp%37#0",
        "tmp%38#0",
        "tmp%39#0",
        "tmp%40#0",
        "encoded_tuple_buffer%9#0"
      ]
    },
    "1492": {
      "op": "uncover 4",
      "stack_out": [
        "to_encode%0#0",
        "tmp%38#0",
        "tmp%39#0",
        "tmp%40#0",
        "encoded_tuple_buffer%9#0",
        "tmp%37#0"
      ]
    },
    "1494": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%10#0",
        "tmp%38#0",
        "tmp%39#0",
        "tmp%40#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "tmp%38#0",
        "tmp%39#0",
        "tmp%40#0",
        "encoded_tuple_buffer%10#0"
      ]
    },
    "1495": {
      "op": "uncover 3",
      "stack_out": [
        "to_encode%0#0",
        "tmp%39#0",
        "tmp%40#0",
        "encoded_tuple_buffer%10#0",
        "tmp%38#0"
      ]
    },
    "1497": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%11#0",
        "tmp%39#0",
        "tmp%40#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "tmp%39#0",
        "tmp%40#0",
        "encoded_tuple_buffer%11#0"
      ]
    },
    "1498": {
      "op": "uncover 2",
      "stack_out": [
        "to_encode%0#0",
        "tmp%40#0",
        "encoded_tuple_buffer%11#0",
        "tmp%39#0"
      ]
    },
    "1500": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%12#0",
        "tmp%40#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "tmp%40#0",
        "encoded_tuple_buffer%12#0"
      ]
    },
    "1501": {
      "op": "swap",
      "stack_out": [
        "to_encode%0#0",
        "encoded_tuple_buffer%12#0",
        "tmp%40#0"
      ]
    },
    "1502": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%13#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "encoded_tuple_buffer%13#0"
      ]
    },
    "1503": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "encoded_tuple_buffer%13#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "encoded_tuple_buffer%13#0",
        "0"
      ]
    },
    "1504": {
      "op": "bytec 4 // \"game_id\"",
      "defined_out": [
        "\"game_id\"",
        "0",
        "encoded_tuple_buffer%13#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "encoded_tuple_buffer%13#0",
        "0",
        "\"game_id\""
      ]
    },
    "1506": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_tuple_buffer%13#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "encoded_tuple_buffer%13#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1507": {
      "error": "check self.game_id exists",
      "op": "assert // check self.game_id exists",
      "stack_out": [
        "to_encode%0#0",
        "encoded_tuple_buffer%13#0",
        "maybe_value%0#0"
      ]
    },
    "1508": {
      "op": "itob",
      "defined_out": [
        "encoded_tuple_buffer%13#0",
        "encoded_value%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "encoded_tuple_buffer%13#0",
        "encoded_value%0#0"
      ]
    },
    "1509": {
      "op": "bytec_2 // \"s_\"",
      "defined_out": [
        "\"s_\"",
        "encoded_tuple_buffer%13#0",
        "encoded_value%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "encoded_tuple_buffer%13#0",
        "encoded_value%0#0",
        "\"s_\""
      ]
    },
    "1510": {
      "op": "swap",
      "stack_out": [
        "to_encode%0#0",
        "encoded_tuple_buffer%13#0",
        "\"s_\"",
        "encoded_value%0#0"
      ]
    },
    "1511": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_tuple_buffer%13#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "encoded_tuple_buffer%13#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1512": {
      "op": "swap",
      "stack_out": [
        "to_encode%0#0",
        "box_prefixed_key%0#0",
        "encoded_tuple_buffer%13#0"
      ]
    },
    "1513": {
      "op": "box_put",
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "1514": {
      "op": "bzero",
      "defined_out": [
        "materialized_values%0#0"
      ],
      "stack_out": [
        "materialized_values%0#0"
      ]
    },
    "1515": {
      "op": "intc_1 // 0",
      "stack_out": [
        "materialized_values%0#0",
        "0"
      ]
    },
    "1516": {
      "op": "bytec 4 // \"game_id\"",
      "stack_out": [
        "materialized_values%0#0",
        "0",
        "\"game_id\""
      ]
    },
    "1518": {
      "op": "app_global_get_ex",
      "defined_out": [
        "materialized_values%0#0",
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "materialized_values%0#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1519": {
      "error": "check self.game_id exists",
      "op": "assert // check self.game_id exists",
      "stack_out": [
        "materialized_values%0#0",
        "maybe_value%1#0"
      ]
    },
    "1520": {
      "op": "itob",
      "defined_out": [
        "encoded_value%1#0",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "materialized_values%0#0",
        "encoded_value%1#0"
      ]
    },
    "1521": {
      "op": "bytec_1 // \"p_\"",
      "defined_out": [
        "\"p_\"",
        "encoded_value%1#0",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "materialized_values%0#0",
        "encoded_value%1#0",
        "\"p_\""
      ]
    },
    "1522": {
      "op": "swap",
      "stack_out": [
        "materialized_values%0#0",
        "\"p_\"",
        "encoded_value%1#0"
      ]
    },
    "1523": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%1#0",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "materialized_values%0#0",
        "box_prefixed_key%1#0"
      ]
    },
    "1524": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%1#0",
        "box_prefixed_key%1#0 (copy)",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "materialized_values%0#0",
        "box_prefixed_key%1#0",
        "box_prefixed_key%1#0 (copy)"
      ]
    },
    "1525": {
      "op": "box_del",
      "defined_out": [
        "box_prefixed_key%1#0",
        "materialized_values%0#0",
        "{box_del}"
      ],
      "stack_out": [
        "materialized_values%0#0",
        "box_prefixed_key%1#0",
        "{box_del}"
      ]
    },
    "1526": {
      "op": "pop",
      "stack_out": [
        "materialized_values%0#0",
        "box_prefixed_key%1#0"
      ]
    },
    "1527": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%1#0",
        "materialized_values%0#0"
      ]
    },
    "1528": {
      "op": "box_put",
      "stack_out": []
    },
    "1529": {
      "op": "bytec_3 // \"c_\"",
      "defined_out": [
        "\"c_\""
      ],
      "stack_out": [
        "\"c_\""
      ]
    },
    "1530": {
      "op": "txn Sender",
      "defined_out": [
        "\"c_\"",
        "materialized_values%1#0"
      ],
      "stack_out": [
        "\"c_\"",
        "materialized_values%1#0"
      ]
    },
    "1532": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0"
      ]
    },
    "1533": {
      "op": "bytec 7 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "box_prefixed_key%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "0x0000000000000000"
      ]
    },
    "1535": {
      "op": "box_put",
      "stack_out": []
    },
    "1536": {
      "op": "intc_1 // 0",
      "stack_out": [
        "0"
      ]
    },
    "1537": {
      "op": "bytec 4 // \"game_id\"",
      "stack_out": [
        "0",
        "\"game_id\""
      ]
    },
    "1539": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "1540": {
      "error": "check self.game_id exists",
      "op": "assert // check self.game_id exists",
      "stack_out": [
        "maybe_value%2#0"
      ]
    },
    "1541": {
      "op": "itob",
      "defined_out": [
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%42#0"
      ]
    },
    "1542": {
      "op": "bytec_1 // \"p_\"",
      "stack_out": [
        "tmp%42#0",
        "\"p_\""
      ]
    },
    "1543": {
      "op": "swap",
      "stack_out": [
        "\"p_\"",
        "tmp%42#0"
      ]
    },
    "1544": {
      "op": "concat",
      "defined_out": [
        "game_players_bref#0"
      ],
      "stack_out": [
        "game_players_bref#0"
      ]
    },
    "1545": {
      "op": "intc_1 // 0"
    },
    "1546": {
      "op": "txn Sender",
      "defined_out": [
        "0",
        "game_players_bref#0",
        "tmp%43#0"
      ],
      "stack_out": [
        "game_players_bref#0",
        "0",
        "tmp%43#0"
      ]
    },
    "1548": {
      "op": "box_replace",
      "stack_out": []
    },
    "1549": {
      "op": "intc_1 // 0",
      "stack_out": [
        "0"
      ]
    },
    "1550": {
      "op": "bytec 4 // \"game_id\"",
      "stack_out": [
        "0",
        "\"game_id\""
      ]
    },
    "1552": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "1553": {
      "error": "check self.game_id exists",
      "op": "assert // check self.game_id exists",
      "stack_out": [
        "maybe_value%3#0"
      ]
    },
    "1554": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "1"
      ]
    },
    "1555": {
      "op": "+",
      "defined_out": [
        "materialized_values%2#0"
      ],
      "stack_out": [
        "materialized_values%2#0"
      ]
    },
    "1556": {
      "op": "bytec 4 // \"game_id\"",
      "stack_out": [
        "materialized_values%2#0",
        "\"game_id\""
      ]
    },
    "1558": {
      "op": "swap",
      "stack_out": [
        "\"game_id\"",
        "materialized_values%2#0"
      ]
    },
    "1559": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1560": {
      "retsub": true,
      "op": "retsub"
    },
    "1561": {
      "subroutine": "smart_contracts.pieout.contract.Pieout.join_game",
      "params": {
        "game_id#0": "uint64",
        "box_c_pay#0": "uint64",
        "stake_pay#0": "uint64"
      },
      "block": "join_game",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "1564": {
      "op": "global GroupSize",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1566": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "3"
      ]
    },
    "1568": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1569": {
      "error": "Invalid group size. Ensure number of transaction in group is within bounds.",
      "op": "assert // Invalid group size. Ensure number of transaction in group is within bounds.",
      "stack_out": []
    },
    "1570": {
      "op": "frame_dig -3",
      "defined_out": [
        "game_id#0 (copy)"
      ],
      "stack_out": [
        "game_id#0 (copy)"
      ]
    },
    "1572": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "1573": {
      "op": "bytec_2 // \"s_\"",
      "defined_out": [
        "\"s_\"",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "\"s_\""
      ]
    },
    "1574": {
      "op": "dig 1",
      "defined_out": [
        "\"s_\"",
        "encoded_value%0#0",
        "encoded_value%0#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "\"s_\"",
        "encoded_value%0#0 (copy)"
      ]
    },
    "1576": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1577": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "1578": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "_%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1579": {
      "op": "bury 1",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1581": {
      "error": "Box game state not found. Check if Game ID is valid.",
      "op": "assert // Box game state not found. Check if Game ID is valid.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1582": {
      "op": "frame_dig -2",
      "defined_out": [
        "box_c_pay#0 (copy)",
        "box_prefixed_key%0#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "box_c_pay#0 (copy)"
      ]
    },
    "1584": {
      "op": "gtxns Amount",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%2#0"
      ]
    },
    "1586": {
      "op": "intc 6 // 19300",
      "defined_out": [
        "19300",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%2#0",
        "19300"
      ]
    },
    "1588": {
      "op": ">=",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%3#0"
      ]
    },
    "1589": {
      "error": "Insufficient funds. Box pay amount is not enough to cover application MBR.",
      "op": "assert // Insufficient funds. Box pay amount is not enough to cover application MBR.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1590": {
      "op": "frame_dig -2",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "box_c_pay#0 (copy)"
      ]
    },
    "1592": {
      "op": "gtxns Sender",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%4#0"
      ]
    },
    "1594": {
      "op": "txn Sender",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "1596": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%6#0"
      ]
    },
    "1597": {
      "error": "Box payment sender address must match transaction sender address.",
      "op": "assert // Box payment sender address must match transaction sender address.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1598": {
      "op": "frame_dig -2",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "box_c_pay#0 (copy)"
      ]
    },
    "1600": {
      "op": "gtxns Receiver",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%7#0"
      ]
    },
    "1602": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "1604": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%9#0"
      ]
    },
    "1605": {
      "error": "Box payment reciever address must match application address.",
      "op": "assert // Box payment reciever address must match application address.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1606": {
      "op": "frame_dig -1",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "stake_pay#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "stake_pay#0 (copy)"
      ]
    },
    "1608": {
      "op": "gtxns Amount",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%10#0"
      ]
    },
    "1610": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%10#0",
        "tmp%10#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "tmp%10#0 (copy)"
      ]
    },
    "1611": {
      "op": "pushint 258400 // 258400",
      "defined_out": [
        "258400",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%10#0",
        "tmp%10#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "tmp%10#0 (copy)",
        "258400"
      ]
    },
    "1615": {
      "op": ">=",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%10#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "tmp%11#0"
      ]
    },
    "1616": {
      "error": "Insufficient funds. Stake pay amount is not enough to cover application MBR.",
      "op": "assert // Insufficient funds. Stake pay amount is not enough to cover application MBR.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%10#0"
      ]
    },
    "1617": {
      "op": "frame_dig -1",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "stake_pay#0 (copy)"
      ]
    },
    "1619": {
      "op": "gtxns Sender",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%10#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "tmp%12#0"
      ]
    },
    "1621": {
      "op": "txn Sender",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%10#0",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "tmp%12#0",
        "tmp%13#0"
      ]
    },
    "1623": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%10#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "tmp%14#0"
      ]
    },
    "1624": {
      "error": "Stake payment sender address must match transaction sender address.",
      "op": "assert // Stake payment sender address must match transaction sender address.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%10#0"
      ]
    },
    "1625": {
      "op": "frame_dig -1",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "stake_pay#0 (copy)"
      ]
    },
    "1627": {
      "op": "gtxns Receiver",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%10#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "tmp%15#0"
      ]
    },
    "1629": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%10#0",
        "tmp%15#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "tmp%15#0",
        "tmp%16#0"
      ]
    },
    "1631": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%10#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "tmp%17#0"
      ]
    },
    "1632": {
      "error": "Stake payment reciever address must match application address.",
      "op": "assert // Stake payment reciever address must match application address.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%10#0"
      ]
    },
    "1633": {
      "op": "dig 1",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "1635": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "maybe_exists%1#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "maybe_exists%1#0"
      ]
    },
    "1636": {
      "error": "check self.box_game_state entry exists",
      "op": "assert // check self.box_game_state entry exists",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0"
      ]
    },
    "1637": {
      "op": "dig 2",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "1639": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "maybe_exists%2#0",
        "maybe_value%1#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "maybe_value%1#0",
        "maybe_exists%2#0"
      ]
    },
    "1640": {
      "error": "check self.box_game_state entry exists",
      "op": "assert // check self.box_game_state entry exists",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "maybe_value%1#0"
      ]
    },
    "1641": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "maybe_value%1#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "maybe_value%1#0",
        "2"
      ]
    },
    "1642": {
      "op": "getbyte",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%10#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "tmp%19#0"
      ]
    },
    "1643": {
      "op": "frame_dig -3",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "tmp%19#0",
        "game_id#0 (copy)"
      ]
    },
    "1645": {
      "op": "bytec_1 // \"p_\"",
      "defined_out": [
        "\"p_\"",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_id#0 (copy)",
        "game_state#0",
        "tmp%10#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "tmp%19#0",
        "game_id#0 (copy)",
        "\"p_\""
      ]
    },
    "1646": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "game_id#0 (copy)",
        "\"p_\"",
        "tmp%19#0"
      ]
    },
    "1648": {
      "op": "intc_1 // 0",
      "defined_out": [
        "\"p_\"",
        "0",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_id#0 (copy)",
        "game_state#0",
        "tmp%10#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "game_id#0 (copy)",
        "\"p_\"",
        "tmp%19#0",
        "0"
      ]
    },
    "1649": {
      "callsub": "smart_contracts.pieout.subroutines.check_sender_in_game",
      "op": "callsub check_sender_in_game",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%10#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "tmp%20#0"
      ]
    },
    "1652": {
      "op": "!",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%10#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "tmp%21#0"
      ]
    },
    "1653": {
      "error": "Transaction sender is already recognized as a valid player for this game.",
      "op": "assert // Transaction sender is already recognized as a valid player for this game.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0"
      ]
    },
    "1654": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state#0 (copy)",
        "tmp%10#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "1655": {
      "op": "intc_1 // 0",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "game_state#0 (copy)",
        "0"
      ]
    },
    "1656": {
      "op": "getbit",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "is_true%0#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "is_true%0#0"
      ]
    },
    "1657": {
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x00",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "is_true%0#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "is_true%0#0",
        "0x00"
      ]
    },
    "1658": {
      "op": "intc_1 // 0",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "is_true%0#0",
        "0x00",
        "0"
      ]
    },
    "1659": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "0x00",
        "0",
        "is_true%0#0"
      ]
    },
    "1661": {
      "op": "setbit",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "encoded_bool%0#0"
      ]
    },
    "1662": {
      "op": "intc_1 // 0",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "encoded_bool%0#0",
        "0"
      ]
    },
    "1663": {
      "op": "getbit",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%10#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "tmp%22#0"
      ]
    },
    "1664": {
      "op": "!",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%10#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "tmp%23#0"
      ]
    },
    "1665": {
      "error": "Game state staking finalized value mismatch.",
      "op": "assert // Game state staking finalized value mismatch.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0"
      ]
    },
    "1666": {
      "op": "dup",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "1667": {
      "error": "Index access is out of bounds",
      "op": "extract 8 8 // on error: Index access is out of bounds",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "1670": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "reinterpret_biguint%0#0",
        "tmp%24#0"
      ]
    },
    "1672": {
      "op": "itob",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "reinterpret_biguint%0#0",
        "tmp%10#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "reinterpret_biguint%0#0",
        "tmp%25#0"
      ]
    },
    "1673": {
      "op": "b>=",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%10#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "tmp%26#0"
      ]
    },
    "1674": {
      "error": "Phase deadline expired. Latest block timestamp must not exceed expiry timestamp.",
      "op": "assert // Phase deadline expired. Latest block timestamp must not exceed expiry timestamp.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0"
      ]
    },
    "1675": {
      "op": "dup",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "1676": {
      "error": "Index access is out of bounds",
      "op": "extract 2 1 // on error: Index access is out of bounds",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "reinterpret_biguint%1#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "reinterpret_biguint%1#0"
      ]
    },
    "1679": {
      "op": "dig 1",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "reinterpret_biguint%1#0",
        "game_state#0 (copy)"
      ]
    },
    "1681": {
      "error": "Index access is out of bounds",
      "op": "extract 1 1 // on error: Index access is out of bounds",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "reinterpret_biguint%1#0",
        "reinterpret_biguint%2#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "reinterpret_biguint%1#0",
        "reinterpret_biguint%2#0"
      ]
    },
    "1684": {
      "op": "b<=",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%10#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "tmp%27#0"
      ]
    },
    "1685": {
      "error": "Number of active players must not exceed number of max players.",
      "op": "assert // Number of active players must not exceed number of max players.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0"
      ]
    },
    "1686": {
      "op": "dup",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "1687": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state#0 (copy)",
        "tmp%10#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "game_state#0 (copy)",
        "6"
      ]
    },
    "1689": {
      "op": "extract_uint16",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%10#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "tmp%29#0"
      ]
    },
    "1690": {
      "op": "dig 1",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "tmp%29#0",
        "game_state#0 (copy)"
      ]
    },
    "1692": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state#0 (copy)",
        "tmp%10#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "tmp%29#0",
        "game_state#0 (copy)",
        "1"
      ]
    },
    "1693": {
      "op": "getbyte",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%10#0",
        "tmp%29#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "tmp%29#0",
        "tmp%31#0"
      ]
    },
    "1694": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%10#0",
        "tmp%29#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "tmp%29#0",
        "tmp%31#0",
        "32"
      ]
    },
    "1695": {
      "op": "*",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%10#0",
        "tmp%29#0",
        "tmp%32#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "tmp%29#0",
        "tmp%32#0"
      ]
    },
    "1696": {
      "op": "dig 1",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%10#0",
        "tmp%29#0",
        "tmp%29#0 (copy)",
        "tmp%32#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "tmp%29#0",
        "tmp%32#0",
        "tmp%29#0 (copy)"
      ]
    },
    "1698": {
      "op": ">",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%10#0",
        "tmp%29#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "tmp%29#0",
        "tmp%33#0"
      ]
    },
    "1699": {
      "error": "Players box start position index overflow. Can not store more addresses.",
      "op": "assert // Players box start position index overflow. Can not store more addresses.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "tmp%29#0"
      ]
    },
    "1700": {
      "op": "bytec_1 // \"p_\"",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "tmp%29#0",
        "\"p_\""
      ]
    },
    "1701": {
      "op": "uncover 5",
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "tmp%29#0",
        "\"p_\"",
        "encoded_value%0#0"
      ]
    },
    "1703": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_players_bref#0",
        "game_state#0",
        "tmp%10#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "tmp%29#0",
        "game_players_bref#0"
      ]
    },
    "1704": {
      "op": "txn Sender",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_players_bref#0",
        "game_state#0",
        "tmp%10#0",
        "tmp%29#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "tmp%29#0",
        "game_players_bref#0",
        "tmp%37#0"
      ]
    },
    "1706": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "tmp%29#0",
        "tmp%37#0",
        "game_players_bref#0"
      ]
    },
    "1707": {
      "op": "cover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "game_players_bref#0",
        "tmp%29#0",
        "tmp%37#0"
      ]
    },
    "1709": {
      "op": "box_replace",
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0"
      ]
    },
    "1710": {
      "op": "bytec_3 // \"c_\"",
      "defined_out": [
        "\"c_\"",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "\"c_\""
      ]
    },
    "1711": {
      "op": "txn Sender",
      "defined_out": [
        "\"c_\"",
        "box_prefixed_key%0#0",
        "game_state#0",
        "materialized_values%0#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "\"c_\"",
        "materialized_values%0#0"
      ]
    },
    "1713": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%3#0",
        "game_state#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "box_prefixed_key%3#0"
      ]
    },
    "1714": {
      "op": "bytec 7 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "box_prefixed_key%0#0",
        "box_prefixed_key%3#0",
        "game_state#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "box_prefixed_key%3#0",
        "0x0000000000000000"
      ]
    },
    "1716": {
      "op": "box_put",
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0"
      ]
    },
    "1717": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "1718": {
      "op": "intc_2 // 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "game_state#0 (copy)",
        "2"
      ]
    },
    "1719": {
      "op": "getbyte",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%10#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "tmp%39#0"
      ]
    },
    "1720": {
      "op": "intc_0 // 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "tmp%39#0",
        "1"
      ]
    },
    "1721": {
      "op": "+",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%10#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "to_encode%0#0"
      ]
    },
    "1722": {
      "op": "itob",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%10#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "val_as_bytes%0#0"
      ]
    },
    "1723": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%10#0",
        "val_as_bytes%0#0",
        "val_as_bytes%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "val_as_bytes%0#0",
        "val_as_bytes%0#0 (copy)"
      ]
    },
    "1724": {
      "op": "bitlen",
      "defined_out": [
        "bitlen%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%10#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "val_as_bytes%0#0",
        "bitlen%0#0"
      ]
    },
    "1725": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "bitlen%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%10#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "val_as_bytes%0#0",
        "bitlen%0#0",
        "8"
      ]
    },
    "1727": {
      "op": "<=",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "no_overflow%0#0",
        "tmp%10#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "val_as_bytes%0#0",
        "no_overflow%0#0"
      ]
    },
    "1728": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "val_as_bytes%0#0"
      ]
    },
    "1729": {
      "op": "extract 7 1",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%10#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "uint8%0#0"
      ]
    },
    "1732": {
      "op": "replace2 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0"
      ]
    },
    "1734": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "1735": {
      "op": "pushint 6 // 6",
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "game_state#0 (copy)",
        "6"
      ]
    },
    "1737": {
      "op": "extract_uint16",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%10#0",
        "tmp%41#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "tmp%41#0"
      ]
    },
    "1738": {
      "op": "intc_3 // 32",
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "tmp%41#0",
        "32"
      ]
    },
    "1739": {
      "op": "+",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%10#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "to_encode%1#0"
      ]
    },
    "1740": {
      "op": "itob",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%10#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "val_as_bytes%1#0"
      ]
    },
    "1741": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%10#0",
        "val_as_bytes%1#0",
        "val_as_bytes%1#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "val_as_bytes%1#0",
        "val_as_bytes%1#0 (copy)"
      ]
    },
    "1742": {
      "op": "bitlen",
      "defined_out": [
        "bitlen%1#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%10#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "val_as_bytes%1#0",
        "bitlen%1#0"
      ]
    },
    "1743": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "bitlen%1#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%10#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "val_as_bytes%1#0",
        "bitlen%1#0",
        "16"
      ]
    },
    "1745": {
      "op": "<=",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "no_overflow%1#0",
        "tmp%10#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "val_as_bytes%1#0",
        "no_overflow%1#0"
      ]
    },
    "1746": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "val_as_bytes%1#0"
      ]
    },
    "1747": {
      "op": "extract 6 2",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%10#0",
        "uint16%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "uint16%0#0"
      ]
    },
    "1750": {
      "op": "replace2 6",
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0"
      ]
    },
    "1752": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "1753": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "game_state#0 (copy)",
        "16"
      ]
    },
    "1755": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%10#0",
        "tmp%43#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "game_state#0",
        "tmp%43#0"
      ]
    },
    "1756": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%43#0",
        "tmp%10#0"
      ]
    },
    "1758": {
      "op": "+",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "to_encode%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "to_encode%2#0"
      ]
    },
    "1759": {
      "op": "itob",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "val_as_bytes%2#0"
      ]
    },
    "1760": {
      "op": "replace2 16",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "1762": {
      "callsub": "smart_contracts.pieout.subroutines.is_game_live",
      "op": "callsub is_game_live",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "is_game_live%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "is_game_live%0#0",
        "game_state#0"
      ]
    },
    "1765": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "1767": {
      "op": "box_put",
      "stack_out": []
    },
    "1768": {
      "retsub": true,
      "op": "retsub"
    },
    "1769": {
      "subroutine": "smart_contracts.pieout.contract.Pieout.commit_rand",
      "params": {
        "game_id#0": "uint64"
      },
      "block": "commit_rand",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1772": {
      "op": "frame_dig -1",
      "defined_out": [
        "game_id#0 (copy)"
      ],
      "stack_out": [
        "game_id#0 (copy)"
      ]
    },
    "1774": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "1775": {
      "op": "bytec_2 // \"s_\"",
      "defined_out": [
        "\"s_\"",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "\"s_\""
      ]
    },
    "1776": {
      "op": "swap",
      "stack_out": [
        "\"s_\"",
        "encoded_value%0#0"
      ]
    },
    "1777": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "1778": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "1779": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "box_prefixed_key%0#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "_%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1780": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1782": {
      "error": "Box game state not found. Check if Game ID is valid.",
      "op": "assert // Box game state not found. Check if Game ID is valid.",
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "1783": {
      "op": "bytec_3 // \"c_\"",
      "defined_out": [
        "\"c_\"",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "\"c_\""
      ]
    },
    "1784": {
      "op": "txn Sender",
      "defined_out": [
        "\"c_\"",
        "box_prefixed_key%0#0",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "\"c_\"",
        "materialized_values%0#0"
      ]
    },
    "1786": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%1#0"
      ]
    },
    "1787": {
      "op": "box_len",
      "defined_out": [
        "_%1#0",
        "box_prefixed_key%0#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "_%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1788": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%1#0"
      ]
    },
    "1790": {
      "error": "Box commit rand not found for sender address. Ensure commit rand was called.",
      "op": "assert // Box commit rand not found for sender address. Ensure commit rand was called.",
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "1791": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "1792": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%2#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_exists%2#0"
      ]
    },
    "1793": {
      "error": "check self.box_game_state entry exists",
      "op": "assert // check self.box_game_state entry exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0"
      ]
    },
    "1794": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "box_prefixed_key%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "0"
      ]
    },
    "1795": {
      "op": "getbit",
      "defined_out": [
        "box_prefixed_key%0#0",
        "is_true%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "is_true%0#0"
      ]
    },
    "1796": {
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x00",
        "box_prefixed_key%0#0",
        "is_true%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "is_true%0#0",
        "0x00"
      ]
    },
    "1797": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "is_true%0#0",
        "0x00",
        "0"
      ]
    },
    "1798": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "0x00",
        "0",
        "is_true%0#0"
      ]
    },
    "1800": {
      "op": "setbit",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_bool%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_bool%0#0"
      ]
    },
    "1801": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_bool%0#0",
        "0"
      ]
    },
    "1802": {
      "op": "getbit",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%0#0"
      ]
    },
    "1803": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "box_prefixed_key%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "1"
      ]
    },
    "1804": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%1#0"
      ]
    },
    "1805": {
      "error": "Game state staking finalized value mismatch.",
      "op": "assert // Game state staking finalized value mismatch.",
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "1806": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%3#0"
      ]
    },
    "1807": {
      "error": "check self.box_game_state entry exists",
      "op": "assert // check self.box_game_state entry exists",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "1808": {
      "op": "intc_0 // 1",
      "stack_out": [
        "maybe_value%1#0",
        "1"
      ]
    },
    "1809": {
      "op": "getbyte",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1810": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%3#0",
        "game_id#0 (copy)"
      ]
    },
    "1812": {
      "op": "bytec_1 // \"p_\"",
      "defined_out": [
        "\"p_\"",
        "game_id#0 (copy)",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "game_id#0 (copy)",
        "\"p_\""
      ]
    },
    "1813": {
      "op": "uncover 2",
      "stack_out": [
        "game_id#0 (copy)",
        "\"p_\"",
        "tmp%3#0"
      ]
    },
    "1815": {
      "op": "intc_1 // 0",
      "stack_out": [
        "game_id#0 (copy)",
        "\"p_\"",
        "tmp%3#0",
        "0"
      ]
    },
    "1816": {
      "callsub": "smart_contracts.pieout.subroutines.check_sender_in_game",
      "op": "callsub check_sender_in_game",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "1819": {
      "op": "intc_0 // 1",
      "stack_out": [
        "tmp%4#0",
        "1"
      ]
    },
    "1820": {
      "op": "==",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "1821": {
      "error": "Transaction sender is not recognized as a valid player for this game.",
      "op": "assert // Transaction sender is not recognized as a valid player for this game.",
      "stack_out": []
    },
    "1822": {
      "op": "txn TxID",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "1824": {
      "op": "global Round",
      "defined_out": [
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "1826": {
      "op": "itob",
      "defined_out": [
        "tmp%6#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "tmp%8#0"
      ]
    },
    "1827": {
      "op": "concat",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "1828": {
      "op": "sha256",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "1829": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "16"
      ]
    },
    "1831": {
      "op": "extract_uint16",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "1832": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "3"
      ]
    },
    "1834": {
      "op": "%",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "1835": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "4"
      ]
    },
    "1837": {
      "op": "+",
      "defined_out": [
        "round_offset#0"
      ],
      "stack_out": [
        "round_offset#0"
      ]
    },
    "1838": {
      "op": "global Round",
      "defined_out": [
        "round_offset#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "round_offset#0",
        "tmp%14#0"
      ]
    },
    "1840": {
      "op": "+",
      "defined_out": [
        "commit_round#0"
      ],
      "stack_out": [
        "commit_round#0"
      ]
    },
    "1841": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "1842": {
      "op": "bytec_3 // \"c_\"",
      "stack_out": [
        "val_as_bytes%0#0",
        "\"c_\""
      ]
    },
    "1843": {
      "op": "txn Sender",
      "defined_out": [
        "\"c_\"",
        "materialized_values%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "\"c_\"",
        "materialized_values%1#0"
      ]
    },
    "1845": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%4#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "box_prefixed_key%4#0"
      ]
    },
    "1846": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%4#0",
        "val_as_bytes%0#0"
      ]
    },
    "1847": {
      "op": "box_put",
      "stack_out": []
    },
    "1848": {
      "retsub": true,
      "op": "retsub"
    },
    "1849": {
      "subroutine": "smart_contracts.pieout.contract.Pieout.del_box_commit_rand",
      "params": {},
      "block": "del_box_commit_rand",
      "stack_in": [],
      "op": "global GroupSize",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1851": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "1"
      ]
    },
    "1852": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1853": {
      "error": "Invalid group size. This app call only appproves standalone transactions.",
      "op": "assert // Invalid group size. This app call only appproves standalone transactions.",
      "stack_out": []
    },
    "1854": {
      "op": "bytec_3 // \"c_\"",
      "defined_out": [
        "\"c_\""
      ],
      "stack_out": [
        "\"c_\""
      ]
    },
    "1855": {
      "op": "txn Sender",
      "defined_out": [
        "\"c_\"",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "\"c_\"",
        "materialized_values%0#0"
      ]
    },
    "1857": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "1858": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "_%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1859": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%0#0"
      ]
    },
    "1861": {
      "error": "Box commit rand not found for sender address. Ensure commit rand was called.",
      "op": "assert // Box commit rand not found for sender address. Ensure commit rand was called.",
      "stack_out": []
    },
    "1862": {
      "op": "bytec_3 // \"c_\"",
      "stack_out": [
        "\"c_\""
      ]
    },
    "1863": {
      "op": "txn Sender",
      "defined_out": [
        "\"c_\"",
        "materialized_values%1#0"
      ],
      "stack_out": [
        "\"c_\"",
        "materialized_values%1#0"
      ]
    },
    "1865": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0"
      ]
    },
    "1866": {
      "op": "box_del",
      "defined_out": [
        "{box_del}"
      ],
      "stack_out": [
        "{box_del}"
      ]
    },
    "1867": {
      "op": "pop",
      "stack_out": []
    },
    "1868": {
      "op": "itxn_begin"
    },
    "1869": {
      "op": "txn Sender",
      "defined_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "1871": {
      "op": "pushbytes \"MBR refund payment transaction for box commit rand deletion\"",
      "defined_out": [
        "\"MBR refund payment transaction for box commit rand deletion\"",
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "\"MBR refund payment transaction for box commit rand deletion\""
      ]
    },
    "1932": {
      "op": "itxn_field Note",
      "stack_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "1934": {
      "op": "intc 6 // 19300",
      "defined_out": [
        "19300",
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "19300"
      ]
    },
    "1936": {
      "op": "itxn_field Amount",
      "stack_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "1938": {
      "op": "itxn_field Receiver",
      "stack_out": []
    },
    "1940": {
      "op": "intc_0 // pay",
      "defined_out": [
        "pay"
      ],
      "stack_out": [
        "pay"
      ]
    },
    "1941": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "1943": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1944": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1946": {
      "op": "itxn_submit"
    },
    "1947": {
      "retsub": true,
      "op": "retsub"
    },
    "1948": {
      "subroutine": "smart_contracts.pieout.contract.Pieout.play_game",
      "params": {
        "game_id#0": "uint64"
      },
      "block": "play_game",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1951": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "1952": {
      "op": "dupn 7",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0"
      ]
    },
    "1954": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0"
      ]
    },
    "1956": {
      "op": "dupn 7",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0"
      ]
    },
    "1958": {
      "block": "play_game_while_top@4",
      "stack_in": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0"
      ],
      "op": "pushint 19610 // 19610",
      "defined_out": [
        "19610"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "19610"
      ]
    },
    "1962": {
      "op": "global OpcodeBudget",
      "defined_out": [
        "19610",
        "tmp%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "19610",
        "tmp%0#0"
      ]
    },
    "1964": {
      "op": ">",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "tmp%1#0"
      ]
    },
    "1965": {
      "op": "bz play_game_after_while@9",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0"
      ]
    },
    "1968": {
      "op": "itxn_begin"
    },
    "1969": {
      "op": "pushint 6 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "appl"
      ]
    },
    "1971": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0"
      ]
    },
    "1973": {
      "op": "pushint 5 // DeleteApplication",
      "defined_out": [
        "DeleteApplication"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "DeleteApplication"
      ]
    },
    "1975": {
      "op": "itxn_field OnCompletion",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0"
      ]
    },
    "1977": {
      "op": "bytec 12 // 0x068101",
      "defined_out": [
        "0x068101"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "0x068101"
      ]
    },
    "1979": {
      "op": "itxn_field ApprovalProgram",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0"
      ]
    },
    "1981": {
      "op": "bytec 12 // 0x068101",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "0x068101"
      ]
    },
    "1983": {
      "op": "itxn_field ClearStateProgram",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0"
      ]
    },
    "1985": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "0"
      ]
    },
    "1986": {
      "op": "itxn_field Fee",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0"
      ]
    },
    "1988": {
      "op": "itxn_submit"
    },
    "1989": {
      "op": "b play_game_while_top@4"
    },
    "1992": {
      "block": "play_game_after_while@9",
      "stack_in": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0"
      ],
      "op": "global GroupSize",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "tmp%0#0"
      ]
    },
    "1994": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "tmp%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "tmp%0#0",
        "1"
      ]
    },
    "1995": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "tmp%1#0"
      ]
    },
    "1996": {
      "error": "Invalid group size. This app call only appproves standalone transactions.",
      "op": "assert // Invalid group size. This app call only appproves standalone transactions.",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0"
      ]
    },
    "1997": {
      "op": "frame_dig -1",
      "defined_out": [
        "game_id#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_id#0 (copy)"
      ]
    },
    "1999": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "encoded_value%0#0"
      ]
    },
    "2000": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "encoded_value%0#0",
        "encoded_value%0#0"
      ]
    },
    "2001": {
      "op": "frame_bury 1",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "encoded_value%0#0"
      ]
    },
    "2003": {
      "op": "bytec_2 // \"s_\"",
      "defined_out": [
        "\"s_\"",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "encoded_value%0#0",
        "\"s_\""
      ]
    },
    "2004": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "\"s_\"",
        "encoded_value%0#0"
      ]
    },
    "2005": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "box_prefixed_key%0#0"
      ]
    },
    "2006": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "2007": {
      "op": "frame_bury 0",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "box_prefixed_key%0#0"
      ]
    },
    "2009": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "2010": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "box_prefixed_key%0#0",
        "_%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2011": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "box_prefixed_key%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2013": {
      "error": "Box game state not found. Check if Game ID is valid.",
      "op": "assert // Box game state not found. Check if Game ID is valid.",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "box_prefixed_key%0#0"
      ]
    },
    "2014": {
      "op": "bytec_3 // \"c_\"",
      "defined_out": [
        "\"c_\"",
        "box_prefixed_key%0#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "box_prefixed_key%0#0",
        "\"c_\""
      ]
    },
    "2015": {
      "op": "txn Sender",
      "defined_out": [
        "\"c_\"",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "box_prefixed_key%0#0",
        "\"c_\"",
        "materialized_values%0#0"
      ]
    },
    "2017": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%1#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%1#0"
      ]
    },
    "2018": {
      "op": "box_len",
      "defined_out": [
        "_%1#0",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "box_prefixed_key%0#0",
        "_%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2019": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "box_prefixed_key%0#0",
        "maybe_exists%1#0"
      ]
    },
    "2021": {
      "error": "Box commit rand not found for sender address. Ensure commit rand was called.",
      "op": "assert // Box commit rand not found for sender address. Ensure commit rand was called.",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "box_prefixed_key%0#0"
      ]
    },
    "2022": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "2023": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "maybe_exists%2#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_exists%2#0"
      ]
    },
    "2024": {
      "error": "check self.box_game_state entry exists",
      "op": "assert // check self.box_game_state entry exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "box_prefixed_key%0#0",
        "maybe_value%0#0"
      ]
    },
    "2025": {
      "op": "intc_0 // 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "1"
      ]
    },
    "2026": {
      "op": "getbyte",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "box_prefixed_key%0#0",
        "tmp%3#0"
      ]
    },
    "2027": {
      "op": "frame_dig -1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "box_prefixed_key%0#0",
        "tmp%3#0",
        "game_id#0 (copy)"
      ]
    },
    "2029": {
      "op": "bytec_1 // \"p_\"",
      "defined_out": [
        "\"p_\"",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_id#0 (copy)",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "box_prefixed_key%0#0",
        "tmp%3#0",
        "game_id#0 (copy)",
        "\"p_\""
      ]
    },
    "2030": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "box_prefixed_key%0#0",
        "game_id#0 (copy)",
        "\"p_\"",
        "tmp%3#0"
      ]
    },
    "2032": {
      "op": "intc_0 // 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "box_prefixed_key%0#0",
        "game_id#0 (copy)",
        "\"p_\"",
        "tmp%3#0",
        "1"
      ]
    },
    "2033": {
      "callsub": "smart_contracts.pieout.subroutines.check_sender_in_game",
      "op": "callsub check_sender_in_game",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "box_prefixed_key%0#0",
        "tmp%4#0"
      ]
    },
    "2036": {
      "op": "intc_0 // 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "box_prefixed_key%0#0",
        "tmp%4#0",
        "1"
      ]
    },
    "2037": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%3#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "box_prefixed_key%0#0",
        "tmp%5#0"
      ]
    },
    "2038": {
      "error": "Transaction sender is not recognized as a valid player for this game.",
      "op": "assert // Transaction sender is not recognized as a valid player for this game.",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "box_prefixed_key%0#0"
      ]
    },
    "2039": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "maybe_exists%3#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0",
        "maybe_exists%3#0"
      ]
    },
    "2040": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "maybe_exists%3#0",
        "game_state#0"
      ]
    },
    "2041": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "maybe_exists%3#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "2042": {
      "op": "cover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0",
        "maybe_exists%3#0",
        "game_state#0"
      ]
    },
    "2044": {
      "op": "frame_bury 2",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "maybe_exists%3#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0",
        "maybe_exists%3#0"
      ]
    },
    "2046": {
      "error": "check self.box_game_state entry exists",
      "op": "assert // check self.box_game_state entry exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0"
      ]
    },
    "2047": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state#0 (copy)",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "2048": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0",
        "game_state#0 (copy)",
        "0"
      ]
    },
    "2049": {
      "op": "getbit",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "is_true%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0",
        "is_true%0#0"
      ]
    },
    "2050": {
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x00",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "is_true%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0",
        "is_true%0#0",
        "0x00"
      ]
    },
    "2051": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0",
        "is_true%0#0",
        "0x00",
        "0"
      ]
    },
    "2052": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0",
        "0x00",
        "0",
        "is_true%0#0"
      ]
    },
    "2054": {
      "op": "setbit",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0",
        "encoded_bool%0#0"
      ]
    },
    "2055": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0",
        "encoded_bool%0#0",
        "0"
      ]
    },
    "2056": {
      "op": "getbit",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%3#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0",
        "tmp%6#0"
      ]
    },
    "2057": {
      "op": "intc_0 // 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0",
        "tmp%6#0",
        "1"
      ]
    },
    "2058": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%3#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0",
        "tmp%7#0"
      ]
    },
    "2059": {
      "error": "Game state staking finalized value mismatch.",
      "op": "assert // Game state staking finalized value mismatch.",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0"
      ]
    },
    "2060": {
      "error": "Index access is out of bounds",
      "op": "extract 8 8 // on error: Index access is out of bounds",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "reinterpret_biguint%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "2063": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "reinterpret_biguint%0#0",
        "tmp%3#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "reinterpret_biguint%0#0",
        "tmp%8#0"
      ]
    },
    "2065": {
      "op": "itob",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "reinterpret_biguint%0#0",
        "tmp%3#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "reinterpret_biguint%0#0",
        "tmp%9#0"
      ]
    },
    "2066": {
      "op": "b>=",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%10#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "tmp%10#0"
      ]
    },
    "2067": {
      "error": "Phase deadline expired. Latest block timestamp must not exceed expiry timestamp.",
      "op": "assert // Phase deadline expired. Latest block timestamp must not exceed expiry timestamp.",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0"
      ]
    },
    "2068": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "0"
      ]
    },
    "2069": {
      "op": "bytec 6 // \"commit_rand_salt_id\"",
      "defined_out": [
        "\"commit_rand_salt_id\"",
        "0",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "0",
        "\"commit_rand_salt_id\""
      ]
    },
    "2071": {
      "op": "app_global_get_ex",
      "defined_out": [
        "box_prefixed_key%0#0",
        "commit_rand_salt_id#0",
        "encoded_value%0#0",
        "game_state#0",
        "maybe_exists%4#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "commit_rand_salt_id#0",
        "maybe_exists%4#0"
      ]
    },
    "2072": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "maybe_exists%4#0",
        "commit_rand_salt_id#0"
      ]
    },
    "2073": {
      "op": "frame_bury 9",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "maybe_exists%4#0"
      ]
    },
    "2075": {
      "error": "check self.commit_rand_salt_id exists",
      "op": "assert // check self.commit_rand_salt_id exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0"
      ]
    },
    "2076": {
      "op": "txn Sender",
      "defined_out": [
        "box_prefixed_key%0#0",
        "commit_rand_salt_id#0",
        "encoded_value%0#0",
        "game_state#0",
        "player#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "player#0"
      ]
    },
    "2078": {
      "op": "frame_bury 4",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0"
      ]
    },
    "2080": {
      "op": "txn TxID",
      "defined_out": [
        "box_prefixed_key%0#0",
        "commit_rand_salt_id#0",
        "encoded_value%0#0",
        "game_state#0",
        "player#0",
        "seed#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "seed#0"
      ]
    },
    "2082": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "commit_rand_salt_id#0",
        "encoded_value%0#0",
        "game_state#0",
        "player#0",
        "seed#0",
        "seed#0 (copy)",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "seed#0",
        "seed#0 (copy)"
      ]
    },
    "2083": {
      "op": "extract 16 8",
      "defined_out": [
        "box_prefixed_key%0#0",
        "commit_rand_salt_id#0",
        "encoded_value%0#0",
        "game_state#0",
        "player#0",
        "seed#0",
        "seed#1",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "seed#0",
        "seed#1"
      ]
    },
    "2086": {
      "op": "len",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "seed#0",
        "tmp%0#0"
      ]
    },
    "2087": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "box_prefixed_key%0#0",
        "commit_rand_salt_id#0",
        "encoded_value%0#0",
        "game_state#0",
        "player#0",
        "seed#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "seed#0",
        "tmp%0#0",
        "8"
      ]
    },
    "2089": {
      "op": "==",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "seed#0",
        "tmp%1#0"
      ]
    },
    "2090": {
      "op": "assert",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "seed#0"
      ]
    },
    "2091": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "box_prefixed_key%0#0",
        "commit_rand_salt_id#0",
        "encoded_value%0#0",
        "game_state#0",
        "player#0",
        "seed#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "seed#0",
        "16"
      ]
    },
    "2093": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%0#0",
        "commit_rand_salt_id#0",
        "encoded_value%0#0",
        "game_state#0",
        "initial_state#0",
        "player#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "initial_state#0"
      ]
    },
    "2094": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "initial_state#0",
        "0"
      ]
    },
    "2095": {
      "op": "intc 7 // 6364136223846793005",
      "defined_out": [
        "0",
        "6364136223846793005",
        "box_prefixed_key%0#0",
        "commit_rand_salt_id#0",
        "encoded_value%0#0",
        "game_state#0",
        "initial_state#0",
        "player#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "initial_state#0",
        "0",
        "6364136223846793005"
      ]
    },
    "2097": {
      "op": "mulw",
      "defined_out": [
        "_high_mul#0",
        "box_prefixed_key%0#0",
        "commit_rand_salt_id#0",
        "encoded_value%0#0",
        "game_state#0",
        "initial_state#0",
        "low_mul#0",
        "player#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "initial_state#0",
        "_high_mul#0",
        "low_mul#0"
      ]
    },
    "2098": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "initial_state#0",
        "low_mul#0"
      ]
    },
    "2100": {
      "op": "intc 8 // 1442695040888963407",
      "defined_out": [
        "1442695040888963407",
        "box_prefixed_key%0#0",
        "commit_rand_salt_id#0",
        "encoded_value%0#0",
        "game_state#0",
        "initial_state#0",
        "low_mul#0",
        "player#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "initial_state#0",
        "low_mul#0",
        "1442695040888963407"
      ]
    },
    "2102": {
      "op": "addw",
      "defined_out": [
        "_high_add#0",
        "box_prefixed_key%0#0",
        "commit_rand_salt_id#0",
        "encoded_value%0#0",
        "game_state#0",
        "initial_state#0",
        "low_add#0",
        "player#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "initial_state#0",
        "_high_add#0",
        "low_add#0"
      ]
    },
    "2103": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "initial_state#0",
        "low_add#0"
      ]
    },
    "2105": {
      "op": "addw",
      "defined_out": [
        "_high_addw#0",
        "box_prefixed_key%0#0",
        "commit_rand_salt_id#0",
        "encoded_value%0#0",
        "game_state#0",
        "player#0",
        "state#2",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "_high_addw#0",
        "state#2"
      ]
    },
    "2106": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "state#2"
      ]
    },
    "2108": {
      "op": "intc 7 // 6364136223846793005",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "state#2",
        "6364136223846793005"
      ]
    },
    "2110": {
      "op": "mulw",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "_high_mul#0",
        "low_mul#0"
      ]
    },
    "2111": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "low_mul#0"
      ]
    },
    "2113": {
      "op": "intc 8 // 1442695040888963407",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "low_mul#0",
        "1442695040888963407"
      ]
    },
    "2115": {
      "op": "addw",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "_high_add#0",
        "low_add#0"
      ]
    },
    "2116": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "low_add#0"
      ]
    },
    "2118": {
      "op": "pushbytes 0x00ff",
      "defined_out": [
        "box_prefixed_key%0#0",
        "commit_rand_salt_id#0",
        "encoded_value%0#0",
        "game_state#0",
        "low_add#0",
        "player#0",
        "result#1",
        "state#2",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "low_add#0",
        "result#1"
      ]
    },
    "2122": {
      "op": "frame_bury 5",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "low_add#0"
      ]
    },
    "2124": {
      "op": "pushint 18446744073709486080 // 18446744073709486080",
      "defined_out": [
        "18446744073709486080",
        "box_prefixed_key%0#0",
        "commit_rand_salt_id#0",
        "encoded_value%0#0",
        "game_state#0",
        "low_add#0",
        "player#0",
        "result#1",
        "state#2",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "low_add#0",
        "18446744073709486080"
      ]
    },
    "2135": {
      "op": "intc_0 // 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "low_add#0",
        "18446744073709486080",
        "1"
      ]
    },
    "2136": {
      "op": "addw",
      "defined_out": [
        "_addw_high#0",
        "addw_low#0",
        "box_prefixed_key%0#0",
        "commit_rand_salt_id#0",
        "encoded_value%0#0",
        "game_state#0",
        "low_add#0",
        "player#0",
        "result#1",
        "state#2",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "low_add#0",
        "_addw_high#0",
        "addw_low#0"
      ]
    },
    "2137": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "low_add#0",
        "addw_low#0"
      ]
    },
    "2139": {
      "op": "intc 9 // 4294967295",
      "defined_out": [
        "4294967295",
        "addw_low#0",
        "box_prefixed_key%0#0",
        "commit_rand_salt_id#0",
        "encoded_value%0#0",
        "game_state#0",
        "low_add#0",
        "player#0",
        "result#1",
        "state#2",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "low_add#0",
        "addw_low#0",
        "4294967295"
      ]
    },
    "2141": {
      "op": "&",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "low_add#0",
        "tmp%0#0"
      ]
    },
    "2142": {
      "op": "intc 11 // 65535",
      "defined_out": [
        "65535",
        "box_prefixed_key%0#0",
        "commit_rand_salt_id#0",
        "encoded_value%0#0",
        "game_state#0",
        "low_add#0",
        "player#0",
        "result#1",
        "state#2",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "low_add#0",
        "tmp%0#0",
        "65535"
      ]
    },
    "2144": {
      "op": "%",
      "defined_out": [
        "box_prefixed_key%0#0",
        "commit_rand_salt_id#0",
        "encoded_value%0#0",
        "game_state#0",
        "low_add#0",
        "player#0",
        "result#1",
        "state#2",
        "threshold#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "low_add#0",
        "threshold#0"
      ]
    },
    "2145": {
      "op": "frame_bury 13",
      "defined_out": [
        "box_prefixed_key%0#0",
        "commit_rand_salt_id#0",
        "encoded_value%0#0",
        "game_state#0",
        "low_add#0",
        "player#0",
        "result#1",
        "state#2",
        "threshold#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "low_add#0"
      ]
    },
    "2147": {
      "op": "intc_1 // 0",
      "defined_out": [
        "box_prefixed_key%0#0",
        "commit_rand_salt_id#0",
        "encoded_value%0#0",
        "game_state#0",
        "i#0",
        "low_add#0",
        "player#0",
        "result#1",
        "state#2",
        "threshold#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "low_add#0",
        "i#0"
      ]
    },
    "2148": {
      "op": "frame_bury 10",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "state#2"
      ]
    },
    "2150": {
      "op": "frame_bury 12",
      "defined_out": [
        "box_prefixed_key%0#0",
        "commit_rand_salt_id#0",
        "encoded_value%0#0",
        "game_state#0",
        "i#0",
        "player#0",
        "result#1",
        "state#2",
        "threshold#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0"
      ]
    },
    "2152": {
      "block": "play_game_for_header@13",
      "stack_in": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0"
      ],
      "op": "frame_dig 10",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "i#0"
      ]
    },
    "2154": {
      "op": "pushint 255 // 255",
      "defined_out": [
        "255",
        "i#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "i#0",
        "255"
      ]
    },
    "2157": {
      "op": "<",
      "defined_out": [
        "continue_looping%1#0",
        "i#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "continue_looping%1#0"
      ]
    },
    "2158": {
      "op": "bz play_game_after_for@18",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0"
      ]
    },
    "2161": {
      "block": "play_game_while_top@15",
      "stack_in": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0"
      ],
      "op": "frame_dig 12",
      "defined_out": [
        "state#2"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "state#2"
      ]
    },
    "2163": {
      "op": "dup",
      "defined_out": [
        "state#2",
        "state#2 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "state#2",
        "state#2 (copy)"
      ]
    },
    "2164": {
      "op": "intc 7 // 6364136223846793005",
      "defined_out": [
        "6364136223846793005",
        "state#2",
        "state#2 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "state#2",
        "state#2 (copy)",
        "6364136223846793005"
      ]
    },
    "2166": {
      "op": "mulw",
      "defined_out": [
        "_high_mul#0",
        "low_mul#0",
        "state#2"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "state#2",
        "_high_mul#0",
        "low_mul#0"
      ]
    },
    "2167": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "state#2",
        "low_mul#0"
      ]
    },
    "2169": {
      "op": "intc 8 // 1442695040888963407",
      "defined_out": [
        "1442695040888963407",
        "low_mul#0",
        "state#2"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "state#2",
        "low_mul#0",
        "1442695040888963407"
      ]
    },
    "2171": {
      "op": "addw",
      "defined_out": [
        "_high_add#0",
        "low_add#0",
        "state#2"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "state#2",
        "_high_add#0",
        "low_add#0"
      ]
    },
    "2172": {
      "op": "cover 2",
      "defined_out": [
        "_high_add#0",
        "low_add#0",
        "state#2"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "low_add#0",
        "state#2",
        "_high_add#0"
      ]
    },
    "2174": {
      "op": "pop",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "low_add#0",
        "state#2"
      ]
    },
    "2175": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "low_add#0",
        "state#2",
        "state#2 (copy)"
      ]
    },
    "2176": {
      "op": "pushint 18 // 18",
      "defined_out": [
        "18",
        "low_add#0",
        "state#2",
        "state#2 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "low_add#0",
        "state#2",
        "state#2 (copy)",
        "18"
      ]
    },
    "2178": {
      "op": "shr",
      "defined_out": [
        "low_add#0",
        "state#2",
        "tmp%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "low_add#0",
        "state#2",
        "tmp%0#0"
      ]
    },
    "2179": {
      "op": "dig 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "low_add#0",
        "state#2",
        "tmp%0#0",
        "state#2 (copy)"
      ]
    },
    "2181": {
      "op": "^",
      "defined_out": [
        "low_add#0",
        "state#2",
        "tmp%1#5"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "low_add#0",
        "state#2",
        "tmp%1#5"
      ]
    },
    "2182": {
      "op": "pushint 27 // 27",
      "defined_out": [
        "27",
        "low_add#0",
        "state#2",
        "tmp%1#5"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "low_add#0",
        "state#2",
        "tmp%1#5",
        "27"
      ]
    },
    "2184": {
      "op": "shr",
      "defined_out": [
        "low_add#0",
        "state#2",
        "value#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "low_add#0",
        "state#2",
        "value#0"
      ]
    },
    "2185": {
      "op": "intc 9 // 4294967295",
      "defined_out": [
        "4294967295",
        "low_add#0",
        "state#2",
        "value#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "low_add#0",
        "state#2",
        "value#0",
        "4294967295"
      ]
    },
    "2187": {
      "op": "&",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "low_add#0",
        "state#2",
        "value#0"
      ]
    },
    "2188": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "low_add#0",
        "value#0",
        "state#2"
      ]
    },
    "2189": {
      "op": "pushint 59 // 59",
      "defined_out": [
        "59",
        "low_add#0",
        "state#2",
        "value#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "low_add#0",
        "value#0",
        "state#2",
        "59"
      ]
    },
    "2191": {
      "op": "shr",
      "defined_out": [
        "low_add#0",
        "rot#0",
        "state#2",
        "value#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "low_add#0",
        "value#0",
        "rot#0"
      ]
    },
    "2192": {
      "op": "dup2",
      "defined_out": [
        "low_add#0",
        "rot#0",
        "rot#0 (copy)",
        "state#2",
        "value#0",
        "value#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "low_add#0",
        "value#0",
        "rot#0",
        "value#0 (copy)",
        "rot#0 (copy)"
      ]
    },
    "2193": {
      "op": "shr",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "low_add#0",
        "value#0",
        "rot#0",
        "tmp%0#0"
      ]
    },
    "2194": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "low_add#0",
        "value#0",
        "tmp%0#0",
        "rot#0"
      ]
    },
    "2195": {
      "op": "~",
      "defined_out": [
        "low_add#0",
        "state#2",
        "tmp%0#0",
        "tmp%0#9",
        "value#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "low_add#0",
        "value#0",
        "tmp%0#0",
        "tmp%0#9"
      ]
    },
    "2196": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "low_add#0",
        "state#2",
        "tmp%0#0",
        "tmp%0#9",
        "value#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "low_add#0",
        "value#0",
        "tmp%0#0",
        "tmp%0#9",
        "1"
      ]
    },
    "2197": {
      "op": "addw",
      "defined_out": [
        "_addw_high#0",
        "addw_low#0",
        "low_add#0",
        "state#2",
        "tmp%0#0",
        "value#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "low_add#0",
        "value#0",
        "tmp%0#0",
        "_addw_high#0",
        "addw_low#0"
      ]
    },
    "2198": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "low_add#0",
        "value#0",
        "tmp%0#0",
        "addw_low#0"
      ]
    },
    "2200": {
      "op": "pushint 31 // 31",
      "defined_out": [
        "31",
        "addw_low#0",
        "low_add#0",
        "state#2",
        "tmp%0#0",
        "value#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "low_add#0",
        "value#0",
        "tmp%0#0",
        "addw_low#0",
        "31"
      ]
    },
    "2202": {
      "op": "&",
      "defined_out": [
        "low_add#0",
        "state#2",
        "tmp%0#0",
        "tmp%2#2",
        "value#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "low_add#0",
        "value#0",
        "tmp%0#0",
        "tmp%2#2"
      ]
    },
    "2203": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "low_add#0",
        "tmp%0#0",
        "tmp%2#2",
        "value#0"
      ]
    },
    "2205": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "low_add#0",
        "tmp%0#0",
        "value#0",
        "tmp%2#2"
      ]
    },
    "2206": {
      "op": "shl",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "low_add#0",
        "tmp%0#0",
        "value#0"
      ]
    },
    "2207": {
      "op": "intc 9 // 4294967295",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "low_add#0",
        "tmp%0#0",
        "value#0",
        "4294967295"
      ]
    },
    "2209": {
      "op": "&",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "low_add#0",
        "tmp%0#0",
        "tmp%0#9"
      ]
    },
    "2210": {
      "op": "|",
      "defined_out": [
        "candidate#0",
        "low_add#0",
        "state#2"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "low_add#0",
        "candidate#0"
      ]
    },
    "2211": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "low_add#0",
        "candidate#0",
        "candidate#0"
      ]
    },
    "2212": {
      "op": "frame_bury 8",
      "defined_out": [
        "candidate#0",
        "low_add#0",
        "state#2"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "low_add#0",
        "candidate#0"
      ]
    },
    "2214": {
      "op": "frame_dig 13",
      "defined_out": [
        "candidate#0",
        "low_add#0",
        "state#2",
        "threshold#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "low_add#0",
        "candidate#0",
        "threshold#0"
      ]
    },
    "2216": {
      "op": ">=",
      "defined_out": [
        "candidate#0",
        "low_add#0",
        "state#2",
        "threshold#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "low_add#0",
        "tmp%20#0"
      ]
    },
    "2217": {
      "op": "bz play_game_after_if_else@17",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "low_add#0"
      ]
    },
    "2220": {
      "op": "frame_dig 8",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "low_add#0",
        "candidate#0"
      ]
    },
    "2222": {
      "op": "intc 11 // 65535",
      "defined_out": [
        "65535",
        "candidate#0",
        "low_add#0",
        "state#2",
        "threshold#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "low_add#0",
        "candidate#0",
        "65535"
      ]
    },
    "2224": {
      "op": "%",
      "defined_out": [
        "candidate#0",
        "low_add#0",
        "state#2",
        "threshold#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "low_add#0",
        "tmp%21#0"
      ]
    },
    "2225": {
      "op": "intc_0 // 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "low_add#0",
        "tmp%21#0",
        "1"
      ]
    },
    "2226": {
      "op": "+",
      "defined_out": [
        "candidate#0",
        "low_add#0",
        "state#2",
        "threshold#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "low_add#0",
        "tmp%22#0"
      ]
    },
    "2227": {
      "op": "itob",
      "defined_out": [
        "candidate#0",
        "low_add#0",
        "state#2",
        "threshold#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "low_add#0",
        "tmp%23#0"
      ]
    },
    "2228": {
      "op": "extract 6 2",
      "defined_out": [
        "candidate#0",
        "low_add#0",
        "state#2",
        "threshold#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "low_add#0",
        "tmp%24#0"
      ]
    },
    "2231": {
      "op": "frame_dig 5",
      "defined_out": [
        "candidate#0",
        "low_add#0",
        "result#1",
        "state#2",
        "threshold#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "low_add#0",
        "tmp%24#0",
        "result#1"
      ]
    },
    "2233": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "low_add#0",
        "result#1",
        "tmp%24#0"
      ]
    },
    "2234": {
      "op": "concat",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "low_add#0",
        "result#1"
      ]
    },
    "2235": {
      "op": "frame_bury 5",
      "defined_out": [
        "candidate#0",
        "low_add#0",
        "result#1",
        "state#2",
        "threshold#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "low_add#0"
      ]
    },
    "2237": {
      "op": "frame_dig 10",
      "defined_out": [
        "candidate#0",
        "i#0",
        "low_add#0",
        "result#1",
        "state#2",
        "threshold#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "low_add#0",
        "i#0"
      ]
    },
    "2239": {
      "op": "intc_0 // 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "low_add#0",
        "i#0",
        "1"
      ]
    },
    "2240": {
      "op": "+",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "low_add#0",
        "i#0"
      ]
    },
    "2241": {
      "op": "frame_bury 10",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "state#2"
      ]
    },
    "2243": {
      "op": "frame_bury 12",
      "defined_out": [
        "candidate#0",
        "i#0",
        "result#1",
        "state#2",
        "threshold#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0"
      ]
    },
    "2245": {
      "op": "b play_game_for_header@13"
    },
    "2248": {
      "block": "play_game_after_if_else@17",
      "stack_in": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "low_add#0"
      ],
      "op": "frame_bury 12",
      "defined_out": [
        "state#2"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0"
      ]
    },
    "2250": {
      "op": "b play_game_while_top@15"
    },
    "2253": {
      "block": "play_game_after_for@18",
      "stack_in": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0"
      ],
      "op": "intc_1 // 0",
      "defined_out": [
        "score#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "score#0"
      ]
    },
    "2254": {
      "op": "frame_bury 11",
      "defined_out": [
        "score#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0"
      ]
    },
    "2256": {
      "op": "frame_dig 5",
      "defined_out": [
        "result#1",
        "score#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "result#1"
      ]
    },
    "2258": {
      "op": "len",
      "defined_out": [
        "result#1",
        "score#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "tmp%3#0"
      ]
    },
    "2259": {
      "op": "frame_bury 15",
      "defined_out": [
        "result#1",
        "score#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0"
      ]
    },
    "2261": {
      "op": "intc_2 // 2",
      "defined_out": [
        "i#0",
        "result#1",
        "score#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "i#0"
      ]
    },
    "2262": {
      "op": "frame_bury 10",
      "defined_out": [
        "i#0",
        "result#1",
        "score#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0"
      ]
    },
    "2264": {
      "block": "play_game_for_header@20",
      "stack_in": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0"
      ],
      "op": "frame_dig 10",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "i#0"
      ]
    },
    "2266": {
      "op": "frame_dig 15",
      "defined_out": [
        "i#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "i#0",
        "tmp%3#0"
      ]
    },
    "2268": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "continue_looping%0#0"
      ]
    },
    "2269": {
      "op": "bz play_game_after_for@23",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0"
      ]
    },
    "2272": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "i#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "2"
      ]
    },
    "2273": {
      "op": "frame_dig 15",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "2",
        "tmp%3#0"
      ]
    },
    "2275": {
      "op": "dup",
      "defined_out": [
        "2",
        "i#0",
        "tmp%3#0",
        "tmp%3#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "2",
        "tmp%3#0 (copy)",
        "tmp%3#0 (copy)"
      ]
    },
    "2276": {
      "op": "cover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "tmp%3#0",
        "2",
        "tmp%3#0 (copy)"
      ]
    },
    "2278": {
      "op": ">=",
      "defined_out": [
        "i#0",
        "is_out_of_bounds%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "tmp%3#0",
        "is_out_of_bounds%0#0"
      ]
    },
    "2279": {
      "op": "intc_2 // 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "tmp%3#0",
        "is_out_of_bounds%0#0",
        "2"
      ]
    },
    "2280": {
      "op": "dig 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "tmp%3#0",
        "is_out_of_bounds%0#0",
        "2",
        "tmp%3#0 (copy)"
      ]
    },
    "2282": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "tmp%3#0",
        "2",
        "tmp%3#0 (copy)",
        "is_out_of_bounds%0#0"
      ]
    },
    "2284": {
      "op": "select",
      "defined_out": [
        "bounded_index%0#0",
        "i#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "tmp%3#0",
        "bounded_index%0#0"
      ]
    },
    "2285": {
      "op": "frame_dig 5",
      "defined_out": [
        "bounded_index%0#0",
        "i#0",
        "result#1",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "tmp%3#0",
        "bounded_index%0#0",
        "result#1"
      ]
    },
    "2287": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "tmp%3#0",
        "result#1",
        "bounded_index%0#0"
      ]
    },
    "2288": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "result#1",
        "bounded_index%0#0",
        "tmp%3#0"
      ]
    },
    "2290": {
      "op": "substring3",
      "defined_out": [
        "i#0",
        "result#1",
        "tmp%3#0",
        "tmp%4#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "tmp%4#1"
      ]
    },
    "2291": {
      "op": "frame_dig 10",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "tmp%4#1",
        "i#0"
      ]
    },
    "2293": {
      "op": "extract_uint16",
      "defined_out": [
        "i#0",
        "result#1",
        "roll#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "roll#0"
      ]
    },
    "2294": {
      "op": "pushint 10992 // 10992",
      "defined_out": [
        "10992",
        "i#0",
        "result#1",
        "roll#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "roll#0",
        "10992"
      ]
    },
    "2297": {
      "op": "<=",
      "defined_out": [
        "i#0",
        "result#1",
        "tmp%3#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "tmp%5#0"
      ]
    },
    "2298": {
      "op": "bnz play_game_after_for@23",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0"
      ]
    },
    "2301": {
      "op": "frame_dig 11",
      "defined_out": [
        "i#0",
        "result#1",
        "score#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "score#0"
      ]
    },
    "2303": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "i#0",
        "result#1",
        "score#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "score#0",
        "1"
      ]
    },
    "2304": {
      "op": "+",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "score#0"
      ]
    },
    "2305": {
      "op": "frame_bury 11",
      "defined_out": [
        "i#0",
        "result#1",
        "score#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0"
      ]
    },
    "2307": {
      "op": "frame_dig 10",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "i#0"
      ]
    },
    "2309": {
      "op": "intc_2 // 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "i#0",
        "2"
      ]
    },
    "2310": {
      "op": "+",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "i#0"
      ]
    },
    "2311": {
      "op": "frame_bury 10",
      "defined_out": [
        "i#0",
        "result#1",
        "score#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0"
      ]
    },
    "2313": {
      "op": "b play_game_for_header@20"
    },
    "2316": {
      "block": "play_game_after_for@23",
      "stack_in": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0"
      ],
      "op": "frame_dig 9",
      "defined_out": [
        "commit_rand_salt_id#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "commit_rand_salt_id#0"
      ]
    },
    "2318": {
      "op": "itob",
      "defined_out": [
        "commit_rand_salt_id#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "val_as_bytes%1#0"
      ]
    },
    "2319": {
      "op": "frame_dig 11",
      "defined_out": [
        "commit_rand_salt_id#0",
        "score#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "val_as_bytes%1#0",
        "score#0"
      ]
    },
    "2321": {
      "op": "dup",
      "defined_out": [
        "commit_rand_salt_id#0",
        "score#0",
        "score#0 (copy)",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "val_as_bytes%1#0",
        "score#0 (copy)",
        "score#0 (copy)"
      ]
    },
    "2322": {
      "op": "cover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "score#0",
        "val_as_bytes%1#0",
        "score#0 (copy)"
      ]
    },
    "2324": {
      "op": "itob",
      "defined_out": [
        "commit_rand_salt_id#0",
        "score#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "score#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ]
    },
    "2325": {
      "op": "dup",
      "defined_out": [
        "commit_rand_salt_id#0",
        "score#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%2#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "score#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%2#0 (copy)"
      ]
    },
    "2326": {
      "op": "bitlen",
      "defined_out": [
        "bitlen%0#0",
        "commit_rand_salt_id#0",
        "score#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "score#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "bitlen%0#0"
      ]
    },
    "2327": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "bitlen%0#0",
        "commit_rand_salt_id#0",
        "score#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "score#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "bitlen%0#0",
        "8"
      ]
    },
    "2329": {
      "op": "<=",
      "defined_out": [
        "commit_rand_salt_id#0",
        "no_overflow%0#0",
        "score#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "score#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "no_overflow%0#0"
      ]
    },
    "2330": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "score#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ]
    },
    "2331": {
      "op": "extract 7 1",
      "defined_out": [
        "commit_rand_salt_id#0",
        "score#0",
        "uint8%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "score#0",
        "val_as_bytes%1#0",
        "uint8%0#0"
      ]
    },
    "2334": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "score#0",
        "val_as_bytes%1#0",
        "uint8%0#0",
        "uint8%0#0"
      ]
    },
    "2335": {
      "op": "frame_bury 7",
      "defined_out": [
        "commit_rand_salt_id#0",
        "score#0",
        "uint8%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "score#0",
        "val_as_bytes%1#0",
        "uint8%0#0"
      ]
    },
    "2337": {
      "op": "frame_dig 1",
      "defined_out": [
        "commit_rand_salt_id#0",
        "encoded_value%0#0",
        "score#0",
        "uint8%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "score#0",
        "val_as_bytes%1#0",
        "uint8%0#0",
        "encoded_value%0#0"
      ]
    },
    "2339": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "score#0",
        "uint8%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "2341": {
      "op": "concat",
      "defined_out": [
        "commit_rand_salt_id#0",
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0",
        "score#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "score#0",
        "uint8%0#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "2342": {
      "op": "frame_dig 4",
      "defined_out": [
        "commit_rand_salt_id#0",
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0",
        "player#0",
        "score#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "score#0",
        "uint8%0#0",
        "encoded_tuple_buffer%2#0",
        "player#0"
      ]
    },
    "2344": {
      "op": "concat",
      "defined_out": [
        "commit_rand_salt_id#0",
        "encoded_tuple_buffer%3#0",
        "encoded_value%0#0",
        "player#0",
        "score#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "score#0",
        "uint8%0#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "2345": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "score#0",
        "encoded_tuple_buffer%3#0",
        "uint8%0#0"
      ]
    },
    "2346": {
      "op": "concat",
      "defined_out": [
        "commit_rand_salt_id#0",
        "encoded_tuple_buffer%4#0",
        "encoded_value%0#0",
        "player#0",
        "score#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "score#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "2347": {
      "op": "pushbytes 0x1cc2af51 // method \"player_score(uint64,uint64,address,uint8)\"",
      "defined_out": [
        "Method(player_score(uint64,uint64,address,uint8))",
        "commit_rand_salt_id#0",
        "encoded_tuple_buffer%4#0",
        "encoded_value%0#0",
        "player#0",
        "score#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "score#0",
        "encoded_tuple_buffer%4#0",
        "Method(player_score(uint64,uint64,address,uint8))"
      ]
    },
    "2353": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "score#0",
        "Method(player_score(uint64,uint64,address,uint8))",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "2354": {
      "op": "concat",
      "defined_out": [
        "commit_rand_salt_id#0",
        "encoded_value%0#0",
        "event%0#0",
        "player#0",
        "score#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "score#0",
        "event%0#0"
      ]
    },
    "2355": {
      "op": "log",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "score#0"
      ]
    },
    "2356": {
      "op": "frame_dig 2",
      "defined_out": [
        "commit_rand_salt_id#0",
        "encoded_value%0#0",
        "game_state#0",
        "player#0",
        "score#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "score#0",
        "game_state#0"
      ]
    },
    "2358": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "commit_rand_salt_id#0",
        "encoded_value%0#0",
        "game_state#0",
        "player#0",
        "score#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "score#0",
        "game_state#0",
        "3"
      ]
    },
    "2360": {
      "op": "getbyte",
      "defined_out": [
        "commit_rand_salt_id#0",
        "encoded_value%0#0",
        "game_state#0",
        "player#0",
        "score#0",
        "tmp%7#1",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "score#0",
        "tmp%7#1"
      ]
    },
    "2361": {
      "op": ">",
      "defined_out": [
        "commit_rand_salt_id#0",
        "encoded_value%0#0",
        "game_state#0",
        "player#0",
        "score#0",
        "tmp%8#1",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "tmp%8#1"
      ]
    },
    "2362": {
      "op": "bz play_game_else_body@25",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0"
      ]
    },
    "2365": {
      "op": "frame_dig 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0"
      ]
    },
    "2367": {
      "op": "dup",
      "defined_out": [
        "commit_rand_salt_id#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state#0 (copy)",
        "player#0",
        "score#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "2368": {
      "error": "Index access is out of bounds",
      "op": "extract 4 1 // on error: Index access is out of bounds",
      "defined_out": [
        "assigned_value%0#1",
        "commit_rand_salt_id#0",
        "encoded_value%0#0",
        "game_state#0",
        "player#0",
        "score#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0",
        "assigned_value%0#1"
      ]
    },
    "2371": {
      "op": "replace2 5",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0"
      ]
    },
    "2373": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "2374": {
      "error": "Index access is out of bounds",
      "op": "extract 88 32 // on error: Index access is out of bounds",
      "defined_out": [
        "assigned_value%1#0",
        "commit_rand_salt_id#0",
        "encoded_value%0#0",
        "game_state#0",
        "player#0",
        "score#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0",
        "assigned_value%1#0"
      ]
    },
    "2377": {
      "op": "replace2 120",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0"
      ]
    },
    "2379": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "2380": {
      "error": "Index access is out of bounds",
      "op": "extract 3 1 // on error: Index access is out of bounds",
      "defined_out": [
        "assigned_value%2#0",
        "commit_rand_salt_id#0",
        "encoded_value%0#0",
        "game_state#0",
        "player#0",
        "score#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0",
        "assigned_value%2#0"
      ]
    },
    "2383": {
      "op": "replace2 4",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0"
      ]
    },
    "2385": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "2386": {
      "error": "Index access is out of bounds",
      "op": "extract 56 32 // on error: Index access is out of bounds",
      "defined_out": [
        "assigned_value%3#0",
        "commit_rand_salt_id#0",
        "encoded_value%0#0",
        "game_state#0",
        "player#0",
        "score#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0",
        "assigned_value%3#0"
      ]
    },
    "2389": {
      "op": "replace2 88",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0"
      ]
    },
    "2391": {
      "op": "frame_dig 7",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0",
        "uint8%0#0"
      ]
    },
    "2393": {
      "op": "replace2 3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0"
      ]
    },
    "2395": {
      "op": "frame_dig 4",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0",
        "player#0"
      ]
    },
    "2397": {
      "op": "replace2 56",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0"
      ]
    },
    "2399": {
      "op": "frame_bury 2",
      "defined_out": [
        "commit_rand_salt_id#0",
        "encoded_value%0#0",
        "game_state#0",
        "player#0",
        "score#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0"
      ]
    },
    "2401": {
      "block": "play_game_after_if_else@34",
      "stack_in": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0"
      ],
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "0"
      ]
    },
    "2402": {
      "op": "bytec 6 // \"commit_rand_salt_id\"",
      "defined_out": [
        "\"commit_rand_salt_id\"",
        "0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "0",
        "\"commit_rand_salt_id\""
      ]
    },
    "2404": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%5#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "maybe_value%3#0",
        "maybe_exists%5#0"
      ]
    },
    "2405": {
      "error": "check self.commit_rand_salt_id exists",
      "op": "assert // check self.commit_rand_salt_id exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "maybe_value%3#0"
      ]
    },
    "2406": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "maybe_value%3#0",
        "1"
      ]
    },
    "2407": {
      "op": "+",
      "defined_out": [
        "materialized_values%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "materialized_values%1#0"
      ]
    },
    "2408": {
      "op": "bytec 6 // \"commit_rand_salt_id\"",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "materialized_values%1#0",
        "\"commit_rand_salt_id\""
      ]
    },
    "2410": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "\"commit_rand_salt_id\"",
        "materialized_values%1#0"
      ]
    },
    "2411": {
      "op": "app_global_put",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0"
      ]
    },
    "2412": {
      "op": "frame_dig 2",
      "defined_out": [
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0"
      ]
    },
    "2414": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0",
        "3"
      ]
    },
    "2416": {
      "op": "getbyte",
      "defined_out": [
        "game_state#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "tmp%14#0"
      ]
    },
    "2417": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "tmp%14#0",
        "tmp%14#0"
      ]
    },
    "2418": {
      "op": "frame_bury 14",
      "defined_out": [
        "game_state#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "tmp%14#0"
      ]
    },
    "2420": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "tmp%14#0",
        "0"
      ]
    },
    "2421": {
      "op": "bytec 8 // \"ath_score\"",
      "defined_out": [
        "\"ath_score\"",
        "0",
        "game_state#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "tmp%14#0",
        "0",
        "\"ath_score\""
      ]
    },
    "2423": {
      "op": "app_global_get_ex",
      "defined_out": [
        "game_state#0",
        "maybe_exists%6#0",
        "maybe_value%4#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "tmp%14#0",
        "maybe_value%4#0",
        "maybe_exists%6#0"
      ]
    },
    "2424": {
      "error": "check self.ath_score exists",
      "op": "assert // check self.ath_score exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "tmp%14#0",
        "maybe_value%4#0"
      ]
    },
    "2425": {
      "op": ">",
      "defined_out": [
        "game_state#0",
        "tmp%14#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "tmp%15#0"
      ]
    },
    "2426": {
      "op": "bz play_game_after_if_else@2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0"
      ]
    },
    "2429": {
      "op": "bytec 8 // \"ath_score\"",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "\"ath_score\""
      ]
    },
    "2431": {
      "op": "frame_dig 14",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "\"ath_score\"",
        "tmp%14#0"
      ]
    },
    "2433": {
      "op": "app_global_put",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0"
      ]
    },
    "2434": {
      "op": "bytec 10 // \"ath_address\"",
      "defined_out": [
        "\"ath_address\"",
        "game_state#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "\"ath_address\""
      ]
    },
    "2436": {
      "op": "txn Sender",
      "defined_out": [
        "\"ath_address\"",
        "game_state#0",
        "materialized_values%3#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "\"ath_address\"",
        "materialized_values%3#0"
      ]
    },
    "2438": {
      "op": "app_global_put",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0"
      ]
    },
    "2439": {
      "block": "play_game_after_if_else@2",
      "stack_in": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0"
      ]
    },
    "2441": {
      "op": "dup",
      "defined_out": [
        "game_state#0",
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "2442": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "game_state#0",
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0",
        "game_state#0 (copy)",
        "2"
      ]
    },
    "2443": {
      "op": "getbyte",
      "defined_out": [
        "game_state#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0",
        "tmp%18#0"
      ]
    },
    "2444": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "game_state#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0",
        "tmp%18#0",
        "1"
      ]
    },
    "2445": {
      "op": "-",
      "defined_out": [
        "game_state#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0",
        "to_encode%0#0"
      ]
    },
    "2446": {
      "op": "itob",
      "defined_out": [
        "game_state#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0",
        "val_as_bytes%0#0"
      ]
    },
    "2447": {
      "op": "dup",
      "defined_out": [
        "game_state#0",
        "val_as_bytes%0#0",
        "val_as_bytes%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0",
        "val_as_bytes%0#0",
        "val_as_bytes%0#0 (copy)"
      ]
    },
    "2448": {
      "op": "bitlen",
      "defined_out": [
        "bitlen%0#0",
        "game_state#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0",
        "val_as_bytes%0#0",
        "bitlen%0#0"
      ]
    },
    "2449": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "bitlen%0#0",
        "game_state#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0",
        "val_as_bytes%0#0",
        "bitlen%0#0",
        "8"
      ]
    },
    "2451": {
      "op": "<=",
      "defined_out": [
        "game_state#0",
        "no_overflow%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0",
        "val_as_bytes%0#0",
        "no_overflow%0#0"
      ]
    },
    "2452": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0",
        "val_as_bytes%0#0"
      ]
    },
    "2453": {
      "op": "extract 7 1",
      "defined_out": [
        "game_state#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0",
        "uint8%0#0"
      ]
    },
    "2456": {
      "op": "replace2 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0"
      ]
    },
    "2458": {
      "op": "frame_dig -1",
      "defined_out": [
        "game_id#0 (copy)",
        "game_state#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0",
        "game_id#0 (copy)"
      ]
    },
    "2460": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_id#0 (copy)",
        "game_state#0"
      ]
    },
    "2461": {
      "op": "bytec_1 // \"p_\"",
      "defined_out": [
        "\"p_\"",
        "game_id#0 (copy)",
        "game_state#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_id#0 (copy)",
        "game_state#0",
        "\"p_\""
      ]
    },
    "2462": {
      "callsub": "smart_contracts.pieout.subroutines.is_game_over",
      "op": "callsub is_game_over",
      "defined_out": [
        "game_state#0",
        "is_game_over%0#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "is_game_over%0#0",
        "game_state#0"
      ]
    },
    "2465": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0"
      ]
    },
    "2467": {
      "op": "frame_dig 0",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0",
        "box_prefixed_key%0#0"
      ]
    },
    "2469": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "2470": {
      "op": "box_put",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0"
      ]
    },
    "2471": {
      "retsub": true,
      "op": "retsub"
    },
    "2472": {
      "block": "play_game_else_body@25",
      "stack_in": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0"
      ]
    },
    "2474": {
      "op": "dup",
      "defined_out": [
        "game_state#0",
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "2475": {
      "error": "Index access is out of bounds",
      "op": "extract 4 1 // on error: Index access is out of bounds",
      "defined_out": [
        "game_state#0",
        "tmp%9#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0",
        "tmp%9#1"
      ]
    },
    "2478": {
      "op": "frame_bury 6",
      "defined_out": [
        "game_state#0",
        "tmp%9#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0"
      ]
    },
    "2480": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "game_state#0",
        "tmp%9#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0",
        "4"
      ]
    },
    "2482": {
      "op": "getbyte",
      "defined_out": [
        "game_state#0",
        "tmp%10#1",
        "tmp%9#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "tmp%10#1"
      ]
    },
    "2483": {
      "op": "frame_dig 11",
      "defined_out": [
        "game_state#0",
        "score#0",
        "tmp%10#1",
        "tmp%9#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "tmp%10#1",
        "score#0"
      ]
    },
    "2485": {
      "op": "<",
      "defined_out": [
        "game_state#0",
        "score#0",
        "tmp%11#1",
        "tmp%9#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "tmp%11#1"
      ]
    },
    "2486": {
      "op": "bz play_game_else_body@28",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0"
      ]
    },
    "2489": {
      "op": "frame_dig 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0"
      ]
    },
    "2491": {
      "error": "Index access is out of bounds",
      "op": "extract 56 32 // on error: Index access is out of bounds",
      "defined_out": [
        "game_state#0",
        "score#0",
        "tmp%12#1",
        "tmp%9#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "tmp%12#1"
      ]
    },
    "2494": {
      "op": "frame_dig 4",
      "defined_out": [
        "game_state#0",
        "player#0",
        "score#0",
        "tmp%12#1",
        "tmp%9#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "tmp%12#1",
        "player#0"
      ]
    },
    "2496": {
      "op": "!=",
      "defined_out": [
        "game_state#0",
        "player#0",
        "score#0",
        "tmp%13#1",
        "tmp%9#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "tmp%13#1"
      ]
    },
    "2497": {
      "op": "bz play_game_else_body@28",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0"
      ]
    },
    "2500": {
      "op": "frame_dig 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0"
      ]
    },
    "2502": {
      "op": "frame_dig 6",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0",
        "tmp%9#1"
      ]
    },
    "2504": {
      "op": "replace2 5",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0"
      ]
    },
    "2506": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "2507": {
      "error": "Index access is out of bounds",
      "op": "extract 88 32 // on error: Index access is out of bounds",
      "defined_out": [
        "assigned_value%7#0",
        "game_state#0",
        "player#0",
        "score#0",
        "tmp%9#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0",
        "assigned_value%7#0"
      ]
    },
    "2510": {
      "op": "replace2 120",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0"
      ]
    },
    "2512": {
      "op": "frame_dig 7",
      "defined_out": [
        "game_state#0",
        "player#0",
        "score#0",
        "tmp%9#1",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0",
        "uint8%0#0"
      ]
    },
    "2514": {
      "op": "replace2 4",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0"
      ]
    },
    "2516": {
      "op": "frame_dig 4",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0",
        "player#0"
      ]
    },
    "2518": {
      "op": "replace2 88",
      "defined_out": [
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "score#0",
        "tmp%9#1",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state%out#22"
      ]
    },
    "2520": {
      "op": "frame_bury 3",
      "defined_out": [
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "score#0",
        "tmp%9#1",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0"
      ]
    },
    "2522": {
      "block": "play_game_after_if_else@33",
      "stack_in": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0"
      ]
    },
    "2524": {
      "op": "frame_bury 2",
      "defined_out": [
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0"
      ]
    },
    "2526": {
      "op": "b play_game_after_if_else@34"
    },
    "2529": {
      "block": "play_game_else_body@28",
      "stack_in": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0"
      ]
    },
    "2531": {
      "op": "dup",
      "defined_out": [
        "game_state#0",
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "2532": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "game_state#0",
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0",
        "game_state#0 (copy)",
        "5"
      ]
    },
    "2534": {
      "op": "getbyte",
      "defined_out": [
        "game_state#0",
        "tmp%15#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0",
        "tmp%15#1"
      ]
    },
    "2535": {
      "op": "frame_dig 11",
      "defined_out": [
        "game_state#0",
        "score#0",
        "tmp%15#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0",
        "tmp%15#1",
        "score#0"
      ]
    },
    "2537": {
      "op": "<",
      "defined_out": [
        "game_state#0",
        "score#0",
        "tmp%16#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0",
        "tmp%16#1"
      ]
    },
    "2538": {
      "op": "swap",
      "defined_out": [
        "game_state#0",
        "game_state%out#22",
        "score#0",
        "tmp%16#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "tmp%16#1",
        "game_state%out#22"
      ]
    },
    "2539": {
      "op": "frame_bury 3",
      "defined_out": [
        "game_state#0",
        "game_state%out#22",
        "score#0",
        "tmp%16#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "tmp%16#1"
      ]
    },
    "2541": {
      "op": "bz play_game_after_if_else@33",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0"
      ]
    },
    "2544": {
      "op": "frame_dig 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0"
      ]
    },
    "2546": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "2547": {
      "error": "Index access is out of bounds",
      "op": "extract 56 32 // on error: Index access is out of bounds",
      "defined_out": [
        "game_state#0",
        "game_state%out#22",
        "score#0",
        "tmp%17#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0",
        "tmp%17#1"
      ]
    },
    "2550": {
      "op": "frame_dig 4",
      "defined_out": [
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "score#0",
        "tmp%17#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0",
        "tmp%17#1",
        "player#0"
      ]
    },
    "2552": {
      "op": "!=",
      "defined_out": [
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "score#0",
        "tmp%18#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0",
        "tmp%18#1"
      ]
    },
    "2553": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "tmp%18#1",
        "game_state%out#22"
      ]
    },
    "2554": {
      "op": "frame_bury 3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "tmp%18#1"
      ]
    },
    "2556": {
      "op": "bz play_game_after_if_else@33",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0"
      ]
    },
    "2559": {
      "op": "frame_dig 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0"
      ]
    },
    "2561": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "2562": {
      "error": "Index access is out of bounds",
      "op": "extract 88 32 // on error: Index access is out of bounds",
      "defined_out": [
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "score#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0",
        "tmp%19#0"
      ]
    },
    "2565": {
      "op": "frame_dig 4",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0",
        "tmp%19#0",
        "player#0"
      ]
    },
    "2567": {
      "op": "!=",
      "defined_out": [
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "score#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0",
        "tmp%20#0"
      ]
    },
    "2568": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "tmp%20#0",
        "game_state%out#22"
      ]
    },
    "2569": {
      "op": "frame_bury 3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "tmp%20#0"
      ]
    },
    "2571": {
      "op": "bz play_game_after_if_else@33",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0"
      ]
    },
    "2574": {
      "op": "frame_dig 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0"
      ]
    },
    "2576": {
      "op": "frame_dig 7",
      "defined_out": [
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "score#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0",
        "uint8%0#0"
      ]
    },
    "2578": {
      "op": "replace2 5",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0"
      ]
    },
    "2580": {
      "op": "frame_dig 4",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state#0",
        "player#0"
      ]
    },
    "2582": {
      "op": "replace2 120",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0",
        "game_state%out#22"
      ]
    },
    "2584": {
      "op": "frame_bury 3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state%out#22",
        "player#0",
        "result#1",
        "tmp%9#1",
        "uint8%0#0",
        "candidate#0",
        "commit_rand_salt_id#0",
        "i#0",
        "score#0",
        "state#2",
        "threshold#0",
        "tmp%14#0",
        "tmp%3#0"
      ]
    },
    "2586": {
      "op": "b play_game_after_if_else@33"
    },
    "2589": {
      "subroutine": "smart_contracts.pieout.contract.Pieout.check_game_event",
      "params": {
        "game_id#0": "uint64",
        "game_event_id#0": "bytes"
      },
      "block": "check_game_event",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "2592": {
      "op": "global GroupSize",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2594": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "1"
      ]
    },
    "2595": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2596": {
      "error": "Invalid group size. This app call only appproves standalone transactions.",
      "op": "assert // Invalid group size. This app call only appproves standalone transactions.",
      "stack_out": []
    },
    "2597": {
      "op": "frame_dig -2",
      "defined_out": [
        "game_id#0 (copy)"
      ],
      "stack_out": [
        "game_id#0 (copy)"
      ]
    },
    "2599": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "2600": {
      "op": "bytec_2 // \"s_\"",
      "defined_out": [
        "\"s_\"",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "\"s_\""
      ]
    },
    "2601": {
      "op": "swap",
      "stack_out": [
        "\"s_\"",
        "encoded_value%0#0"
      ]
    },
    "2602": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "2603": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "2604": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "box_prefixed_key%0#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "_%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2605": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2607": {
      "error": "Box game state not found. Check if Game ID is valid.",
      "op": "assert // Box game state not found. Check if Game ID is valid.",
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "2608": {
      "op": "box_get",
      "defined_out": [
        "game_state#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "game_state#0",
        "maybe_exists%1#0"
      ]
    },
    "2609": {
      "error": "check self.box_game_state entry exists",
      "op": "assert // check self.box_game_state entry exists",
      "stack_out": [
        "game_state#0"
      ]
    },
    "2610": {
      "op": "frame_dig -1",
      "defined_out": [
        "game_event_id#0 (copy)",
        "game_state#0"
      ],
      "stack_out": [
        "game_state#0",
        "game_event_id#0 (copy)"
      ]
    },
    "2612": {
      "op": "btoi",
      "defined_out": [
        "game_state#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "game_state#0",
        "tmp%2#0"
      ]
    },
    "2613": {
      "op": "dup",
      "defined_out": [
        "game_state#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "game_state#0",
        "tmp%2#0",
        "tmp%2#0"
      ]
    },
    "2614": {
      "op": "bnz check_game_event_else_body@2",
      "stack_out": [
        "game_state#0",
        "tmp%2#0"
      ]
    },
    "2617": {
      "op": "frame_dig 0",
      "stack_out": [
        "game_state#0",
        "tmp%2#0",
        "game_state#0"
      ]
    },
    "2619": {
      "op": "dup",
      "defined_out": [
        "game_state#0",
        "game_state#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "2620": {
      "op": "intc_0 // 1",
      "stack_out": [
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "game_state#0 (copy)",
        "1"
      ]
    },
    "2621": {
      "op": "getbyte",
      "defined_out": [
        "game_state#0",
        "tmp%2#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "tmp%5#0"
      ]
    },
    "2622": {
      "op": "frame_dig -2",
      "stack_out": [
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "tmp%5#0",
        "game_id#0 (copy)"
      ]
    },
    "2624": {
      "op": "bytec_1 // \"p_\"",
      "defined_out": [
        "\"p_\"",
        "game_id#0 (copy)",
        "game_state#0",
        "tmp%2#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "tmp%5#0",
        "game_id#0 (copy)",
        "\"p_\""
      ]
    },
    "2625": {
      "op": "uncover 2",
      "stack_out": [
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "game_id#0 (copy)",
        "\"p_\"",
        "tmp%5#0"
      ]
    },
    "2627": {
      "op": "intc_0 // 1",
      "stack_out": [
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "game_id#0 (copy)",
        "\"p_\"",
        "tmp%5#0",
        "1"
      ]
    },
    "2628": {
      "callsub": "smart_contracts.pieout.subroutines.check_sender_in_game",
      "op": "callsub check_sender_in_game",
      "defined_out": [
        "game_state#0",
        "tmp%2#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "tmp%6#0"
      ]
    },
    "2631": {
      "op": "intc_0 // 1",
      "stack_out": [
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "tmp%6#0",
        "1"
      ]
    },
    "2632": {
      "op": "==",
      "defined_out": [
        "game_state#0",
        "tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "tmp%7#0"
      ]
    },
    "2633": {
      "error": "Transaction sender is not recognized as a valid player for this game.",
      "op": "assert // Transaction sender is not recognized as a valid player for this game.",
      "stack_out": [
        "game_state#0",
        "tmp%2#0",
        "game_state#0"
      ]
    },
    "2634": {
      "callsub": "smart_contracts.pieout.subroutines.is_game_live",
      "op": "callsub is_game_live",
      "defined_out": [
        "game_state#0",
        "is_game_live#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "game_state#0",
        "tmp%2#0",
        "is_game_live#0",
        "game_state#0"
      ]
    },
    "2637": {
      "op": "pop",
      "stack_out": [
        "game_state#0",
        "tmp%2#0",
        "is_game_live#0"
      ]
    },
    "2638": {
      "op": "frame_bury 0"
    },
    "2640": {
      "retsub": true,
      "op": "retsub"
    },
    "2641": {
      "block": "check_game_event_else_body@2",
      "stack_in": [
        "game_state#0",
        "tmp%2#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "game_state#0",
        "tmp%2#0",
        "tmp%2#0"
      ]
    },
    "2643": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "tmp%2#0"
      ],
      "stack_out": [
        "game_state#0",
        "tmp%2#0",
        "tmp%2#0",
        "2"
      ]
    },
    "2644": {
      "op": "==",
      "defined_out": [
        "tmp%2#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "game_state#0",
        "tmp%2#0",
        "tmp%9#0"
      ]
    },
    "2645": {
      "error": "Game event not found. Check if Game Event ID is valid",
      "op": "assert // Game event not found. Check if Game Event ID is valid",
      "stack_out": [
        "game_state#0",
        "tmp%2#0"
      ]
    },
    "2646": {
      "op": "frame_dig 0",
      "defined_out": [
        "game_state#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "game_state#0",
        "tmp%2#0",
        "game_state#0"
      ]
    },
    "2648": {
      "op": "dup",
      "defined_out": [
        "game_state#0",
        "game_state#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "2649": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "game_state#0",
        "game_state#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "game_state#0 (copy)",
        "0"
      ]
    },
    "2650": {
      "op": "getbit",
      "defined_out": [
        "game_state#0",
        "is_true%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "is_true%0#0"
      ]
    },
    "2651": {
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x00",
        "game_state#0",
        "is_true%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "is_true%0#0",
        "0x00"
      ]
    },
    "2652": {
      "op": "intc_1 // 0",
      "stack_out": [
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "is_true%0#0",
        "0x00",
        "0"
      ]
    },
    "2653": {
      "op": "uncover 2",
      "stack_out": [
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "0x00",
        "0",
        "is_true%0#0"
      ]
    },
    "2655": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%0#0",
        "game_state#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "encoded_bool%0#0"
      ]
    },
    "2656": {
      "op": "intc_1 // 0",
      "stack_out": [
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "encoded_bool%0#0",
        "0"
      ]
    },
    "2657": {
      "op": "getbit",
      "defined_out": [
        "game_state#0",
        "tmp%10#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "tmp%10#0"
      ]
    },
    "2658": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "game_state#0",
        "tmp%10#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "tmp%10#0",
        "1"
      ]
    },
    "2659": {
      "op": "==",
      "defined_out": [
        "game_state#0",
        "tmp%11#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "tmp%11#0"
      ]
    },
    "2660": {
      "error": "Game state staking finalized value mismatch.",
      "op": "assert // Game state staking finalized value mismatch.",
      "stack_out": [
        "game_state#0",
        "tmp%2#0",
        "game_state#0"
      ]
    },
    "2661": {
      "op": "dup",
      "stack_out": [
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "2662": {
      "error": "Index access is out of bounds",
      "op": "extract 8 8 // on error: Index access is out of bounds",
      "defined_out": [
        "game_state#0",
        "reinterpret_biguint%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "2665": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "game_state#0",
        "reinterpret_biguint%0#0",
        "tmp%12#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "reinterpret_biguint%0#0",
        "tmp%12#0"
      ]
    },
    "2667": {
      "op": "itob",
      "defined_out": [
        "game_state#0",
        "reinterpret_biguint%0#0",
        "tmp%13#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "reinterpret_biguint%0#0",
        "tmp%13#0"
      ]
    },
    "2668": {
      "op": "b<",
      "defined_out": [
        "game_state#0",
        "tmp%14#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "game_state#0",
        "tmp%2#0",
        "game_state#0",
        "tmp%14#0"
      ]
    },
    "2669": {
      "error": "Phase deadline expired. Latest block timestamp must not exceed expiry timestamp.",
      "op": "assert // Phase deadline expired. Latest block timestamp must not exceed expiry timestamp.",
      "stack_out": [
        "game_state#0",
        "tmp%2#0",
        "game_state#0"
      ]
    },
    "2670": {
      "error": "Index access is out of bounds",
      "op": "extract 24 32 // on error: Index access is out of bounds",
      "defined_out": [
        "game_state#0",
        "tmp%15#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "game_state#0",
        "tmp%2#0",
        "tmp%15#0"
      ]
    },
    "2673": {
      "op": "txn Sender",
      "defined_out": [
        "game_state#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "game_state#0",
        "tmp%2#0",
        "tmp%15#0",
        "tmp%16#0"
      ]
    },
    "2675": {
      "op": "==",
      "defined_out": [
        "game_state#0",
        "tmp%17#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "game_state#0",
        "tmp%2#0",
        "tmp%17#0"
      ]
    },
    "2676": {
      "op": "bnz check_game_event_bool_true@7",
      "stack_out": [
        "game_state#0",
        "tmp%2#0"
      ]
    },
    "2679": {
      "op": "frame_dig 0",
      "stack_out": [
        "game_state#0",
        "tmp%2#0",
        "game_state#0"
      ]
    },
    "2681": {
      "error": "Index access is out of bounds",
      "op": "extract 56 32 // on error: Index access is out of bounds",
      "defined_out": [
        "game_state#0",
        "tmp%18#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "game_state#0",
        "tmp%2#0",
        "tmp%18#0"
      ]
    },
    "2684": {
      "op": "txn Sender",
      "defined_out": [
        "game_state#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "game_state#0",
        "tmp%2#0",
        "tmp%18#0",
        "tmp%19#0"
      ]
    },
    "2686": {
      "op": "==",
      "defined_out": [
        "game_state#0",
        "tmp%2#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "game_state#0",
        "tmp%2#0",
        "tmp%20#0"
      ]
    },
    "2687": {
      "op": "bnz check_game_event_bool_true@7",
      "stack_out": [
        "game_state#0",
        "tmp%2#0"
      ]
    },
    "2690": {
      "op": "frame_dig 0",
      "stack_out": [
        "game_state#0",
        "tmp%2#0",
        "game_state#0"
      ]
    },
    "2692": {
      "error": "Index access is out of bounds",
      "op": "extract 88 32 // on error: Index access is out of bounds",
      "defined_out": [
        "game_state#0",
        "tmp%2#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "game_state#0",
        "tmp%2#0",
        "tmp%21#0"
      ]
    },
    "2695": {
      "op": "txn Sender",
      "defined_out": [
        "game_state#0",
        "tmp%2#0",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "game_state#0",
        "tmp%2#0",
        "tmp%21#0",
        "tmp%22#0"
      ]
    },
    "2697": {
      "op": "==",
      "defined_out": [
        "game_state#0",
        "tmp%2#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "game_state#0",
        "tmp%2#0",
        "tmp%23#0"
      ]
    },
    "2698": {
      "op": "bnz check_game_event_bool_true@7",
      "stack_out": [
        "game_state#0",
        "tmp%2#0"
      ]
    },
    "2701": {
      "op": "frame_dig 0",
      "stack_out": [
        "game_state#0",
        "tmp%2#0",
        "game_state#0"
      ]
    },
    "2703": {
      "error": "Index access is out of bounds",
      "op": "extract 120 32 // on error: Index access is out of bounds",
      "defined_out": [
        "game_state#0",
        "tmp%2#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "game_state#0",
        "tmp%2#0",
        "tmp%24#0"
      ]
    },
    "2706": {
      "op": "txn Sender",
      "defined_out": [
        "game_state#0",
        "tmp%2#0",
        "tmp%24#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "game_state#0",
        "tmp%2#0",
        "tmp%24#0",
        "tmp%25#0"
      ]
    },
    "2708": {
      "op": "==",
      "defined_out": [
        "game_state#0",
        "tmp%2#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "game_state#0",
        "tmp%2#0",
        "tmp%26#0"
      ]
    },
    "2709": {
      "op": "bz check_game_event_bool_false@8",
      "stack_out": [
        "game_state#0",
        "tmp%2#0"
      ]
    },
    "2712": {
      "block": "check_game_event_bool_true@7",
      "stack_in": [
        "game_state#0",
        "tmp%2#0"
      ],
      "op": "intc_0 // 1",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "game_state#0",
        "tmp%2#0",
        "or_result%0#0"
      ]
    },
    "2713": {
      "block": "check_game_event_bool_merge@9",
      "stack_in": [
        "game_state#0",
        "tmp%2#0",
        "or_result%0#0"
      ],
      "error": "Transaction sender is not an authorized caller.",
      "op": "assert // Transaction sender is not an authorized caller.",
      "defined_out": [],
      "stack_out": [
        "game_state#0",
        "tmp%2#0"
      ]
    },
    "2714": {
      "op": "frame_dig -2",
      "defined_out": [
        "game_id#0 (copy)"
      ],
      "stack_out": [
        "game_state#0",
        "tmp%2#0",
        "game_id#0 (copy)"
      ]
    },
    "2716": {
      "op": "frame_dig 0",
      "defined_out": [
        "game_id#0 (copy)",
        "game_state#0"
      ],
      "stack_out": [
        "game_state#0",
        "tmp%2#0",
        "game_id#0 (copy)",
        "game_state#0"
      ]
    },
    "2718": {
      "op": "bytec_1 // \"p_\"",
      "defined_out": [
        "\"p_\"",
        "game_id#0 (copy)",
        "game_state#0"
      ],
      "stack_out": [
        "game_state#0",
        "tmp%2#0",
        "game_id#0 (copy)",
        "game_state#0",
        "\"p_\""
      ]
    },
    "2719": {
      "callsub": "smart_contracts.pieout.subroutines.is_game_over",
      "op": "callsub is_game_over",
      "defined_out": [
        "game_state#0",
        "is_game_over#0"
      ],
      "stack_out": [
        "game_state#0",
        "tmp%2#0",
        "is_game_over#0",
        "game_state#0"
      ]
    },
    "2722": {
      "op": "pop",
      "stack_out": [
        "game_state#0",
        "tmp%2#0",
        "is_game_over#0"
      ]
    },
    "2723": {
      "op": "frame_bury 0"
    },
    "2725": {
      "retsub": true,
      "op": "retsub"
    },
    "2726": {
      "block": "check_game_event_bool_false@8",
      "stack_in": [
        "game_state#0",
        "tmp%2#0"
      ],
      "op": "intc_1 // 0",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "game_state#0",
        "tmp%2#0",
        "or_result%0#0"
      ]
    },
    "2727": {
      "op": "b check_game_event_bool_merge@9"
    },
    "2730": {
      "subroutine": "smart_contracts.pieout.contract.Pieout.reset_game",
      "params": {
        "game_id#0": "uint64",
        "stake_pay#0": "uint64"
      },
      "block": "reset_game",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "2733": {
      "op": "global GroupSize",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2735": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "2"
      ]
    },
    "2736": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2737": {
      "error": "Invalid group size. Ensure number of transaction in group is within bounds.",
      "op": "assert // Invalid group size. Ensure number of transaction in group is within bounds.",
      "stack_out": []
    },
    "2738": {
      "op": "frame_dig -2",
      "defined_out": [
        "game_id#0 (copy)"
      ],
      "stack_out": [
        "game_id#0 (copy)"
      ]
    },
    "2740": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "2741": {
      "op": "bytec_2 // \"s_\"",
      "defined_out": [
        "\"s_\"",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "\"s_\""
      ]
    },
    "2742": {
      "op": "dig 1",
      "defined_out": [
        "\"s_\"",
        "encoded_value%0#0",
        "encoded_value%0#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "\"s_\"",
        "encoded_value%0#0 (copy)"
      ]
    },
    "2744": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "2745": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "2746": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "_%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2747": {
      "op": "bury 1",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2749": {
      "error": "Box game state not found. Check if Game ID is valid.",
      "op": "assert // Box game state not found. Check if Game ID is valid.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "2750": {
      "op": "frame_dig -1",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "stake_pay#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "stake_pay#0 (copy)"
      ]
    },
    "2752": {
      "op": "gtxns Sender",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%2#0"
      ]
    },
    "2754": {
      "op": "txn Sender",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "2756": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%4#0"
      ]
    },
    "2757": {
      "error": "Stake payment sender address must match transaction sender address.",
      "op": "assert // Stake payment sender address must match transaction sender address.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "2758": {
      "op": "frame_dig -1",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "stake_pay#0 (copy)"
      ]
    },
    "2760": {
      "op": "gtxns Receiver",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%5#0"
      ]
    },
    "2762": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%5#0",
        "tmp%6#0"
      ]
    },
    "2764": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%7#0"
      ]
    },
    "2765": {
      "error": "Stake payment reciever address must match application address.",
      "op": "assert // Stake payment reciever address must match application address.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "2766": {
      "op": "frame_dig -1",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "stake_pay#0 (copy)"
      ]
    },
    "2768": {
      "op": "gtxns Amount",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%8#0"
      ]
    },
    "2770": {
      "op": "intc 5 // 1000",
      "defined_out": [
        "1000",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%8#0",
        "1000"
      ]
    },
    "2772": {
      "op": ">=",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "tmp%9#0"
      ]
    },
    "2773": {
      "error": "Insufficient funds. Stake pay amount is not enough to cover application MBR.",
      "op": "assert // Insufficient funds. Stake pay amount is not enough to cover application MBR.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "2774": {
      "op": "dup",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "2775": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "maybe_exists%1#0"
      ]
    },
    "2776": {
      "error": "check self.box_game_state entry exists",
      "op": "assert // check self.box_game_state entry exists",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "2777": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "2778": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_state#0 (copy)",
        "0"
      ]
    },
    "2779": {
      "op": "getbit",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "is_true%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "is_true%0#0"
      ]
    },
    "2780": {
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x00",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "is_true%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "is_true%0#0",
        "0x00"
      ]
    },
    "2781": {
      "op": "intc_1 // 0",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "is_true%0#0",
        "0x00",
        "0"
      ]
    },
    "2782": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "0x00",
        "0",
        "is_true%0#0"
      ]
    },
    "2784": {
      "op": "setbit",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "game_state#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "encoded_bool%0#0"
      ]
    },
    "2785": {
      "op": "intc_1 // 0",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "encoded_bool%0#0",
        "0"
      ]
    },
    "2786": {
      "op": "getbit",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%10#0"
      ]
    },
    "2787": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%10#0",
        "1"
      ]
    },
    "2788": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%11#0"
      ]
    },
    "2789": {
      "error": "Game state staking finalized value mismatch.",
      "op": "assert // Game state staking finalized value mismatch.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "2790": {
      "op": "dup",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "2791": {
      "error": "Index access is out of bounds",
      "op": "extract 24 32 // on error: Index access is out of bounds",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%12#0"
      ]
    },
    "2794": {
      "op": "txn Sender",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%12#0",
        "tmp%13#0"
      ]
    },
    "2796": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%14#0"
      ]
    },
    "2797": {
      "error": "Transaction sender is not recognized as valid manager address for this game.",
      "op": "assert // Transaction sender is not recognized as valid manager address for this game.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "2798": {
      "op": "dup",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "2799": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_state#0 (copy)",
        "16"
      ]
    },
    "2801": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%16#0"
      ]
    },
    "2802": {
      "op": "!",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%17#0"
      ]
    },
    "2803": {
      "error": "Prize pool not empty. Amount in prize pool must be zero.",
      "op": "assert // Prize pool not empty. Amount in prize pool must be zero.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "2804": {
      "op": "dup",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "2805": {
      "op": "intc_2 // 2",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_state#0 (copy)",
        "2"
      ]
    },
    "2806": {
      "op": "getbyte",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%19#0"
      ]
    },
    "2807": {
      "op": "!",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%20#0"
      ]
    },
    "2808": {
      "error": "Game lobby not empty. Number of active players must be zero.",
      "op": "assert // Game lobby not empty. Number of active players must be zero.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "2809": {
      "op": "bytec_1 // \"p_\"",
      "defined_out": [
        "\"p_\"",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "\"p_\""
      ]
    },
    "2810": {
      "op": "uncover 3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "\"p_\"",
        "encoded_value%0#0"
      ]
    },
    "2812": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_players_bref#0",
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_players_bref#0"
      ]
    },
    "2813": {
      "op": "intc_1 // 0"
    },
    "2814": {
      "op": "txn Sender",
      "defined_out": [
        "0",
        "box_prefixed_key%0#0",
        "game_players_bref#0",
        "game_state#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_players_bref#0",
        "0",
        "tmp%22#0"
      ]
    },
    "2816": {
      "op": "box_replace",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "2817": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "0"
      ]
    },
    "2818": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "0",
        "0"
      ]
    },
    "2819": {
      "op": "setbit",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "2820": {
      "op": "pushbytes 0x01",
      "defined_out": [
        "0x01",
        "box_prefixed_key%0#0",
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "0x01"
      ]
    },
    "2823": {
      "op": "replace2 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "2825": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "0x00"
      ]
    },
    "2826": {
      "op": "replace2 3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "2828": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "0x00"
      ]
    },
    "2829": {
      "op": "replace2 4",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "2831": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "0x00"
      ]
    },
    "2832": {
      "op": "replace2 5",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "2834": {
      "op": "bytec 11 // 0x0020",
      "defined_out": [
        "0x0020",
        "box_prefixed_key%0#0",
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "0x0020"
      ]
    },
    "2836": {
      "op": "replace2 6",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "2838": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%23#0"
      ]
    },
    "2840": {
      "op": "intc 4 // 3600",
      "defined_out": [
        "3600",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%23#0",
        "3600"
      ]
    },
    "2842": {
      "op": "+",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "to_encode%0#0"
      ]
    },
    "2843": {
      "op": "itob",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "val_as_bytes%0#0"
      ]
    },
    "2844": {
      "op": "replace2 8",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "2846": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "2847": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_state#0 (copy)",
        "16"
      ]
    },
    "2849": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%25#0"
      ]
    },
    "2850": {
      "op": "intc 5 // 1000",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%25#0",
        "1000"
      ]
    },
    "2852": {
      "op": "+",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "to_encode%1#0"
      ]
    },
    "2853": {
      "op": "itob",
      "defined_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "val_as_bytes%1#0"
      ]
    },
    "2854": {
      "op": "replace2 16",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "2856": {
      "op": "global ZeroAddress",
      "defined_out": [
        "assigned_value%8#0",
        "box_prefixed_key%0#0",
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "assigned_value%8#0"
      ]
    },
    "2858": {
      "op": "replace2 56",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "2860": {
      "op": "global ZeroAddress",
      "defined_out": [
        "assigned_value%9#0",
        "box_prefixed_key%0#0",
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "assigned_value%9#0"
      ]
    },
    "2862": {
      "op": "replace2 88",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "2864": {
      "op": "global ZeroAddress",
      "defined_out": [
        "assigned_value%10#0",
        "box_prefixed_key%0#0",
        "game_state#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0",
        "assigned_value%10#0"
      ]
    },
    "2866": {
      "op": "replace2 120",
      "stack_out": [
        "box_prefixed_key%0#0",
        "game_state#0"
      ]
    },
    "2868": {
      "op": "box_put",
      "stack_out": []
    },
    "2869": {
      "retsub": true,
      "op": "retsub"
    },
    "2870": {
      "subroutine": "smart_contracts.pieout.contract.Pieout.delete_game",
      "params": {
        "game_id#0": "uint64"
      },
      "block": "delete_game",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "2873": {
      "op": "global GroupSize",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2875": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "1"
      ]
    },
    "2876": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2877": {
      "error": "Invalid group size. This app call only appproves standalone transactions.",
      "op": "assert // Invalid group size. This app call only appproves standalone transactions.",
      "stack_out": []
    },
    "2878": {
      "op": "frame_dig -1",
      "defined_out": [
        "game_id#0 (copy)"
      ],
      "stack_out": [
        "game_id#0 (copy)"
      ]
    },
    "2880": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "2881": {
      "op": "dup",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "encoded_value%0#0"
      ]
    },
    "2882": {
      "op": "bytec_2 // \"s_\"",
      "defined_out": [
        "\"s_\"",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "encoded_value%0#0",
        "\"s_\""
      ]
    },
    "2883": {
      "op": "swap",
      "stack_out": [
        "encoded_value%0#0",
        "\"s_\"",
        "encoded_value%0#0"
      ]
    },
    "2884": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "2885": {
      "op": "dupn 2",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "2887": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0",
        "_%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2888": {
      "op": "bury 1",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2890": {
      "error": "Box game state not found. Check if Game ID is valid.",
      "op": "assert // Box game state not found. Check if Game ID is valid.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "2891": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "maybe_exists%1#0"
      ]
    },
    "2892": {
      "op": "swap",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "maybe_exists%1#0",
        "game_state#0"
      ]
    },
    "2893": {
      "op": "dup",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "maybe_exists%1#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "2894": {
      "op": "uncover 2",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_state#0",
        "maybe_exists%1#0"
      ]
    },
    "2896": {
      "error": "check self.box_game_state entry exists",
      "op": "assert // check self.box_game_state entry exists",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_state#0"
      ]
    },
    "2897": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "game_state#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_state#0",
        "game_state#0 (copy)"
      ]
    },
    "2898": {
      "error": "Index access is out of bounds",
      "op": "extract 24 32 // on error: Index access is out of bounds",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_state#0",
        "tmp%2#0"
      ]
    },
    "2901": {
      "op": "txn Sender",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_state#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "2903": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_state#0",
        "tmp%4#0"
      ]
    },
    "2904": {
      "error": "Transaction sender is not recognized as valid manager address for this game.",
      "op": "assert // Transaction sender is not recognized as valid manager address for this game.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_state#0"
      ]
    },
    "2905": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "game_state#0",
        "2"
      ]
    },
    "2906": {
      "op": "getbyte",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0"
      ]
    },
    "2907": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "tmp%6#0"
      ]
    },
    "2908": {
      "op": "intc_0 // 1",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "tmp%6#0",
        "1"
      ]
    },
    "2909": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "2910": {
      "op": "bz delete_game_else_body@2",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0"
      ]
    },
    "2913": {
      "op": "frame_dig -1",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "game_id#0 (copy)"
      ]
    },
    "2915": {
      "op": "bytec_1 // \"p_\"",
      "defined_out": [
        "\"p_\"",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_id#0 (copy)",
        "game_state#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "game_id#0 (copy)",
        "\"p_\""
      ]
    },
    "2916": {
      "op": "intc_0 // 1",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "game_id#0 (copy)",
        "\"p_\"",
        "1"
      ]
    },
    "2917": {
      "op": "intc_1 // 0",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "game_id#0 (copy)",
        "\"p_\"",
        "1",
        "0"
      ]
    },
    "2918": {
      "callsub": "smart_contracts.pieout.subroutines.check_sender_in_game",
      "op": "callsub check_sender_in_game",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%6#0",
        "txn_sender_in_game#1"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "txn_sender_in_game#1"
      ]
    },
    "2921": {
      "op": "intc_0 // 1",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "txn_sender_in_game#1",
        "1"
      ]
    },
    "2922": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%6#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "tmp%8#0"
      ]
    },
    "2923": {
      "error": "Manager account must be sole active player in game.",
      "op": "assert // Manager account must be sole active player in game.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0"
      ]
    },
    "2924": {
      "op": "txn Sender",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%6#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "tmp%9#0"
      ]
    },
    "2926": {
      "op": "frame_dig 2",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "tmp%9#0",
        "game_state#0"
      ]
    },
    "2928": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%6#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "tmp%9#0",
        "game_state#0",
        "16"
      ]
    },
    "2930": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%11#0",
        "tmp%6#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "tmp%9#0",
        "tmp%11#0"
      ]
    },
    "2931": {
      "op": "pushbytes \"sender:app_address,reciever:manager_address,concern:prize_pool_payout\"",
      "defined_out": [
        "\"sender:app_address,reciever:manager_address,concern:prize_pool_payout\"",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%11#0",
        "tmp%6#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "tmp%9#0",
        "tmp%11#0",
        "\"sender:app_address,reciever:manager_address,concern:prize_pool_payout\""
      ]
    },
    "3002": {
      "callsub": "smart_contracts.pieout.subroutines.payout_itxn",
      "op": "callsub payout_itxn",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0"
      ]
    },
    "3005": {
      "block": "delete_game_after_if_else@3",
      "stack_in": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "box_prefixed_key%0#0"
      ]
    },
    "3007": {
      "op": "box_del",
      "defined_out": [
        "box_prefixed_key%0#0",
        "{box_del}"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "{box_del}"
      ]
    },
    "3008": {
      "op": "pop",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0"
      ]
    },
    "3009": {
      "op": "bytec_1 // \"p_\"",
      "defined_out": [
        "\"p_\"",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "\"p_\""
      ]
    },
    "3010": {
      "op": "frame_dig 0",
      "defined_out": [
        "\"p_\"",
        "box_prefixed_key%0#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "\"p_\"",
        "encoded_value%0#0"
      ]
    },
    "3012": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%3#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "box_prefixed_key%3#0"
      ]
    },
    "3013": {
      "op": "box_del",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "{box_del}"
      ]
    },
    "3014": {
      "op": "pop",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0"
      ]
    },
    "3015": {
      "op": "frame_dig 2",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "game_state#0"
      ]
    },
    "3017": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "game_state#0",
        "1"
      ]
    },
    "3018": {
      "op": "getbyte",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "tmp%19#0"
      ]
    },
    "3019": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "tmp%19#0",
        "32"
      ]
    },
    "3020": {
      "op": "*",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "to_encode%0#0"
      ]
    },
    "3021": {
      "op": "itob",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "val_as_bytes%0#0"
      ]
    },
    "3022": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "val_as_bytes%0#0",
        "val_as_bytes%0#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%0#0 (copy)"
      ]
    },
    "3023": {
      "op": "bitlen",
      "defined_out": [
        "bitlen%0#0",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "val_as_bytes%0#0",
        "bitlen%0#0"
      ]
    },
    "3024": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "bitlen%0#0",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "val_as_bytes%0#0",
        "bitlen%0#0",
        "16"
      ]
    },
    "3026": {
      "op": "<=",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "no_overflow%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "val_as_bytes%0#0",
        "no_overflow%0#0"
      ]
    },
    "3027": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "val_as_bytes%0#0"
      ]
    },
    "3028": {
      "op": "extract 6 2",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "uint16%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "uint16%0#0"
      ]
    },
    "3031": {
      "op": "pushbytes 0x0a",
      "defined_out": [
        "0x0a",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "uint16%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "uint16%0#0",
        "0x0a"
      ]
    },
    "3034": {
      "op": "swap",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "0x0a",
        "uint16%0#0"
      ]
    },
    "3035": {
      "callsub": "smart_contracts.pieout.contract.Pieout.calc_single_box_fee",
      "op": "callsub calc_single_box_fee",
      "defined_out": [
        "box_p_fee#0",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "box_p_fee#0"
      ]
    },
    "3038": {
      "op": "txn Sender",
      "defined_out": [
        "box_p_fee#0",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "box_p_fee#0",
        "tmp%20#0"
      ]
    },
    "3040": {
      "op": "intc 10 // 67300",
      "defined_out": [
        "67300",
        "box_p_fee#0",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "box_p_fee#0",
        "tmp%20#0",
        "67300"
      ]
    },
    "3042": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "tmp%20#0",
        "67300",
        "box_p_fee#0"
      ]
    },
    "3044": {
      "op": "+",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%20#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "tmp%20#0",
        "tmp%21#0"
      ]
    },
    "3045": {
      "op": "pushbytes \"sender:app_address,reciever:manager_address,concern:box_storage_deletion\"",
      "defined_out": [
        "\"sender:app_address,reciever:manager_address,concern:box_storage_deletion\"",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "game_state#0",
        "tmp%20#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "tmp%20#0",
        "tmp%21#0",
        "\"sender:app_address,reciever:manager_address,concern:box_storage_deletion\""
      ]
    },
    "3119": {
      "callsub": "smart_contracts.pieout.subroutines.payout_itxn",
      "op": "callsub payout_itxn",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0"
      ]
    },
    "3122": {
      "retsub": true,
      "op": "retsub"
    },
    "3123": {
      "block": "delete_game_else_body@2",
      "stack_in": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "tmp%6#0"
      ]
    },
    "3125": {
      "op": "!",
      "defined_out": [
        "tmp%14#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "tmp%14#0"
      ]
    },
    "3126": {
      "error": "Game lobby not empty. Number of active players must be zero.",
      "op": "assert // Game lobby not empty. Number of active players must be zero.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0"
      ]
    },
    "3127": {
      "op": "frame_dig 2",
      "defined_out": [
        "game_state#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "game_state#0"
      ]
    },
    "3129": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "game_state#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "game_state#0",
        "16"
      ]
    },
    "3131": {
      "op": "extract_uint64",
      "defined_out": [
        "game_state#0",
        "tmp%16#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "tmp%16#0"
      ]
    },
    "3132": {
      "op": "!",
      "defined_out": [
        "game_state#0",
        "tmp%17#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0",
        "tmp%17#0"
      ]
    },
    "3133": {
      "error": "Prize pool not empty. Amount in prize pool must be zero.",
      "op": "assert // Prize pool not empty. Amount in prize pool must be zero.",
      "stack_out": [
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "game_state#0",
        "tmp%6#0"
      ]
    },
    "3134": {
      "op": "b delete_game_after_if_else@3"
    },
    "3137": {
      "subroutine": "smart_contracts.pieout.contract.Pieout.terminate",
      "params": {},
      "block": "terminate",
      "stack_in": [],
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3139": {
      "op": "global CreatorAddress",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "3141": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "3142": {
      "error": "Transaction sender address must match application creator address.",
      "op": "assert // Transaction sender address must match application creator address.",
      "stack_out": []
    },
    "3143": {
      "op": "intc 13 // TMPL_DELETABLE",
      "defined_out": [
        "TMPL_DELETABLE"
      ],
      "stack_out": [
        "TMPL_DELETABLE"
      ]
    },
    "3145": {
      "error": "Template variable 'DELETABLE' needs to be 'True' at deploy-time.",
      "op": "assert // Template variable 'DELETABLE' needs to be 'True' at deploy-time.",
      "stack_out": []
    },
    "3146": {
      "retsub": true,
      "op": "retsub"
    }
  }
}